{"version":3,"sources":["../node_modules/process/browser.js","../node_modules/jquery/dist/jquery.js","../../src/index.js","../../src/utils/isBrowser.js","../../src/utils/debounce.js","../../src/utils/isFunction.js","../../src/utils/getStyleComputedProperty.js","../../src/utils/getParentNode.js","../../src/utils/getScrollParent.js","../../src/utils/getReferenceNode.js","../../src/utils/isIE.js","../../src/utils/getOffsetParent.js","../../src/utils/isOffsetContainer.js","../../src/utils/getRoot.js","../../src/utils/findCommonOffsetParent.js","../../src/utils/getScroll.js","../../src/utils/includeScroll.js","../../src/utils/getBordersSize.js","../../src/utils/getWindowSizes.js","../../src/utils/getClientRect.js","../../src/utils/getBoundingClientRect.js","../../src/utils/getOffsetRectRelativeToArbitraryNode.js","../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../src/utils/isFixed.js","../../src/utils/getFixedPositionOffsetParent.js","../../src/utils/getBoundaries.js","../../src/utils/computeAutoPlacement.js","../../src/utils/getReferenceOffsets.js","../../src/utils/getOuterSizes.js","../../src/utils/getOppositePlacement.js","../../src/utils/getPopperOffsets.js","../../src/utils/find.js","../../src/utils/findIndex.js","../../src/utils/runModifiers.js","../../src/methods/update.js","../../src/utils/isModifierEnabled.js","../../src/utils/getSupportedPropertyName.js","../../src/methods/destroy.js","../../src/utils/getWindow.js","../../src/utils/setupEventListeners.js","../../src/methods/enableEventListeners.js","../../src/utils/removeEventListeners.js","../../src/methods/disableEventListeners.js","../../src/utils/isNumeric.js","../../src/utils/setStyles.js","../../src/utils/setAttributes.js","../../src/modifiers/applyStyle.js","../../src/utils/getRoundedOffsets.js","../../src/modifiers/computeStyle.js","../../src/utils/isModifierRequired.js","../../src/modifiers/arrow.js","../../src/utils/getOppositeVariation.js","../../src/methods/placements.js","../../src/utils/clockwise.js","../../src/modifiers/flip.js","../../src/modifiers/keepTogether.js","../../src/modifiers/offset.js","../../src/modifiers/preventOverflow.js","../../src/modifiers/shift.js","../../src/modifiers/hide.js","../../src/modifiers/inner.js","../../src/modifiers/index.js","../../src/methods/defaults.js","../../js/src/toast.js","../../js/src/util.js","../../js/src/alert.js","../../js/src/button.js","../../js/src/carousel.js","../../js/src/collapse.js","../../js/src/dropdown.js","../../js/src/modal.js","../../js/src/tools/sanitizer.js","../../js/src/tooltip.js","../../js/src/popover.js","../../js/src/scrollspy.js","../../js/src/tab.js","../node_modules/material-design-icons/index.js","../node_modules/bootstrap-submenu/dist/js/bootstrap-submenu.js","webpack://Tone/Tone/index.js","webpack://Tone/webpack/universalModuleDefinition","webpack://Tone/webpack/bootstrap","webpack://Tone/Tone/core/Tone.js","webpack://Tone/Tone/shim/AudioNode.js","webpack://Tone/Tone/core/AudioNode.js","webpack://Tone/Tone/shim/ConstantSourceNode.js","webpack://Tone/Tone/signal/Signal.js","webpack://Tone/Tone/core/Gain.js","webpack://Tone/Tone/type/Type.js","webpack://Tone/Tone/signal/Multiply.js","webpack://Tone/Tone/source/Source.js","webpack://Tone/Tone/shim/WaveShaperNode.js","webpack://Tone/Tone/signal/WaveShaper.js","webpack://Tone/Tone/effect/Effect.js","webpack://Tone/Tone/component/Filter.js","webpack://Tone/Tone/component/Merge.js","webpack://Tone/Tone/shim/AudioBuffer.js","webpack://Tone/Tone/core/Buffer.js","webpack://Tone/Tone/component/LFO.js","webpack://Tone/Tone/signal/Subtract.js","webpack://Tone/Tone/core/Param.js","webpack://Tone/Tone/effect/StereoEffect.js","webpack://Tone/Tone/core/Transport.js","webpack://Tone/Tone/source/Oscillator.js","webpack://Tone/Tone/core/Delay.js","webpack://Tone/Tone/component/Split.js","webpack://Tone/Tone/core/Context.js","webpack://Tone/Tone/instrument/Instrument.js","webpack://Tone/Tone/signal/AudioToGain.js","webpack://Tone/Tone/component/CrossFade.js","webpack://Tone/Tone/core/Timeline.js","webpack://Tone/Tone/instrument/Monophonic.js","webpack://Tone/Tone/signal/Scale.js","webpack://Tone/Tone/component/Volume.js","webpack://Tone/Tone/signal/Zero.js","webpack://Tone/Tone/signal/Add.js","webpack://Tone/Tone/signal/SignalBase.js","webpack://Tone/Tone/component/AmplitudeEnvelope.js","webpack://Tone/Tone/source/BufferSource.js","webpack://Tone/Tone/effect/FeedbackEffect.js","webpack://Tone/Tone/core/TimelineState.js","webpack://Tone/Tone/core/Emitter.js","webpack://Tone/Tone/shim/AnalyserNode.js","webpack://Tone/Tone/component/Analyser.js","webpack://Tone/Tone/source/OmniOscillator.js","webpack://Tone/Tone/instrument/Synth.js","webpack://Tone/Tone/source/Noise.js","webpack://Tone/Tone/core/Master.js","webpack://Tone/Tone/component/FrequencyEnvelope.js","webpack://Tone/Tone/signal/ScaleExp.js","webpack://Tone/Tone/component/Compressor.js","webpack://Tone/Tone/shim/AudioContext.js","webpack://Tone/Tone/type/TransportTime.js","webpack://Tone/Tone/type/Frequency.js","webpack://Tone/Tone/component/Envelope.js","webpack://Tone/Tone/shim/StereoPannerNode.js","webpack://Tone/Tone/component/Panner.js","webpack://Tone/Tone/source/FMOscillator.js","webpack://Tone/Tone/source/PulseOscillator.js","webpack://Tone/Tone/event/Event.js","webpack://Tone/Tone/component/MidSideMerge.js","webpack://Tone/Tone/component/MidSideSplit.js","webpack://Tone/Tone/component/LowpassCombFilter.js","webpack://Tone/Tone/type/Ticks.js","webpack://Tone/Tone/core/TransportEvent.js","webpack://Tone/Tone/source/TickSource.js","webpack://Tone/Tone/component/Follower.js","webpack://Tone/Tone/component/FeedbackCombFilter.js","webpack://Tone/Tone/component/MultibandSplit.js","webpack://Tone/Tone/signal/Pow.js","webpack://Tone/Tone/type/TimeBase.js","webpack://Tone/Tone/type/Time.js","webpack://Tone/Tone/shim/OscillatorNode.js","webpack://Tone/Tone/source/OscillatorNode.js","webpack://Tone/Tone/source/Player.js","webpack://Tone/Tone/instrument/MonoSynth.js","webpack://Tone/Tone/source/FatOscillator.js","webpack://Tone/Tone/source/AMOscillator.js","webpack://Tone/Tone/source/PWMOscillator.js","webpack://Tone/Tone/event/Part.js","webpack://Tone/Tone/event/Loop.js","webpack://Tone/Tone/effect/StereoXFeedbackEffect.js","webpack://Tone/Tone/effect/MidSideEffect.js","webpack://Tone/Tone/effect/Convolver.js","webpack://Tone/Tone/signal/Modulo.js","webpack://Tone/Tone/core/OfflineContext.js","webpack://Tone/Tone/core/Offline.js","webpack://Tone/Tone/core/Buffers.js","webpack://Tone/Tone/control/CtrlPattern.js","webpack://Tone/Tone/core/TransportRepeatEvent.js","webpack://Tone/Tone/core/IntervalTimeline.js","webpack://Tone/Tone/signal/TickSignal.js","webpack://Tone/Tone/core/Clock.js","webpack://Tone/Tone/signal/GreaterThanZero.js","webpack://Tone/Tone/signal/GreaterThan.js","webpack://Tone/Tone/component/ScaledEnvelope.js","webpack://Tone/Tone/signal/Abs.js","webpack://Tone/Tone/component/Solo.js","webpack://Tone/Tone/signal/EqualPowerGain.js","webpack://Tone/Tone/signal/Negate.js","webpack://Tone/Tone/component/PanVol.js","webpack://Tone/Tone/shim/OfflineAudioContext.js","webpack://Tone/Tone/version.js","webpack://Tone/Tone/type/Midi.js","webpack://Tone/Tone/source/UserMedia.js","webpack://Tone/Tone/source/Players.js","webpack://Tone/Tone/source/GrainPlayer.js","webpack://Tone/Tone/signal/TransportTimelineSignal.js","webpack://Tone/Tone/signal/Normalize.js","webpack://Tone/Tone/signal/GainToAudio.js","webpack://Tone/Tone/instrument/Sampler.js","webpack://Tone/Tone/instrument/PolySynth.js","webpack://Tone/Tone/instrument/PluckSynth.js","webpack://Tone/Tone/instrument/NoiseSynth.js","webpack://Tone/Tone/instrument/MetalSynth.js","webpack://Tone/Tone/instrument/MembraneSynth.js","webpack://Tone/Tone/instrument/FMSynth.js","webpack://Tone/Tone/instrument/DuoSynth.js","webpack://Tone/Tone/instrument/AMSynth.js","webpack://Tone/Tone/event/Sequence.js","webpack://Tone/Tone/event/Pattern.js","webpack://Tone/Tone/effect/Vibrato.js","webpack://Tone/Tone/effect/Tremolo.js","webpack://Tone/Tone/effect/StereoWidener.js","webpack://Tone/Tone/effect/StereoFeedbackEffect.js","webpack://Tone/Tone/effect/Reverb.js","webpack://Tone/Tone/effect/PitchShift.js","webpack://Tone/Tone/effect/PingPongDelay.js","webpack://Tone/Tone/effect/Phaser.js","webpack://Tone/Tone/effect/JCReverb.js","webpack://Tone/Tone/effect/Freeverb.js","webpack://Tone/Tone/effect/FeedbackDelay.js","webpack://Tone/Tone/effect/Distortion.js","webpack://Tone/Tone/effect/Chorus.js","webpack://Tone/Tone/effect/Chebyshev.js","webpack://Tone/Tone/effect/BitCrusher.js","webpack://Tone/Tone/effect/AutoWah.js","webpack://Tone/Tone/effect/AutoPanner.js","webpack://Tone/Tone/effect/AutoFilter.js","webpack://Tone/Tone/core/Listener.js","webpack://Tone/Tone/core/Draw.js","webpack://Tone/Tone/core/Bus.js","webpack://Tone/Tone/control/CtrlRandom.js","webpack://Tone/Tone/control/CtrlMarkov.js","webpack://Tone/Tone/control/CtrlInterpolate.js","webpack://Tone/Tone/component/Waveform.js","webpack://Tone/Tone/component/Panner3D.js","webpack://Tone/Tone/component/MultibandCompressor.js","webpack://Tone/Tone/component/Mono.js","webpack://Tone/Tone/component/MidSideCompressor.js","webpack://Tone/Tone/component/Meter.js","webpack://Tone/Tone/component/Limiter.js","webpack://Tone/Tone/component/Gate.js","webpack://Tone/Tone/component/FFT.js","webpack://Tone/Tone/component/EQ3.js","webpack://Tone/Tone/component/Channel.js","webpack://Tone/(webpack)/buildin/global.js","ts/music-theory/Note.ts","ts/keyboard/Keyboard.ts","ts/music-theory/Chord.ts","ts/keyboard/Piano.ts","../node_modules/tone/tone/version.js","../node_modules/tone/tone/core/Tone.js","../node_modules/tone/tone/type/TimeBase.js","../node_modules/tone/tone/type/Frequency.js","../node_modules/tone/tone/type/Time.js","../node_modules/tone/tone/type/TransportTime.js","../node_modules/tone/tone/core/Emitter.js","../node_modules/tone/tone/core/Timeline.js","../node_modules/tone/tone/shim/OfflineAudioContext.js","../node_modules/tone/tone/shim/AudioContext.js","../node_modules/tone/tone/core/Context.js","../node_modules/tone/tone/type/Type.js","../node_modules/tone/tone/shim/AudioNode.js","../node_modules/tone/tone/core/AudioNode.js","../node_modules/tone/tone/core/Param.js","../node_modules/tone/tone/signal/SignalBase.js","../node_modules/tone/tone/core/Gain.js","../node_modules/tone/tone/shim/ConstantSourceNode.js","../node_modules/tone/tone/signal/Signal.js","../node_modules/tone/tone/shim/WaveShaperNode.js","../node_modules/tone/tone/signal/WaveShaper.js","../node_modules/tone/tone/signal/Pow.js","../node_modules/tone/tone/component/Envelope.js","../node_modules/tone/tone/component/AmplitudeEnvelope.js","../node_modules/tone/tone/shim/AnalyserNode.js","../node_modules/tone/tone/component/Analyser.js","../node_modules/tone/tone/signal/Add.js","../node_modules/tone/tone/signal/Multiply.js","../node_modules/tone/tone/signal/Negate.js","../node_modules/tone/tone/signal/Subtract.js","../node_modules/tone/tone/signal/EqualPowerGain.js","../node_modules/tone/tone/component/CrossFade.js","../node_modules/tone/tone/component/Merge.js","../node_modules/tone/tone/component/Split.js","../node_modules/tone/tone/signal/Zero.js","../node_modules/tone/tone/shim/StereoPannerNode.js","../node_modules/tone/tone/signal/AudioToGain.js","../node_modules/tone/tone/component/Panner.js","../node_modules/tone/tone/component/Volume.js","../node_modules/tone/tone/component/PanVol.js","../node_modules/tone/tone/component/Solo.js","../node_modules/tone/tone/component/Channel.js","../node_modules/tone/tone/component/Compressor.js","../node_modules/tone/tone/component/Filter.js","../node_modules/tone/tone/component/MultibandSplit.js","../node_modules/tone/tone/component/EQ3.js","../node_modules/tone/tone/signal/Scale.js","../node_modules/tone/tone/signal/ScaleExp.js","../node_modules/tone/tone/core/Delay.js","../node_modules/tone/tone/component/FeedbackCombFilter.js","../node_modules/tone/tone/component/FFT.js","../node_modules/tone/tone/signal/Abs.js","../node_modules/tone/tone/component/Follower.js","../node_modules/tone/tone/component/ScaledEnvelope.js","../node_modules/tone/tone/component/FrequencyEnvelope.js","../node_modules/tone/tone/signal/GreaterThanZero.js","../node_modules/tone/tone/signal/GreaterThan.js","../node_modules/tone/tone/component/Gate.js","../node_modules/tone/tone/signal/TickSignal.js","../node_modules/tone/tone/core/TimelineState.js","../node_modules/tone/tone/source/TickSource.js","../node_modules/tone/tone/core/Clock.js","../node_modules/tone/tone/core/IntervalTimeline.js","../node_modules/tone/tone/type/Ticks.js","../node_modules/tone/tone/core/TransportEvent.js","../node_modules/tone/tone/core/TransportRepeatEvent.js","../node_modules/tone/tone/core/Transport.js","../node_modules/tone/tone/core/Master.js","../node_modules/tone/tone/source/Source.js","../node_modules/tone/tone/shim/AudioBuffer.js","../node_modules/tone/tone/core/Buffer.js","../node_modules/tone/tone/shim/OscillatorNode.js","../node_modules/tone/tone/source/OscillatorNode.js","../node_modules/tone/tone/source/Oscillator.js","../node_modules/tone/tone/component/LFO.js","../node_modules/tone/tone/component/Limiter.js","../node_modules/tone/tone/component/LowpassCombFilter.js","../node_modules/tone/tone/component/Meter.js","../node_modules/tone/tone/component/MidSideSplit.js","../node_modules/tone/tone/component/MidSideMerge.js","../node_modules/tone/tone/component/MidSideCompressor.js","../node_modules/tone/tone/component/Mono.js","../node_modules/tone/tone/component/MultibandCompressor.js","../node_modules/tone/tone/component/Panner3D.js","../node_modules/tone/tone/component/Waveform.js","../node_modules/tone/tone/control/CtrlInterpolate.js","../node_modules/tone/tone/control/CtrlMarkov.js","../node_modules/tone/tone/control/CtrlPattern.js","../node_modules/tone/tone/control/CtrlRandom.js","../node_modules/tone/tone/core/Buffers.js","../node_modules/tone/tone/core/Bus.js","../node_modules/tone/tone/core/Draw.js","../node_modules/tone/tone/core/Listener.js","../node_modules/tone/tone/core/OfflineContext.js","../node_modules/tone/tone/core/Offline.js","../node_modules/tone/tone/effect/Effect.js","../node_modules/tone/tone/effect/AutoFilter.js","../node_modules/tone/tone/effect/AutoPanner.js","../node_modules/tone/tone/effect/AutoWah.js","../node_modules/tone/tone/signal/Modulo.js","../node_modules/tone/tone/effect/BitCrusher.js","../node_modules/tone/tone/effect/Chebyshev.js","../node_modules/tone/tone/effect/StereoEffect.js","../node_modules/tone/tone/effect/Chorus.js","../node_modules/tone/tone/effect/Convolver.js","../node_modules/tone/tone/effect/Distortion.js","../node_modules/tone/tone/effect/FeedbackEffect.js","../node_modules/tone/tone/effect/FeedbackDelay.js","../node_modules/tone/tone/effect/Freeverb.js","../node_modules/tone/tone/effect/JCReverb.js","../node_modules/tone/tone/effect/MidSideEffect.js","../node_modules/tone/tone/effect/Phaser.js","../node_modules/tone/tone/effect/StereoXFeedbackEffect.js","../node_modules/tone/tone/effect/PingPongDelay.js","../node_modules/tone/tone/effect/PitchShift.js","../node_modules/tone/tone/source/BufferSource.js","../node_modules/tone/tone/source/Noise.js","../node_modules/tone/tone/effect/Reverb.js","../node_modules/tone/tone/effect/StereoFeedbackEffect.js","../node_modules/tone/tone/effect/StereoWidener.js","../node_modules/tone/tone/effect/Tremolo.js","../node_modules/tone/tone/effect/Vibrato.js","../node_modules/tone/tone/event/Event.js","../node_modules/tone/tone/event/Loop.js","../node_modules/tone/tone/event/Part.js","../node_modules/tone/tone/event/Pattern.js","../node_modules/tone/tone/event/Sequence.js","../node_modules/tone/tone/source/PulseOscillator.js","../node_modules/tone/tone/source/PWMOscillator.js","../node_modules/tone/tone/source/FMOscillator.js","../node_modules/tone/tone/source/AMOscillator.js","../node_modules/tone/tone/source/FatOscillator.js","../node_modules/tone/tone/source/OmniOscillator.js","../node_modules/tone/tone/instrument/Instrument.js","../node_modules/tone/tone/instrument/Monophonic.js","../node_modules/tone/tone/instrument/Synth.js","../node_modules/tone/tone/instrument/AMSynth.js","../node_modules/tone/tone/instrument/MonoSynth.js","../node_modules/tone/tone/instrument/DuoSynth.js","../node_modules/tone/tone/instrument/FMSynth.js","../node_modules/tone/tone/instrument/MembraneSynth.js","../node_modules/tone/tone/instrument/MetalSynth.js","../node_modules/tone/tone/instrument/NoiseSynth.js","../node_modules/tone/tone/instrument/PluckSynth.js","../node_modules/tone/tone/instrument/PolySynth.js","../node_modules/tone/tone/instrument/Sampler.js","../node_modules/tone/tone/signal/GainToAudio.js","../node_modules/tone/tone/signal/Normalize.js","../node_modules/tone/tone/signal/TransportTimelineSignal.js","../node_modules/tone/tone/source/GrainPlayer.js","../node_modules/tone/tone/source/Player.js","../node_modules/tone/tone/source/Players.js","../node_modules/tone/tone/source/UserMedia.js","../node_modules/tone/tone/type/Midi.js","../node_modules/tone/tone/index.js","ts/sound/PianoSampler.ts","ts/sound/PianoSound.ts","ts/interface/Loader.ts","ts/setting-toolbar/ChordTypeBtn.ts","ts/setting-toolbar/InversionBtn.ts","ts/progression/ChordProgression.ts","../node_modules/note-parser/index.js","../node_modules/tonal-midi/index.js","../node_modules/midi-writer-js/package.json","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/midi-writer-js/build/index.js","ts/progression/MidiSaver.ts","ts/index.ts"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","Popper","window","document","navigator","timeoutDuration","longerTimeoutBrowsers","isBrowser","userAgent","indexOf","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","supportsMicroTasks","isFunction","functionToCheck","toString","getStyleComputedProperty","element","property","nodeType","css","ownerDocument","defaultView","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","overflow","overflowX","overflowY","test","getReferenceNode","reference","referenceNode","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","getOffsetParent","documentElement","offsetParent","noOffsetParent","nextElementSibling","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","getClientRect","offsets","width","height","getBoundingClientRect","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","runIsIE","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","padding","boundariesElement","boundaries","boundariesNode","isPaddingNumber","getArea","computeAutoPlacement","placement","refRect","rects","sortedAreas","Object","keys","map","key","sort","a","b","area","filteredAreas","filter","computedPlacement","variation","split","getReferenceOffsets","state","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","findIndex","prop","value","cur","match","obj","runModifiers","modifiers","data","ends","undefined","slice","forEach","warn","enabled","update","isDestroyed","options","positionFixed","flip","originalPlacement","position","isCreated","onUpdate","onCreate","isModifierEnabled","modifierName","some","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","destroy","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","attachToScrollParents","event","callback","scrollParents","isBody","target","addEventListener","passive","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","isNumeric","n","isNaN","isFinite","setStyles","unit","setAttributes","attributes","setAttribute","applyStyle","instance","arrowElement","arrowStyles","applyStyleOnLoad","modifierOptions","getRoundedOffsets","shouldRound","round","floor","noRound","v","referenceWidth","popperWidth","isVertical","isVariation","horizontalToInteger","verticalToInteger","isFirefox","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","devicePixelRatio","prefixedProperty","invertTop","invertLeft","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","requested","querySelector","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","getOppositeVariation","validPlacements","placements","clockwise","counter","index","reverse","BEHAVIORS","flipped","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","COUNTERCLOCKWISE","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","keepTogether","toValue","str","size","parseOffset","offset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","transformProp","popperStyles","transform","priority","escapeWithReference","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","requestAnimationFrame","debounce","bind","Defaults","jquery","onLoad","Utils","global","PopperUtils","$","TRANSITION_END","transitionEndEmulator","duration","one","Util","triggerTransitionEnd","getUID","random","getElementById","getSelectorFromElement","selector","getAttribute","hrefAttr","err","getTransitionDurationFromElement","transitionDuration","transitionDelay","floatTransitionDuration","floatTransitionDelay","reflow","trigger","supportsTransitionEnd","Boolean","isElement","typeCheckConfig","componentName","config","configTypes","hasOwnProperty","expectedTypes","valueType","RegExp","toType","findShadowRoot","attachShadow","getRootNode","root","ShadowRoot","jQueryDetection","TypeError","emulateTransitionEnd","special","bindType","delegateType","handle","is","handleObj","handler","NAME","JQUERY_NO_CONFLICT","Event","CLOSE","CLOSED","CLICK_DATA_API","ClassName","Alert","_element","close","rootElement","_getRootElement","_triggerCloseEvent","isDefaultPrevented","_removeElement","dispose","removeData","closest","closeEvent","removeClass","hasClass","_destroyElement","detach","remove","_jQueryInterface","each","$element","_handleDismiss","alertInstance","preventDefault","VERSION","Constructor","noConflict","Selector","FOCUS_BLUR_DATA_API","LOAD_DATA_API","Button","toggle","triggerChangeEvent","addAriaPressed","input","type","checked","classList","activeElement","tagName","focus","hasAttribute","toggleClass","button","inputBtn","buttons","querySelectorAll","add","EVENT_KEY","Default","interval","keyboard","slide","pause","wrap","touch","DefaultType","Direction","SLIDE","SLID","KEYDOWN","MOUSEENTER","MOUSELEAVE","TOUCHSTART","TOUCHMOVE","TOUCHEND","POINTERDOWN","POINTERUP","DRAG_START","ACTIVE","ACTIVE_ITEM","ITEM","ITEM_IMG","NEXT_PREV","INDICATORS","DATA_SLIDE","DATA_RIDE","PointerType","TOUCH","PEN","Carousel","_items","_interval","_activeElement","_isPaused","_isSliding","touchTimeout","touchStartX","touchDeltaX","_config","_getConfig","_indicatorsElement","_touchSupported","maxTouchPoints","_pointerEvent","PointerEvent","MSPointerEvent","_addEventListeners","next","_slide","nextWhenVisible","hidden","prev","cycle","clearInterval","setInterval","visibilityState","to","activeIndex","_getItemIndex","direction","_handleSwipe","absDeltax","abs","_keydown","_addTouchEventListeners","originalEvent","pointerType","clientX","touches","move","which","ARROW_LEFT_KEYCODE","ARROW_RIGHT_KEYCODE","_getItemByDirection","isNextDirection","isPrevDirection","lastItemIndex","isGoingToWrap","delta","itemIndex","_triggerSlideEvent","relatedTarget","eventDirectionName","targetIndex","fromIndex","slideEvent","from","_setActiveIndicatorElement","indicators","nextIndicator","addClass","directionalClassName","orderClassName","activeElementIndex","nextElement","nextElementIndex","isCycling","slidEvent","nextElementInterval","defaultInterval","action","ride","_dataApiClickHandler","slideIndex","carousels","$carousel","SHOW","SHOWN","HIDE","HIDDEN","Dimension","ACTIVES","DATA_TOGGLE","Collapse","_isTransitioning","_triggerArray","id","toggleList","elem","filterElement","foundElem","_selector","_parent","_getParent","_addAriaAndCollapsedClass","show","actives","activesData","not","startEvent","dimension","_getDimension","attr","setTransitioning","complete","scrollSize","triggerArrayLength","isTransitioning","hasWidth","_getTargetFromElement","triggerArray","isOpen","$this","currentTarget","$trigger","selectors","$target","REGEXP_KEYDOWN","ARROW_UP_KEYCODE","CLICK","KEYDOWN_DATA_API","KEYUP_DATA_API","AttachmentMap","boundary","display","popperConfig","Dropdown","_popper","_menu","_getMenuElement","_inNavbar","_detectNavbar","disabled","isActive","_clearMenus","usePopper","showEvent","_getParentFromElement","referenceElement","_getPopperConfig","hideEvent","stopPropagation","constructor","_getPlacement","$parentDropdown","_getOffset","toggles","context","clickEvent","dropdownMenu","_dataApiKeydownHandler","items","item","backdrop","HIDE_PREVENTED","FOCUSIN","RESIZE","CLICK_DISMISS","KEYDOWN_DISMISS","MOUSEUP_DISMISS","MOUSEDOWN_DISMISS","DIALOG","MODAL_BODY","DATA_DISMISS","FIXED_CONTENT","STICKY_CONTENT","Modal","_dialog","_backdrop","_isShown","_isBodyOverflowing","_ignoreBackdropClick","_scrollbarWidth","_checkScrollbar","_setScrollbar","_adjustDialog","_setEscapeEvent","_setResizeEvent","_showBackdrop","_showElement","transition","_hideModal","htmlElement","handleUpdate","_triggerBackdropTransition","hideEventPrevented","defaultPrevented","modalTransitionDuration","modalBody","ELEMENT_NODE","appendChild","_enforceFocus","shownEvent","transitionComplete","has","_resetAdjustments","_resetScrollbar","_removeBackdrop","animate","createElement","className","appendTo","backdropTransitionDuration","callbackRemove","isModalOverflowing","scrollHeight","paddingLeft","paddingRight","_getScrollbarWidth","fixedContent","stickyContent","actualPadding","calculatedPadding","actualMargin","calculatedMargin","elements","margin","scrollDiv","scrollbarWidth","uriAttrs","DefaultWhitelist","br","col","code","div","em","hr","h1","h2","h3","h4","h5","h6","img","li","ol","p","pre","s","small","span","sub","sup","strong","u","ul","SAFE_URL_PATTERN","DATA_URL_PATTERN","sanitizeHtml","unsafeHtml","whiteList","sanitizeFn","domParser","createdDocument","DOMParser","parseFromString","whitelistKeys","elName","attributeList","whitelistedAttributes","allowedAttribute","allowedAttributeList","attrName","nodeValue","regExp","attrRegex","l","innerHTML","BSCLS_PREFIX_REGEX","DISALLOWED_ATTRIBUTES","animation","template","delay","container","fallbackPlacement","sanitize","AUTO","TOP","RIGHT","BOTTOM","LEFT","HoverState","INSERTED","FOCUSOUT","Trigger","Tooltip","_isEnabled","_timeout","_hoverState","_activeTrigger","tip","_setListeners","enable","disable","toggleEnabled","dataKey","DATA_KEY","_getDelegateConfig","click","_isWithActiveTrigger","_enter","_leave","getTipElement","_hideModalHandler","isWithContent","shadowRoot","isInTheDom","tipId","setContent","attachment","_getAttachment","addAttachmentClass","_getContainer","_fixTransition","prevHoverState","_cleanTipClass","getTitle","CLASS_PREFIX","setElementContent","content","text","empty","append","_handlePopperPlacementChange","eventIn","eventOut","_fixTitle","titleType","dataAttributes","dataAttr","$tip","tabClass","join","popperData","popperInstance","initConfigAnimation","Popover","_getContent","method","ACTIVATE","SCROLL","DATA_SPY","NAV_LIST_GROUP","NAV_LINKS","NAV_ITEMS","LIST_ITEMS","DROPDOWN","DROPDOWN_ITEMS","DROPDOWN_TOGGLE","OffsetMethod","ScrollSpy","_scrollElement","_offsets","_targets","_activeTarget","_scrollHeight","_process","refresh","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","targetSelector","targetBCR","pageYOffset","_getOffsetHeight","maxScroll","_activate","_clear","offsetLength","queries","$link","parents","scrollSpys","$spy","Tab","previous","listElement","itemSelector","makeArray","hiddenEvent","active","_transitionComplete","dropdownChild","dropdownElement","dropdownToggleList","autohide","Toast","_close","default","factory","define","amd","self","this","installedModules","__webpack_require__","moduleId","modules","m","c","d","getter","o","defineProperty","configurable","enumerable","get","r","__esModule","object","_version__WEBPACK_IMPORTED_MODULE_0__","Tone","isLetter","sameConstructor","set","params","isString","tmpObj","paramLoop","attrSplit","splice","innerParam","param","isUndef","Signal","Param","AudioParam","TimeBase","_collectDefaults","ret","subRet","j","subAttr","isObject","isDefined","constr","defaults","_super","superDefs","values","defaultArg","given","fallback","givenProp","fallbackProp","log","debug","TONE_DEBUG_CLASS","unshift","console","assert","statement","error","connectSeries","currentUnit","toUnit","connect","srcNode","dstNode","outputNumber","inputNumber","isArray","AudioNode","disconnect","bDone","val","isNumber","arg","isBoolean","isNote","noOp","_readOnly","writable","_writable","State","Started","Stopped","Paused","equalPowerScale","percent","piFactor","PI","sin","dbToGain","db","pow","gainToDb","gain","LN10","intervalToFrequencyRatio","now","immediate","currentTime","extend","child","TempConstructor","_audioContext","resume","isContext","Context","setContext","ctx","sampleRate","hasAudioContext","hasPromises","getContext","initialized","resCallback","__webpack_exports__","supported","testContext","OfflineAudioContext","testSrcNode","createGain","testDstNode","nativeConnect","_context","createInsOuts","inputs","outputs","output","channelCount","channelCountMode","channelInterpretation","outputNum","inputNum","destination","chain","fan","AudioContext","createConstantSource","ConstantSourceNode","buffer","createBuffer","getChannelData","_bufferSource","createBufferSource","loop","gainNode","_output","time","stop","_constantSource","_param","units","Type","convert","SignalBase","getValueAtTime","_core_Tone__WEBPACK_IMPORTED_MODULE_0__","Gain","_gainNode","Time","Frequency","TransportTime","Ticks","NormalRange","AudioRange","Decibels","Interval","BPM","Positive","Cents","Degrees","MIDI","BarsBeatsSixteenths","Samples","Hertz","Note","Milliseconds","Seconds","Notation","toSeconds","toFrequency","freq","valueOf","toTicks","Transport","ticks","Multiply","_mult","Source","_volume","Volume","volume","_state","TimelineState","memory","_synced","_scheduled","mute","seconds","_start","restart","_stop","cancel","setStateAtTime","sched","schedule","t","_syncedStart","sync","stateEvent","startOffset","_syncedStop","getSecondsAtTime","sampleTime","unsync","clear","_native_createWaveShaper","ua","includes","WaveShaperNode","_internalNode","_curve","_defineProperty","curve","Float32Array","createWaveShaper","WaveShaper","mapping","bufferLen","_shaper","setMap","normalized","oversample","oversampling","RangeError","Effect","_dryWet","CrossFade","wet","fade","effectSend","effectReturn","connectEffect","effect","Filter","_filters","frequency","detune","Q","_type","_rolloff","rolloff","cascadingCount","count","createBiquadFilter","connectionChain","getFrequencyResponse","totalResponse","freqValues","magValues","phaseValues","filterClone","Merge","channels","_merger","createChannelMerger","AudioBuffer","copyToChannel","src","chanNum","channel","copyFromChannel","dest","Buffer","_buffer","_reversed","_xhr","onload","url","loaded","load","catch","onerror","_reverse","buff","_removeFromDownloadQueue","abort","numberOfChannels","fromArray","isMultidimensional","toMono","toArray","outputArray","numChannels","channelArray","sample","startSamples","endSamples","replacement","rev","Emitter","mixin","_downloadQueue","baseUrl","fromUrl","request","matches","extensions","extension","supportsType","onError","onProgress","totalProgress","progress","XMLHttpRequest","open","responseType","status","decodeAudioData","response","lengthComputable","total","send","cancelDownloads","canPlayType","removeEvents","success","fail","LFO","_oscillator","Oscillator","amplitude","_stoppedSignal","_zeros","Zero","_stoppedValue","_a2g","AudioToGain","_scaler","Scale","_units","phase","setValueAtTime","syncFrequency","unsyncFrequency","_toUnits","_fromUnits","_getInitialValue","currentMin","currentMax","Subtract","_sum","_neg","Negate","overridden","_events","Timeline","_initialValue","cancelScheduledValues","Infinity","minValue","maxValue","_minOutput","AutomationType","Linear","Exponential","Target","SetValue","Cancel","after","getAfter","before","initialValue","defaultValue","previousVal","getBefore","_exponentialApproach","constant","_linearInterpolate","_exponentialInterpolate","setRampPoint","currentVal","cancelAndHoldAtTime","linearRampToValueAtTime","endTime","exponentialRampToValueAtTime","exponentialRampTo","rampTime","startTime","linearRampTo","targetRampTo","exponentialApproachValueAtTime","timeConstant","setTargetAtTime","setValueCurveAtTime","scaling","segTime","valueAtTime","rampTo","t0","v0","v1","exp","t1","StereoEffect","_split","Split","effectSendL","effectSendR","_merge","effectReturnL","effectReturnR","_loopStart","_loopEnd","_ppq","TransportConstructor","PPQ","_clock","Clock","_processTick","_bindClockEvents","bpm","_timeSignature","timeSignature","_scheduledEvents","_timeline","_repeatedEvents","IntervalTimeline","_syncedSignals","_swingTicks","_swingAmount","transport","swing","swingSubdivision","loopStart","loopEnd","isTransport","tickTime","amount","setTicksAtTime","forEachAtTime","invoke","TransportEvent","_addEvent","scheduleRepeat","TransportRepeatEvent","scheduleOnce","eventId","timeline","forEachFrom","getStateAtTime","timeSig","startPosition","endPosition","setLoopPoints","toNotation","subdivision","getTicksAtTime","toBarsBeatsSixteenths","timeToTicks","ppq","nextSubdivision","remainingTicks","nextTickTime","syncSignal","signal","ratio","ratioSignal","initial","unsyncSignal","syncedSignal","_wave","_partials","partials","_partialCount","partialCount","_phase","Custom","baseType","Sine","Triangle","Sawtooth","Square","oscillator","OscillatorNode","setPeriodicWave","cancelStop","isBasicType","coefs","_getRealImaginary","periodicWave","createPeriodicWave","partial","exec","periodicWaveSize","fftSize","real","imag","cos","_inverseFFT","sum","twoPi","Delay","_maxDelay","maxDelay","delayTime","_delayNode","createDelay","_splitter","createChannelSplitter","AudioContextProperties","AudioContextMethods","rawContext","_defineMethod","_latencyHint","latencyHint","_constants","lookAhead","_computedUpdateInterval","_ticker","Ticker","clockSource","updateInterval","_timeouts","_timeoutIds","_timeoutLoop","onstatechange","master","closePromise","TONE_AUDIO_CONTEXT","getConstant","peek","hint","con","_updateInterval","_callback","_createClock","Worker","Timeout","Offline","_createWorker","URL","webkitURL","blob","Blob","toFixed","blobUrl","createObjectURL","worker","onmessage","_worker","_createTimeout","postMessage","_disposeClock","terminate","TONE_SILENCE_LOGGING","printString","Instrument","triggerAttack","triggerRelease","_syncMethod","timePosition","originalMethod","_original_triggerAttack","_original_triggerRelease","triggerAttackRelease","note","velocity","_norm","initialFade","_equalPowerA","EqualPowerGain","_equalPowerB","_one","_invert","_search","diff","comparator","cancelBefore","previousEvent","beginning","midPoint","nextEvent","_iterate","lowerBound","upperBound","forEachBefore","forEachAfter","forEachBetween","Monophonic","portamento","_triggerEnvelopeAttack","setNote","_triggerEnvelopeRelease","getLevelAtTime","envelope","portTime","outputMin","outputMax","_outputMin","_outputMax","_scale","_add","Add","_setRange","_unmutedVolume","_gain","AmplitudeEnvelope","Envelope","_sig","BufferSource","onended","_startTime","_sourceStarted","_sourceStopped","_stopTime","_source","_onended","playbackRate","fadeIn","fadeOut","_onendedTimeout","fadeInTime","computedDur","fadeOutTime","additionalTail","_wasDisposed","FeedbackEffect","_feedbackGain","feedback","_initial","getLastState","getNextState","events","eventName","boundCallback","ev","eventList","functions","func","emitterFunc","AnalyserNode","getFloatTimeDomainData","uint8","Uint8Array","getByteTimeDomainData","Analyser","_analyser","createAnalyser","smoothing","Waveform","FFT","getValue","getFloatFrequencyData","frequencyBinCount","smoothingTimeConstant","OmniOscillator","_sourceType","OmniOscType","substr","_createNewOscillator","oscType","OscillatorConstructor","oldOsc","blockTime","SourceTypeNames","PulseOscillator","PWMOscillator","FMOscillator","AMOscillator","FatOscillator","sType","sourceType","spread","modulationType","mType","modulationIndex","harmonicity","modulationFrequency","Synth","attack","decay","sustain","release","Noise","_playbackRate","_noiseBuffers","rate","_noiseCache","pink","channelNum","b0","b1","b2","b3","b4","b5","b6","white","brown","lastOut","Master","isMaster","toMaster","MasterConstructor","FrequencyEnvelope","ScaledEnvelope","_octaves","octaves","baseFrequency","exponent","_exp","ScaleExp","Pow","Compressor","_compressor","createDynamicsCompressor","threshold","knee","webkitAudioContext","suspend","source","createGainNode","createDelayNode","decodeAudioDataPromise","offlineContext","audioData","Uint32Array","_native_decodeAudioData","_now","_expressions","assign","midi","regexp","_defaultUnits","mtof","pitch","octave","noteNumber","noteToScaleIndex","tr","q","_beatsToUnits","_getTimeSignature","transpose","harmonize","intervals","toMidi","ftom","toNote","log2","A4","scaleIndexToNote","quarterTime","quarters","_noArg","_frequencyToUnits","_ticksToUnits","beats","_secondsToUnits","cbb","cb","c#","cx","dbb","d#","dx","ebb","eb","e#","ex","fbb","fb","f","f#","fx","gbb","gb","g","g#","gx","abb","ab","a#","ax","bbb","bb","b#","bx","_attackCurve","_releaseCurve","attackCurve","releaseCurve","decayCurve","_getCurve","_setCurve","curveDef","_decayCurve","currentValue","decayValue","decayStart","k","cosineCurve","rippleCurve","curveLen","sineWave","stairsCurve","ceil","sineCurve","bounceCurve","invertCurve","out","linear","exponential","bounce","In","Out","cosine","ripple","sine","createStereoPanner","StereoPannerNode","pan","rightWaveShaper","leftWaveShaper","leftGain","rightGain","merge","Panner","_panner","_carrier","_modulator","_modulationNode","_widthGate","_sawtooth","_thresh","_loop","_startOffset","_probability","probability","_humanize","humanize","_rescheduleEvents","startTick","_getLoopDuration","_tick","prob","reschedulTime","lastEvent","loopDuration","MidSideMerge","mid","_left","_timesTwoLeft","SQRT1_2","_right","_timesTwoRight","MidSideSplit","_midAdd","_sideSubtract","LowpassCombFilter","_combFilter","FeedbackCombFilter","resonance","_lowpass","dampening","_getPPQ","_getBpm","_eventId","_once","TickSource","TickSignal","_tickOffset","stopEvent","tmpEvent","lastState","elapsedTicks","periodStartTime","offsetEvent","elapsedSeconds","getDurationOfTicks","getTimeOfTick","tick","absoluteTicks","forEachTickBetween","lastStateEvent","startTicks","Follower","_abs","Abs","_filter","_sub","_delay","_smoothing","_feedback","MultibandSplit","low","_lowMidFilter","high","lowFrequency","highFrequency","_expScaler","_expFunc","_val","dot","scalar","hz","samples","typeName","quantity","expr","matching","toSamples","toMilliseconds","quantize","capture","quantTo","subdiv","testNotations","power","closestSeconds","notation","notationSeconds","measures","sixteenths","setWaveTable","createWaveTable","createOscillator","Player","autostart","_onload","_activeSources","_onSourceEnd","computedDuration","seek","MonoSynth","filterEnvelope","_oscillators","_spread","_forEach","osc","iterator","_modulationScale","_pulse","Part","_startNote","at","_restartEvent","removeAll","_setAll","_testLoopBoundries","Loop","_event","iterations","iters","StereoXFeedbackEffect","_feedbackLR","_feedbackRL","MidSideEffect","_midSideSplit","_midSideMerge","midSend","sideSend","midReturn","sideReturn","Convolver","_convolver","createConvolver","normalize","norm","Modulo","modulus","_multiply","_subtract","_modSignal","_setWaveShaper","mod","OfflineContext","_duration","_currentTime","render","startRendering","originalContext","Buffers","urls","_buffers","_loadingCount","_bufferLoaded","isLoaded","buffName","CtrlPattern","_shuffled","_direction","Up","Down","UpDown","DownUp","AlternateUp","AlternateDown","Random","RandomWalk","RandomOnce","_shuffleValues","copy","randVal","_currentId","_nextId","_nextTick","_boundRestart","_restart","_createEvents","_boundCreateEvents","_root","_length","IntervalNode","insert","updateHeight","updateMax","_rebalance","results","_removeNode","_setRoot","_replaceNodeInParent","isLeftChild","temp","getBalance","_rotateLeft","pivotNode","_rotateRight","balance","allNodes","traverse","searchAfter","point","_wrapScheduleMethods","ticksUntilTime","_getTicksUntilEvent","prevEvent","segments","rampVal","segmentDur","val0","val1","currentTick","sqrt","sol1","ticksToTime","when","endTicks","_tickSource","_lastUpdate","_boundLoop","GreaterThanZero","GreaterThan","_gtz","Solo","_soloBind","_soloed","solo","_isSoloed","_addSolo","_removeSolo","_currentSolo","_noSolos","_eqPower","PanVol","webkitOfflineAudioContext","_native_startRendering","done","oncomplete","renderedBuffer","Midi","UserMedia","_mediaStream","_stream","_device","labelOrId","enumerateDevices","devices","device","label","deviceId","constraints","audio","echoCancellation","noiseSuppression","mozNoiseSuppression","mediaDevices","getUserMedia","stream","createMediaStreamSource","getAudioTracks","track","kind","groupId","Players","_players","_fadeIn","_fadeOut","player","playing","playerName","stopAll","GrainPlayer","grainSize","_grainSize","_overlap","overlap","_onstop","_offset","TransportTimelineSignal","_outputSig","_lastVal","_onTick","_bindAnchorValue","_anchorValue","_syncedCallback","Normalize","inputMin","inputMax","_inputMin","_inputMax","_div","GainToAudio","Sampler","urlMap","_findClosest","notes","difference","closestNote","releaseAll","sources","PolySynth","polyphony","MAX_POLYPHONY","voices","voice","_getClosestVoice","aLevel","bLevel","PluckSynth","_noise","attackNoise","_lfcf","delayAmount","NoiseSynth","noise","inharmRatios","MetalSynth","_freqMultipliers","_amplitue","_highpass","_filterFreqScaler","mult","vel","octs","MembraneSynth","pitchDecay","maxNote","FMSynth","carrier","modulator","modulation","modulationEnvelope","DuoSynth","voice0","voice1","_vibrato","vibratoRate","_vibratoGain","vibratoAmount","AMSynth","Sequence","_subdivision","_indexTime","subSubdivision","Pattern","_pattern","pattern","vals","Vibrato","_lfo","depth","Tremolo","_lfoL","_lfoR","_amplitudeL","_amplitudeR","StereoWidener","_twoTimesWidthMid","_twoTimesWidthSide","_midMult","_oneMinusWidth","_sideMult","StereoFeedbackEffect","_feedbackL","_feedbackR","Reverb","preDelay","generate","noiseL","noiseR","PitchShift","_frequency","_delayA","_lfoA","_delayB","_lfoB","_crossFade","_crossFadeLFO","_feedbackDelay","_pitch","_windowSize","windowSize","factor","PingPongDelay","_leftDelay","maxDelayTime","_rightDelay","_rightPreDelay","Phaser","_baseFrequency","_filtersL","_makeFilters","stages","_filtersR","connectToFreq","filters","combFilterDelayTimes","combFilterResonances","allpassFilterFreqs","JCReverb","roomSize","_scaleRoomSize","_allpassFilters","_feedbackCombFilters","af","allpass","cf","fbcf","apf","combFilterTunings","allpassFilterFrequencies","Freeverb","_combFilters","_allpassFiltersL","_allpassFiltersR","allpassL","allpassR","lfpf","al","ar","FeedbackDelay","Distortion","_distortion","distortion","deg","Chorus","_depth","_delayTime","_delayNodeL","_delayNodeR","deviation","Chebyshev","_order","_getCoefficient","degree","memo","BitCrusher","invStepSize","bits","_modulo","_bits","AutoWah","follower","_sweepRange","_inputBoost","_bandpass","_peaking","_setSweepRange","sensitivity","baseFreq","sensitivy","AutoPanner","AutoFilter","oct","Listener","_orientation","_position","ListenerConstructor","positionX","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","isListener","_rampTimeConstant","setPosition","z","listener","setOrientation","pos","Draw","expiration","anticipation","_boundDrawLoop","_drawLoop","Buses","channelName","sendKnob","receive","buses","CtrlRandom","integer","rand","CtrlMarkov","distribution","_getProbDistribution","dist","chosen","needsNormalizing","option","CtrlInterpolate","lowerPosition","lower","upper","_interpolate","retArray","retObj","_toNumber","Panner3D","createPanner","panningModel","maxDistance","distanceModel","coneOuterGain","coneOuterAngle","coneInnerAngle","refDistance","rolloffFactor","orientationX","orientationY","orientationZ","_aliasProperty","MultibandCompressor","Mono","MidSideCompressor","Meter","_rms","getLevel","totalSquared","rms","Limiter","Gate","_follower","_gt","thresh","smoothingTime","EQ3","_multibandSplit","_lowGain","_midGain","_highGain","Channel","_solo","_panVol","muted","Function","eval","noteName","isSafari","originalAttack","types","possibilities","promise","retBuffer","multiple","bufferLength","Pulse","PWM","Osc","FM","AM","Fat","sameNote","MAX_INTERVAL","fillStr","num","isNum","isStr","isDef","midiToFreq","tuning","REGEX","regex","SEMITONES","parse","isTonic","letter","acc","pc","charCodeAt","alt","chroma","tonicOf","LETTERS","accStr","octStr","build","FLATS","SHARPS","sharps"],"mappings":"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,EAAA,IACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IACAA,EAAA,IACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IACAA,EAAA,IACAA,EAAA,KACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IACAA,EAAA,KACAA,EAAA,GACAA,EAAA,IACAA,EAAA,IACAA,EAAA,KACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,KACAA,EAAA,IACAA,EAAA,GACAA,EAAA,IACAA,EAAA,KACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IACAA,EAAA,KACAA,EAAA,GACAA,EAAA,KACAA,EAAA,IACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IACAA,EAAA,IACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,KACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,GACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,GACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,GACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,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","file":"ts.4d75bf41.js","sourceRoot":"../src","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*!\n * jQuery JavaScript Library v3.4.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2019-05-01T21:04Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n      // Support: Chrome <=57, Firefox <=52\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n      // We don't want to classify *any* DOM node as a function.\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnonce: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, node, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar i, val,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\n\t\t\t\t// Support: Firefox 64+, Edge 18+\n\t\t\t\t// Some browsers don't support the \"nonce\" property on scripts.\n\t\t\t\t// On the other hand, just using `getAttribute` is not enough as\n\t\t\t\t// the `nonce` attribute is reset to an empty string whenever it\n\t\t\t\t// becomes browsing-context connected.\n\t\t\t\t// See https://github.com/whatwg/html/issues/2369\n\t\t\t\t// See https://html.spec.whatwg.org/#nonce-attributes\n\t\t\t\t// The `node.getAttribute` check was added for the sake of\n\t\t\t\t// `jQuery.globalEval` so that it can fake a nonce-containing node\n\t\t\t\t// via an object.\n\t\t\t\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\n\t\t\t\tif ( val ) {\n\t\t\t\t\tscript.setAttribute( i, val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.4.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent Object.prototype pollution\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\t\t\t\tsrc = target[ name ];\n\n\t\t\t\t\t// Ensure proper type for the source value\n\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n\t\t\t\t\t\tclone = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src;\n\t\t\t\t\t}\n\t\t\t\t\tcopyIsArray = false;\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code, options ) {\n\t\tDOMEval( code, { nonce: options && options.nonce } );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.4\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://js.foundation/\n *\n * Date: 2019-04-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tnonnativeSelectorCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\trdescend = new RegExp( whitespace + \"|>\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trhtml = /HTML$/i,\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tinDisabledFieldset = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!nonnativeSelectorCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) &&\n\n\t\t\t\t// Support: IE 8 only\n\t\t\t\t// Exclude object elements\n\t\t\t\t(nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\") ) {\n\n\t\t\t\tnewSelector = selector;\n\t\t\t\tnewContext = context;\n\n\t\t\t\t// qSA considers elements outside a scoping root when evaluating child or\n\t\t\t\t// descendant combinators, which is not what we want.\n\t\t\t\t// In such cases, we work around the behavior by prefixing every selector in the\n\t\t\t\t// list with an ID selector referencing the scope context.\n\t\t\t\t// Thanks to Andrew Dupont for this technique.\n\t\t\t\tif ( nodeType === 1 && rdescend.test( selector ) ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\tnonnativeSelectorCache( selector, true );\n\t\t\t\t} finally {\n\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tinDisabledFieldset( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\tvar namespace = elem.namespaceURI,\n\t\tdocElem = (elem.ownerDocument || elem).documentElement;\n\n\t// Support: IE <=8\n\t// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n\t// https://bugs.jquery.com/ticket/4833\n\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \"HTML\" );\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!nonnativeSelectorCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnonnativeSelectorCache( expr, true );\n\t\t}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ?\n\t\t\t\targument + length :\n\t\t\t\targument > length ?\n\t\t\t\t\tlength :\n\t\t\t\t\targument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\tif ( typeof elem.contentDocument !== \"undefined\" ) {\n\t\t\treturn elem.contentDocument;\n\t\t}\n\n\t\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t\t// Treat the template element as a regular one in browsers that\n\t\t// don't support it.\n\t\tif ( nodeName( elem, \"template\" ) ) {\n\t\t\telem = elem.content || elem;\n\t\t}\n\n\t\treturn jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar documentElement = document.documentElement;\n\n\n\n\tvar isAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem );\n\t\t},\n\t\tcomposed = { composed: true };\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\n\t// Support: iOS 10.0-10.2 only\n\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n\t// leading to errors. We need to check for `getRootNode`.\n\tif ( documentElement.getRootNode ) {\n\t\tisAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem ) ||\n\t\t\t\telem.getRootNode( composed ) === elem.ownerDocument;\n\t\t};\n\t}\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = elem.nodeType &&\n\t\t\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, attached, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tattached = isAttached( elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( attached ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 - 11+\n// focus() and blur() are asynchronous, except when they are no-op.\n// So expect focus to be synchronous when the element is already active,\n// and blur to be synchronous when the element is not already active.\n// (focus and blur are always synchronous in other supported browsers,\n// this just defines when we can count on it).\nfunction expectSync( elem, type ) {\n\treturn ( elem === safeActiveElement() ) === ( type === \"focus\" );\n}\n\n// Support: IE <=9 only\n// Accessing document.activeElement can throw unexpectedly\n// https://bugs.jquery.com/ticket/13393\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// If the event is namespaced, then each handler is only invoked if it is\n\t\t\t\t// specially universal or its namespaces are a superset of the event's.\n\t\t\t\tif ( !event.rnamespace || handleObj.namespace === false ||\n\t\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tclick: {\n\n\t\t\t// Utilize native event to ensure correct state for checkable inputs\n\t\t\tsetup: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Claim the first handler\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\t// dataPriv.set( el, \"click\", ... )\n\t\t\t\t\tleverageNative( el, \"click\", returnTrue );\n\t\t\t\t}\n\n\t\t\t\t// Return false to allow normal processing in the caller\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\ttrigger: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Force setup before triggering a click\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\tleverageNative( el, \"click\" );\n\t\t\t\t}\n\n\t\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, suppress native .click() on links\n\t\t\t// Also prevent it if we're currently inside a leveraged native-event stack\n\t\t\t_default: function( event ) {\n\t\t\t\tvar target = event.target;\n\t\t\t\treturn rcheckableType.test( target.type ) &&\n\t\t\t\t\ttarget.click && nodeName( target, \"input\" ) &&\n\t\t\t\t\tdataPriv.get( target, \"click\" ) ||\n\t\t\t\t\tnodeName( target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Ensure the presence of an event listener that handles manually-triggered\n// synthetic events by interrupting progress until reinvoked in response to\n// *native* events that it fires directly, ensuring that state changes have\n// already occurred before other listeners are invoked.\nfunction leverageNative( el, type, expectSync ) {\n\n\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n\tif ( !expectSync ) {\n\t\tif ( dataPriv.get( el, type ) === undefined ) {\n\t\t\tjQuery.event.add( el, type, returnTrue );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Register the controller as a special universal handler for all event namespaces\n\tdataPriv.set( el, type, false );\n\tjQuery.event.add( el, type, {\n\t\tnamespace: false,\n\t\thandler: function( event ) {\n\t\t\tvar notAsync, result,\n\t\t\t\tsaved = dataPriv.get( this, type );\n\n\t\t\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\n\n\t\t\t\t// Interrupt processing of the outer synthetic .trigger()ed event\n\t\t\t\t// Saved data should be false in such cases, but might be a leftover capture object\n\t\t\t\t// from an async native handler (gh-4350)\n\t\t\t\tif ( !saved.length ) {\n\n\t\t\t\t\t// Store arguments for use when handling the inner native event\n\t\t\t\t\t// There will always be at least one argument (an event object), so this array\n\t\t\t\t\t// will not be confused with a leftover capture object.\n\t\t\t\t\tsaved = slice.call( arguments );\n\t\t\t\t\tdataPriv.set( this, type, saved );\n\n\t\t\t\t\t// Trigger the native event and capture its result\n\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t// focus() and blur() are asynchronous\n\t\t\t\t\tnotAsync = expectSync( this, type );\n\t\t\t\t\tthis[ type ]();\n\t\t\t\t\tresult = dataPriv.get( this, type );\n\t\t\t\t\tif ( saved !== result || notAsync ) {\n\t\t\t\t\t\tdataPriv.set( this, type, false );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = {};\n\t\t\t\t\t}\n\t\t\t\t\tif ( saved !== result ) {\n\n\t\t\t\t\t\t// Cancel the outer synthetic event\n\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\treturn result.value;\n\t\t\t\t\t}\n\n\t\t\t\t// If this is an inner synthetic event for an event with a bubbling surrogate\n\t\t\t\t// (focus or blur), assume that the surrogate already propagated from triggering the\n\t\t\t\t// native event and prevent that from happening again here.\n\t\t\t\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n\t\t\t\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\n\t\t\t\t// less bad than duplication.\n\t\t\t\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\n\t\t\t// If this is a native event triggered above, everything is now in order\n\t\t\t// Fire an inner synthetic event with the original arguments\n\t\t\t} else if ( saved.length ) {\n\n\t\t\t\t// ...and capture the result\n\t\t\t\tdataPriv.set( this, type, {\n\t\t\t\t\tvalue: jQuery.event.trigger(\n\n\t\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t\t// Extend with the prototype to reset the above stopImmediatePropagation()\n\t\t\t\t\t\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\n\t\t\t\t\t\tsaved.slice( 1 ),\n\t\t\t\t\t\tthis\n\t\t\t\t\t)\n\t\t\t\t} );\n\n\t\t\t\t// Abort handling of the native event\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t} );\n}\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcode: true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\n\tjQuery.event.special[ type ] = {\n\n\t\t// Utilize native event if possible so blur/focus sequence is correct\n\t\tsetup: function() {\n\n\t\t\t// Claim the first handler\n\t\t\t// dataPriv.set( this, \"focus\", ... )\n\t\t\t// dataPriv.set( this, \"blur\", ... )\n\t\t\tleverageNative( this, type, expectSync );\n\n\t\t\t// Return false to allow normal processing in the caller\n\t\t\treturn false;\n\t\t},\n\t\ttrigger: function() {\n\n\t\t\t// Force setup before trigger\n\t\t\tleverageNative( this, type );\n\n\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\treturn true;\n\t\t},\n\n\t\tdelegateType: delegateType\n\t};\n} );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl && !node.noModule ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src, {\n\t\t\t\t\t\t\t\t\tnonce: node.nonce || node.getAttribute( \"nonce\" )\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && isAttached( node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = isAttached( elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t// Support: Chrome <=64\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style,\n\tvendorProps = {};\n\n// Return a vendor-prefixed property or undefined\nfunction vendorPropName( name ) {\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\nfunction finalPropName( name ) {\n\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\n\n\tif ( final ) {\n\t\treturn final;\n\t}\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\treturn vendorProps[ name ] = vendorPropName( name ) || name;\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t};\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\n\t\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n\t\t// Use an explicit zero to avoid NaN (gh-3964)\n\t\t) ) || 0;\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\n\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n\t\t// Fake content-box until we know it's needed to know the true value.\n\t\tboxSizingNeeded = !support.boxSizingReliable() || extra,\n\t\tisBorderBox = boxSizingNeeded &&\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox,\n\n\t\tval = curCSS( elem, dimension, styles ),\n\t\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\n\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t// This happens for inline elements with no explicit setting (gh-3571)\n\t// Support: Android <=4.1 - 4.3 only\n\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\t// Support: IE 9-11 only\n\t// Also use offsetWidth/offsetHeight for when box sizing is unreliable\n\t// We use getClientRects() to check for hidden/disconnected.\n\t// In those cases, the computed value can be trusted to be border-box\n\tif ( ( !support.boxSizingReliable() && isBorderBox ||\n\t\tval === \"auto\" ||\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\n\t\telem.getClientRects().length ) {\n\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\n\t\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n\t\t// retrieved value as a content box dimension.\n\t\tvalueIsBorderBox = offsetProp in elem;\n\t\tif ( valueIsBorderBox ) {\n\t\t\tval = elem[ offsetProp ];\n\t\t}\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"gridArea\": true,\n\t\t\"gridColumn\": true,\n\t\t\"gridColumnEnd\": true,\n\t\t\"gridColumnStart\": true,\n\t\t\"gridRow\": true,\n\t\t\"gridRowEnd\": true,\n\t\t\"gridRowStart\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n\t\t\t// \"px\" to a few hardcoded values.\n\t\t\tif ( type === \"number\" && !isCustomProp ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\n\t\t\t\t// Only read styles.position if the test has a chance to fail\n\t\t\t\t// to avoid forcing a reflow.\n\t\t\t\tscrollboxSizeBuggy = !support.scrollboxSize() &&\n\t\t\t\t\tstyles.position === \"absolute\",\n\n\t\t\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n\t\t\t\tboxSizingNeeded = scrollboxSizeBuggy || extra,\n\t\t\t\tisBorderBox = boxSizingNeeded &&\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra ?\n\t\t\t\t\tboxModelAdjustment(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tisBorderBox,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t) :\n\t\t\t\t\t0;\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && scrollboxSizeBuggy ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 && (\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ||\n\t\t\t\t\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = Date.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\tif ( a == null ) {\n\t\treturn \"\";\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\n\t\t\t\t\t\t\t\t\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\n\t\t\t\t\t\t\t\t\t\t.concat( match[ 2 ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match.join( \", \" );\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url, options ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\n\t\t// Only evaluate the response if it is successful (gh-4126)\n\t\t// dataFilter is not invoked for failure responses, so using it instead\n\t\t// of the default converter is kludgy but it works.\n\t\tconverters: {\n\t\t\t\"text script\": function() {}\n\t\t},\n\t\tdataFilter: function( response ) {\n\t\t\tjQuery.globalEval( response, options );\n\t\t}\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain or forced-by-attrs requests\n\tif ( s.crossDomain || s.scriptAttrs ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" )\n\t\t\t\t\t.attr( s.scriptAttrs || {} )\n\t\t\t\t\t.prop( { charset: s.scriptCharset, src: s.url } )\n\t\t\t\t\t.on( \"load error\", callback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n","export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst timeoutDuration = (function(){\n  const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}());\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nexport default function getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`], 10) +\n    parseFloat(styles[`border${sideB}Width`], 10)\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.width;\n  const height =\n    sizes.height || element.clientHeight || result.height;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop, 10);\n    const marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getReferenceNode from './getReferenceNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\nimport getReferenceNode from './getReferenceNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`], 10);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`], 10);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): toast.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME               = 'toast'\nconst VERSION            = '4.4.1'\nconst DATA_KEY           = 'bs.toast'\nconst EVENT_KEY          = `.${DATA_KEY}`\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst Event = {\n  CLICK_DISMISS : `click.dismiss${EVENT_KEY}`,\n  HIDE          : `hide${EVENT_KEY}`,\n  HIDDEN        : `hidden${EVENT_KEY}`,\n  SHOW          : `show${EVENT_KEY}`,\n  SHOWN         : `shown${EVENT_KEY}`\n}\n\nconst ClassName = {\n  FADE    : 'fade',\n  HIDE    : 'hide',\n  SHOW    : 'show',\n  SHOWING : 'showing'\n}\n\nconst DefaultType = {\n  animation : 'boolean',\n  autohide  : 'boolean',\n  delay     : 'number'\n}\n\nconst Default = {\n  animation : true,\n  autohide  : true,\n  delay     : 500\n}\n\nconst Selector = {\n  DATA_DISMISS : '[data-dismiss=\"toast\"]'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Toast {\n  constructor(element, config) {\n    this._element = element\n    this._config  = this._getConfig(config)\n    this._timeout = null\n    this._setListeners()\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  show() {\n    const showEvent = $.Event(Event.SHOW)\n\n    $(this._element).trigger(showEvent)\n    if (showEvent.isDefaultPrevented()) {\n      return\n    }\n\n    if (this._config.animation) {\n      this._element.classList.add(ClassName.FADE)\n    }\n\n    const complete = () => {\n      this._element.classList.remove(ClassName.SHOWING)\n      this._element.classList.add(ClassName.SHOW)\n\n      $(this._element).trigger(Event.SHOWN)\n\n      if (this._config.autohide) {\n        this._timeout = setTimeout(() => {\n          this.hide()\n        }, this._config.delay)\n      }\n    }\n\n    this._element.classList.remove(ClassName.HIDE)\n    Util.reflow(this._element)\n    this._element.classList.add(ClassName.SHOWING)\n    if (this._config.animation) {\n      const transitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n      $(this._element)\n        .one(Util.TRANSITION_END, complete)\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      complete()\n    }\n  }\n\n  hide() {\n    if (!this._element.classList.contains(ClassName.SHOW)) {\n      return\n    }\n\n    const hideEvent = $.Event(Event.HIDE)\n\n    $(this._element).trigger(hideEvent)\n    if (hideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    this._close()\n  }\n\n  dispose() {\n    clearTimeout(this._timeout)\n    this._timeout = null\n\n    if (this._element.classList.contains(ClassName.SHOW)) {\n      this._element.classList.remove(ClassName.SHOW)\n    }\n\n    $(this._element).off(Event.CLICK_DISMISS)\n\n    $.removeData(this._element, DATA_KEY)\n    this._element = null\n    this._config  = null\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...$(this._element).data(),\n      ...typeof config === 'object' && config ? config : {}\n    }\n\n    Util.typeCheckConfig(\n      NAME,\n      config,\n      this.constructor.DefaultType\n    )\n\n    return config\n  }\n\n  _setListeners() {\n    $(this._element).on(\n      Event.CLICK_DISMISS,\n      Selector.DATA_DISMISS,\n      () => this.hide()\n    )\n  }\n\n  _close() {\n    const complete = () => {\n      this._element.classList.add(ClassName.HIDE)\n      $(this._element).trigger(Event.HIDDEN)\n    }\n\n    this._element.classList.remove(ClassName.SHOW)\n    if (this._config.animation) {\n      const transitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n      $(this._element)\n        .one(Util.TRANSITION_END, complete)\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      complete()\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      const $element = $(this)\n      let data       = $element.data(DATA_KEY)\n      const _config  = typeof config === 'object' && config\n\n      if (!data) {\n        data = new Toast(this, _config)\n        $element.data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config](this)\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME]             = Toast._jQueryInterface\n$.fn[NAME].Constructor = Toast\n$.fn[NAME].noConflict  = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Toast._jQueryInterface\n}\n\nexport default Toast\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): util.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Private TransitionEnd Helpers\n * ------------------------------------------------------------------------\n */\n\nconst TRANSITION_END = 'transitionend'\nconst MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\nfunction toType(obj) {\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\nfunction getSpecialTransitionEndEvent() {\n  return {\n    bindType: TRANSITION_END,\n    delegateType: TRANSITION_END,\n    handle(event) {\n      if ($(event.target).is(this)) {\n        return event.handleObj.handler.apply(this, arguments) // eslint-disable-line prefer-rest-params\n      }\n      return undefined // eslint-disable-line no-undefined\n    }\n  }\n}\n\nfunction transitionEndEmulator(duration) {\n  let called = false\n\n  $(this).one(Util.TRANSITION_END, () => {\n    called = true\n  })\n\n  setTimeout(() => {\n    if (!called) {\n      Util.triggerTransitionEnd(this)\n    }\n  }, duration)\n\n  return this\n}\n\nfunction setTransitionEndSupport() {\n  $.fn.emulateTransitionEnd = transitionEndEmulator\n  $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent()\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst Util = {\n\n  TRANSITION_END: 'bsTransitionEnd',\n\n  getUID(prefix) {\n    do {\n      // eslint-disable-next-line no-bitwise\n      prefix += ~~(Math.random() * MAX_UID) // \"~~\" acts like a faster Math.floor() here\n    } while (document.getElementById(prefix))\n    return prefix\n  },\n\n  getSelectorFromElement(element) {\n    let selector = element.getAttribute('data-target')\n\n    if (!selector || selector === '#') {\n      const hrefAttr = element.getAttribute('href')\n      selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : ''\n    }\n\n    try {\n      return document.querySelector(selector) ? selector : null\n    } catch (err) {\n      return null\n    }\n  },\n\n  getTransitionDurationFromElement(element) {\n    if (!element) {\n      return 0\n    }\n\n    // Get transition-duration of the element\n    let transitionDuration = $(element).css('transition-duration')\n    let transitionDelay = $(element).css('transition-delay')\n\n    const floatTransitionDuration = parseFloat(transitionDuration)\n    const floatTransitionDelay = parseFloat(transitionDelay)\n\n    // Return 0 if element or transition duration is not found\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0\n    }\n\n    // If multiple durations are defined, take the first\n    transitionDuration = transitionDuration.split(',')[0]\n    transitionDelay = transitionDelay.split(',')[0]\n\n    return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n  },\n\n  reflow(element) {\n    return element.offsetHeight\n  },\n\n  triggerTransitionEnd(element) {\n    $(element).trigger(TRANSITION_END)\n  },\n\n  // TODO: Remove in v5\n  supportsTransitionEnd() {\n    return Boolean(TRANSITION_END)\n  },\n\n  isElement(obj) {\n    return (obj[0] || obj).nodeType\n  },\n\n  typeCheckConfig(componentName, config, configTypes) {\n    for (const property in configTypes) {\n      if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n        const expectedTypes = configTypes[property]\n        const value         = config[property]\n        const valueType     = value && Util.isElement(value)\n          ? 'element' : toType(value)\n\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          throw new Error(\n            `${componentName.toUpperCase()}: ` +\n            `Option \"${property}\" provided type \"${valueType}\" ` +\n            `but expected type \"${expectedTypes}\".`)\n        }\n      }\n    }\n  },\n\n  findShadowRoot(element) {\n    if (!document.documentElement.attachShadow) {\n      return null\n    }\n\n    // Can find the shadow root otherwise it'll return the document\n    if (typeof element.getRootNode === 'function') {\n      const root = element.getRootNode()\n      return root instanceof ShadowRoot ? root : null\n    }\n\n    if (element instanceof ShadowRoot) {\n      return element\n    }\n\n    // when we don't find a shadow root\n    if (!element.parentNode) {\n      return null\n    }\n\n    return Util.findShadowRoot(element.parentNode)\n  },\n\n  jQueryDetection() {\n    if (typeof $ === 'undefined') {\n      throw new TypeError('Bootstrap\\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\\'s JavaScript.')\n    }\n\n    const version = $.fn.jquery.split(' ')[0].split('.')\n    const minMajor = 1\n    const ltMajor = 2\n    const minMinor = 9\n    const minPatch = 1\n    const maxMajor = 4\n\n    if (version[0] < ltMajor && version[1] < minMinor || version[0] === minMajor && version[1] === minMinor && version[2] < minPatch || version[0] >= maxMajor) {\n      throw new Error('Bootstrap\\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0')\n    }\n  }\n}\n\nUtil.jQueryDetection()\nsetTransitionEndSupport()\n\nexport default Util\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): alert.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME                = 'alert'\nconst VERSION             = '4.4.1'\nconst DATA_KEY            = 'bs.alert'\nconst EVENT_KEY           = `.${DATA_KEY}`\nconst DATA_API_KEY        = '.data-api'\nconst JQUERY_NO_CONFLICT  = $.fn[NAME]\n\nconst Selector = {\n  DISMISS : '[data-dismiss=\"alert\"]'\n}\n\nconst Event = {\n  CLOSE          : `close${EVENT_KEY}`,\n  CLOSED         : `closed${EVENT_KEY}`,\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {\n  ALERT : 'alert',\n  FADE  : 'fade',\n  SHOW  : 'show'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Alert {\n  constructor(element) {\n    this._element = element\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  // Public\n\n  close(element) {\n    let rootElement = this._element\n    if (element) {\n      rootElement = this._getRootElement(element)\n    }\n\n    const customEvent = this._triggerCloseEvent(rootElement)\n\n    if (customEvent.isDefaultPrevented()) {\n      return\n    }\n\n    this._removeElement(rootElement)\n  }\n\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n    this._element = null\n  }\n\n  // Private\n\n  _getRootElement(element) {\n    const selector = Util.getSelectorFromElement(element)\n    let parent     = false\n\n    if (selector) {\n      parent = document.querySelector(selector)\n    }\n\n    if (!parent) {\n      parent = $(element).closest(`.${ClassName.ALERT}`)[0]\n    }\n\n    return parent\n  }\n\n  _triggerCloseEvent(element) {\n    const closeEvent = $.Event(Event.CLOSE)\n\n    $(element).trigger(closeEvent)\n    return closeEvent\n  }\n\n  _removeElement(element) {\n    $(element).removeClass(ClassName.SHOW)\n\n    if (!$(element).hasClass(ClassName.FADE)) {\n      this._destroyElement(element)\n      return\n    }\n\n    const transitionDuration = Util.getTransitionDurationFromElement(element)\n\n    $(element)\n      .one(Util.TRANSITION_END, (event) => this._destroyElement(element, event))\n      .emulateTransitionEnd(transitionDuration)\n  }\n\n  _destroyElement(element) {\n    $(element)\n      .detach()\n      .trigger(Event.CLOSED)\n      .remove()\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      const $element = $(this)\n      let data       = $element.data(DATA_KEY)\n\n      if (!data) {\n        data = new Alert(this)\n        $element.data(DATA_KEY, data)\n      }\n\n      if (config === 'close') {\n        data[config](this)\n      }\n    })\n  }\n\n  static _handleDismiss(alertInstance) {\n    return function (event) {\n      if (event) {\n        event.preventDefault()\n      }\n\n      alertInstance.close(this)\n    }\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document).on(\n  Event.CLICK_DATA_API,\n  Selector.DISMISS,\n  Alert._handleDismiss(new Alert())\n)\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME]             = Alert._jQueryInterface\n$.fn[NAME].Constructor = Alert\n$.fn[NAME].noConflict  = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Alert._jQueryInterface\n}\n\nexport default Alert\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME                = 'button'\nconst VERSION             = '4.4.1'\nconst DATA_KEY            = 'bs.button'\nconst EVENT_KEY           = `.${DATA_KEY}`\nconst DATA_API_KEY        = '.data-api'\nconst JQUERY_NO_CONFLICT  = $.fn[NAME]\n\nconst ClassName = {\n  ACTIVE : 'active',\n  BUTTON : 'btn',\n  FOCUS  : 'focus'\n}\n\nconst Selector = {\n  DATA_TOGGLE_CARROT   : '[data-toggle^=\"button\"]',\n  DATA_TOGGLES         : '[data-toggle=\"buttons\"]',\n  DATA_TOGGLE          : '[data-toggle=\"button\"]',\n  DATA_TOGGLES_BUTTONS : '[data-toggle=\"buttons\"] .btn',\n  INPUT                : 'input:not([type=\"hidden\"])',\n  ACTIVE               : '.active',\n  BUTTON               : '.btn'\n}\n\nconst Event = {\n  CLICK_DATA_API      : `click${EVENT_KEY}${DATA_API_KEY}`,\n  FOCUS_BLUR_DATA_API : `focus${EVENT_KEY}${DATA_API_KEY} ` +\n                          `blur${EVENT_KEY}${DATA_API_KEY}`,\n  LOAD_DATA_API       : `load${EVENT_KEY}${DATA_API_KEY}`\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Button {\n  constructor(element) {\n    this._element = element\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  // Public\n\n  toggle() {\n    let triggerChangeEvent = true\n    let addAriaPressed = true\n    const rootElement = $(this._element).closest(\n      Selector.DATA_TOGGLES\n    )[0]\n\n    if (rootElement) {\n      const input = this._element.querySelector(Selector.INPUT)\n\n      if (input) {\n        if (input.type === 'radio') {\n          if (input.checked &&\n            this._element.classList.contains(ClassName.ACTIVE)) {\n            triggerChangeEvent = false\n          } else {\n            const activeElement = rootElement.querySelector(Selector.ACTIVE)\n\n            if (activeElement) {\n              $(activeElement).removeClass(ClassName.ACTIVE)\n            }\n          }\n        } else if (input.type === 'checkbox') {\n          if (this._element.tagName === 'LABEL' && input.checked === this._element.classList.contains(ClassName.ACTIVE)) {\n            triggerChangeEvent = false\n          }\n        } else {\n          // if it's not a radio button or checkbox don't add a pointless/invalid checked property to the input\n          triggerChangeEvent = false\n        }\n\n        if (triggerChangeEvent) {\n          input.checked = !this._element.classList.contains(ClassName.ACTIVE)\n          $(input).trigger('change')\n        }\n\n        input.focus()\n        addAriaPressed = false\n      }\n    }\n\n    if (!(this._element.hasAttribute('disabled') || this._element.classList.contains('disabled'))) {\n      if (addAriaPressed) {\n        this._element.setAttribute('aria-pressed',\n          !this._element.classList.contains(ClassName.ACTIVE))\n      }\n\n      if (triggerChangeEvent) {\n        $(this._element).toggleClass(ClassName.ACTIVE)\n      }\n    }\n  }\n\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n    this._element = null\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n\n      if (!data) {\n        data = new Button(this)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (config === 'toggle') {\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document)\n  .on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, (event) => {\n    let button = event.target\n\n    if (!$(button).hasClass(ClassName.BUTTON)) {\n      button = $(button).closest(Selector.BUTTON)[0]\n    }\n\n    if (!button || button.hasAttribute('disabled') || button.classList.contains('disabled')) {\n      event.preventDefault() // work around Firefox bug #1540995\n    } else {\n      const inputBtn = button.querySelector(Selector.INPUT)\n\n      if (inputBtn && (inputBtn.hasAttribute('disabled') || inputBtn.classList.contains('disabled'))) {\n        event.preventDefault() // work around Firefox bug #1540995\n        return\n      }\n\n      Button._jQueryInterface.call($(button), 'toggle')\n    }\n  })\n  .on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, (event) => {\n    const button = $(event.target).closest(Selector.BUTTON)[0]\n    $(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type))\n  })\n\n$(window).on(Event.LOAD_DATA_API, () => {\n  // ensure correct active class is set to match the controls' actual values/states\n\n  // find all checkboxes/readio buttons inside data-toggle groups\n  let buttons = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLES_BUTTONS))\n  for (let i = 0, len = buttons.length; i < len; i++) {\n    const button = buttons[i]\n    const input = button.querySelector(Selector.INPUT)\n    if (input.checked || input.hasAttribute('checked')) {\n      button.classList.add(ClassName.ACTIVE)\n    } else {\n      button.classList.remove(ClassName.ACTIVE)\n    }\n  }\n\n  // find all button toggles\n  buttons = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE))\n  for (let i = 0, len = buttons.length; i < len; i++) {\n    const button = buttons[i]\n    if (button.getAttribute('aria-pressed') === 'true') {\n      button.classList.add(ClassName.ACTIVE)\n    } else {\n      button.classList.remove(ClassName.ACTIVE)\n    }\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Button._jQueryInterface\n$.fn[NAME].Constructor = Button\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Button._jQueryInterface\n}\n\nexport default Button\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME                   = 'carousel'\nconst VERSION                = '4.4.1'\nconst DATA_KEY               = 'bs.carousel'\nconst EVENT_KEY              = `.${DATA_KEY}`\nconst DATA_API_KEY           = '.data-api'\nconst JQUERY_NO_CONFLICT     = $.fn[NAME]\nconst ARROW_LEFT_KEYCODE     = 37 // KeyboardEvent.which value for left arrow key\nconst ARROW_RIGHT_KEYCODE    = 39 // KeyboardEvent.which value for right arrow key\nconst TOUCHEVENT_COMPAT_WAIT = 500 // Time for mouse compat events to fire after touch\nconst SWIPE_THRESHOLD        = 40\n\nconst Default = {\n  interval : 5000,\n  keyboard : true,\n  slide    : false,\n  pause    : 'hover',\n  wrap     : true,\n  touch    : true\n}\n\nconst DefaultType = {\n  interval : '(number|boolean)',\n  keyboard : 'boolean',\n  slide    : '(boolean|string)',\n  pause    : '(string|boolean)',\n  wrap     : 'boolean',\n  touch    : 'boolean'\n}\n\nconst Direction = {\n  NEXT     : 'next',\n  PREV     : 'prev',\n  LEFT     : 'left',\n  RIGHT    : 'right'\n}\n\nconst Event = {\n  SLIDE          : `slide${EVENT_KEY}`,\n  SLID           : `slid${EVENT_KEY}`,\n  KEYDOWN        : `keydown${EVENT_KEY}`,\n  MOUSEENTER     : `mouseenter${EVENT_KEY}`,\n  MOUSELEAVE     : `mouseleave${EVENT_KEY}`,\n  TOUCHSTART     : `touchstart${EVENT_KEY}`,\n  TOUCHMOVE      : `touchmove${EVENT_KEY}`,\n  TOUCHEND       : `touchend${EVENT_KEY}`,\n  POINTERDOWN    : `pointerdown${EVENT_KEY}`,\n  POINTERUP      : `pointerup${EVENT_KEY}`,\n  DRAG_START     : `dragstart${EVENT_KEY}`,\n  LOAD_DATA_API  : `load${EVENT_KEY}${DATA_API_KEY}`,\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {\n  CAROUSEL      : 'carousel',\n  ACTIVE        : 'active',\n  SLIDE         : 'slide',\n  RIGHT         : 'carousel-item-right',\n  LEFT          : 'carousel-item-left',\n  NEXT          : 'carousel-item-next',\n  PREV          : 'carousel-item-prev',\n  ITEM          : 'carousel-item',\n  POINTER_EVENT : 'pointer-event'\n}\n\nconst Selector = {\n  ACTIVE      : '.active',\n  ACTIVE_ITEM : '.active.carousel-item',\n  ITEM        : '.carousel-item',\n  ITEM_IMG    : '.carousel-item img',\n  NEXT_PREV   : '.carousel-item-next, .carousel-item-prev',\n  INDICATORS  : '.carousel-indicators',\n  DATA_SLIDE  : '[data-slide], [data-slide-to]',\n  DATA_RIDE   : '[data-ride=\"carousel\"]'\n}\n\nconst PointerType = {\n  TOUCH : 'touch',\n  PEN   : 'pen'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nclass Carousel {\n  constructor(element, config) {\n    this._items         = null\n    this._interval      = null\n    this._activeElement = null\n    this._isPaused      = false\n    this._isSliding     = false\n    this.touchTimeout   = null\n    this.touchStartX    = 0\n    this.touchDeltaX    = 0\n\n    this._config            = this._getConfig(config)\n    this._element           = element\n    this._indicatorsElement = this._element.querySelector(Selector.INDICATORS)\n    this._touchSupported    = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0\n    this._pointerEvent      = Boolean(window.PointerEvent || window.MSPointerEvent)\n\n    this._addEventListeners()\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  next() {\n    if (!this._isSliding) {\n      this._slide(Direction.NEXT)\n    }\n  }\n\n  nextWhenVisible() {\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden &&\n      ($(this._element).is(':visible') && $(this._element).css('visibility') !== 'hidden')) {\n      this.next()\n    }\n  }\n\n  prev() {\n    if (!this._isSliding) {\n      this._slide(Direction.PREV)\n    }\n  }\n\n  pause(event) {\n    if (!event) {\n      this._isPaused = true\n    }\n\n    if (this._element.querySelector(Selector.NEXT_PREV)) {\n      Util.triggerTransitionEnd(this._element)\n      this.cycle(true)\n    }\n\n    clearInterval(this._interval)\n    this._interval = null\n  }\n\n  cycle(event) {\n    if (!event) {\n      this._isPaused = false\n    }\n\n    if (this._interval) {\n      clearInterval(this._interval)\n      this._interval = null\n    }\n\n    if (this._config.interval && !this._isPaused) {\n      this._interval = setInterval(\n        (document.visibilityState ? this.nextWhenVisible : this.next).bind(this),\n        this._config.interval\n      )\n    }\n  }\n\n  to(index) {\n    this._activeElement = this._element.querySelector(Selector.ACTIVE_ITEM)\n\n    const activeIndex = this._getItemIndex(this._activeElement)\n\n    if (index > this._items.length - 1 || index < 0) {\n      return\n    }\n\n    if (this._isSliding) {\n      $(this._element).one(Event.SLID, () => this.to(index))\n      return\n    }\n\n    if (activeIndex === index) {\n      this.pause()\n      this.cycle()\n      return\n    }\n\n    const direction = index > activeIndex\n      ? Direction.NEXT\n      : Direction.PREV\n\n    this._slide(direction, this._items[index])\n  }\n\n  dispose() {\n    $(this._element).off(EVENT_KEY)\n    $.removeData(this._element, DATA_KEY)\n\n    this._items             = null\n    this._config            = null\n    this._element           = null\n    this._interval          = null\n    this._isPaused          = null\n    this._isSliding         = null\n    this._activeElement     = null\n    this._indicatorsElement = null\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...config\n    }\n    Util.typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _handleSwipe() {\n    const absDeltax = Math.abs(this.touchDeltaX)\n\n    if (absDeltax <= SWIPE_THRESHOLD) {\n      return\n    }\n\n    const direction = absDeltax / this.touchDeltaX\n\n    this.touchDeltaX = 0\n\n    // swipe left\n    if (direction > 0) {\n      this.prev()\n    }\n\n    // swipe right\n    if (direction < 0) {\n      this.next()\n    }\n  }\n\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      $(this._element)\n        .on(Event.KEYDOWN, (event) => this._keydown(event))\n    }\n\n    if (this._config.pause === 'hover') {\n      $(this._element)\n        .on(Event.MOUSEENTER, (event) => this.pause(event))\n        .on(Event.MOUSELEAVE, (event) => this.cycle(event))\n    }\n\n    if (this._config.touch) {\n      this._addTouchEventListeners()\n    }\n  }\n\n  _addTouchEventListeners() {\n    if (!this._touchSupported) {\n      return\n    }\n\n    const start = (event) => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchStartX = event.originalEvent.clientX\n      } else if (!this._pointerEvent) {\n        this.touchStartX = event.originalEvent.touches[0].clientX\n      }\n    }\n\n    const move = (event) => {\n      // ensure swiping with one touch and not pinching\n      if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {\n        this.touchDeltaX = 0\n      } else {\n        this.touchDeltaX = event.originalEvent.touches[0].clientX - this.touchStartX\n      }\n    }\n\n    const end = (event) => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchDeltaX = event.originalEvent.clientX - this.touchStartX\n      }\n\n      this._handleSwipe()\n      if (this._config.pause === 'hover') {\n        // If it's a touch-enabled device, mouseenter/leave are fired as\n        // part of the mouse compatibility events on first tap - the carousel\n        // would stop cycling until user tapped out of it;\n        // here, we listen for touchend, explicitly pause the carousel\n        // (as if it's the second time we tap on it, mouseenter compat event\n        // is NOT fired) and after a timeout (to allow for mouse compatibility\n        // events to fire) we explicitly restart cycling\n\n        this.pause()\n        if (this.touchTimeout) {\n          clearTimeout(this.touchTimeout)\n        }\n        this.touchTimeout = setTimeout((event) => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval)\n      }\n    }\n\n    $(this._element.querySelectorAll(Selector.ITEM_IMG)).on(Event.DRAG_START, (e) => e.preventDefault())\n    if (this._pointerEvent) {\n      $(this._element).on(Event.POINTERDOWN, (event) => start(event))\n      $(this._element).on(Event.POINTERUP, (event) => end(event))\n\n      this._element.classList.add(ClassName.POINTER_EVENT)\n    } else {\n      $(this._element).on(Event.TOUCHSTART, (event) => start(event))\n      $(this._element).on(Event.TOUCHMOVE, (event) => move(event))\n      $(this._element).on(Event.TOUCHEND, (event) => end(event))\n    }\n  }\n\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return\n    }\n\n    switch (event.which) {\n      case ARROW_LEFT_KEYCODE:\n        event.preventDefault()\n        this.prev()\n        break\n      case ARROW_RIGHT_KEYCODE:\n        event.preventDefault()\n        this.next()\n        break\n      default:\n    }\n  }\n\n  _getItemIndex(element) {\n    this._items = element && element.parentNode\n      ? [].slice.call(element.parentNode.querySelectorAll(Selector.ITEM))\n      : []\n    return this._items.indexOf(element)\n  }\n\n  _getItemByDirection(direction, activeElement) {\n    const isNextDirection = direction === Direction.NEXT\n    const isPrevDirection = direction === Direction.PREV\n    const activeIndex     = this._getItemIndex(activeElement)\n    const lastItemIndex   = this._items.length - 1\n    const isGoingToWrap   = isPrevDirection && activeIndex === 0 ||\n                            isNextDirection && activeIndex === lastItemIndex\n\n    if (isGoingToWrap && !this._config.wrap) {\n      return activeElement\n    }\n\n    const delta     = direction === Direction.PREV ? -1 : 1\n    const itemIndex = (activeIndex + delta) % this._items.length\n\n    return itemIndex === -1\n      ? this._items[this._items.length - 1] : this._items[itemIndex]\n  }\n\n  _triggerSlideEvent(relatedTarget, eventDirectionName) {\n    const targetIndex = this._getItemIndex(relatedTarget)\n    const fromIndex = this._getItemIndex(this._element.querySelector(Selector.ACTIVE_ITEM))\n    const slideEvent = $.Event(Event.SLIDE, {\n      relatedTarget,\n      direction: eventDirectionName,\n      from: fromIndex,\n      to: targetIndex\n    })\n\n    $(this._element).trigger(slideEvent)\n\n    return slideEvent\n  }\n\n  _setActiveIndicatorElement(element) {\n    if (this._indicatorsElement) {\n      const indicators = [].slice.call(this._indicatorsElement.querySelectorAll(Selector.ACTIVE))\n      $(indicators)\n        .removeClass(ClassName.ACTIVE)\n\n      const nextIndicator = this._indicatorsElement.children[\n        this._getItemIndex(element)\n      ]\n\n      if (nextIndicator) {\n        $(nextIndicator).addClass(ClassName.ACTIVE)\n      }\n    }\n  }\n\n  _slide(direction, element) {\n    const activeElement = this._element.querySelector(Selector.ACTIVE_ITEM)\n    const activeElementIndex = this._getItemIndex(activeElement)\n    const nextElement   = element || activeElement &&\n      this._getItemByDirection(direction, activeElement)\n    const nextElementIndex = this._getItemIndex(nextElement)\n    const isCycling = Boolean(this._interval)\n\n    let directionalClassName\n    let orderClassName\n    let eventDirectionName\n\n    if (direction === Direction.NEXT) {\n      directionalClassName = ClassName.LEFT\n      orderClassName = ClassName.NEXT\n      eventDirectionName = Direction.LEFT\n    } else {\n      directionalClassName = ClassName.RIGHT\n      orderClassName = ClassName.PREV\n      eventDirectionName = Direction.RIGHT\n    }\n\n    if (nextElement && $(nextElement).hasClass(ClassName.ACTIVE)) {\n      this._isSliding = false\n      return\n    }\n\n    const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName)\n    if (slideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      return\n    }\n\n    this._isSliding = true\n\n    if (isCycling) {\n      this.pause()\n    }\n\n    this._setActiveIndicatorElement(nextElement)\n\n    const slidEvent = $.Event(Event.SLID, {\n      relatedTarget: nextElement,\n      direction: eventDirectionName,\n      from: activeElementIndex,\n      to: nextElementIndex\n    })\n\n    if ($(this._element).hasClass(ClassName.SLIDE)) {\n      $(nextElement).addClass(orderClassName)\n\n      Util.reflow(nextElement)\n\n      $(activeElement).addClass(directionalClassName)\n      $(nextElement).addClass(directionalClassName)\n\n      const nextElementInterval = parseInt(nextElement.getAttribute('data-interval'), 10)\n      if (nextElementInterval) {\n        this._config.defaultInterval = this._config.defaultInterval || this._config.interval\n        this._config.interval = nextElementInterval\n      } else {\n        this._config.interval = this._config.defaultInterval || this._config.interval\n      }\n\n      const transitionDuration = Util.getTransitionDurationFromElement(activeElement)\n\n      $(activeElement)\n        .one(Util.TRANSITION_END, () => {\n          $(nextElement)\n            .removeClass(`${directionalClassName} ${orderClassName}`)\n            .addClass(ClassName.ACTIVE)\n\n          $(activeElement).removeClass(`${ClassName.ACTIVE} ${orderClassName} ${directionalClassName}`)\n\n          this._isSliding = false\n\n          setTimeout(() => $(this._element).trigger(slidEvent), 0)\n        })\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      $(activeElement).removeClass(ClassName.ACTIVE)\n      $(nextElement).addClass(ClassName.ACTIVE)\n\n      this._isSliding = false\n      $(this._element).trigger(slidEvent)\n    }\n\n    if (isCycling) {\n      this.cycle()\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      let _config = {\n        ...Default,\n        ...$(this).data()\n      }\n\n      if (typeof config === 'object') {\n        _config = {\n          ..._config,\n          ...config\n        }\n      }\n\n      const action = typeof config === 'string' ? config : _config.slide\n\n      if (!data) {\n        data = new Carousel(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'number') {\n        data.to(config)\n      } else if (typeof action === 'string') {\n        if (typeof data[action] === 'undefined') {\n          throw new TypeError(`No method named \"${action}\"`)\n        }\n        data[action]()\n      } else if (_config.interval && _config.ride) {\n        data.pause()\n        data.cycle()\n      }\n    })\n  }\n\n  static _dataApiClickHandler(event) {\n    const selector = Util.getSelectorFromElement(this)\n\n    if (!selector) {\n      return\n    }\n\n    const target = $(selector)[0]\n\n    if (!target || !$(target).hasClass(ClassName.CAROUSEL)) {\n      return\n    }\n\n    const config = {\n      ...$(target).data(),\n      ...$(this).data()\n    }\n    const slideIndex = this.getAttribute('data-slide-to')\n\n    if (slideIndex) {\n      config.interval = false\n    }\n\n    Carousel._jQueryInterface.call($(target), config)\n\n    if (slideIndex) {\n      $(target).data(DATA_KEY).to(slideIndex)\n    }\n\n    event.preventDefault()\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document)\n  .on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler)\n\n$(window).on(Event.LOAD_DATA_API, () => {\n  const carousels = [].slice.call(document.querySelectorAll(Selector.DATA_RIDE))\n  for (let i = 0, len = carousels.length; i < len; i++) {\n    const $carousel = $(carousels[i])\n    Carousel._jQueryInterface.call($carousel, $carousel.data())\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Carousel._jQueryInterface\n$.fn[NAME].Constructor = Carousel\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Carousel._jQueryInterface\n}\n\nexport default Carousel\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME                = 'collapse'\nconst VERSION             = '4.4.1'\nconst DATA_KEY            = 'bs.collapse'\nconst EVENT_KEY           = `.${DATA_KEY}`\nconst DATA_API_KEY        = '.data-api'\nconst JQUERY_NO_CONFLICT  = $.fn[NAME]\n\nconst Default = {\n  toggle : true,\n  parent : ''\n}\n\nconst DefaultType = {\n  toggle : 'boolean',\n  parent : '(string|element)'\n}\n\nconst Event = {\n  SHOW           : `show${EVENT_KEY}`,\n  SHOWN          : `shown${EVENT_KEY}`,\n  HIDE           : `hide${EVENT_KEY}`,\n  HIDDEN         : `hidden${EVENT_KEY}`,\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {\n  SHOW       : 'show',\n  COLLAPSE   : 'collapse',\n  COLLAPSING : 'collapsing',\n  COLLAPSED  : 'collapsed'\n}\n\nconst Dimension = {\n  WIDTH  : 'width',\n  HEIGHT : 'height'\n}\n\nconst Selector = {\n  ACTIVES     : '.show, .collapsing',\n  DATA_TOGGLE : '[data-toggle=\"collapse\"]'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Collapse {\n  constructor(element, config) {\n    this._isTransitioning = false\n    this._element         = element\n    this._config          = this._getConfig(config)\n    this._triggerArray    = [].slice.call(document.querySelectorAll(\n      `[data-toggle=\"collapse\"][href=\"#${element.id}\"],` +\n      `[data-toggle=\"collapse\"][data-target=\"#${element.id}\"]`\n    ))\n\n    const toggleList = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE))\n    for (let i = 0, len = toggleList.length; i < len; i++) {\n      const elem = toggleList[i]\n      const selector = Util.getSelectorFromElement(elem)\n      const filterElement = [].slice.call(document.querySelectorAll(selector))\n        .filter((foundElem) => foundElem === element)\n\n      if (selector !== null && filterElement.length > 0) {\n        this._selector = selector\n        this._triggerArray.push(elem)\n      }\n    }\n\n    this._parent = this._config.parent ? this._getParent() : null\n\n    if (!this._config.parent) {\n      this._addAriaAndCollapsedClass(this._element, this._triggerArray)\n    }\n\n    if (this._config.toggle) {\n      this.toggle()\n    }\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  toggle() {\n    if ($(this._element).hasClass(ClassName.SHOW)) {\n      this.hide()\n    } else {\n      this.show()\n    }\n  }\n\n  show() {\n    if (this._isTransitioning ||\n      $(this._element).hasClass(ClassName.SHOW)) {\n      return\n    }\n\n    let actives\n    let activesData\n\n    if (this._parent) {\n      actives = [].slice.call(this._parent.querySelectorAll(Selector.ACTIVES))\n        .filter((elem) => {\n          if (typeof this._config.parent === 'string') {\n            return elem.getAttribute('data-parent') === this._config.parent\n          }\n\n          return elem.classList.contains(ClassName.COLLAPSE)\n        })\n\n      if (actives.length === 0) {\n        actives = null\n      }\n    }\n\n    if (actives) {\n      activesData = $(actives).not(this._selector).data(DATA_KEY)\n      if (activesData && activesData._isTransitioning) {\n        return\n      }\n    }\n\n    const startEvent = $.Event(Event.SHOW)\n    $(this._element).trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) {\n      return\n    }\n\n    if (actives) {\n      Collapse._jQueryInterface.call($(actives).not(this._selector), 'hide')\n      if (!activesData) {\n        $(actives).data(DATA_KEY, null)\n      }\n    }\n\n    const dimension = this._getDimension()\n\n    $(this._element)\n      .removeClass(ClassName.COLLAPSE)\n      .addClass(ClassName.COLLAPSING)\n\n    this._element.style[dimension] = 0\n\n    if (this._triggerArray.length) {\n      $(this._triggerArray)\n        .removeClass(ClassName.COLLAPSED)\n        .attr('aria-expanded', true)\n    }\n\n    this.setTransitioning(true)\n\n    const complete = () => {\n      $(this._element)\n        .removeClass(ClassName.COLLAPSING)\n        .addClass(ClassName.COLLAPSE)\n        .addClass(ClassName.SHOW)\n\n      this._element.style[dimension] = ''\n\n      this.setTransitioning(false)\n\n      $(this._element).trigger(Event.SHOWN)\n    }\n\n    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1)\n    const scrollSize = `scroll${capitalizedDimension}`\n    const transitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n    $(this._element)\n      .one(Util.TRANSITION_END, complete)\n      .emulateTransitionEnd(transitionDuration)\n\n    this._element.style[dimension] = `${this._element[scrollSize]}px`\n  }\n\n  hide() {\n    if (this._isTransitioning ||\n      !$(this._element).hasClass(ClassName.SHOW)) {\n      return\n    }\n\n    const startEvent = $.Event(Event.HIDE)\n    $(this._element).trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) {\n      return\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`\n\n    Util.reflow(this._element)\n\n    $(this._element)\n      .addClass(ClassName.COLLAPSING)\n      .removeClass(ClassName.COLLAPSE)\n      .removeClass(ClassName.SHOW)\n\n    const triggerArrayLength = this._triggerArray.length\n    if (triggerArrayLength > 0) {\n      for (let i = 0; i < triggerArrayLength; i++) {\n        const trigger = this._triggerArray[i]\n        const selector = Util.getSelectorFromElement(trigger)\n\n        if (selector !== null) {\n          const $elem = $([].slice.call(document.querySelectorAll(selector)))\n          if (!$elem.hasClass(ClassName.SHOW)) {\n            $(trigger).addClass(ClassName.COLLAPSED)\n              .attr('aria-expanded', false)\n          }\n        }\n      }\n    }\n\n    this.setTransitioning(true)\n\n    const complete = () => {\n      this.setTransitioning(false)\n      $(this._element)\n        .removeClass(ClassName.COLLAPSING)\n        .addClass(ClassName.COLLAPSE)\n        .trigger(Event.HIDDEN)\n    }\n\n    this._element.style[dimension] = ''\n    const transitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n    $(this._element)\n      .one(Util.TRANSITION_END, complete)\n      .emulateTransitionEnd(transitionDuration)\n  }\n\n  setTransitioning(isTransitioning) {\n    this._isTransitioning = isTransitioning\n  }\n\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n\n    this._config          = null\n    this._parent          = null\n    this._element         = null\n    this._triggerArray    = null\n    this._isTransitioning = null\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...config\n    }\n    config.toggle = Boolean(config.toggle) // Coerce string values\n    Util.typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _getDimension() {\n    const hasWidth = $(this._element).hasClass(Dimension.WIDTH)\n    return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT\n  }\n\n  _getParent() {\n    let parent\n\n    if (Util.isElement(this._config.parent)) {\n      parent = this._config.parent\n\n      // It's a jQuery object\n      if (typeof this._config.parent.jquery !== 'undefined') {\n        parent = this._config.parent[0]\n      }\n    } else {\n      parent = document.querySelector(this._config.parent)\n    }\n\n    const selector =\n      `[data-toggle=\"collapse\"][data-parent=\"${this._config.parent}\"]`\n\n    const children = [].slice.call(parent.querySelectorAll(selector))\n    $(children).each((i, element) => {\n      this._addAriaAndCollapsedClass(\n        Collapse._getTargetFromElement(element),\n        [element]\n      )\n    })\n\n    return parent\n  }\n\n  _addAriaAndCollapsedClass(element, triggerArray) {\n    const isOpen = $(element).hasClass(ClassName.SHOW)\n\n    if (triggerArray.length) {\n      $(triggerArray)\n        .toggleClass(ClassName.COLLAPSED, !isOpen)\n        .attr('aria-expanded', isOpen)\n    }\n  }\n\n  // Static\n\n  static _getTargetFromElement(element) {\n    const selector = Util.getSelectorFromElement(element)\n    return selector ? document.querySelector(selector) : null\n  }\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      const $this   = $(this)\n      let data      = $this.data(DATA_KEY)\n      const _config = {\n        ...Default,\n        ...$this.data(),\n        ...typeof config === 'object' && config ? config : {}\n      }\n\n      if (!data && _config.toggle && /show|hide/.test(config)) {\n        _config.toggle = false\n      }\n\n      if (!data) {\n        data = new Collapse(this, _config)\n        $this.data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n  if (event.currentTarget.tagName === 'A') {\n    event.preventDefault()\n  }\n\n  const $trigger = $(this)\n  const selector = Util.getSelectorFromElement(this)\n  const selectors = [].slice.call(document.querySelectorAll(selector))\n\n  $(selectors).each(function () {\n    const $target = $(this)\n    const data    = $target.data(DATA_KEY)\n    const config  = data ? 'toggle' : $trigger.data()\n    Collapse._jQueryInterface.call($target, config)\n  })\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Collapse._jQueryInterface\n$.fn[NAME].Constructor = Collapse\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Collapse._jQueryInterface\n}\n\nexport default Collapse\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): dropdown.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Popper from 'popper.js'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME                     = 'dropdown'\nconst VERSION                  = '4.4.1'\nconst DATA_KEY                 = 'bs.dropdown'\nconst EVENT_KEY                = `.${DATA_KEY}`\nconst DATA_API_KEY             = '.data-api'\nconst JQUERY_NO_CONFLICT       = $.fn[NAME]\nconst ESCAPE_KEYCODE           = 27 // KeyboardEvent.which value for Escape (Esc) key\nconst SPACE_KEYCODE            = 32 // KeyboardEvent.which value for space key\nconst TAB_KEYCODE              = 9 // KeyboardEvent.which value for tab key\nconst ARROW_UP_KEYCODE         = 38 // KeyboardEvent.which value for up arrow key\nconst ARROW_DOWN_KEYCODE       = 40 // KeyboardEvent.which value for down arrow key\nconst RIGHT_MOUSE_BUTTON_WHICH = 3 // MouseEvent.which value for the right button (assuming a right-handed mouse)\nconst REGEXP_KEYDOWN           = new RegExp(`${ARROW_UP_KEYCODE}|${ARROW_DOWN_KEYCODE}|${ESCAPE_KEYCODE}`)\n\nconst Event = {\n  HIDE             : `hide${EVENT_KEY}`,\n  HIDDEN           : `hidden${EVENT_KEY}`,\n  SHOW             : `show${EVENT_KEY}`,\n  SHOWN            : `shown${EVENT_KEY}`,\n  CLICK            : `click${EVENT_KEY}`,\n  CLICK_DATA_API   : `click${EVENT_KEY}${DATA_API_KEY}`,\n  KEYDOWN_DATA_API : `keydown${EVENT_KEY}${DATA_API_KEY}`,\n  KEYUP_DATA_API   : `keyup${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {\n  DISABLED        : 'disabled',\n  SHOW            : 'show',\n  DROPUP          : 'dropup',\n  DROPRIGHT       : 'dropright',\n  DROPLEFT        : 'dropleft',\n  MENURIGHT       : 'dropdown-menu-right',\n  MENULEFT        : 'dropdown-menu-left',\n  POSITION_STATIC : 'position-static'\n}\n\nconst Selector = {\n  DATA_TOGGLE   : '[data-toggle=\"dropdown\"]',\n  FORM_CHILD    : '.dropdown form',\n  MENU          : '.dropdown-menu',\n  NAVBAR_NAV    : '.navbar-nav',\n  VISIBLE_ITEMS : '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'\n}\n\nconst AttachmentMap = {\n  TOP       : 'top-start',\n  TOPEND    : 'top-end',\n  BOTTOM    : 'bottom-start',\n  BOTTOMEND : 'bottom-end',\n  RIGHT     : 'right-start',\n  RIGHTEND  : 'right-end',\n  LEFT      : 'left-start',\n  LEFTEND   : 'left-end'\n}\n\nconst Default = {\n  offset       : 0,\n  flip         : true,\n  boundary     : 'scrollParent',\n  reference    : 'toggle',\n  display      : 'dynamic',\n  popperConfig : null\n}\n\nconst DefaultType = {\n  offset       : '(number|string|function)',\n  flip         : 'boolean',\n  boundary     : '(string|element)',\n  reference    : '(string|element)',\n  display      : 'string',\n  popperConfig : '(null|object)'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Dropdown {\n  constructor(element, config) {\n    this._element  = element\n    this._popper   = null\n    this._config   = this._getConfig(config)\n    this._menu     = this._getMenuElement()\n    this._inNavbar = this._detectNavbar()\n\n    this._addEventListeners()\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  // Public\n\n  toggle() {\n    if (this._element.disabled || $(this._element).hasClass(ClassName.DISABLED)) {\n      return\n    }\n\n    const isActive = $(this._menu).hasClass(ClassName.SHOW)\n\n    Dropdown._clearMenus()\n\n    if (isActive) {\n      return\n    }\n\n    this.show(true)\n  }\n\n  show(usePopper = false) {\n    if (this._element.disabled || $(this._element).hasClass(ClassName.DISABLED) || $(this._menu).hasClass(ClassName.SHOW)) {\n      return\n    }\n\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n    const showEvent = $.Event(Event.SHOW, relatedTarget)\n    const parent = Dropdown._getParentFromElement(this._element)\n\n    $(parent).trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented()) {\n      return\n    }\n\n    // Disable totally Popper.js for Dropdown in Navbar\n    if (!this._inNavbar && usePopper) {\n      /**\n       * Check for Popper dependency\n       * Popper - https://popper.js.org\n       */\n      if (typeof Popper === 'undefined') {\n        throw new TypeError('Bootstrap\\'s dropdowns require Popper.js (https://popper.js.org/)')\n      }\n\n      let referenceElement = this._element\n\n      if (this._config.reference === 'parent') {\n        referenceElement = parent\n      } else if (Util.isElement(this._config.reference)) {\n        referenceElement = this._config.reference\n\n        // Check if it's jQuery element\n        if (typeof this._config.reference.jquery !== 'undefined') {\n          referenceElement = this._config.reference[0]\n        }\n      }\n\n      // If boundary is not `scrollParent`, then set position to `static`\n      // to allow the menu to \"escape\" the scroll parent's boundaries\n      // https://github.com/twbs/bootstrap/issues/24251\n      if (this._config.boundary !== 'scrollParent') {\n        $(parent).addClass(ClassName.POSITION_STATIC)\n      }\n      this._popper = new Popper(referenceElement, this._menu, this._getPopperConfig())\n    }\n\n    // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement &&\n        $(parent).closest(Selector.NAVBAR_NAV).length === 0) {\n      $(document.body).children().on('mouseover', null, $.noop)\n    }\n\n    this._element.focus()\n    this._element.setAttribute('aria-expanded', true)\n\n    $(this._menu).toggleClass(ClassName.SHOW)\n    $(parent)\n      .toggleClass(ClassName.SHOW)\n      .trigger($.Event(Event.SHOWN, relatedTarget))\n  }\n\n  hide() {\n    if (this._element.disabled || $(this._element).hasClass(ClassName.DISABLED) || !$(this._menu).hasClass(ClassName.SHOW)) {\n      return\n    }\n\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n    const hideEvent = $.Event(Event.HIDE, relatedTarget)\n    const parent = Dropdown._getParentFromElement(this._element)\n\n    $(parent).trigger(hideEvent)\n\n    if (hideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    $(this._menu).toggleClass(ClassName.SHOW)\n    $(parent)\n      .toggleClass(ClassName.SHOW)\n      .trigger($.Event(Event.HIDDEN, relatedTarget))\n  }\n\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n    $(this._element).off(EVENT_KEY)\n    this._element = null\n    this._menu = null\n    if (this._popper !== null) {\n      this._popper.destroy()\n      this._popper = null\n    }\n  }\n\n  update() {\n    this._inNavbar = this._detectNavbar()\n    if (this._popper !== null) {\n      this._popper.scheduleUpdate()\n    }\n  }\n\n  // Private\n\n  _addEventListeners() {\n    $(this._element).on(Event.CLICK, (event) => {\n      event.preventDefault()\n      event.stopPropagation()\n      this.toggle()\n    })\n  }\n\n  _getConfig(config) {\n    config = {\n      ...this.constructor.Default,\n      ...$(this._element).data(),\n      ...config\n    }\n\n    Util.typeCheckConfig(\n      NAME,\n      config,\n      this.constructor.DefaultType\n    )\n\n    return config\n  }\n\n  _getMenuElement() {\n    if (!this._menu) {\n      const parent = Dropdown._getParentFromElement(this._element)\n\n      if (parent) {\n        this._menu = parent.querySelector(Selector.MENU)\n      }\n    }\n    return this._menu\n  }\n\n  _getPlacement() {\n    const $parentDropdown = $(this._element.parentNode)\n    let placement = AttachmentMap.BOTTOM\n\n    // Handle dropup\n    if ($parentDropdown.hasClass(ClassName.DROPUP)) {\n      placement = AttachmentMap.TOP\n      if ($(this._menu).hasClass(ClassName.MENURIGHT)) {\n        placement = AttachmentMap.TOPEND\n      }\n    } else if ($parentDropdown.hasClass(ClassName.DROPRIGHT)) {\n      placement = AttachmentMap.RIGHT\n    } else if ($parentDropdown.hasClass(ClassName.DROPLEFT)) {\n      placement = AttachmentMap.LEFT\n    } else if ($(this._menu).hasClass(ClassName.MENURIGHT)) {\n      placement = AttachmentMap.BOTTOMEND\n    }\n    return placement\n  }\n\n  _detectNavbar() {\n    return $(this._element).closest('.navbar').length > 0\n  }\n\n  _getOffset() {\n    const offset = {}\n\n    if (typeof this._config.offset === 'function') {\n      offset.fn = (data) => {\n        data.offsets = {\n          ...data.offsets,\n          ...this._config.offset(data.offsets, this._element) || {}\n        }\n\n        return data\n      }\n    } else {\n      offset.offset = this._config.offset\n    }\n\n    return offset\n  }\n\n  _getPopperConfig() {\n    const popperConfig = {\n      placement: this._getPlacement(),\n      modifiers: {\n        offset: this._getOffset(),\n        flip: {\n          enabled: this._config.flip\n        },\n        preventOverflow: {\n          boundariesElement: this._config.boundary\n        }\n      }\n    }\n\n    // Disable Popper.js if we have a static display\n    if (this._config.display === 'static') {\n      popperConfig.modifiers.applyStyle = {\n        enabled: false\n      }\n    }\n\n    return {\n      ...popperConfig,\n      ...this._config.popperConfig\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      const _config = typeof config === 'object' ? config : null\n\n      if (!data) {\n        data = new Dropdown(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        data[config]()\n      }\n    })\n  }\n\n  static _clearMenus(event) {\n    if (event && (event.which === RIGHT_MOUSE_BUTTON_WHICH ||\n      event.type === 'keyup' && event.which !== TAB_KEYCODE)) {\n      return\n    }\n\n    const toggles = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE))\n\n    for (let i = 0, len = toggles.length; i < len; i++) {\n      const parent = Dropdown._getParentFromElement(toggles[i])\n      const context = $(toggles[i]).data(DATA_KEY)\n      const relatedTarget = {\n        relatedTarget: toggles[i]\n      }\n\n      if (event && event.type === 'click') {\n        relatedTarget.clickEvent = event\n      }\n\n      if (!context) {\n        continue\n      }\n\n      const dropdownMenu = context._menu\n      if (!$(parent).hasClass(ClassName.SHOW)) {\n        continue\n      }\n\n      if (event && (event.type === 'click' &&\n          /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.which === TAB_KEYCODE) &&\n          $.contains(parent, event.target)) {\n        continue\n      }\n\n      const hideEvent = $.Event(Event.HIDE, relatedTarget)\n      $(parent).trigger(hideEvent)\n      if (hideEvent.isDefaultPrevented()) {\n        continue\n      }\n\n      // If this is a touch-enabled device we remove the extra\n      // empty mouseover listeners we added for iOS support\n      if ('ontouchstart' in document.documentElement) {\n        $(document.body).children().off('mouseover', null, $.noop)\n      }\n\n      toggles[i].setAttribute('aria-expanded', 'false')\n\n      if (context._popper) {\n        context._popper.destroy()\n      }\n\n      $(dropdownMenu).removeClass(ClassName.SHOW)\n      $(parent)\n        .removeClass(ClassName.SHOW)\n        .trigger($.Event(Event.HIDDEN, relatedTarget))\n    }\n  }\n\n  static _getParentFromElement(element) {\n    let parent\n    const selector = Util.getSelectorFromElement(element)\n\n    if (selector) {\n      parent = document.querySelector(selector)\n    }\n\n    return parent || element.parentNode\n  }\n\n  // eslint-disable-next-line complexity\n  static _dataApiKeydownHandler(event) {\n    // If not input/textarea:\n    //  - And not a key in REGEXP_KEYDOWN => not a dropdown command\n    // If input/textarea:\n    //  - If space key => not a dropdown command\n    //  - If key is other than escape\n    //    - If key is not up or down => not a dropdown command\n    //    - If trigger inside the menu => not a dropdown command\n    if (/input|textarea/i.test(event.target.tagName)\n      ? event.which === SPACE_KEYCODE || event.which !== ESCAPE_KEYCODE &&\n      (event.which !== ARROW_DOWN_KEYCODE && event.which !== ARROW_UP_KEYCODE ||\n        $(event.target).closest(Selector.MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {\n      return\n    }\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {\n      return\n    }\n\n    const parent   = Dropdown._getParentFromElement(this)\n    const isActive = $(parent).hasClass(ClassName.SHOW)\n\n    if (!isActive && event.which === ESCAPE_KEYCODE) {\n      return\n    }\n\n    if (!isActive || isActive && (event.which === ESCAPE_KEYCODE || event.which === SPACE_KEYCODE)) {\n      if (event.which === ESCAPE_KEYCODE) {\n        const toggle = parent.querySelector(Selector.DATA_TOGGLE)\n        $(toggle).trigger('focus')\n      }\n\n      $(this).trigger('click')\n      return\n    }\n\n    const items = [].slice.call(parent.querySelectorAll(Selector.VISIBLE_ITEMS))\n      .filter((item) => $(item).is(':visible'))\n\n    if (items.length === 0) {\n      return\n    }\n\n    let index = items.indexOf(event.target)\n\n    if (event.which === ARROW_UP_KEYCODE && index > 0) { // Up\n      index--\n    }\n\n    if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) { // Down\n      index++\n    }\n\n    if (index < 0) {\n      index = 0\n    }\n\n    items[index].focus()\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document)\n  .on(Event.KEYDOWN_DATA_API, Selector.DATA_TOGGLE, Dropdown._dataApiKeydownHandler)\n  .on(Event.KEYDOWN_DATA_API, Selector.MENU, Dropdown._dataApiKeydownHandler)\n  .on(`${Event.CLICK_DATA_API} ${Event.KEYUP_DATA_API}`, Dropdown._clearMenus)\n  .on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n    event.preventDefault()\n    event.stopPropagation()\n    Dropdown._jQueryInterface.call($(this), 'toggle')\n  })\n  .on(Event.CLICK_DATA_API, Selector.FORM_CHILD, (e) => {\n    e.stopPropagation()\n  })\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Dropdown._jQueryInterface\n$.fn[NAME].Constructor = Dropdown\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Dropdown._jQueryInterface\n}\n\n\nexport default Dropdown\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME               = 'modal'\nconst VERSION            = '4.4.1'\nconst DATA_KEY           = 'bs.modal'\nconst EVENT_KEY          = `.${DATA_KEY}`\nconst DATA_API_KEY       = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\nconst ESCAPE_KEYCODE     = 27 // KeyboardEvent.which value for Escape (Esc) key\n\nconst Default = {\n  backdrop : true,\n  keyboard : true,\n  focus    : true,\n  show     : true\n}\n\nconst DefaultType = {\n  backdrop : '(boolean|string)',\n  keyboard : 'boolean',\n  focus    : 'boolean',\n  show     : 'boolean'\n}\n\nconst Event = {\n  HIDE              : `hide${EVENT_KEY}`,\n  HIDE_PREVENTED    : `hidePrevented${EVENT_KEY}`,\n  HIDDEN            : `hidden${EVENT_KEY}`,\n  SHOW              : `show${EVENT_KEY}`,\n  SHOWN             : `shown${EVENT_KEY}`,\n  FOCUSIN           : `focusin${EVENT_KEY}`,\n  RESIZE            : `resize${EVENT_KEY}`,\n  CLICK_DISMISS     : `click.dismiss${EVENT_KEY}`,\n  KEYDOWN_DISMISS   : `keydown.dismiss${EVENT_KEY}`,\n  MOUSEUP_DISMISS   : `mouseup.dismiss${EVENT_KEY}`,\n  MOUSEDOWN_DISMISS : `mousedown.dismiss${EVENT_KEY}`,\n  CLICK_DATA_API    : `click${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {\n  SCROLLABLE         : 'modal-dialog-scrollable',\n  SCROLLBAR_MEASURER : 'modal-scrollbar-measure',\n  BACKDROP           : 'modal-backdrop',\n  OPEN               : 'modal-open',\n  FADE               : 'fade',\n  SHOW               : 'show',\n  STATIC             : 'modal-static'\n}\n\nconst Selector = {\n  DIALOG         : '.modal-dialog',\n  MODAL_BODY     : '.modal-body',\n  DATA_TOGGLE    : '[data-toggle=\"modal\"]',\n  DATA_DISMISS   : '[data-dismiss=\"modal\"]',\n  FIXED_CONTENT  : '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT : '.sticky-top'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Modal {\n  constructor(element, config) {\n    this._config              = this._getConfig(config)\n    this._element             = element\n    this._dialog              = element.querySelector(Selector.DIALOG)\n    this._backdrop            = null\n    this._isShown             = false\n    this._isBodyOverflowing   = false\n    this._ignoreBackdropClick = false\n    this._isTransitioning     = false\n    this._scrollbarWidth      = 0\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget)\n  }\n\n  show(relatedTarget) {\n    if (this._isShown || this._isTransitioning) {\n      return\n    }\n\n    if ($(this._element).hasClass(ClassName.FADE)) {\n      this._isTransitioning = true\n    }\n\n    const showEvent = $.Event(Event.SHOW, {\n      relatedTarget\n    })\n\n    $(this._element).trigger(showEvent)\n\n    if (this._isShown || showEvent.isDefaultPrevented()) {\n      return\n    }\n\n    this._isShown = true\n\n    this._checkScrollbar()\n    this._setScrollbar()\n\n    this._adjustDialog()\n\n    this._setEscapeEvent()\n    this._setResizeEvent()\n\n    $(this._element).on(\n      Event.CLICK_DISMISS,\n      Selector.DATA_DISMISS,\n      (event) => this.hide(event)\n    )\n\n    $(this._dialog).on(Event.MOUSEDOWN_DISMISS, () => {\n      $(this._element).one(Event.MOUSEUP_DISMISS, (event) => {\n        if ($(event.target).is(this._element)) {\n          this._ignoreBackdropClick = true\n        }\n      })\n    })\n\n    this._showBackdrop(() => this._showElement(relatedTarget))\n  }\n\n  hide(event) {\n    if (event) {\n      event.preventDefault()\n    }\n\n    if (!this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const hideEvent = $.Event(Event.HIDE)\n\n    $(this._element).trigger(hideEvent)\n\n    if (!this._isShown || hideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    this._isShown = false\n    const transition = $(this._element).hasClass(ClassName.FADE)\n\n    if (transition) {\n      this._isTransitioning = true\n    }\n\n    this._setEscapeEvent()\n    this._setResizeEvent()\n\n    $(document).off(Event.FOCUSIN)\n\n    $(this._element).removeClass(ClassName.SHOW)\n\n    $(this._element).off(Event.CLICK_DISMISS)\n    $(this._dialog).off(Event.MOUSEDOWN_DISMISS)\n\n\n    if (transition) {\n      const transitionDuration  = Util.getTransitionDurationFromElement(this._element)\n\n      $(this._element)\n        .one(Util.TRANSITION_END, (event) => this._hideModal(event))\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      this._hideModal()\n    }\n  }\n\n  dispose() {\n    [window, this._element, this._dialog]\n      .forEach((htmlElement) => $(htmlElement).off(EVENT_KEY))\n\n    /**\n     * `document` has 2 events `Event.FOCUSIN` and `Event.CLICK_DATA_API`\n     * Do not move `document` in `htmlElements` array\n     * It will remove `Event.CLICK_DATA_API` event that should remain\n     */\n    $(document).off(Event.FOCUSIN)\n\n    $.removeData(this._element, DATA_KEY)\n\n    this._config              = null\n    this._element             = null\n    this._dialog              = null\n    this._backdrop            = null\n    this._isShown             = null\n    this._isBodyOverflowing   = null\n    this._ignoreBackdropClick = null\n    this._isTransitioning     = null\n    this._scrollbarWidth      = null\n  }\n\n  handleUpdate() {\n    this._adjustDialog()\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...config\n    }\n    Util.typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _triggerBackdropTransition() {\n    if (this._config.backdrop === 'static') {\n      const hideEventPrevented = $.Event(Event.HIDE_PREVENTED)\n\n      $(this._element).trigger(hideEventPrevented)\n      if (hideEventPrevented.defaultPrevented) {\n        return\n      }\n\n      this._element.classList.add(ClassName.STATIC)\n\n      const modalTransitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n      $(this._element).one(Util.TRANSITION_END, () => {\n        this._element.classList.remove(ClassName.STATIC)\n      })\n        .emulateTransitionEnd(modalTransitionDuration)\n      this._element.focus()\n    } else {\n      this.hide()\n    }\n  }\n\n  _showElement(relatedTarget) {\n    const transition = $(this._element).hasClass(ClassName.FADE)\n    const modalBody = this._dialog ? this._dialog.querySelector(Selector.MODAL_BODY) : null\n\n    if (!this._element.parentNode ||\n        this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n      // Don't move modal's DOM position\n      document.body.appendChild(this._element)\n    }\n\n    this._element.style.display = 'block'\n    this._element.removeAttribute('aria-hidden')\n    this._element.setAttribute('aria-modal', true)\n\n    if ($(this._dialog).hasClass(ClassName.SCROLLABLE) && modalBody) {\n      modalBody.scrollTop = 0\n    } else {\n      this._element.scrollTop = 0\n    }\n\n    if (transition) {\n      Util.reflow(this._element)\n    }\n\n    $(this._element).addClass(ClassName.SHOW)\n\n    if (this._config.focus) {\n      this._enforceFocus()\n    }\n\n    const shownEvent = $.Event(Event.SHOWN, {\n      relatedTarget\n    })\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._element.focus()\n      }\n      this._isTransitioning = false\n      $(this._element).trigger(shownEvent)\n    }\n\n    if (transition) {\n      const transitionDuration  = Util.getTransitionDurationFromElement(this._dialog)\n\n      $(this._dialog)\n        .one(Util.TRANSITION_END, transitionComplete)\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      transitionComplete()\n    }\n  }\n\n  _enforceFocus() {\n    $(document)\n      .off(Event.FOCUSIN) // Guard against infinite focus loop\n      .on(Event.FOCUSIN, (event) => {\n        if (document !== event.target &&\n            this._element !== event.target &&\n            $(this._element).has(event.target).length === 0) {\n          this._element.focus()\n        }\n      })\n  }\n\n  _setEscapeEvent() {\n    if (this._isShown && this._config.keyboard) {\n      $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\n        if (event.which === ESCAPE_KEYCODE) {\n          this._triggerBackdropTransition()\n        }\n      })\n    } else if (!this._isShown) {\n      $(this._element).off(Event.KEYDOWN_DISMISS)\n    }\n  }\n\n  _setResizeEvent() {\n    if (this._isShown) {\n      $(window).on(Event.RESIZE, (event) => this.handleUpdate(event))\n    } else {\n      $(window).off(Event.RESIZE)\n    }\n  }\n\n  _hideModal() {\n    this._element.style.display = 'none'\n    this._element.setAttribute('aria-hidden', true)\n    this._element.removeAttribute('aria-modal')\n    this._isTransitioning = false\n    this._showBackdrop(() => {\n      $(document.body).removeClass(ClassName.OPEN)\n      this._resetAdjustments()\n      this._resetScrollbar()\n      $(this._element).trigger(Event.HIDDEN)\n    })\n  }\n\n  _removeBackdrop() {\n    if (this._backdrop) {\n      $(this._backdrop).remove()\n      this._backdrop = null\n    }\n  }\n\n  _showBackdrop(callback) {\n    const animate = $(this._element).hasClass(ClassName.FADE)\n      ? ClassName.FADE : ''\n\n    if (this._isShown && this._config.backdrop) {\n      this._backdrop = document.createElement('div')\n      this._backdrop.className = ClassName.BACKDROP\n\n      if (animate) {\n        this._backdrop.classList.add(animate)\n      }\n\n      $(this._backdrop).appendTo(document.body)\n\n      $(this._element).on(Event.CLICK_DISMISS, (event) => {\n        if (this._ignoreBackdropClick) {\n          this._ignoreBackdropClick = false\n          return\n        }\n        if (event.target !== event.currentTarget) {\n          return\n        }\n\n        this._triggerBackdropTransition()\n      })\n\n      if (animate) {\n        Util.reflow(this._backdrop)\n      }\n\n      $(this._backdrop).addClass(ClassName.SHOW)\n\n      if (!callback) {\n        return\n      }\n\n      if (!animate) {\n        callback()\n        return\n      }\n\n      const backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop)\n\n      $(this._backdrop)\n        .one(Util.TRANSITION_END, callback)\n        .emulateTransitionEnd(backdropTransitionDuration)\n    } else if (!this._isShown && this._backdrop) {\n      $(this._backdrop).removeClass(ClassName.SHOW)\n\n      const callbackRemove = () => {\n        this._removeBackdrop()\n        if (callback) {\n          callback()\n        }\n      }\n\n      if ($(this._element).hasClass(ClassName.FADE)) {\n        const backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop)\n\n        $(this._backdrop)\n          .one(Util.TRANSITION_END, callbackRemove)\n          .emulateTransitionEnd(backdropTransitionDuration)\n      } else {\n        callbackRemove()\n      }\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // ----------------------------------------------------------------------\n  // the following methods are used to handle overflowing modals\n  // todo (fat): these should probably be refactored out of modal.js\n  // ----------------------------------------------------------------------\n\n  _adjustDialog() {\n    const isModalOverflowing =\n      this._element.scrollHeight > document.documentElement.clientHeight\n\n    if (!this._isBodyOverflowing && isModalOverflowing) {\n      this._element.style.paddingLeft = `${this._scrollbarWidth}px`\n    }\n\n    if (this._isBodyOverflowing && !isModalOverflowing) {\n      this._element.style.paddingRight = `${this._scrollbarWidth}px`\n    }\n  }\n\n  _resetAdjustments() {\n    this._element.style.paddingLeft = ''\n    this._element.style.paddingRight = ''\n  }\n\n  _checkScrollbar() {\n    const rect = document.body.getBoundingClientRect()\n    this._isBodyOverflowing = rect.left + rect.right < window.innerWidth\n    this._scrollbarWidth = this._getScrollbarWidth()\n  }\n\n  _setScrollbar() {\n    if (this._isBodyOverflowing) {\n      // Note: DOMNode.style.paddingRight returns the actual value or '' if not set\n      //   while $(DOMNode).css('padding-right') returns the calculated value or 0 if not set\n      const fixedContent = [].slice.call(document.querySelectorAll(Selector.FIXED_CONTENT))\n      const stickyContent = [].slice.call(document.querySelectorAll(Selector.STICKY_CONTENT))\n\n      // Adjust fixed content padding\n      $(fixedContent).each((index, element) => {\n        const actualPadding = element.style.paddingRight\n        const calculatedPadding = $(element).css('padding-right')\n        $(element)\n          .data('padding-right', actualPadding)\n          .css('padding-right', `${parseFloat(calculatedPadding) + this._scrollbarWidth}px`)\n      })\n\n      // Adjust sticky content margin\n      $(stickyContent).each((index, element) => {\n        const actualMargin = element.style.marginRight\n        const calculatedMargin = $(element).css('margin-right')\n        $(element)\n          .data('margin-right', actualMargin)\n          .css('margin-right', `${parseFloat(calculatedMargin) - this._scrollbarWidth}px`)\n      })\n\n      // Adjust body padding\n      const actualPadding = document.body.style.paddingRight\n      const calculatedPadding = $(document.body).css('padding-right')\n      $(document.body)\n        .data('padding-right', actualPadding)\n        .css('padding-right', `${parseFloat(calculatedPadding) + this._scrollbarWidth}px`)\n    }\n\n    $(document.body).addClass(ClassName.OPEN)\n  }\n\n  _resetScrollbar() {\n    // Restore fixed content padding\n    const fixedContent = [].slice.call(document.querySelectorAll(Selector.FIXED_CONTENT))\n    $(fixedContent).each((index, element) => {\n      const padding = $(element).data('padding-right')\n      $(element).removeData('padding-right')\n      element.style.paddingRight = padding ? padding : ''\n    })\n\n    // Restore sticky content\n    const elements = [].slice.call(document.querySelectorAll(`${Selector.STICKY_CONTENT}`))\n    $(elements).each((index, element) => {\n      const margin = $(element).data('margin-right')\n      if (typeof margin !== 'undefined') {\n        $(element).css('margin-right', margin).removeData('margin-right')\n      }\n    })\n\n    // Restore body padding\n    const padding = $(document.body).data('padding-right')\n    $(document.body).removeData('padding-right')\n    document.body.style.paddingRight = padding ? padding : ''\n  }\n\n  _getScrollbarWidth() { // thx d.walsh\n    const scrollDiv = document.createElement('div')\n    scrollDiv.className = ClassName.SCROLLBAR_MEASURER\n    document.body.appendChild(scrollDiv)\n    const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth\n    document.body.removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n  // Static\n\n  static _jQueryInterface(config, relatedTarget) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      const _config = {\n        ...Default,\n        ...$(this).data(),\n        ...typeof config === 'object' && config ? config : {}\n      }\n\n      if (!data) {\n        data = new Modal(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        data[config](relatedTarget)\n      } else if (_config.show) {\n        data.show(relatedTarget)\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n  let target\n  const selector = Util.getSelectorFromElement(this)\n\n  if (selector) {\n    target = document.querySelector(selector)\n  }\n\n  const config = $(target).data(DATA_KEY)\n    ? 'toggle' : {\n      ...$(target).data(),\n      ...$(this).data()\n    }\n\n  if (this.tagName === 'A' || this.tagName === 'AREA') {\n    event.preventDefault()\n  }\n\n  const $target = $(target).one(Event.SHOW, (showEvent) => {\n    if (showEvent.isDefaultPrevented()) {\n      // Only register focus restorer if modal will actually get shown\n      return\n    }\n\n    $target.one(Event.HIDDEN, () => {\n      if ($(this).is(':visible')) {\n        this.focus()\n      }\n    })\n  })\n\n  Modal._jQueryInterface.call($(target), config, this)\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Modal._jQueryInterface\n$.fn[NAME].Constructor = Modal\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Modal._jQueryInterface\n}\n\nexport default Modal\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): tools/sanitizer.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst uriAttrs = [\n  'background',\n  'cite',\n  'href',\n  'itemtype',\n  'longdesc',\n  'poster',\n  'src',\n  'xlink:href'\n]\n\nconst ARIA_ATTRIBUTE_PATTERN = /^aria-[\\w-]*$/i\n\nexport const DefaultWhitelist = {\n  // Global attributes allowed on any supplied element below.\n  '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],\n  a: ['target', 'href', 'title', 'rel'],\n  area: [],\n  b: [],\n  br: [],\n  col: [],\n  code: [],\n  div: [],\n  em: [],\n  hr: [],\n  h1: [],\n  h2: [],\n  h3: [],\n  h4: [],\n  h5: [],\n  h6: [],\n  i: [],\n  img: ['src', 'alt', 'title', 'width', 'height'],\n  li: [],\n  ol: [],\n  p: [],\n  pre: [],\n  s: [],\n  small: [],\n  span: [],\n  sub: [],\n  sup: [],\n  strong: [],\n  u: [],\n  ul: []\n}\n\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts\n */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi\n\n/**\n * A pattern that matches safe data URLs. Only matches image, video and audio types.\n *\n * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts\n */\nconst DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i\n\nfunction allowedAttribute(attr, allowedAttributeList) {\n  const attrName = attr.nodeName.toLowerCase()\n\n  if (allowedAttributeList.indexOf(attrName) !== -1) {\n    if (uriAttrs.indexOf(attrName) !== -1) {\n      return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))\n    }\n\n    return true\n  }\n\n  const regExp = allowedAttributeList.filter((attrRegex) => attrRegex instanceof RegExp)\n\n  // Check if a regular expression validates the attribute.\n  for (let i = 0, l = regExp.length; i < l; i++) {\n    if (attrName.match(regExp[i])) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {\n  if (unsafeHtml.length === 0) {\n    return unsafeHtml\n  }\n\n  if (sanitizeFn && typeof sanitizeFn === 'function') {\n    return sanitizeFn(unsafeHtml)\n  }\n\n  const domParser = new window.DOMParser()\n  const createdDocument = domParser.parseFromString(unsafeHtml, 'text/html')\n  const whitelistKeys = Object.keys(whiteList)\n  const elements = [].slice.call(createdDocument.body.querySelectorAll('*'))\n\n  for (let i = 0, len = elements.length; i < len; i++) {\n    const el = elements[i]\n    const elName = el.nodeName.toLowerCase()\n\n    if (whitelistKeys.indexOf(el.nodeName.toLowerCase()) === -1) {\n      el.parentNode.removeChild(el)\n\n      continue\n    }\n\n    const attributeList = [].slice.call(el.attributes)\n    const whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || [])\n\n    attributeList.forEach((attr) => {\n      if (!allowedAttribute(attr, whitelistedAttributes)) {\n        el.removeAttribute(attr.nodeName)\n      }\n    })\n  }\n\n  return createdDocument.body.innerHTML\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): tooltip.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  DefaultWhitelist,\n  sanitizeHtml\n} from './tools/sanitizer'\nimport $ from 'jquery'\nimport Popper from 'popper.js'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME                  = 'tooltip'\nconst VERSION               = '4.4.1'\nconst DATA_KEY              = 'bs.tooltip'\nconst EVENT_KEY             = `.${DATA_KEY}`\nconst JQUERY_NO_CONFLICT    = $.fn[NAME]\nconst CLASS_PREFIX          = 'bs-tooltip'\nconst BSCLS_PREFIX_REGEX    = new RegExp(`(^|\\\\s)${CLASS_PREFIX}\\\\S+`, 'g')\nconst DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn']\n\nconst DefaultType = {\n  animation         : 'boolean',\n  template          : 'string',\n  title             : '(string|element|function)',\n  trigger           : 'string',\n  delay             : '(number|object)',\n  html              : 'boolean',\n  selector          : '(string|boolean)',\n  placement         : '(string|function)',\n  offset            : '(number|string|function)',\n  container         : '(string|element|boolean)',\n  fallbackPlacement : '(string|array)',\n  boundary          : '(string|element)',\n  sanitize          : 'boolean',\n  sanitizeFn        : '(null|function)',\n  whiteList         : 'object',\n  popperConfig      : '(null|object)'\n}\n\nconst AttachmentMap = {\n  AUTO   : 'auto',\n  TOP    : 'top',\n  RIGHT  : 'right',\n  BOTTOM : 'bottom',\n  LEFT   : 'left'\n}\n\nconst Default = {\n  animation         : true,\n  template          : '<div class=\"tooltip\" role=\"tooltip\">' +\n                    '<div class=\"arrow\"></div>' +\n                    '<div class=\"tooltip-inner\"></div></div>',\n  trigger           : 'hover focus',\n  title             : '',\n  delay             : 0,\n  html              : false,\n  selector          : false,\n  placement         : 'top',\n  offset            : 0,\n  container         : false,\n  fallbackPlacement : 'flip',\n  boundary          : 'scrollParent',\n  sanitize          : true,\n  sanitizeFn        : null,\n  whiteList         : DefaultWhitelist,\n  popperConfig      : null\n}\n\nconst HoverState = {\n  SHOW : 'show',\n  OUT  : 'out'\n}\n\nconst Event = {\n  HIDE       : `hide${EVENT_KEY}`,\n  HIDDEN     : `hidden${EVENT_KEY}`,\n  SHOW       : `show${EVENT_KEY}`,\n  SHOWN      : `shown${EVENT_KEY}`,\n  INSERTED   : `inserted${EVENT_KEY}`,\n  CLICK      : `click${EVENT_KEY}`,\n  FOCUSIN    : `focusin${EVENT_KEY}`,\n  FOCUSOUT   : `focusout${EVENT_KEY}`,\n  MOUSEENTER : `mouseenter${EVENT_KEY}`,\n  MOUSELEAVE : `mouseleave${EVENT_KEY}`\n}\n\nconst ClassName = {\n  FADE : 'fade',\n  SHOW : 'show'\n}\n\nconst Selector = {\n  TOOLTIP       : '.tooltip',\n  TOOLTIP_INNER : '.tooltip-inner',\n  ARROW         : '.arrow'\n}\n\nconst Trigger = {\n  HOVER  : 'hover',\n  FOCUS  : 'focus',\n  CLICK  : 'click',\n  MANUAL : 'manual'\n}\n\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Tooltip {\n  constructor(element, config) {\n    if (typeof Popper === 'undefined') {\n      throw new TypeError('Bootstrap\\'s tooltips require Popper.js (https://popper.js.org/)')\n    }\n\n    // private\n    this._isEnabled     = true\n    this._timeout       = 0\n    this._hoverState    = ''\n    this._activeTrigger = {}\n    this._popper        = null\n\n    // Protected\n    this.element = element\n    this.config  = this._getConfig(config)\n    this.tip     = null\n\n    this._setListeners()\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  static get DATA_KEY() {\n    return DATA_KEY\n  }\n\n  static get Event() {\n    return Event\n  }\n\n  static get EVENT_KEY() {\n    return EVENT_KEY\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  // Public\n\n  enable() {\n    this._isEnabled = true\n  }\n\n  disable() {\n    this._isEnabled = false\n  }\n\n  toggleEnabled() {\n    this._isEnabled = !this._isEnabled\n  }\n\n  toggle(event) {\n    if (!this._isEnabled) {\n      return\n    }\n\n    if (event) {\n      const dataKey = this.constructor.DATA_KEY\n      let context = $(event.currentTarget).data(dataKey)\n\n      if (!context) {\n        context = new this.constructor(\n          event.currentTarget,\n          this._getDelegateConfig()\n        )\n        $(event.currentTarget).data(dataKey, context)\n      }\n\n      context._activeTrigger.click = !context._activeTrigger.click\n\n      if (context._isWithActiveTrigger()) {\n        context._enter(null, context)\n      } else {\n        context._leave(null, context)\n      }\n    } else {\n      if ($(this.getTipElement()).hasClass(ClassName.SHOW)) {\n        this._leave(null, this)\n        return\n      }\n\n      this._enter(null, this)\n    }\n  }\n\n  dispose() {\n    clearTimeout(this._timeout)\n\n    $.removeData(this.element, this.constructor.DATA_KEY)\n\n    $(this.element).off(this.constructor.EVENT_KEY)\n    $(this.element).closest('.modal').off('hide.bs.modal', this._hideModalHandler)\n\n    if (this.tip) {\n      $(this.tip).remove()\n    }\n\n    this._isEnabled     = null\n    this._timeout       = null\n    this._hoverState    = null\n    this._activeTrigger = null\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    this._popper = null\n    this.element = null\n    this.config  = null\n    this.tip     = null\n  }\n\n  show() {\n    if ($(this.element).css('display') === 'none') {\n      throw new Error('Please use show on visible elements')\n    }\n\n    const showEvent = $.Event(this.constructor.Event.SHOW)\n    if (this.isWithContent() && this._isEnabled) {\n      $(this.element).trigger(showEvent)\n\n      const shadowRoot = Util.findShadowRoot(this.element)\n      const isInTheDom = $.contains(\n        shadowRoot !== null ? shadowRoot : this.element.ownerDocument.documentElement,\n        this.element\n      )\n\n      if (showEvent.isDefaultPrevented() || !isInTheDom) {\n        return\n      }\n\n      const tip   = this.getTipElement()\n      const tipId = Util.getUID(this.constructor.NAME)\n\n      tip.setAttribute('id', tipId)\n      this.element.setAttribute('aria-describedby', tipId)\n\n      this.setContent()\n\n      if (this.config.animation) {\n        $(tip).addClass(ClassName.FADE)\n      }\n\n      const placement  = typeof this.config.placement === 'function'\n        ? this.config.placement.call(this, tip, this.element)\n        : this.config.placement\n\n      const attachment = this._getAttachment(placement)\n      this.addAttachmentClass(attachment)\n\n      const container = this._getContainer()\n      $(tip).data(this.constructor.DATA_KEY, this)\n\n      if (!$.contains(this.element.ownerDocument.documentElement, this.tip)) {\n        $(tip).appendTo(container)\n      }\n\n      $(this.element).trigger(this.constructor.Event.INSERTED)\n\n      this._popper = new Popper(this.element, tip, this._getPopperConfig(attachment))\n\n      $(tip).addClass(ClassName.SHOW)\n\n      // If this is a touch-enabled device we add extra\n      // empty mouseover listeners to the body's immediate children;\n      // only needed because of broken event delegation on iOS\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n      if ('ontouchstart' in document.documentElement) {\n        $(document.body).children().on('mouseover', null, $.noop)\n      }\n\n      const complete = () => {\n        if (this.config.animation) {\n          this._fixTransition()\n        }\n        const prevHoverState = this._hoverState\n        this._hoverState     = null\n\n        $(this.element).trigger(this.constructor.Event.SHOWN)\n\n        if (prevHoverState === HoverState.OUT) {\n          this._leave(null, this)\n        }\n      }\n\n      if ($(this.tip).hasClass(ClassName.FADE)) {\n        const transitionDuration = Util.getTransitionDurationFromElement(this.tip)\n\n        $(this.tip)\n          .one(Util.TRANSITION_END, complete)\n          .emulateTransitionEnd(transitionDuration)\n      } else {\n        complete()\n      }\n    }\n  }\n\n  hide(callback) {\n    const tip       = this.getTipElement()\n    const hideEvent = $.Event(this.constructor.Event.HIDE)\n    const complete = () => {\n      if (this._hoverState !== HoverState.SHOW && tip.parentNode) {\n        tip.parentNode.removeChild(tip)\n      }\n\n      this._cleanTipClass()\n      this.element.removeAttribute('aria-describedby')\n      $(this.element).trigger(this.constructor.Event.HIDDEN)\n      if (this._popper !== null) {\n        this._popper.destroy()\n      }\n\n      if (callback) {\n        callback()\n      }\n    }\n\n    $(this.element).trigger(hideEvent)\n\n    if (hideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    $(tip).removeClass(ClassName.SHOW)\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      $(document.body).children().off('mouseover', null, $.noop)\n    }\n\n    this._activeTrigger[Trigger.CLICK] = false\n    this._activeTrigger[Trigger.FOCUS] = false\n    this._activeTrigger[Trigger.HOVER] = false\n\n    if ($(this.tip).hasClass(ClassName.FADE)) {\n      const transitionDuration = Util.getTransitionDurationFromElement(tip)\n\n      $(tip)\n        .one(Util.TRANSITION_END, complete)\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      complete()\n    }\n\n    this._hoverState = ''\n  }\n\n  update() {\n    if (this._popper !== null) {\n      this._popper.scheduleUpdate()\n    }\n  }\n\n  // Protected\n\n  isWithContent() {\n    return Boolean(this.getTitle())\n  }\n\n  addAttachmentClass(attachment) {\n    $(this.getTipElement()).addClass(`${CLASS_PREFIX}-${attachment}`)\n  }\n\n  getTipElement() {\n    this.tip = this.tip || $(this.config.template)[0]\n    return this.tip\n  }\n\n  setContent() {\n    const tip = this.getTipElement()\n    this.setElementContent($(tip.querySelectorAll(Selector.TOOLTIP_INNER)), this.getTitle())\n    $(tip).removeClass(`${ClassName.FADE} ${ClassName.SHOW}`)\n  }\n\n  setElementContent($element, content) {\n    if (typeof content === 'object' && (content.nodeType || content.jquery)) {\n      // Content is a DOM node or a jQuery\n      if (this.config.html) {\n        if (!$(content).parent().is($element)) {\n          $element.empty().append(content)\n        }\n      } else {\n        $element.text($(content).text())\n      }\n\n      return\n    }\n\n    if (this.config.html) {\n      if (this.config.sanitize) {\n        content = sanitizeHtml(content, this.config.whiteList, this.config.sanitizeFn)\n      }\n\n      $element.html(content)\n    } else {\n      $element.text(content)\n    }\n  }\n\n  getTitle() {\n    let title = this.element.getAttribute('data-original-title')\n\n    if (!title) {\n      title = typeof this.config.title === 'function'\n        ? this.config.title.call(this.element)\n        : this.config.title\n    }\n\n    return title\n  }\n\n  // Private\n\n  _getPopperConfig(attachment) {\n    const defaultBsConfig = {\n      placement: attachment,\n      modifiers: {\n        offset: this._getOffset(),\n        flip: {\n          behavior: this.config.fallbackPlacement\n        },\n        arrow: {\n          element: Selector.ARROW\n        },\n        preventOverflow: {\n          boundariesElement: this.config.boundary\n        }\n      },\n      onCreate: (data) => {\n        if (data.originalPlacement !== data.placement) {\n          this._handlePopperPlacementChange(data)\n        }\n      },\n      onUpdate: (data) => this._handlePopperPlacementChange(data)\n    }\n\n    return {\n      ...defaultBsConfig,\n      ...this.config.popperConfig\n    }\n  }\n\n  _getOffset() {\n    const offset = {}\n\n    if (typeof this.config.offset === 'function') {\n      offset.fn = (data) => {\n        data.offsets = {\n          ...data.offsets,\n          ...this.config.offset(data.offsets, this.element) || {}\n        }\n\n        return data\n      }\n    } else {\n      offset.offset = this.config.offset\n    }\n\n    return offset\n  }\n\n  _getContainer() {\n    if (this.config.container === false) {\n      return document.body\n    }\n\n    if (Util.isElement(this.config.container)) {\n      return $(this.config.container)\n    }\n\n    return $(document).find(this.config.container)\n  }\n\n  _getAttachment(placement) {\n    return AttachmentMap[placement.toUpperCase()]\n  }\n\n  _setListeners() {\n    const triggers = this.config.trigger.split(' ')\n\n    triggers.forEach((trigger) => {\n      if (trigger === 'click') {\n        $(this.element).on(\n          this.constructor.Event.CLICK,\n          this.config.selector,\n          (event) => this.toggle(event)\n        )\n      } else if (trigger !== Trigger.MANUAL) {\n        const eventIn = trigger === Trigger.HOVER\n          ? this.constructor.Event.MOUSEENTER\n          : this.constructor.Event.FOCUSIN\n        const eventOut = trigger === Trigger.HOVER\n          ? this.constructor.Event.MOUSELEAVE\n          : this.constructor.Event.FOCUSOUT\n\n        $(this.element)\n          .on(\n            eventIn,\n            this.config.selector,\n            (event) => this._enter(event)\n          )\n          .on(\n            eventOut,\n            this.config.selector,\n            (event) => this._leave(event)\n          )\n      }\n    })\n\n    this._hideModalHandler = () => {\n      if (this.element) {\n        this.hide()\n      }\n    }\n\n    $(this.element).closest('.modal').on(\n      'hide.bs.modal',\n      this._hideModalHandler\n    )\n\n    if (this.config.selector) {\n      this.config = {\n        ...this.config,\n        trigger: 'manual',\n        selector: ''\n      }\n    } else {\n      this._fixTitle()\n    }\n  }\n\n  _fixTitle() {\n    const titleType = typeof this.element.getAttribute('data-original-title')\n\n    if (this.element.getAttribute('title') || titleType !== 'string') {\n      this.element.setAttribute(\n        'data-original-title',\n        this.element.getAttribute('title') || ''\n      )\n\n      this.element.setAttribute('title', '')\n    }\n  }\n\n  _enter(event, context) {\n    const dataKey = this.constructor.DATA_KEY\n    context = context || $(event.currentTarget).data(dataKey)\n\n    if (!context) {\n      context = new this.constructor(\n        event.currentTarget,\n        this._getDelegateConfig()\n      )\n      $(event.currentTarget).data(dataKey, context)\n    }\n\n    if (event) {\n      context._activeTrigger[\n        event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER\n      ] = true\n    }\n\n    if ($(context.getTipElement()).hasClass(ClassName.SHOW) || context._hoverState === HoverState.SHOW) {\n      context._hoverState = HoverState.SHOW\n      return\n    }\n\n    clearTimeout(context._timeout)\n\n    context._hoverState = HoverState.SHOW\n\n    if (!context.config.delay || !context.config.delay.show) {\n      context.show()\n      return\n    }\n\n    context._timeout = setTimeout(() => {\n      if (context._hoverState === HoverState.SHOW) {\n        context.show()\n      }\n    }, context.config.delay.show)\n  }\n\n  _leave(event, context) {\n    const dataKey = this.constructor.DATA_KEY\n    context = context || $(event.currentTarget).data(dataKey)\n\n    if (!context) {\n      context = new this.constructor(\n        event.currentTarget,\n        this._getDelegateConfig()\n      )\n      $(event.currentTarget).data(dataKey, context)\n    }\n\n    if (event) {\n      context._activeTrigger[\n        event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER\n      ] = false\n    }\n\n    if (context._isWithActiveTrigger()) {\n      return\n    }\n\n    clearTimeout(context._timeout)\n\n    context._hoverState = HoverState.OUT\n\n    if (!context.config.delay || !context.config.delay.hide) {\n      context.hide()\n      return\n    }\n\n    context._timeout = setTimeout(() => {\n      if (context._hoverState === HoverState.OUT) {\n        context.hide()\n      }\n    }, context.config.delay.hide)\n  }\n\n  _isWithActiveTrigger() {\n    for (const trigger in this._activeTrigger) {\n      if (this._activeTrigger[trigger]) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  _getConfig(config) {\n    const dataAttributes = $(this.element).data()\n\n    Object.keys(dataAttributes)\n      .forEach((dataAttr) => {\n        if (DISALLOWED_ATTRIBUTES.indexOf(dataAttr) !== -1) {\n          delete dataAttributes[dataAttr]\n        }\n      })\n\n    config = {\n      ...this.constructor.Default,\n      ...dataAttributes,\n      ...typeof config === 'object' && config ? config : {}\n    }\n\n    if (typeof config.delay === 'number') {\n      config.delay = {\n        show: config.delay,\n        hide: config.delay\n      }\n    }\n\n    if (typeof config.title === 'number') {\n      config.title = config.title.toString()\n    }\n\n    if (typeof config.content === 'number') {\n      config.content = config.content.toString()\n    }\n\n    Util.typeCheckConfig(\n      NAME,\n      config,\n      this.constructor.DefaultType\n    )\n\n    if (config.sanitize) {\n      config.template = sanitizeHtml(config.template, config.whiteList, config.sanitizeFn)\n    }\n\n    return config\n  }\n\n  _getDelegateConfig() {\n    const config = {}\n\n    if (this.config) {\n      for (const key in this.config) {\n        if (this.constructor.Default[key] !== this.config[key]) {\n          config[key] = this.config[key]\n        }\n      }\n    }\n\n    return config\n  }\n\n  _cleanTipClass() {\n    const $tip = $(this.getTipElement())\n    const tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX)\n    if (tabClass !== null && tabClass.length) {\n      $tip.removeClass(tabClass.join(''))\n    }\n  }\n\n  _handlePopperPlacementChange(popperData) {\n    const popperInstance = popperData.instance\n    this.tip = popperInstance.popper\n    this._cleanTipClass()\n    this.addAttachmentClass(this._getAttachment(popperData.placement))\n  }\n\n  _fixTransition() {\n    const tip = this.getTipElement()\n    const initConfigAnimation = this.config.animation\n\n    if (tip.getAttribute('x-placement') !== null) {\n      return\n    }\n\n    $(tip).removeClass(ClassName.FADE)\n    this.config.animation = false\n    this.hide()\n    this.show()\n    this.config.animation = initConfigAnimation\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      const _config = typeof config === 'object' && config\n\n      if (!data && /dispose|hide/.test(config)) {\n        return\n      }\n\n      if (!data) {\n        data = new Tooltip(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Tooltip._jQueryInterface\n$.fn[NAME].Constructor = Tooltip\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Tooltip._jQueryInterface\n}\n\nexport default Tooltip\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Tooltip from './tooltip'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME                = 'popover'\nconst VERSION             = '4.4.1'\nconst DATA_KEY            = 'bs.popover'\nconst EVENT_KEY           = `.${DATA_KEY}`\nconst JQUERY_NO_CONFLICT  = $.fn[NAME]\nconst CLASS_PREFIX        = 'bs-popover'\nconst BSCLS_PREFIX_REGEX  = new RegExp(`(^|\\\\s)${CLASS_PREFIX}\\\\S+`, 'g')\n\nconst Default = {\n  ...Tooltip.Default,\n  placement : 'right',\n  trigger   : 'click',\n  content   : '',\n  template  : '<div class=\"popover\" role=\"tooltip\">' +\n              '<div class=\"arrow\"></div>' +\n              '<h3 class=\"popover-header\"></h3>' +\n              '<div class=\"popover-body\"></div></div>'\n}\n\nconst DefaultType = {\n  ...Tooltip.DefaultType,\n  content : '(string|element|function)'\n}\n\nconst ClassName = {\n  FADE : 'fade',\n  SHOW : 'show'\n}\n\nconst Selector = {\n  TITLE   : '.popover-header',\n  CONTENT : '.popover-body'\n}\n\nconst Event = {\n  HIDE       : `hide${EVENT_KEY}`,\n  HIDDEN     : `hidden${EVENT_KEY}`,\n  SHOW       : `show${EVENT_KEY}`,\n  SHOWN      : `shown${EVENT_KEY}`,\n  INSERTED   : `inserted${EVENT_KEY}`,\n  CLICK      : `click${EVENT_KEY}`,\n  FOCUSIN    : `focusin${EVENT_KEY}`,\n  FOCUSOUT   : `focusout${EVENT_KEY}`,\n  MOUSEENTER : `mouseenter${EVENT_KEY}`,\n  MOUSELEAVE : `mouseleave${EVENT_KEY}`\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Popover extends Tooltip {\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  static get DATA_KEY() {\n    return DATA_KEY\n  }\n\n  static get Event() {\n    return Event\n  }\n\n  static get EVENT_KEY() {\n    return EVENT_KEY\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  // Overrides\n\n  isWithContent() {\n    return this.getTitle() || this._getContent()\n  }\n\n  addAttachmentClass(attachment) {\n    $(this.getTipElement()).addClass(`${CLASS_PREFIX}-${attachment}`)\n  }\n\n  getTipElement() {\n    this.tip = this.tip || $(this.config.template)[0]\n    return this.tip\n  }\n\n  setContent() {\n    const $tip = $(this.getTipElement())\n\n    // We use append for html objects to maintain js events\n    this.setElementContent($tip.find(Selector.TITLE), this.getTitle())\n    let content = this._getContent()\n    if (typeof content === 'function') {\n      content = content.call(this.element)\n    }\n    this.setElementContent($tip.find(Selector.CONTENT), content)\n\n    $tip.removeClass(`${ClassName.FADE} ${ClassName.SHOW}`)\n  }\n\n  // Private\n\n  _getContent() {\n    return this.element.getAttribute('data-content') ||\n      this.config.content\n  }\n\n  _cleanTipClass() {\n    const $tip = $(this.getTipElement())\n    const tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX)\n    if (tabClass !== null && tabClass.length > 0) {\n      $tip.removeClass(tabClass.join(''))\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      const _config = typeof config === 'object' ? config : null\n\n      if (!data && /dispose|hide/.test(config)) {\n        return\n      }\n\n      if (!data) {\n        data = new Popover(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Popover._jQueryInterface\n$.fn[NAME].Constructor = Popover\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Popover._jQueryInterface\n}\n\nexport default Popover\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME               = 'scrollspy'\nconst VERSION            = '4.4.1'\nconst DATA_KEY           = 'bs.scrollspy'\nconst EVENT_KEY          = `.${DATA_KEY}`\nconst DATA_API_KEY       = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst Default = {\n  offset : 10,\n  method : 'auto',\n  target : ''\n}\n\nconst DefaultType = {\n  offset : 'number',\n  method : 'string',\n  target : '(string|element)'\n}\n\nconst Event = {\n  ACTIVATE      : `activate${EVENT_KEY}`,\n  SCROLL        : `scroll${EVENT_KEY}`,\n  LOAD_DATA_API : `load${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {\n  DROPDOWN_ITEM : 'dropdown-item',\n  DROPDOWN_MENU : 'dropdown-menu',\n  ACTIVE        : 'active'\n}\n\nconst Selector = {\n  DATA_SPY        : '[data-spy=\"scroll\"]',\n  ACTIVE          : '.active',\n  NAV_LIST_GROUP  : '.nav, .list-group',\n  NAV_LINKS       : '.nav-link',\n  NAV_ITEMS       : '.nav-item',\n  LIST_ITEMS      : '.list-group-item',\n  DROPDOWN        : '.dropdown',\n  DROPDOWN_ITEMS  : '.dropdown-item',\n  DROPDOWN_TOGGLE : '.dropdown-toggle'\n}\n\nconst OffsetMethod = {\n  OFFSET   : 'offset',\n  POSITION : 'position'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass ScrollSpy {\n  constructor(element, config) {\n    this._element       = element\n    this._scrollElement = element.tagName === 'BODY' ? window : element\n    this._config        = this._getConfig(config)\n    this._selector      = `${this._config.target} ${Selector.NAV_LINKS},` +\n                          `${this._config.target} ${Selector.LIST_ITEMS},` +\n                          `${this._config.target} ${Selector.DROPDOWN_ITEMS}`\n    this._offsets       = []\n    this._targets       = []\n    this._activeTarget  = null\n    this._scrollHeight  = 0\n\n    $(this._scrollElement).on(Event.SCROLL, (event) => this._process(event))\n\n    this.refresh()\n    this._process()\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  refresh() {\n    const autoMethod = this._scrollElement === this._scrollElement.window\n      ? OffsetMethod.OFFSET : OffsetMethod.POSITION\n\n    const offsetMethod = this._config.method === 'auto'\n      ? autoMethod : this._config.method\n\n    const offsetBase = offsetMethod === OffsetMethod.POSITION\n      ? this._getScrollTop() : 0\n\n    this._offsets = []\n    this._targets = []\n\n    this._scrollHeight = this._getScrollHeight()\n\n    const targets = [].slice.call(document.querySelectorAll(this._selector))\n\n    targets\n      .map((element) => {\n        let target\n        const targetSelector = Util.getSelectorFromElement(element)\n\n        if (targetSelector) {\n          target = document.querySelector(targetSelector)\n        }\n\n        if (target) {\n          const targetBCR = target.getBoundingClientRect()\n          if (targetBCR.width || targetBCR.height) {\n            // TODO (fat): remove sketch reliance on jQuery position/offset\n            return [\n              $(target)[offsetMethod]().top + offsetBase,\n              targetSelector\n            ]\n          }\n        }\n        return null\n      })\n      .filter((item) => item)\n      .sort((a, b) => a[0] - b[0])\n      .forEach((item) => {\n        this._offsets.push(item[0])\n        this._targets.push(item[1])\n      })\n  }\n\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n    $(this._scrollElement).off(EVENT_KEY)\n\n    this._element       = null\n    this._scrollElement = null\n    this._config        = null\n    this._selector      = null\n    this._offsets       = null\n    this._targets       = null\n    this._activeTarget  = null\n    this._scrollHeight  = null\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...typeof config === 'object' && config ? config : {}\n    }\n\n    if (typeof config.target !== 'string') {\n      let id = $(config.target).attr('id')\n      if (!id) {\n        id = Util.getUID(NAME)\n        $(config.target).attr('id', id)\n      }\n      config.target = `#${id}`\n    }\n\n    Util.typeCheckConfig(NAME, config, DefaultType)\n\n    return config\n  }\n\n  _getScrollTop() {\n    return this._scrollElement === window\n      ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop\n  }\n\n  _getScrollHeight() {\n    return this._scrollElement.scrollHeight || Math.max(\n      document.body.scrollHeight,\n      document.documentElement.scrollHeight\n    )\n  }\n\n  _getOffsetHeight() {\n    return this._scrollElement === window\n      ? window.innerHeight : this._scrollElement.getBoundingClientRect().height\n  }\n\n  _process() {\n    const scrollTop    = this._getScrollTop() + this._config.offset\n    const scrollHeight = this._getScrollHeight()\n    const maxScroll    = this._config.offset +\n      scrollHeight -\n      this._getOffsetHeight()\n\n    if (this._scrollHeight !== scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      const target = this._targets[this._targets.length - 1]\n\n      if (this._activeTarget !== target) {\n        this._activate(target)\n      }\n      return\n    }\n\n    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\n      this._activeTarget = null\n      this._clear()\n      return\n    }\n\n    const offsetLength = this._offsets.length\n    for (let i = offsetLength; i--;) {\n      const isActiveTarget = this._activeTarget !== this._targets[i] &&\n          scrollTop >= this._offsets[i] &&\n          (typeof this._offsets[i + 1] === 'undefined' ||\n              scrollTop < this._offsets[i + 1])\n\n      if (isActiveTarget) {\n        this._activate(this._targets[i])\n      }\n    }\n  }\n\n  _activate(target) {\n    this._activeTarget = target\n\n    this._clear()\n\n    const queries = this._selector\n      .split(',')\n      .map((selector) => `${selector}[data-target=\"${target}\"],${selector}[href=\"${target}\"]`)\n\n    const $link = $([].slice.call(document.querySelectorAll(queries.join(','))))\n\n    if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {\n      $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE)\n      $link.addClass(ClassName.ACTIVE)\n    } else {\n      // Set triggered link as active\n      $link.addClass(ClassName.ACTIVE)\n      // Set triggered links parents as active\n      // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n      $link.parents(Selector.NAV_LIST_GROUP).prev(`${Selector.NAV_LINKS}, ${Selector.LIST_ITEMS}`).addClass(ClassName.ACTIVE)\n      // Handle special case when .nav-link is inside .nav-item\n      $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_ITEMS).children(Selector.NAV_LINKS).addClass(ClassName.ACTIVE)\n    }\n\n    $(this._scrollElement).trigger(Event.ACTIVATE, {\n      relatedTarget: target\n    })\n  }\n\n  _clear() {\n    [].slice.call(document.querySelectorAll(this._selector))\n      .filter((node) => node.classList.contains(ClassName.ACTIVE))\n      .forEach((node) => node.classList.remove(ClassName.ACTIVE))\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      const _config = typeof config === 'object' && config\n\n      if (!data) {\n        data = new ScrollSpy(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(window).on(Event.LOAD_DATA_API, () => {\n  const scrollSpys = [].slice.call(document.querySelectorAll(Selector.DATA_SPY))\n  const scrollSpysLength = scrollSpys.length\n\n  for (let i = scrollSpysLength; i--;) {\n    const $spy = $(scrollSpys[i])\n    ScrollSpy._jQueryInterface.call($spy, $spy.data())\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = ScrollSpy._jQueryInterface\n$.fn[NAME].Constructor = ScrollSpy\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return ScrollSpy._jQueryInterface\n}\n\nexport default ScrollSpy\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.4.1): tab.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME               = 'tab'\nconst VERSION            = '4.4.1'\nconst DATA_KEY           = 'bs.tab'\nconst EVENT_KEY          = `.${DATA_KEY}`\nconst DATA_API_KEY       = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst Event = {\n  HIDE           : `hide${EVENT_KEY}`,\n  HIDDEN         : `hidden${EVENT_KEY}`,\n  SHOW           : `show${EVENT_KEY}`,\n  SHOWN          : `shown${EVENT_KEY}`,\n  CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {\n  DROPDOWN_MENU : 'dropdown-menu',\n  ACTIVE        : 'active',\n  DISABLED      : 'disabled',\n  FADE          : 'fade',\n  SHOW          : 'show'\n}\n\nconst Selector = {\n  DROPDOWN              : '.dropdown',\n  NAV_LIST_GROUP        : '.nav, .list-group',\n  ACTIVE                : '.active',\n  ACTIVE_UL             : '> li > .active',\n  DATA_TOGGLE           : '[data-toggle=\"tab\"], [data-toggle=\"pill\"], [data-toggle=\"list\"]',\n  DROPDOWN_TOGGLE       : '.dropdown-toggle',\n  DROPDOWN_ACTIVE_CHILD : '> .dropdown-menu .active'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Tab {\n  constructor(element) {\n    this._element = element\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  // Public\n\n  show() {\n    if (this._element.parentNode &&\n        this._element.parentNode.nodeType === Node.ELEMENT_NODE &&\n        $(this._element).hasClass(ClassName.ACTIVE) ||\n        $(this._element).hasClass(ClassName.DISABLED)) {\n      return\n    }\n\n    let target\n    let previous\n    const listElement = $(this._element).closest(Selector.NAV_LIST_GROUP)[0]\n    const selector = Util.getSelectorFromElement(this._element)\n\n    if (listElement) {\n      const itemSelector = listElement.nodeName === 'UL' || listElement.nodeName === 'OL' ? Selector.ACTIVE_UL : Selector.ACTIVE\n      previous = $.makeArray($(listElement).find(itemSelector))\n      previous = previous[previous.length - 1]\n    }\n\n    const hideEvent = $.Event(Event.HIDE, {\n      relatedTarget: this._element\n    })\n\n    const showEvent = $.Event(Event.SHOW, {\n      relatedTarget: previous\n    })\n\n    if (previous) {\n      $(previous).trigger(hideEvent)\n    }\n\n    $(this._element).trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() ||\n        hideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    if (selector) {\n      target = document.querySelector(selector)\n    }\n\n    this._activate(\n      this._element,\n      listElement\n    )\n\n    const complete = () => {\n      const hiddenEvent = $.Event(Event.HIDDEN, {\n        relatedTarget: this._element\n      })\n\n      const shownEvent = $.Event(Event.SHOWN, {\n        relatedTarget: previous\n      })\n\n      $(previous).trigger(hiddenEvent)\n      $(this._element).trigger(shownEvent)\n    }\n\n    if (target) {\n      this._activate(target, target.parentNode, complete)\n    } else {\n      complete()\n    }\n  }\n\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n    this._element = null\n  }\n\n  // Private\n\n  _activate(element, container, callback) {\n    const activeElements = container && (container.nodeName === 'UL' || container.nodeName === 'OL')\n      ? $(container).find(Selector.ACTIVE_UL)\n      : $(container).children(Selector.ACTIVE)\n\n    const active = activeElements[0]\n    const isTransitioning = callback && (active && $(active).hasClass(ClassName.FADE))\n    const complete = () => this._transitionComplete(\n      element,\n      active,\n      callback\n    )\n\n    if (active && isTransitioning) {\n      const transitionDuration = Util.getTransitionDurationFromElement(active)\n\n      $(active)\n        .removeClass(ClassName.SHOW)\n        .one(Util.TRANSITION_END, complete)\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      complete()\n    }\n  }\n\n  _transitionComplete(element, active, callback) {\n    if (active) {\n      $(active).removeClass(ClassName.ACTIVE)\n\n      const dropdownChild = $(active.parentNode).find(\n        Selector.DROPDOWN_ACTIVE_CHILD\n      )[0]\n\n      if (dropdownChild) {\n        $(dropdownChild).removeClass(ClassName.ACTIVE)\n      }\n\n      if (active.getAttribute('role') === 'tab') {\n        active.setAttribute('aria-selected', false)\n      }\n    }\n\n    $(element).addClass(ClassName.ACTIVE)\n    if (element.getAttribute('role') === 'tab') {\n      element.setAttribute('aria-selected', true)\n    }\n\n    Util.reflow(element)\n\n    if (element.classList.contains(ClassName.FADE)) {\n      element.classList.add(ClassName.SHOW)\n    }\n\n    if (element.parentNode && $(element.parentNode).hasClass(ClassName.DROPDOWN_MENU)) {\n      const dropdownElement = $(element).closest(Selector.DROPDOWN)[0]\n\n      if (dropdownElement) {\n        const dropdownToggleList = [].slice.call(dropdownElement.querySelectorAll(Selector.DROPDOWN_TOGGLE))\n\n        $(dropdownToggleList).addClass(ClassName.ACTIVE)\n      }\n\n      element.setAttribute('aria-expanded', true)\n    }\n\n    if (callback) {\n      callback()\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      const $this = $(this)\n      let data = $this.data(DATA_KEY)\n\n      if (!data) {\n        data = new Tab(this)\n        $this.data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document)\n  .on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n    event.preventDefault()\n    Tab._jQueryInterface.call($(this), 'show')\n  })\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Tab._jQueryInterface\n$.fn[NAME].Constructor = Tab\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Tab._jQueryInterface\n}\n\nexport default Tab\n","module.exports = {\n  STATIC_PATH: __dirname,\n};\n","(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module\n    define(['jquery'], factory);\n  } else if (typeof exports === 'object') {\n    // Node/CommonJS\n    module.exports = factory(require('jquery'));\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n})(function ($) {\n  var DropdownSubmenu =\n  /*#__PURE__*/\n  function () {\n    function DropdownSubmenu(element) {\n      this.element = element.parentElement;\n      this.menuElement = this.element.querySelector('.dropdown-menu');\n      this.init();\n    }\n\n    var _proto = DropdownSubmenu.prototype;\n\n    _proto.init = function init() {\n      var _this = this;\n\n      $(this.element).off('keydown.bs.dropdown.data-api');\n      this.menuElement.addEventListener('keydown', this.itemKeydown.bind(this));\n      var dropdownItemNodeList = this.menuElement.querySelectorAll('.dropdown-item');\n      Array.from(dropdownItemNodeList).forEach(function (element) {\n        element.addEventListener('keydown', _this.handleKeydownDropdownItem.bind(_this));\n      });\n      $(this.menuElement).on('keydown', '.dropdown-submenu > .dropdown-item', this.handleKeydownSubmenuDropdownItem.bind(this));\n      $(this.menuElement).on('click', '.dropdown-submenu > .dropdown-item', this.handleClickSubmenuDropdownItem.bind(this));\n      $(this.element).on('hidden.bs.dropdown', function () {\n        _this.close(_this.menuElement);\n      });\n    };\n\n    _proto.handleKeydownDropdownItem = function handleKeydownDropdownItem(event) {\n      // 27: Esc\n      if (event.keyCode !== 27) {\n        return;\n      }\n\n      event.target.closest('.dropdown-menu').previousElementSibling.focus();\n      event.target.closest('.dropdown-menu').classList.remove('show');\n    };\n\n    _proto.handleKeydownSubmenuDropdownItem = function handleKeydownSubmenuDropdownItem(event) {\n      // 32: Spacebar\n      if (event.keyCode !== 32) {\n        return;\n      } // NOTE: Off vertical scrolling\n\n\n      event.preventDefault();\n      this.toggle(event.target);\n    };\n\n    _proto.handleClickSubmenuDropdownItem = function handleClickSubmenuDropdownItem(event) {\n      event.stopPropagation();\n      this.toggle(event.target);\n    };\n\n    _proto.itemKeydown = function itemKeydown(event) {\n      // 38: Arrow up, 40: Arrow down\n      if (![38, 40].includes(event.keyCode)) {\n        return;\n      } // NOTE: Off vertical scrolling\n\n\n      event.preventDefault();\n      event.stopPropagation();\n      var itemNodeList = this.element.querySelectorAll('.show > .dropdown-item:not(:disabled):not(.disabled), .show > .dropdown > .dropdown-item');\n      var index = Array.from(itemNodeList).indexOf(event.target);\n\n      if (event.keyCode === 38 && index !== 0) {\n        index--;\n      } else if (event.keyCode === 40 && index !== itemNodeList.length - 1) {\n        index++;\n      } else {\n        return;\n      }\n\n      itemNodeList[index].focus();\n    };\n\n    _proto.toggle = function toggle(element) {\n      var dropdownElement = element.closest('.dropdown');\n      var parentMenuElement = dropdownElement.closest('.dropdown-menu');\n      var menuElement = dropdownElement.querySelector('.dropdown-menu');\n      var isOpen = menuElement.classList.contains('show');\n      this.close(parentMenuElement);\n      menuElement.classList.toggle('show', !isOpen);\n    };\n\n    _proto.close = function close(menuElement) {\n      var menuNodeList = menuElement.querySelectorAll('.dropdown-menu.show');\n      Array.from(menuNodeList).forEach(function (element) {\n        element.classList.remove('show');\n      });\n    };\n\n    return DropdownSubmenu;\n  }(); // For AMD/Node/CommonJS used elements (optional)\n  // http://learn.jquery.com/jquery-ui/environments/amd/\n\n\n  $.fn.submenupicker = function (elements) {\n    var $elements = this instanceof $ ? this : $(elements);\n    return $elements.each(function () {\n      var data = $.data(this, 'bs.submenu');\n\n      if (!data) {\n        data = new DropdownSubmenu(this);\n        $.data(this, 'bs.submenu', data);\n      }\n    });\n  };\n\n  return DropdownSubmenu;\n});","require(\"./component/AmplitudeEnvelope\");\nrequire(\"./component/Analyser\");\nrequire(\"./component/Channel\");\nrequire(\"./component/Compressor\");\nrequire(\"./component/CrossFade\");\nrequire(\"./component/Envelope\");\nrequire(\"./component/EQ3\");\nrequire(\"./component/FeedbackCombFilter\");\nrequire(\"./component/FFT\");\nrequire(\"./component/Filter\");\nrequire(\"./component/Follower\");\nrequire(\"./component/FrequencyEnvelope\");\nrequire(\"./component/Gate\");\nrequire(\"./component/LFO\");\nrequire(\"./component/Limiter\");\nrequire(\"./component/LowpassCombFilter\");\nrequire(\"./component/Merge\");\nrequire(\"./component/Meter\");\nrequire(\"./component/MidSideCompressor\");\nrequire(\"./component/MidSideMerge\");\nrequire(\"./component/MidSideSplit\");\nrequire(\"./component/Mono\");\nrequire(\"./component/MultibandCompressor\");\nrequire(\"./component/MultibandSplit\");\nrequire(\"./component/Panner\");\nrequire(\"./component/Panner3D\");\nrequire(\"./component/PanVol\");\nrequire(\"./component/ScaledEnvelope\");\nrequire(\"./component/Solo\");\nrequire(\"./component/Split\");\nrequire(\"./component/Volume\");\nrequire(\"./component/Waveform\");\nrequire(\"./control/CtrlInterpolate\");\nrequire(\"./control/CtrlMarkov\");\nrequire(\"./control/CtrlPattern\");\nrequire(\"./control/CtrlRandom\");\nrequire(\"./core/AudioNode\");\nrequire(\"./core/Buffer\");\nrequire(\"./core/Buffers\");\nrequire(\"./core/Bus\");\nrequire(\"./core/Clock\");\nrequire(\"./core/Context\");\nrequire(\"./core/Delay\");\nrequire(\"./core/Draw\");\nrequire(\"./core/Emitter\");\nrequire(\"./core/Gain\");\nrequire(\"./core/IntervalTimeline\");\nrequire(\"./core/Listener\");\nrequire(\"./core/Master\");\nrequire(\"./core/Offline\");\nrequire(\"./core/OfflineContext\");\nrequire(\"./core/Param\");\nrequire(\"./core/Timeline\");\nrequire(\"./core/TimelineState\");\nrequire(\"./core/Transport\");\nrequire(\"./core/TransportEvent\");\nrequire(\"./core/TransportRepeatEvent\");\nrequire(\"./effect/AutoFilter\");\nrequire(\"./effect/AutoPanner\");\nrequire(\"./effect/AutoWah\");\nrequire(\"./effect/BitCrusher\");\nrequire(\"./effect/Chebyshev\");\nrequire(\"./effect/Chorus\");\nrequire(\"./effect/Convolver\");\nrequire(\"./effect/Distortion\");\nrequire(\"./effect/Effect\");\nrequire(\"./effect/FeedbackDelay\");\nrequire(\"./effect/FeedbackEffect\");\nrequire(\"./effect/Freeverb\");\nrequire(\"./effect/JCReverb\");\nrequire(\"./effect/MidSideEffect\");\nrequire(\"./effect/Phaser\");\nrequire(\"./effect/PingPongDelay\");\nrequire(\"./effect/PitchShift\");\nrequire(\"./effect/Reverb\");\nrequire(\"./effect/StereoEffect\");\nrequire(\"./effect/StereoFeedbackEffect\");\nrequire(\"./effect/StereoWidener\");\nrequire(\"./effect/StereoXFeedbackEffect\");\nrequire(\"./effect/Tremolo\");\nrequire(\"./effect/Vibrato\");\nrequire(\"./event/Event\");\nrequire(\"./event/Loop\");\nrequire(\"./event/Part\");\nrequire(\"./event/Pattern\");\nrequire(\"./event/Sequence\");\nrequire(\"./instrument/AMSynth\");\nrequire(\"./instrument/DuoSynth\");\nrequire(\"./instrument/FMSynth\");\nrequire(\"./instrument/Instrument\");\nrequire(\"./instrument/MembraneSynth\");\nrequire(\"./instrument/MetalSynth\");\nrequire(\"./instrument/Monophonic\");\nrequire(\"./instrument/MonoSynth\");\nrequire(\"./instrument/NoiseSynth\");\nrequire(\"./instrument/PluckSynth\");\nrequire(\"./instrument/PolySynth\");\nrequire(\"./instrument/Sampler\");\nrequire(\"./instrument/Synth\");\nrequire(\"./signal/Abs\");\nrequire(\"./signal/Add\");\nrequire(\"./signal/AudioToGain\");\nrequire(\"./signal/EqualPowerGain\");\nrequire(\"./signal/GainToAudio\");\nrequire(\"./signal/GreaterThan\");\nrequire(\"./signal/GreaterThanZero\");\nrequire(\"./signal/Modulo\");\nrequire(\"./signal/Multiply\");\nrequire(\"./signal/Negate\");\nrequire(\"./signal/Normalize\");\nrequire(\"./signal/Pow\");\nrequire(\"./signal/Scale\");\nrequire(\"./signal/ScaleExp\");\nrequire(\"./signal/Signal\");\nrequire(\"./signal/SignalBase\");\nrequire(\"./signal/Subtract\");\nrequire(\"./signal/TickSignal\");\nrequire(\"./signal/TransportTimelineSignal\");\nrequire(\"./signal/WaveShaper\");\nrequire(\"./signal/Zero\");\nrequire(\"./source/AMOscillator\");\nrequire(\"./source/BufferSource\");\nrequire(\"./source/FatOscillator\");\nrequire(\"./source/FMOscillator\");\nrequire(\"./source/GrainPlayer\");\nrequire(\"./source/Noise\");\nrequire(\"./source/OmniOscillator\");\nrequire(\"./source/Oscillator\");\nrequire(\"./source/OscillatorNode\");\nrequire(\"./source/Player\");\nrequire(\"./source/Players\");\nrequire(\"./source/PulseOscillator\");\nrequire(\"./source/PWMOscillator\");\nrequire(\"./source/Source\");\nrequire(\"./source/TickSource\");\nrequire(\"./source/UserMedia\");\nrequire(\"./type/Frequency\");\nrequire(\"./type/Midi\");\nrequire(\"./type/Ticks\");\nrequire(\"./type/Time\");\nrequire(\"./type/TimeBase\");\nrequire(\"./type/TransportTime\");\nrequire(\"./type/Type\");\nmodule.exports = require(\"./core/Tone\").default;\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tone\"] = factory();\n\telse\n\t\troot[\"Tone\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 148);\n","/**\n *  Tone.js\n *  @author Yotam Mann\n *  @license http://opensource.org/licenses/MIT MIT License\n *  @copyright 2014-2019 Yotam Mann\n */\nimport version from \"../version\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tTONE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  @class  Tone is the base class of all other classes.\n *  @constructor\n */\nvar Tone = function(){\n\tif (!(this instanceof Tone)){\n\t\tthrow new Error(\"constructor needs to be called with the 'new' keyword\");\n\t}\n};\n\n/**\n *  @memberOf Tone#\n *  @returns {String} returns the name of the class as a string\n */\nTone.prototype.toString = function(){\n\tfor (var className in Tone){\n\t\tvar isLetter = className[0].match(/^[A-Z]$/);\n\t\tvar sameConstructor = Tone[className] === this.constructor;\n\t\tif (Tone.isFunction(Tone[className]) && isLetter && sameConstructor){\n\t\t\treturn className;\n\t\t}\n\t}\n\treturn \"Tone\";\n};\n\n/**\n *  @memberOf Tone#\n *  disconnect and dispose\n *  @returns {Tone} this\n */\nTone.prototype.dispose = function(){\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tGET/SET\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Set the parameters at once. Either pass in an\n *  object mapping parameters to values, or to set a\n *  single parameter, by passing in a string and value.\n *  The last argument is an optional ramp time which\n *  will ramp any signal values to their destination value\n *  over the duration of the rampTime.\n *  @param {Object|String} params\n *  @param {Number=} value\n *  @returns {Tone} this\n *  @memberOf Tone#\n *  @example\n * //set values using an object\n * filter.set({\n * \t\"frequency\" : 300,\n * \t\"type\" : highpass\n * });\n *  @example\n * filter.set(\"type\", \"highpass\");\n *  @example\n * //ramp to the value 220 over 3 seconds.\n * oscillator.set({\n * \t\"frequency\" : 220\n * }, 3);\n */\nTone.prototype.set = function(params, value){\n\tif (Tone.isString(params)){\n\t\tvar tmpObj = {};\n\t\ttmpObj[params] = value;\n\t\tparams = tmpObj;\n\t}\n\n\tparamLoop:\n\tfor (var attr in params){\n\t\tvalue = params[attr];\n\t\tvar parent = this;\n\t\tif (attr.indexOf(\".\") !== -1){\n\t\t\tvar attrSplit = attr.split(\".\");\n\t\t\tfor (var i = 0; i < attrSplit.length - 1; i++){\n\t\t\t\tparent = parent[attrSplit[i]];\n\t\t\t\tif (parent instanceof Tone){\n\t\t\t\t\tattrSplit.splice(0, i+1);\n\t\t\t\t\tvar innerParam = attrSplit.join(\".\");\n\t\t\t\t\tparent.set(innerParam, value);\n\t\t\t\t\tcontinue paramLoop;\n\t\t\t\t}\n\t\t\t}\n\t\t\tattr = attrSplit[attrSplit.length - 1];\n\t\t}\n\t\tvar param = parent[attr];\n\t\tif (Tone.isUndef(param)){\n\t\t\tcontinue;\n\t\t}\n\t\tif ((Tone.Signal && param instanceof Tone.Signal) ||\n\t\t\t(Tone.Param && param instanceof Tone.Param)){\n\t\t\tif (param.value !== value){\n\t\t\t\tparam.value = value;\n\t\t\t}\n\t\t} else if (param instanceof AudioParam){\n\t\t\tif (param.value !== value){\n\t\t\t\tparam.value = value;\n\t\t\t}\n\t\t} else if (Tone.TimeBase && param instanceof Tone.TimeBase){\n\t\t\tparent[attr] = value;\n\t\t} else if (param instanceof Tone){\n\t\t\tparam.set(value);\n\t\t} else if (param !== value){\n\t\t\tparent[attr] = value;\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Get the object's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. Pass in a single attribute to retrieve or an array\n *  of attributes. The attribute strings can also include a \".\"\n *  to access deeper properties.\n *  @memberOf Tone#\n *  @example\n * osc.get();\n * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n *  @example\n * osc.get(\"type\");\n * //returns { \"type\" : \"sine\"}\n * @example\n * //use dot notation to access deep properties\n * synth.get([\"envelope.attack\", \"envelope.release\"]);\n * //returns {\"envelope\" : {\"attack\" : 0.2, \"release\" : 0.4}}\n *  @param {Array=|string|undefined} params the parameters to get, otherwise will return\n *  \t\t\t\t\t                  all available.\n *  @returns {Object}\n */\nTone.prototype.get = function(params){\n\tif (Tone.isUndef(params)){\n\t\tparams = this._collectDefaults(this.constructor);\n\t} else if (Tone.isString(params)){\n\t\tparams = [params];\n\t}\n\tvar ret = {};\n\tfor (var i = 0; i < params.length; i++){\n\t\tvar attr = params[i];\n\t\tvar parent = this;\n\t\tvar subRet = ret;\n\t\tif (attr.indexOf(\".\") !== -1){\n\t\t\tvar attrSplit = attr.split(\".\");\n\t\t\tfor (var j = 0; j < attrSplit.length - 1; j++){\n\t\t\t\tvar subAttr = attrSplit[j];\n\t\t\t\tsubRet[subAttr] = subRet[subAttr] || {};\n\t\t\t\tsubRet = subRet[subAttr];\n\t\t\t\tparent = parent[subAttr];\n\t\t\t}\n\t\t\tattr = attrSplit[attrSplit.length - 1];\n\t\t}\n\t\tvar param = parent[attr];\n\t\tif (Tone.isObject(params[attr])){\n\t\t\tsubRet[attr] = param.get();\n\t\t} else if (Tone.Signal && param instanceof Tone.Signal){\n\t\t\tsubRet[attr] = param.value;\n\t\t} else if (Tone.Param && param instanceof Tone.Param){\n\t\t\tsubRet[attr] = param.value;\n\t\t} else if (param instanceof AudioParam){\n\t\t\tsubRet[attr] = param.value;\n\t\t} else if (param instanceof Tone){\n\t\t\tsubRet[attr] = param.get();\n\t\t} else if (!Tone.isFunction(param) && Tone.isDefined(param)){\n\t\t\tsubRet[attr] = param;\n\t\t}\n\t}\n\treturn ret;\n};\n\n/**\n *  collect all of the default attributes in one\n *  @private\n *  @param {Function} constr the constructor to find the defaults from\n *  @return {Array} all of the attributes which belong to the class\n */\nTone.prototype._collectDefaults = function(constr){\n\tvar ret = [];\n\tif (Tone.isDefined(constr.defaults)){\n\t\tret = Object.keys(constr.defaults);\n\t}\n\tif (Tone.isDefined(constr._super)){\n\t\tvar superDefs = this._collectDefaults(constr._super);\n\t\t//filter out repeats\n\t\tfor (var i = 0; i < superDefs.length; i++){\n\t\t\tif (ret.indexOf(superDefs[i]) === -1){\n\t\t\t\tret.push(superDefs[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tDEFAULTS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  @memberOf Tone\n *  @param  {Array}  values  The arguments array\n *  @param  {Array}  keys    The names of the arguments\n *  @param {Function|Object} constr The class constructor\n *  @return  {Object}  An object composed of the  defaults between the class' defaults\n *                        and the passed in arguments.\n */\nTone.defaults = function(values, keys, constr){\n\tvar options = {};\n\tif (values.length === 1 && Tone.isObject(values[0])){\n\t\toptions = values[0];\n\t} else {\n\t\tfor (var i = 0; i < keys.length; i++){\n\t\t\toptions[keys[i]] = values[i];\n\t\t}\n\t}\n\tif (Tone.isDefined(constr.defaults)){\n\t\treturn Tone.defaultArg(options, constr.defaults);\n\t} else if (Tone.isObject(constr)){\n\t\treturn Tone.defaultArg(options, constr);\n\t} else {\n\t\treturn options;\n\t}\n};\n\n/**\n *  If the `given` parameter is undefined, use the `fallback`.\n *  If both `given` and `fallback` are object literals, it will\n *  return a deep copy which includes all of the parameters from both\n *  objects. If a parameter is undefined in given, it will return\n *  the fallback property.\n *  <br><br>\n *  WARNING: if object is self referential, it will go into an an\n *  infinite recursive loop.\n *  @memberOf Tone\n *  @param  {*} given\n *  @param  {*} fallback\n *  @return {*}\n */\nTone.defaultArg = function(given, fallback){\n\tif (Tone.isObject(given) && Tone.isObject(fallback)){\n\t\tvar ret = {};\n\t\t//make a deep copy of the given object\n\t\tfor (var givenProp in given){\n\t\t\tret[givenProp] = Tone.defaultArg(fallback[givenProp], given[givenProp]);\n\t\t}\n\t\tfor (var fallbackProp in fallback){\n\t\t\tret[fallbackProp] = Tone.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n\t\t}\n\t\treturn ret;\n\t} else {\n\t\treturn Tone.isUndef(given) ? fallback : given;\n\t}\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tDEBUGGING\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Print the outputs to the console log for debugging purposes. \n *  Prints the contents only if either the object has a property\n *  called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n *  is set to the name of the class. \n *  @example\n * //prints all logs originating from Tone.OscillatorNode\n * Tone.global.TONE_DEBUG_CLASS = \"OscillatorNode\"\n *  @param {*} args Any arguments to print to the console.\n *  @private\n */\nTone.prototype.log = function(){\n\t//if the object is either set to debug = true\n\t//or if there is a string on the Tone.global.with the class name\n\tif (this.debug || this.toString() === Tone.global.TONE_DEBUG_CLASS){\n\t\tvar args = Array.from(arguments);\n\t\targs.unshift(this.toString()+\":\");\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log.apply(undefined, args);\n\t}\n};\n\n/**\n *  Assert that the statement is true, otherwise invoke the error. \n *  @param {Boolean} statement\n *  @param {String} error The message which is passed into an Error\n *  @private\n */\nTone.prototype.assert = function(statement, error){\n\tif (!statement){\n\t\tthrow new Error(error);\n\t}\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tCONNECTIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  connect together all of the arguments in series\n *  @param {...(AudioParam|Tone|AudioNode)} nodes\n *  @returns {Tone}\n *  @memberOf Tone\n *  @static\n */\nTone.connectSeries = function(){\n\tvar currentUnit = arguments[0];\n\tfor (var i = 1; i < arguments.length; i++){\n\t\tvar toUnit = arguments[i];\n\t\tTone.connect(currentUnit, toUnit);\n\t\tcurrentUnit = toUnit;\n\t}\n\treturn Tone;\n};\n\n/**\n * Connect two nodes together so that signal flows from the \n * first node to the second. The second node can be an AudioParam. \n * Optionally specific the input and output channels. \n * @param {(AudioNode|Tone.AudioNode)} srcNode The source node\n * @param {(AudioNode|Tone.AudioNode|AudioParam|Tone.AudioParam)} dstNode The destination node\n * @param {number} [outputNumber=0] The output channel of the srcNode\n * @param {number} [inputNumber=0] The input channel of the dstNode\n */\nTone.connect = function(srcNode, dstNode, outputNumber, inputNumber){\n\t\n\t//resolve the input of the dstNode\n\twhile (Tone.isDefined(dstNode.input)){\n\t\tif (Tone.isArray(dstNode.input)){\n\t\t\tinputNumber = Tone.defaultArg(inputNumber, 0);\n\t\t\tdstNode = dstNode.input[inputNumber];\n\t\t\tinputNumber = 0;\n\t\t} else if (dstNode.input){\n\t\t\tdstNode = dstNode.input;\n\t\t}\n\t}\n\n\t//make the connection\n\tif (dstNode instanceof AudioParam){\n\t\tsrcNode.connect(dstNode, outputNumber);\n\t} else if (dstNode instanceof AudioNode){\n\t\tsrcNode.connect(dstNode, outputNumber, inputNumber);\n\t}\n\n\treturn Tone;\n};\n\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param {(AudioNode|Tone.AudioNode)} srcNode The source node\n * @param {?(AudioNode|Tone.AudioNode|AudioParam|Tone.AudioParam)} dstNode The destination node\n * @param {?number} [outputNumber=0] The output channel of the srcNode\n * @param {?number} [inputNumber=0] The input channel of the dstNode\n */\nTone.disconnect = function(srcNode, dstNode, outputNumber, inputNumber){\n\tif (dstNode){\n\t\t//resolve the input of the dstNode\n\t\tvar bDone = false;\n\t\twhile (!bDone){\n\t\t\tif (Tone.isArray(dstNode.input)){\n\t\t\t\tif (Tone.isDefined(inputNumber)){\n\t\t\t\t\tTone.disconnect(srcNode, dstNode.input[inputNumber], outputNumber);\n\t\t\t\t} else {\n\t\t\t\t\tdstNode.input.forEach(function(dstNode){\n\t\t\t\t\t\t//ignore errors from connections that aren't there\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tTone.disconnect(srcNode, dstNode, outputNumber);\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbDone = true;\n\t\t\t} else if (dstNode.input){\n\t\t\t\tdstNode = dstNode.input;\n\t\t\t} else {\n\t\t\t\tbDone = true;\n\t\t\t}\n\t\t}\n\t\n\t\t//make the connection\n\t\tif (dstNode instanceof AudioParam){\n\t\t\tsrcNode.disconnect(dstNode, outputNumber);\n\t\t} else if (dstNode instanceof AudioNode){\n\t\t\tsrcNode.disconnect(dstNode, outputNumber, inputNumber);\n\t\t}\n\t} else {\n\t\tsrcNode.disconnect();\n\t}\n\n\treturn Tone;\n};\n\n///////////////////////////////////////////////////////////////////////////\n// TYPE CHECKING\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Test if the arg is undefined\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is undefined\n *  @static\n *  @memberOf Tone\n */\nTone.isUndef = function(val){\n\treturn typeof val === \"undefined\";\n};\n\n/**\n *  Test if the arg is not undefined\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is undefined\n *  @static\n *  @memberOf Tone\n */\nTone.isDefined = function(val){\n\treturn !Tone.isUndef(val);\n};\n\n/**\n *  Test if the arg is a function\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a function\n *  @static\n *  @memberOf Tone\n */\nTone.isFunction = function(val){\n\treturn typeof val === \"function\";\n};\n\n/**\n *  Test if the argument is a number.\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a number\n *  @static\n *  @memberOf Tone\n */\nTone.isNumber = function(arg){\n\treturn (typeof arg === \"number\");\n};\n\n/**\n *  Test if the given argument is an object literal (i.e. `{}`);\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is an object literal.\n *  @static\n *  @memberOf Tone\n */\nTone.isObject = function(arg){\n\treturn (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n};\n\n/**\n *  Test if the argument is a boolean.\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a boolean\n *  @static\n *  @memberOf Tone\n */\nTone.isBoolean = function(arg){\n\treturn (typeof arg === \"boolean\");\n};\n\n/**\n *  Test if the argument is an Array\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is an array\n *  @static\n *  @memberOf Tone\n */\nTone.isArray = function(arg){\n\treturn (Array.isArray(arg));\n};\n\n/**\n *  Test if the argument is a string.\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a string\n *  @static\n *  @memberOf Tone\n */\nTone.isString = function(arg){\n\treturn (typeof arg === \"string\");\n};\n\n/**\n *  Test if the argument is in the form of a note in scientific pitch notation.\n *  e.g. \"C4\"\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a string\n *  @static\n *  @memberOf Tone\n */\nTone.isNote = function(arg){\n\treturn Tone.isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n};\n\n/**\n *  An empty function.\n *  @static\n */\nTone.noOp = function(){};\n\n/**\n *  Make the property not writable. Internal use only.\n *  @private\n *  @param  {String}  property  the property to make not writable\n */\nTone.prototype._readOnly = function(property){\n\tif (Array.isArray(property)){\n\t\tfor (var i = 0; i < property.length; i++){\n\t\t\tthis._readOnly(property[i]);\n\t\t}\n\t} else {\n\t\tObject.defineProperty(this, property, {\n\t\t\t\"writable\" : false,\n\t\t\t\"enumerable\" : true,\n\t\t});\n\t}\n};\n\n/**\n *  Make an attribute writeable. Interal use only.\n *  @private\n *  @param  {String}  property  the property to make writable\n */\nTone.prototype._writable = function(property){\n\tif (Array.isArray(property)){\n\t\tfor (var i = 0; i < property.length; i++){\n\t\t\tthis._writable(property[i]);\n\t\t}\n\t} else {\n\t\tObject.defineProperty(this, property, {\n\t\t\t\"writable\" : true,\n\t\t});\n\t}\n};\n\n/**\n * Possible play states.\n * @enum {String}\n */\nTone.State = {\n\t\"Started\" : \"started\",\n\t\"Stopped\" : \"stopped\",\n\t\"Paused\" : \"paused\",\n};\n\n/**\n * A reference to the global context, `global` or `Tone.global.\n */\nTone.global = Tone.isUndef(global) ? window : global;\n\n///////////////////////////////////////////////////////////////////////////\n// CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Equal power gain scale. Good for cross-fading.\n *  @param  {NormalRange} percent (0-1)\n *  @return {Number}         output gain (0-1)\n *  @static\n *  @memberOf Tone\n */\nTone.equalPowerScale = function(percent){\n\tvar piFactor = 0.5 * Math.PI;\n\treturn Math.sin(percent * piFactor);\n};\n\n/**\n *  Convert decibels into gain.\n *  @param  {Decibels} db\n *  @return {Number}\n *  @static\n *  @memberOf Tone\n */\nTone.dbToGain = function(db){\n\treturn Math.pow(10, db / 20);\n};\n\n/**\n *  Convert gain to decibels.\n *  @param  {Number} gain (0-1)\n *  @return {Decibels}\n *  @static\n *  @memberOf Tone\n */\nTone.gainToDb = function(gain){\n\treturn 20 * (Math.log(gain) / Math.LN10);\n};\n\n/**\n *  Convert an interval (in semitones) to a frequency ratio.\n *  @param  {Interval} interval the number of semitones above the base note\n *  @return {Number}          the frequency ratio\n *  @static\n *  @memberOf Tone\n *  @example\n * tone.intervalToFrequencyRatio(0); // 1\n * tone.intervalToFrequencyRatio(12); // 2\n * tone.intervalToFrequencyRatio(-12); // 0.5\n */\nTone.intervalToFrequencyRatio = function(interval){\n\treturn Math.pow(2, (interval/12));\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tTIMING\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Return the current time of the AudioContext clock plus\n *  the lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @memberOf Tone#\n */\nTone.prototype.now = function(){\n\treturn Tone.context.now();\n};\n\n/**\n *  Return the current time of the AudioContext clock plus\n *  the lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @static\n *  @memberOf Tone\n */\nTone.now = function(){\n\treturn Tone.context.now();\n};\n\n/**\n *  Return the current time of the AudioContext clock without\n *  any lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @memberOf Tone#\n */\nTone.prototype.immediate = function(){\n\treturn Tone.context.currentTime;\n};\n\n/**\n *  Return the current time of the AudioContext clock without\n *  any lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @memberOf Tone\n */\nTone.immediate = function(){\n\treturn Tone.context.currentTime;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tINHERITANCE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  have a child inherit all of Tone's (or a parent's) prototype\n *  to inherit the parent's properties, make sure to call\n *  Parent.call(this) in the child's constructor\n *\n *  based on closure library's inherit function\n *\n *  @memberOf Tone\n *  @static\n *  @param  {Function} \tchild\n *  @param  {Function=} parent (optional) parent to inherit from\n *                             if no parent is supplied, the child\n *                             will inherit from Tone\n */\nTone.extend = function(child, parent){\n\tif (Tone.isUndef(parent)){\n\t\tparent = Tone;\n\t}\n\tfunction TempConstructor(){}\n\tTempConstructor.prototype = parent.prototype;\n\tchild.prototype = new TempConstructor();\n\t/** @override */\n\tchild.prototype.constructor = child;\n\tchild._super = parent;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tCONTEXT\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * The shared AudioContext\n * @type {Tone.Context}\n * @private\n */\nTone._audioContext = null;\n\n/**\n * \tMost browsers will not play _any_ audio until a user \n * \tclicks something (like a play button). Invoke this method\n * \ton a click or keypress event handler to start the audio context. \n * \tMore about the Autoplay policy [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n *  @memberOf Tone\n *  @static\n *  @return {Promise} This promise is resolved when the audio context is started. \n *  @example\n * document.querySelector('#playbutton').addEventListener('click', () => Tone.start())\n */\nTone.start = function(){\n\treturn Tone.context.resume();\n};\n\n/**\n *  A static pointer to the audio context accessible as Tone.context.\n *  @type {Tone.Context}\n *  @name context\n *  @memberOf Tone\n */\nObject.defineProperty(Tone, \"context\", {\n\t\"get\" : function(){\n\t\treturn Tone._audioContext;\n\t},\n\t\"set\" : function(context){\n\t\tif (context.isContext){\n\t\t\tTone._audioContext = context;\n\t\t} else {\n\t\t\tTone._audioContext = new Tone.Context(context);\n\t\t}\n\t\t//initialize the new audio context\n\t\tTone.Context.emit(\"init\", Tone._audioContext);\n\t}\n});\n\n/**\n *  The AudioContext\n *  @type {Tone.Context}\n *  @name context\n *  @memberOf Tone#\n *  @readOnly\n */\nObject.defineProperty(Tone.prototype, \"context\", {\n\t\"get\" : function(){\n\t\treturn Tone.context;\n\t}\n});\n\n/**\n *  Tone automatically creates a context on init, but if you are working\n *  with other libraries which also create an AudioContext, it can be\n *  useful to set your own. If you are going to set your own context,\n *  be sure to do it at the start of your code, before creating any objects.\n *  @static\n *  @param {AudioContext} ctx The new audio context to set\n */\nTone.setContext = function(ctx){\n\tTone.context = ctx;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tATTRIBUTES\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  The number of seconds of 1 processing block (128 samples)\n *  @type {Number}\n *  @name blockTime\n *  @memberOf Tone\n *  @static\n *  @readOnly\n */\nObject.defineProperty(Tone.prototype, \"blockTime\", {\n\t\"get\" : function(){\n\t\treturn 128 / this.context.sampleRate;\n\t}\n});\n\n/**\n *  The duration in seconds of one sample.\n *  @type {Number}\n *  @name sampleTime\n *  @memberOf Tone\n *  @static\n *  @readOnly\n */\nObject.defineProperty(Tone.prototype, \"sampleTime\", {\n\t\"get\" : function(){\n\t\treturn 1 / this.context.sampleRate;\n\t}\n});\n\n/**\n *  Whether or not all the technologies that Tone.js relies on are supported by the current browser.\n *  @type {Boolean}\n *  @name supported\n *  @memberOf Tone\n *  @readOnly\n *  @static\n */\nObject.defineProperty(Tone, \"supported\", {\n\t\"get\" : function(){\n\t\tvar hasAudioContext = Tone.global.hasOwnProperty(\"AudioContext\") || Tone.global.hasOwnProperty(\"webkitAudioContext\");\n\t\tvar hasPromises = Tone.global.hasOwnProperty(\"Promise\");\n\t\treturn hasAudioContext && hasPromises;\n\t}\n});\n\n/**\n *  Boolean value if the audio context has been initialized.\n *  @type {Boolean}\n *  @memberOf Tone\n *  @static\n *  @name initialized\n *  @readOnly\n */\nObject.defineProperty(Tone, \"initialized\", {\n\t\"get\" : function(){\n\t\treturn Boolean(Tone.context);\n\t}\n});\n\n/**\n *  Get the context when it becomes available\n *  @param  {Function}  resolve  Callback when the context is initialized\n *  @return  {Tone}\n */\nTone.getContext = function(resolve){\n\tif (Tone.initialized){\n\t\tresolve(Tone.context);\n\t} else {\n\t\tvar resCallback = function(){\n\t\t\tresolve(Tone.context);\n\t\t\tTone.Context.off(\"init\", resCallback);\n\t\t};\n\t\tTone.Context.on(\"init\", resCallback);\n\t}\n\treturn Tone;\n};\n\n/**\n * The version number\n * @type {String}\n * @static\n */\nTone.version = version;\n\nexport default Tone;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  Makes sure that connect returns the dst node\n *  @private\n */\nif (Tone.supported){\n\tvar testContext = new OfflineAudioContext(2, 1, 44100);\n\tvar testSrcNode = testContext.createGain();\n\tvar testDstNode = testContext.createGain();\n\tif (testSrcNode.connect(testDstNode) !== testDstNode){\n\t\tvar nativeConnect = AudioNode.prototype.connect;\n\t\tAudioNode.prototype.connect = function(){\n\t\t\tnativeConnect.apply(this, arguments);\n\t\t\treturn arguments[0];\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Context\";\nimport \"../shim/AudioNode\";\n\n/**\n *  @class Tone.AudioNode is the base class for classes which process audio.\n *         AudioNodes have inputs and outputs.\n *  @param\t{AudioContext=} context\tThe audio context to use with the class\n *  @extends {Tone}\n */\nTone.AudioNode = function(){\n\tTone.call(this);\n\n\t//use the default context if one is not passed in\n\tvar options = Tone.defaults(arguments, [\"context\"], {\n\t\t\"context\" : Tone.context\n\t});\n\n\t/**\n\t * The AudioContext of this instance\n\t * @private\n\t * @type {AudioContext}\n\t */\n\tthis._context = options.context;\n};\n\nTone.extend(Tone.AudioNode);\n\n/**\n * Get the audio context belonging to this instance.\n * @type {Tone.Context}\n * @memberOf Tone.AudioNode#\n * @name context\n * @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"context\", {\n\tget : function(){\n\t\treturn this._context;\n\t}\n});\n\n/**\n *  Create input and outputs for this object.\n *  @param  {Number}  [input=0]   The number of inputs\n *  @param  {Number}  [outputs=0]  The number of outputs\n *  @return  {Tone.AudioNode}  this\n *  @private\n */\nTone.AudioNode.prototype.createInsOuts = function(inputs, outputs){\n\n\tif (inputs === 1){\n\t\tthis.input = this.context.createGain();\n\t} else if (inputs > 1){\n\t\tthis.input = new Array(inputs);\n\t}\n\n\tif (outputs === 1){\n\t\tthis.output = this.context.createGain();\n\t} else if (outputs > 1){\n\t\tthis.output = new Array(outputs);\n\t}\n};\n\n/**\n *  channelCount is the number of channels used when up-mixing and down-mixing\n *  connections to any inputs to the node. The default value is 2 except for\n *  specific nodes where its value is specially determined.\n *\n *  @memberof Tone.AudioNode#\n *  @type {Number}\n *  @name channelCount\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"channelCount\", {\n\tget : function(){\n\t\treturn this.output.channelCount;\n\t},\n\tset : function(c){\n\t\treturn this.output.channelCount = c;\n\t}\n});\n\n/**\n *  channelCountMode determines how channels will be counted when up-mixing and\n *  down-mixing connections to any inputs to the node.\n *  The default value is \"max\". This attribute has no effect for nodes with no inputs.\n *  @memberof Tone.AudioNode#\n *  @type {String}\n *  @name channelCountMode\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"channelCountMode\", {\n\tget : function(){\n\t\treturn this.output.channelCountMode;\n\t},\n\tset : function(m){\n\t\treturn this.output.channelCountMode = m;\n\t}\n});\n\n/**\n *  channelInterpretation determines how individual channels will be treated\n *  when up-mixing and down-mixing connections to any inputs to the node.\n *  The default value is \"speakers\".\n *  @memberof Tone.AudioNode#\n *  @type {String}\n *  @name channelInterpretation\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"channelInterpretation\", {\n\tget : function(){\n\t\treturn this.output.channelInterpretation;\n\t},\n\tset : function(i){\n\t\treturn this.output.channelInterpretation = i;\n\t}\n});\n\n/**\n *  The number of inputs feeding into the AudioNode.\n *  For source nodes, this will be 0.\n *  @type {Number}\n *  @name numberOfInputs\n *  @memberof Tone.AudioNode#\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"numberOfInputs\", {\n\tget : function(){\n\t\tif (this.input){\n\t\t\tif (Tone.isArray(this.input)){\n\t\t\t\treturn this.input.length;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  The number of outputs coming out of the AudioNode.\n *  @type {Number}\n *  @name numberOfOutputs\n *  @memberof Tone.AudioNode#\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"numberOfOutputs\", {\n\tget : function(){\n\t\tif (this.output){\n\t\t\tif (Tone.isArray(this.output)){\n\t\t\t\treturn this.output.length;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n *  @param  {Tone | AudioParam | AudioNode} unit\n *  @param {number} [outputNum=0] optionally which output to connect from\n *  @param {number} [inputNum=0] optionally which input to connect to\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.connect = function(unit, outputNum, inputNum){\n\tif (Tone.isArray(this.output)){\n\t\toutputNum = Tone.defaultArg(outputNum, 0);\n\t\tthis.output[outputNum].connect(unit, 0, inputNum);\n\t} else {\n\t\tTone.connect(this.output, unit, outputNum, inputNum);\n\t}\n\treturn this;\n};\n\n/**\n *  disconnect the output\n *  @param {Number|AudioNode} output Either the output index to disconnect\n *                                   if the output is an array, or the\n *                                   node to disconnect from.\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.disconnect = function(destination, outputNum, inputNum){\n\tif (Tone.isArray(this.output)){\n\t\toutputNum = Tone.defaultArg(outputNum, 0);\n\t\tthis.output[outputNum].disconnect(destination, 0, inputNum);\n\t} else {\n\t\tTone.disconnect(this.output, destination, outputNum, inputNum);\n\t}\n\treturn this;\n};\n\n/**\n *  Connect the output of this node to the rest of the nodes in series.\n *  @example\n *  //connect a node to an effect, panVol and then to the master output\n *  node.chain(effect, panVol, Tone.Master);\n *  @param {...(AudioParam|Tone|AudioNode)} nodes\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.chain = function(){\n\tvar args = Array.from(arguments);\n\targs.unshift(this);\n\tTone.connectSeries.apply(undefined, args);\n\treturn this;\n};\n\n/**\n *  connect the output of this node to the rest of the nodes in parallel.\n *  @param {...(AudioParam|Tone|AudioNode)} nodes\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.fan = function(){\n\tfor (var i = 0; i < arguments.length; i++){\n\t\tthis.connect(arguments[i]);\n\t}\n\treturn this;\n};\n\n/**\n * Dispose and disconnect\n * @return {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.dispose = function(){\n\tif (Tone.isDefined(this.input)){\n\t\tif (this.input instanceof AudioNode){\n\t\t\tthis.input.disconnect();\n\t\t}\n\t\tthis.input = null;\n\t}\n\tif (Tone.isDefined(this.output)){\n\t\tif (this.output instanceof AudioNode){\n\t\t\tthis.output.disconnect();\n\t\t}\n\t\tthis.output = null;\n\t}\n\tthis._context = null;\n\treturn this;\n};\n\nexport default Tone.AudioNode;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/AudioContext\";\nimport \"../core/Context\";\nimport \"../core/Gain\";\n\nif (Tone.supported && !Tone.global.AudioContext.prototype.createConstantSource){\n\n\tvar ConstantSourceNode = function(context){\n\t\tthis.context = context;\n\n\t\tvar buffer = context.createBuffer(1, 128, context.sampleRate);\n\t\tvar arr = buffer.getChannelData(0);\n\t\tfor (var i = 0; i < arr.length; i++){\n\t\t\tarr[i] = 1;\n\t\t}\n\n\t\tthis._bufferSource = context.createBufferSource();\n\t\tthis._bufferSource.channelCount = 1;\n\t\tthis._bufferSource.channelCountMode = \"explicit\";\n\t\tthis._bufferSource.buffer = buffer;\n\t\tthis._bufferSource.loop = true;\n\n\t\tvar gainNode = this._output = context.createGain();\n\t\tthis.offset = gainNode.gain;\n\n\t\tthis._bufferSource.connect(gainNode);\n\t};\n\n\tConstantSourceNode.prototype.start = function(time){\n\t\tthis._bufferSource.start(time);\n\t\treturn this;\n\t};\n\n\tConstantSourceNode.prototype.stop = function(time){\n\t\tthis._bufferSource.stop(time);\n\t\treturn this;\n\t};\n\n\tConstantSourceNode.prototype.connect = function(){\n\t\tthis._output.connect.apply(this._output, arguments);\n\t\treturn this;\n\t};\n\n\tConstantSourceNode.prototype.disconnect = function(){\n\t\tthis._output.disconnect.apply(this._output, arguments);\n\t\treturn this;\n\t};\n\n\tAudioContext.prototype.createConstantSource = function(){\n\t\treturn new ConstantSourceNode(this);\n\t};\n\n\tTone.Context.prototype.createConstantSource = function(){\n\t\treturn new ConstantSourceNode(this);\n\t};\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\nimport \"../core/Param\";\nimport \"../signal/SignalBase\";\nimport \"../shim/ConstantSourceNode\";\n\n/**\n *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.\n *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n *          has all of the methods available to native Web Audio\n *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n *          as well as additional conveniences. Read more about working with signals\n *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n *  @constructor\n *  @extends {Tone.Param}\n *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam\n *                                     is passed in, that parameter will be wrapped\n *                                     and controlled by the Signal.\n *  @param {string} [units=Number] unit The units the signal is in.\n *  @example\n * var signal = new Tone.Signal(10);\n */\nTone.Signal = function(){\n\n\tvar options = Tone.defaults(arguments, [\"value\", \"units\"], Tone.Signal);\n\tTone.Param.call(this, options);\n\n\t/**\n\t * The constant source node which generates the signal\n\t * @type {ConstantSourceNode}\n\t * @private\n\t */\n\tthis._constantSource = this.context.createConstantSource();\n\tthis._constantSource.start(0);\n\tthis._param = this._constantSource.offset;\n\tthis.value = options.value;\n\n\t/**\n\t * The node where the constant signal value is scaled.\n\t * @type {ConstantSourceNode}\n\t * @private\n\t */\n\tthis.output = this._constantSource;\n\n\t/**\n\t * The node where the value is set.\n\t * @type {Tone.Param}\n\t * @private\n\t */\n\tthis.input = this._param = this.output.offset;\n};\n\nTone.extend(Tone.Signal, Tone.Param);\n\n/**\n *  The default values\n *  @type  {Object}\n *  @static\n *  @const\n */\nTone.Signal.defaults = {\n\t\"value\" : 0,\n\t\"units\" : Tone.Type.Default,\n\t\"convert\" : true,\n};\n\n//use SignalBase's connect/disconnect methods\nTone.Signal.prototype.connect = Tone.SignalBase.prototype.connect;\nTone.Signal.prototype.disconnect = Tone.SignalBase.prototype.disconnect;\n\n/**\n * Return the current signal value at the given time.\n * @param  {Time} time When to get the signal value\n * @return {Number}\n */\nTone.Signal.prototype.getValueAtTime = function(time){\n\tif (this._param.getValueAtTime){\n\t\treturn this._param.getValueAtTime(time);\n\t} else {\n\t\treturn Tone.Param.prototype.getValueAtTime.call(this, time);\n\t}\n};\n\n/**\n *  dispose and disconnect\n *  @returns {Tone.Signal} this\n */\nTone.Signal.prototype.dispose = function(){\n\tTone.Param.prototype.dispose.call(this);\n\tthis._constantSource.stop();\n\tthis._constantSource.disconnect();\n\tthis._constantSource = null;\n\treturn this;\n};\n\nexport default Tone.Signal;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../type/Type\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class A thin wrapper around the Native Web Audio GainNode.\n *         The GainNode is a basic building block of the Web Audio\n *         API and is useful for routing audio and adjusting gains.\n *  @extends {Tone.AudioNode}\n *  @param  {Number=}  gain  The initial gain of the GainNode\n *  @param {Tone.Type=} units The units of the gain parameter.\n */\nTone.Gain = function(){\n\n\tvar options = Tone.defaults(arguments, [\"gain\", \"units\"], Tone.Gain);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The GainNode\n\t *  @type  {GainNode}\n\t *  @private\n\t */\n\tthis.input = this.output = this._gainNode = this.context.createGain();\n\n\t/**\n\t *  The gain parameter of the gain node.\n\t *  @type {Gain}\n\t *  @signal\n\t */\n\tthis.gain = new Tone.Param({\n\t\t\"param\" : this._gainNode.gain,\n\t\t\"units\" : options.units,\n\t\t\"value\" : options.gain,\n\t\t\"convert\" : options.convert\n\t});\n\tthis._readOnly(\"gain\");\n};\n\nTone.extend(Tone.Gain, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Gain.defaults = {\n\t\"gain\" : 1,\n\t\"convert\" : true,\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Gain}  this\n */\nTone.Gain.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._gainNode.disconnect();\n\tthis._gainNode = null;\n\tthis._writable(\"gain\");\n\tthis.gain.dispose();\n\tthis.gain = null;\n};\n\nexport default Tone.Gain;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Time\";\nimport \"../type/Frequency\";\nimport \"../type/TransportTime\";\nimport \"../core/Context\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tTYPES\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * Units which a value can take on.\n * @enum {String}\n */\nTone.Type = {\n\t/**\n\t *  Default units\n\t *  @typedef {Default}\n\t */\n\tDefault : \"number\",\n\t/**\n\t *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n\t *\n\t *  * Numbers, which will be taken literally as the time (in seconds).\n\t *  * Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.\n\t *  * TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times\n\t *  in the form BARS:QUARTERS:SIXTEENTHS.\n\t *  * Frequency, (\"8hz\") is converted to the length of the cycle in seconds.\n\t *  * Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as\n\t *  \"the current time plus whatever expression follows\".\n\t *  * Object, ({\"4n\" : 3, \"8t\" : -1}). The resulting time is equal to the sum of all of the keys multiplied by the values in the object. \n\t *  * No Argument, for methods which accept time, no argument will be interpreted as\n\t *  \"now\" (i.e. the currentTime).\n\t *\n\t *  @typedef {Time}\n\t */\n\tTime : \"time\",\n\t/**\n\t *  Frequency can be described similar to time, except ultimately the\n\t *  values are converted to frequency instead of seconds. A number\n\t *  is taken literally as the value in hertz. Additionally any of the\n\t *  Time encodings can be used. Note names in the form\n\t *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n\t *  frequency value.\n\t *  @typedef {Frequency}\n\t */\n\tFrequency : \"frequency\",\n\t/**\n\t *  TransportTime describes a position along the Transport's timeline. It is\n\t *  similar to Time in that it uses all the same encodings, but TransportTime specifically\n\t *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable.\n\t *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n\t *  @typedef {TransportTime}\n\t */\n\tTransportTime : \"transportTime\",\n\t/**\n\t *  Ticks are the basic subunit of the Transport. They are\n\t *  the smallest unit of time that the Transport supports.\n\t *  @typedef {Ticks}\n\t */\n\tTicks : \"ticks\",\n\t/**\n\t *  Normal values are within the range [0, 1].\n\t *  @typedef {NormalRange}\n\t */\n\tNormalRange : \"normalRange\",\n\t/**\n\t *  AudioRange values are between [-1, 1].\n\t *  @typedef {AudioRange}\n\t */\n\tAudioRange : \"audioRange\",\n\t/**\n\t *  Decibels are a logarithmic unit of measurement which is useful for volume\n\t *  because of the logarithmic way that we perceive loudness. 0 decibels\n\t *  means no change in volume. -10db is approximately half as loud and 10db\n\t *  is twice is loud.\n\t *  @typedef {Decibels}\n\t */\n\tDecibels : \"db\",\n\t/**\n\t *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n\t *  @typedef {Interval}\n\t */\n\tInterval : \"interval\",\n\t/**\n\t *  Beats per minute.\n\t *  @typedef {BPM}\n\t */\n\tBPM : \"bpm\",\n\t/**\n\t *  The value must be greater than or equal to 0.\n\t *  @typedef {Positive}\n\t */\n\tPositive : \"positive\",\n\t/**\n\t *  Gain is the ratio between input and output of a signal.\n\t *  A gain of 0 is the same as silencing the signal. A gain of\n\t *  1, causes no change to the incoming signal.\n\t *  @typedef {Gain}\n\t */\n\tGain : \"gain\",\n\t/**\n\t *  A cent is a hundredth of a semitone.\n\t *  @typedef {Cents}\n\t */\n\tCents : \"cents\",\n\t/**\n\t *  Angle between 0 and 360.\n\t *  @typedef {Degrees}\n\t */\n\tDegrees : \"degrees\",\n\t/**\n\t *  A number representing a midi note.\n\t *  @typedef {MIDI}\n\t */\n\tMIDI : \"midi\",\n\t/**\n\t *  A colon-separated representation of time in the form of\n\t *  Bars:Beats:Sixteenths.\n\t *  @typedef {BarsBeatsSixteenths}\n\t */\n\tBarsBeatsSixteenths : \"barsBeatsSixteenths\",\n\t/**\n\t *  Sampling is the reduction of a continuous signal to a discrete signal.\n\t *  Audio is typically sampled 44100 times per second.\n\t *  @typedef {Samples}\n\t */\n\tSamples : \"samples\",\n\t/**\n\t *  Hertz are a frequency representation defined as one cycle per second.\n\t *  @typedef {Hertz}\n\t */\n\tHertz : \"hertz\",\n\t/**\n\t *  A frequency represented by a letter name,\n\t *  accidental and octave. This system is known as\n\t *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\n\t *  @typedef {Note}\n\t */\n\tNote : \"note\",\n\t/**\n\t *  One millisecond is a thousandth of a second.\n\t *  @typedef {Milliseconds}\n\t */\n\tMilliseconds : \"milliseconds\",\n\t/**\n\t *  Seconds are the time unit of the AudioContext. In the end,\n\t *  all values need to be evaluated to seconds.\n\t *  @typedef {Seconds}\n\t */\n\tSeconds : \"seconds\",\n\t/**\n\t *  A string representing a duration relative to a measure.\n\t *  * \"4n\" = quarter note\n\t *  * \"2m\" = two measures\n\t *  * \"8t\" = eighth-note triplet\n\t *  @typedef {Notation}\n\t */\n\tNotation : \"notation\",\n};\n\n///////////////////////////////////////////////////////////////////////////\n// AUGMENT TONE's PROTOTYPE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Convert Time into seconds.\n *\n *  Unlike the method which it overrides, this takes into account\n *  transporttime and musical notation.\n *\n *  Time : 1.40\n *  Notation: 4n or 1m or 2t\n *  Now Relative: +3n\n *\n *  @param  {Time} time\n *  @return {Seconds}\n */\nTone.prototype.toSeconds = function(time){\n\tif (Tone.isNumber(time)){\n\t\treturn time;\n\t} else if (Tone.isUndef(time)){\n\t\treturn this.now();\n\t} else if (Tone.isString(time) || Tone.isObject(time)){\n\t\treturn (new Tone.Time(time)).toSeconds();\n\t} else if (time instanceof Tone.TimeBase){\n\t\treturn time.toSeconds();\n\t}\n};\n\n/**\n *  Convert a frequency representation into a number.\n *  @param  {Frequency} freq\n *  @return {Hertz}      the frequency in hertz\n */\nTone.prototype.toFrequency = function(freq){\n\tif (Tone.isNumber(freq)){\n\t\treturn freq;\n\t} else if (Tone.isString(freq) || Tone.isUndef(freq) || Tone.isObject(freq)){\n\t\treturn (new Tone.Frequency(freq)).valueOf();\n\t} else if (freq instanceof Tone.TimeBase){\n\t\treturn freq.toFrequency();\n\t}\n};\n\n/**\n *  Convert a time representation into ticks.\n *  @param  {Time} time\n *  @return {Ticks}  the time in ticks\n */\nTone.prototype.toTicks = function(time){\n\tif (Tone.isNumber(time) || Tone.isString(time) || Tone.isObject(time)){\n\t\treturn (new Tone.TransportTime(time)).toTicks();\n\t} else if (Tone.isUndef(time)){\n\t\treturn Tone.Transport.ticks;\n\t} else if (time instanceof Tone.TimeBase){\n\t\treturn time.toTicks();\n\t}\n};\n\nexport default Tone;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../core/Gain\";\nimport \"../signal/SignalBase\";\n\n/**\n *  @class  Multiply two incoming signals. Or, if a number is given in the constructor,\n *          multiplies the incoming signal by that value.\n *\n *  @constructor\n *  @extends {Tone.Signal}\n *  @param {number=} value Constant value to multiple. If no value is provided,\n *                         it will return the product of the first and second inputs\n *  @example\n * var mult = new Tone.Multiply();\n * var sigA = new Tone.Signal(3);\n * var sigB = new Tone.Signal(4);\n * sigA.connect(mult, 0, 0);\n * sigB.connect(mult, 0, 1);\n * //output of mult is 12.\n *  @example\n * var mult = new Tone.Multiply(10);\n * var sig = new Tone.Signal(2).connect(mult);\n * //the output of mult is 20.\n */\nTone.Multiply = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  the input node is the same as the output node\n\t *  it is also the GainNode which handles the scaling of incoming signal\n\t *\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._mult = this.input[0] = this.output = new Tone.Gain();\n\n\t/**\n\t *  the scaling parameter\n\t *  @type {AudioParam}\n\t *  @private\n\t */\n\tthis._param = this.input[1] = this.output.gain;\n\tthis.value = Tone.defaultArg(value, 0);\n};\n\nTone.extend(Tone.Multiply, Tone.Signal);\n\n/**\n *  clean up\n *  @returns {Tone.Multiply} this\n */\nTone.Multiply.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._mult.dispose();\n\tthis._mult = null;\n\tthis._param = null;\n\treturn this;\n};\n\nexport default Tone.Multiply;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../component/Volume\";\nimport \"../core/Master\";\nimport \"../type/Type\";\nimport \"../core/TimelineState\";\nimport \"../signal/Signal\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Base class for sources. Sources have start/stop methods\n *          and the ability to be synced to the\n *          start/stop of Tone.Transport.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @example\n * //Multiple state change events can be chained together,\n * //but must be set in the correct order and with ascending times\n *\n * // OK\n * state.start().stop(\"+0.2\");\n * // AND\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n *\n * // BAD\n * state.stop(\"+0.2\").start();\n * // OR\n * state.start(\"+0.3\").stop(\"+0.2\");\n *\n */\nTone.Source = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.Source.defaults);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The output volume node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * source.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\t/**\n\t * \tKeep track of the scheduled state.\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\tthis._state.memory = 100;\n\n\t/**\n\t *  The synced `start` callback function from the transport\n\t *  @type {Function}\n\t *  @private\n\t */\n\tthis._synced = false;\n\n\t/**\n\t *  Keep track of all of the scheduled event ids\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._scheduled = [];\n\n\t//make the output explicitly stereo\n\tthis._volume.output.output.channelCount = 2;\n\tthis._volume.output.output.channelCountMode = \"explicit\";\n\t//mute initially\n\tthis.mute = options.mute;\n};\n\nTone.extend(Tone.Source, Tone.AudioNode);\n\n/**\n *  The default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Source.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n *  Returns the playback state of the source, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.Source#\n *  @name state\n */\nObject.defineProperty(Tone.Source.prototype, \"state\", {\n\tget : function(){\n\t\tif (this._synced){\n\t\t\tif (Tone.Transport.state === Tone.State.Started){\n\t\t\t\treturn this._state.getValueAtTime(Tone.Transport.seconds);\n\t\t\t} else {\n\t\t\t\treturn Tone.State.Stopped;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._state.getValueAtTime(this.now());\n\t\t}\n\t}\n});\n\n/**\n * Mute the output.\n * @memberOf Tone.Source#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * source.mute = true;\n */\nObject.defineProperty(Tone.Source.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n//overwrite these functions\nTone.Source.prototype._start = Tone.noOp;\nTone.Source.prototype.restart = Tone.noOp;\nTone.Source.prototype._stop = Tone.noOp;\n\n/**\n *  Start the source at the specified time. If no time is given,\n *  start the source now.\n *  @param  {Time} [time=now] When the source should be started.\n *  @returns {Tone.Source} this\n *  @example\n * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n */\nTone.Source.prototype.start = function(time, offset, duration){\n\tif (Tone.isUndef(time) && this._synced){\n\t\ttime = Tone.Transport.seconds;\n\t} else {\n\t\ttime = this.toSeconds(time);\n\t\ttime = Math.max(time, this.context.currentTime);\n\t}\n\t//if it's started, stop it and restart it\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.cancel(time);\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tthis.restart(time, offset, duration);\n\t} else {\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tif (this._synced){\n\t\t\t// add the offset time to the event\n\t\t\tvar event = this._state.get(time);\n\t\t\tevent.offset = Tone.defaultArg(offset, 0);\n\t\t\tevent.duration = duration;\n\t\t\tvar sched = Tone.Transport.schedule(function(t){\n\t\t\t\tthis._start(t, offset, duration);\n\t\t\t}.bind(this), time);\n\t\t\tthis._scheduled.push(sched);\n\n\t\t\t//if it's already started\n\t\t\tif (Tone.Transport.state === Tone.State.Started){\n\t\t\t\tthis._syncedStart(this.now(), Tone.Transport.seconds);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._start.apply(this, arguments);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the source at the specified time. If no time is given,\n *  stop the source now.\n *  @param  {Time} [time=now] When the source should be stopped.\n *  @returns {Tone.Source} this\n *  @example\n * source.stop(); // stops the source immediately\n */\nTone.Source.prototype.stop = function(time){\n\tif (Tone.isUndef(time) && this._synced){\n\t\ttime = Tone.Transport.seconds;\n\t} else {\n\t\ttime = this.toSeconds(time);\n\t\ttime = Math.max(time, this.context.currentTime);\n\t}\n\tif (!this._synced){\n\t\tthis._stop.apply(this, arguments);\n\t} else {\n\t\tvar sched = Tone.Transport.schedule(this._stop.bind(this), time);\n\t\tthis._scheduled.push(sched);\n\t}\n\tthis._state.cancel(time);\n\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\treturn this;\n};\n\n/**\n *  Sync the source to the Transport so that all subsequent\n *  calls to `start` and `stop` are synced to the TransportTime\n *  instead of the AudioContext time.\n *\n *  @returns {Tone.Source} this\n *  @example\n * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n * source.sync().start(0).stop(0.3);\n * //start the transport.\n * Tone.Transport.start();\n *\n *  @example\n * //start the transport with an offset and the sync'ed sources\n * //will start in the correct position\n * source.sync().start(0.1);\n * //the source will be invoked with an offset of 0.4\n * Tone.Transport.start(\"+0.5\", 0.5);\n */\nTone.Source.prototype.sync = function(){\n\tthis._synced = true;\n\tthis._syncedStart = function(time, offset){\n\t\tif (offset > 0){\n\t\t\t// get the playback state at that time\n\t\t\tvar stateEvent = this._state.get(offset);\n\t\t\t// listen for start events which may occur in the middle of the sync'ed time\n\t\t\tif (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset){\n\t\t\t\t// get the offset\n\t\t\t\tvar startOffset = offset - this.toSeconds(stateEvent.time);\n\t\t\t\tvar duration;\n\t\t\t\tif (stateEvent.duration){\n\t\t\t\t\tduration = this.toSeconds(stateEvent.duration) - startOffset;\n\t\t\t\t}\n\t\t\t\tthis._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t\t\t}\n\t\t}\n\t}.bind(this);\n\tthis._syncedStop = function(time){\n\t\tvar seconds = Tone.Transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n\t\tif (this._state.getValueAtTime(seconds) === Tone.State.Started){\n\t\t\tthis._stop(time);\n\t\t}\n\t}.bind(this);\n\tTone.Transport.on(\"start loopStart\", this._syncedStart);\n\tTone.Transport.on(\"stop pause loopEnd\", this._syncedStop);\n\treturn this;\n};\n\n/**\n *  Unsync the source to the Transport. See Tone.Source.sync\n *  @returns {Tone.Source} this\n */\nTone.Source.prototype.unsync = function(){\n\tif (this._synced){\n\t\tTone.Transport.off(\"stop pause loopEnd\", this._syncedStop);\n\t\tTone.Transport.off(\"start loopStart\", this._syncedStart);\n\t}\n\tthis._synced = false;\n\t// clear all of the scheduled ids\n\tfor (var i = 0; i < this._scheduled.length; i++){\n\t\tvar id = this._scheduled[i];\n\t\tTone.Transport.clear(id);\n\t}\n\tthis._scheduled = [];\n\tthis._state.cancel(0);\n\treturn this;\n};\n\n/**\n *\tClean up.\n *  @return {Tone.Source} this\n */\nTone.Source.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.unsync();\n\tthis._scheduled = null;\n\tthis._writable(\"volume\");\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n\tthis._state.dispose();\n\tthis._state = null;\n};\n\nexport default Tone.Source;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/AudioContext\";\n\nif (Tone.supported && !Tone.global.AudioContext.prototype._native_createWaveShaper){\n\n\t//fixes safari only bug which is still present in 11\n\tvar ua = navigator.userAgent.toLowerCase();\n\tvar isSafari = ua.includes(\"safari\") && !ua.includes(\"chrome\");\n\tif (isSafari){\n\n\t\tvar WaveShaperNode = function(context){\n\n\t\t\tthis._internalNode = this.input = this.output = context._native_createWaveShaper();\n\n\t\t\tthis._curve = null;\n\n\t\t\tfor (var prop in this._internalNode){\n\t\t\t\tthis._defineProperty(this._internalNode, prop);\n\t\t\t}\n\t\t};\n\n\t\tObject.defineProperty(WaveShaperNode.prototype, \"curve\", {\n\t\t\t\"get\" : function(){\n\t\t\t\treturn this._curve;\n\t\t\t},\n\t\t\t\"set\" : function(curve){\n\t\t\t\tthis._curve = curve;\n\t\t\t\tvar array = new Float32Array(curve.length+1);\n\t\t\t\tarray.set(curve, 1);\n\t\t\t\tarray[0] = curve[0];\n\t\t\t\tthis._internalNode.curve = array;\n\t\t\t}\n\t\t});\n\n\t\tWaveShaperNode.prototype._defineProperty = function(context, prop){\n\t\t\tif (Tone.isUndef(this[prop])){\n\t\t\t\tObject.defineProperty(this, prop, {\n\t\t\t\t\t\"get\" : function(){\n\t\t\t\t\t\tif (typeof context[prop] === \"function\"){\n\t\t\t\t\t\t\treturn context[prop].bind(context);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn context[prop];\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"set\" : function(val){\n\t\t\t\t\t\tcontext[prop] = val;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tTone.global.AudioContext.prototype._native_createWaveShaper = Tone.global.AudioContext.prototype.createWaveShaper;\n\t\tTone.global.AudioContext.prototype.createWaveShaper = function(){\n\t\t\treturn new WaveShaperNode(this);\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/SignalBase\";\nimport \"../shim/WaveShaperNode\";\n\n/**\n *  @class Wraps the native Web Audio API\n *         [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @param {function|Array|Number} mapping The function used to define the values.\n *                                    The mapping function should take two arguments:\n *                                    the first is the value at the current position\n *                                    and the second is the array position.\n *                                    If the argument is an array, that array will be\n *                                    set as the wave shaping function. The input\n *                                    signal is an AudioRange [-1, 1] value and the output\n *                                    signal can take on any numerical values.\n *\n *  @param {Number} [bufferLen=1024] The length of the WaveShaperNode buffer.\n *  @example\n * var timesTwo = new Tone.WaveShaper(function(val){\n * \treturn val * 2;\n * }, 2048);\n *  @example\n * //a waveshaper can also be constructed with an array of values\n * var invert = new Tone.WaveShaper([1, -1]);\n */\nTone.WaveShaper = function(mapping, bufferLen){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  the waveshaper\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._shaper = this.input = this.output = this.context.createWaveShaper();\n\n\t/**\n\t *  the waveshapers curve\n\t *  @type {Float32Array}\n\t *  @private\n\t */\n\tthis._curve = null;\n\n\tif (Array.isArray(mapping)){\n\t\tthis.curve = mapping;\n\t} else if (isFinite(mapping) || Tone.isUndef(mapping)){\n\t\tthis._curve = new Float32Array(Tone.defaultArg(mapping, 1024));\n\t} else if (Tone.isFunction(mapping)){\n\t\tthis._curve = new Float32Array(Tone.defaultArg(bufferLen, 1024));\n\t\tthis.setMap(mapping);\n\t}\n};\n\nTone.extend(Tone.WaveShaper, Tone.SignalBase);\n\n/**\n *  Uses a mapping function to set the value of the curve.\n *  @param {function} mapping The function used to define the values.\n *                            The mapping function take two arguments:\n *                            the first is the value at the current position\n *                            which goes from -1 to 1 over the number of elements\n *                            in the curve array. The second argument is the array position.\n *  @returns {Tone.WaveShaper} this\n *  @example\n * //map the input signal from [-1, 1] to [0, 10]\n * shaper.setMap(function(val, index){\n * \treturn (val + 1) * 5;\n * })\n */\nTone.WaveShaper.prototype.setMap = function(mapping){\n\tvar array = new Array(this._curve.length);\n\tfor (var i = 0, len = this._curve.length; i < len; i++){\n\t\tvar normalized = (i / (len - 1)) * 2 - 1;\n\t\tarray[i] = mapping(normalized, i);\n\t}\n\tthis.curve = array;\n\treturn this;\n};\n\n/**\n * The array to set as the waveshaper curve. For linear curves\n * array length does not make much difference, but for complex curves\n * longer arrays will provide smoother interpolation.\n * @memberOf Tone.WaveShaper#\n * @type {Array}\n * @name curve\n */\nObject.defineProperty(Tone.WaveShaper.prototype, \"curve\", {\n\tget : function(){\n\t\treturn this._shaper.curve;\n\t},\n\tset : function(mapping){\n\t\tthis._curve = new Float32Array(mapping);\n\t\tthis._shaper.curve = this._curve;\n\t}\n});\n\n/**\n * Specifies what type of oversampling (if any) should be used when\n * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n * @memberOf Tone.WaveShaper#\n * @type {string}\n * @name oversample\n */\nObject.defineProperty(Tone.WaveShaper.prototype, \"oversample\", {\n\tget : function(){\n\t\treturn this._shaper.oversample;\n\t},\n\tset : function(oversampling){\n\t\tif ([\"none\", \"2x\", \"4x\"].includes(oversampling)){\n\t\t\tthis._shaper.oversample = oversampling;\n\t\t} else {\n\t\t\tthrow new RangeError(\"Tone.WaveShaper: oversampling must be either 'none', '2x', or '4x'\");\n\t\t}\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.WaveShaper} this\n */\nTone.WaveShaper.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._shaper.disconnect();\n\tthis._shaper = null;\n\tthis._curve = null;\n\treturn this;\n};\n\nexport default Tone.WaveShaper;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../core/AudioNode\";\n\n/**\n * \t@class  Tone.Effect is the base class for effects. Connect the effect between\n * \t        the effectSend and effectReturn GainNodes, then control the amount of\n * \t        effect which goes to the output using the wet control.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {NormalRange|Object} [wet] The starting wet value.\n */\nTone.Effect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"wet\"], Tone.Effect);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  the drywet knob to control the amount of effect\n\t *  @type {Tone.CrossFade}\n\t *  @private\n\t */\n\tthis._dryWet = new Tone.CrossFade(options.wet);\n\n\t/**\n\t *  The wet control is how much of the effected\n\t *  will pass through to the output. 1 = 100% effected\n\t *  signal, 0 = 100% dry signal.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.wet = this._dryWet.fade;\n\n\t/**\n\t *  connect the effectSend to the input of hte effect\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.effectSend = new Tone.Gain();\n\n\t/**\n\t *  connect the output of the effect to the effectReturn\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.effectReturn = new Tone.Gain();\n\n\t//connections\n\tTone.connect(this.input, this._dryWet.a);\n\tTone.connect(this.input, this.effectSend);\n\tthis.effectReturn.connect(this._dryWet.b);\n\tthis._dryWet.connect(this.output);\n\tthis._readOnly([\"wet\"]);\n};\n\nTone.extend(Tone.Effect, Tone.AudioNode);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Effect.defaults = {\n\t\"wet\" : 1\n};\n\n/**\n *  chains the effect in between the effectSend and effectReturn\n *  @param  {Tone} effect\n *  @private\n *  @returns {Tone.Effect} this\n */\nTone.Effect.prototype.connectEffect = function(effect){\n\tthis.effectSend.chain(effect, this.effectReturn);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Effect} this\n */\nTone.Effect.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._dryWet.dispose();\n\tthis._dryWet = null;\n\tthis.effectSend.dispose();\n\tthis.effectSend = null;\n\tthis.effectReturn.dispose();\n\tthis.effectReturn = null;\n\tthis._writable([\"wet\"]);\n\tthis.wet = null;\n\treturn this;\n};\n\nexport default Tone.Effect;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Filter is a filter which allows for all of the same native methods\n *          as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).\n *          Tone.Filter has the added ability to set the filter rolloff at -12\n *          (default), -24 and -48.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Frequency|Object} [frequency] The cutoff frequency of the filter.\n *  @param {string=} type The type of filter.\n *  @param {number=} rolloff The drop in decibels per octave after the cutoff frequency.\n *                            3 choices: -12, -24, and -48\n *  @example\n *  var filter = new Tone.Filter(200, \"highpass\");\n */\nTone.Filter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"rolloff\"], Tone.Filter);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  the filter(s)\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._filters = [];\n\n\t/**\n\t *  The cutoff frequency of the filter.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune parameter\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(0, Tone.Type.Cents);\n\n\t/**\n\t *  The gain of the filter, only used in certain filter types\n\t *  @type {Number}\n\t *  @signal\n\t */\n\tthis.gain = new Tone.Signal({\n\t\t\"value\" : options.gain,\n\t\t\"convert\" : true,\n\t\t\"type\" : Tone.Type.Decibels\n\t});\n\n\t/**\n\t *  The Q or Quality of the filter\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.Q = new Tone.Signal(options.Q);\n\n\t/**\n\t *  the type of the filter\n\t *  @type {string}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  the rolloff value of the filter\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._rolloff = options.rolloff;\n\n\t//set the rolloff;\n\tthis.rolloff = options.rolloff;\n\tthis._readOnly([\"detune\", \"frequency\", \"gain\", \"Q\"]);\n};\n\nTone.extend(Tone.Filter, Tone.AudioNode);\n\n/**\n *  the default parameters\n *\n *  @static\n *  @type {Object}\n */\nTone.Filter.defaults = {\n\t\"type\" : \"lowpass\",\n\t\"frequency\" : 350,\n\t\"rolloff\" : -12,\n\t\"Q\" : 1,\n\t\"gain\" : 0,\n};\n\n/**\n * The type of the filter. Types: \"lowpass\", \"highpass\",\n * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\".\n * @memberOf Tone.Filter#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Filter.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tvar types = [\"lowpass\", \"highpass\", \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n\t\tif (types.indexOf(type)=== -1){\n\t\t\tthrow new TypeError(\"Tone.Filter: invalid type \"+type);\n\t\t}\n\t\tthis._type = type;\n\t\tfor (var i = 0; i < this._filters.length; i++){\n\t\t\tthis._filters[i].type = type;\n\t\t}\n\t}\n});\n\n/**\n * The rolloff of the filter which is the drop in db\n * per octave. Implemented internally by cascading filters.\n * Only accepts the values -12, -24, -48 and -96.\n * @memberOf Tone.Filter#\n * @type {number}\n * @name rolloff\n */\nObject.defineProperty(Tone.Filter.prototype, \"rolloff\", {\n\tget : function(){\n\t\treturn this._rolloff;\n\t},\n\tset : function(rolloff){\n\t\trolloff = parseInt(rolloff, 10);\n\t\tvar possibilities = [-12, -24, -48, -96];\n\t\tvar cascadingCount = possibilities.indexOf(rolloff);\n\t\t//check the rolloff is valid\n\t\tif (cascadingCount === -1){\n\t\t\tthrow new RangeError(\"Tone.Filter: rolloff can only be -12, -24, -48 or -96\");\n\t\t}\n\t\tcascadingCount += 1;\n\t\tthis._rolloff = rolloff;\n\t\t//first disconnect the filters and throw them away\n\t\tthis.input.disconnect();\n\t\tfor (var i = 0; i < this._filters.length; i++){\n\t\t\tthis._filters[i].disconnect();\n\t\t\tthis._filters[i] = null;\n\t\t}\n\t\tthis._filters = new Array(cascadingCount);\n\t\tfor (var count = 0; count < cascadingCount; count++){\n\t\t\tvar filter = this.context.createBiquadFilter();\n\t\t\tfilter.type = this._type;\n\t\t\tthis.frequency.connect(filter.frequency);\n\t\t\tthis.detune.connect(filter.detune);\n\t\t\tthis.Q.connect(filter.Q);\n\t\t\tthis.gain.connect(filter.gain);\n\t\t\tthis._filters[count] = filter;\n\t\t}\n\t\t//connect them up\n\t\tvar connectionChain = [this.input].concat(this._filters).concat([this.output]);\n\t\tTone.connectSeries.apply(Tone, connectionChain);\n\t}\n});\n\n/**\n * Get the frequency response curve. This curve represets how the filter\n * responses to frequencies between 20hz-20khz. \n * @param  {Number} [len=128] The number of values to return\n * @return {Float32Array}     The frequency response curve between 20-20k\n */\nTone.Filter.prototype.getFrequencyResponse = function(len){\n\tlen = Tone.defaultArg(len, 128);\n\t//start with all 1s\n\tvar totalResponse = new Float32Array(len).map(function(){\n\t\treturn 1;\n\t});\n\tvar freqValues = new Float32Array(len);\n\tfor (var i = 0; i < len; i++){\n\t\tconst norm = Math.pow(i / len, 2);\n\t\tvar freq = norm * (20000 - 20) + 20;\n\t\tfreqValues[i] = freq;\n\t}\n\tvar magValues = new Float32Array(len);\n\tvar phaseValues = new Float32Array(len);\n\tthis._filters.forEach(function(){\n\t\tvar filterClone = this.context.createBiquadFilter();\n\t\tfilterClone.type = this._type;\n\t\tfilterClone.Q.value = this.Q.value;\n\t\tfilterClone.frequency.value = this.frequency.value;\n\t\tfilterClone.gain.value = this.gain.value;\n\t\tfilterClone.getFrequencyResponse(freqValues, magValues, phaseValues);\n\t\tmagValues.forEach(function(val, i){\n\t\t\ttotalResponse[i] *= val;\n\t\t});\n\t}.bind(this));\n\treturn totalResponse;\n};\n\n/**\n *  Clean up.\n *  @return {Tone.Filter} this\n */\nTone.Filter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tfor (var i = 0; i < this._filters.length; i++){\n\t\tthis._filters[i].disconnect();\n\t\tthis._filters[i] = null;\n\t}\n\tthis._filters = null;\n\tthis._writable([\"detune\", \"frequency\", \"gain\", \"Q\"]);\n\tthis.frequency.dispose();\n\tthis.Q.dispose();\n\tthis.frequency = null;\n\tthis.Q = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.gain.dispose();\n\tthis.gain = null;\n\treturn this;\n};\n\nexport default Tone.Filter;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Merge brings two signals into the left and right\n *          channels of a single stereo channel.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {number} [channels=2] The number of channels to merge. \n *  @example\n * var merge = new Tone.Merge().toMaster();\n * //routing a sine tone in the left channel\n * //and noise in the right channel\n * var osc = new Tone.Oscillator().connect(merge.left);\n * var noise = new Tone.Noise().connect(merge.right);\n * //starting our oscillators\n * noise.start();\n * osc.start();\n */\nTone.Merge = function(channels){\n\n\t//defaults to 2 channels\n\tchannels = Tone.defaultArg(channels, 2);\n\t\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(channels, 0);\n\n\t/**\n\t *  the merger node for the two channels\n\t *  @type {ChannelMergerNode}\n\t *  @private\n\t */\n\tthis._merger = this.output = this.context.createChannelMerger(channels);\n\n\t//connections\n\tfor (var i = 0; i < channels; i++){\n\t\tthis.input[i] = new Tone.Gain();\n\t\tthis.input[i].connect(this._merger, 0, i);\n\t\tthis.input[i].channelCount = 1;\n\t\tthis.input[i].channelCountMode = \"explicit\";\n\t}\n\n\t/**\n\t *  The left input channel.\n\t *  Alias for <code>input[0]</code>\n\t *  @type {GainNode}\n\t */\n\tthis.left = this.input[0];\n\n\t/**\n\t *  The right input channel.\n\t *  Alias for <code>input[1]</code>.\n\t *  @type {GainNode}\n\t */\n\tthis.right = this.input[1];\n};\n\nTone.extend(Tone.Merge, Tone.AudioNode);\n\n/**\n *  Clean up.\n *  @returns {Tone.Merge} this\n */\nTone.Merge.prototype.dispose = function(){\n\tthis.input.forEach(function(input){\n\t\tinput.dispose();\n\t});\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.left = null;\n\tthis.right = null;\n\tthis._merger.disconnect();\n\tthis._merger = null;\n\treturn this;\n};\n\nexport default Tone.Merge;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  AudioBuffer.copyTo/FromChannel polyfill\n *  @private\n */\nif (Tone.supported){\n\tif (!AudioBuffer.prototype.copyToChannel){\n\t\tAudioBuffer.prototype.copyToChannel = function(src, chanNum, start){\n\t\t\tvar channel = this.getChannelData(chanNum);\n\t\t\tstart = start || 0;\n\t\t\tfor (var i = 0; i < channel.length; i++){\n\t\t\t\tchannel[i+start] = src[i];\n\t\t\t}\n\t\t};\n\t\tAudioBuffer.prototype.copyFromChannel = function(dest, chanNum, start){\n\t\t\tvar channel = this.getChannelData(chanNum);\n\t\t\tstart = start || 0;\n\t\t\tfor (var i = 0; i < dest.length; i++){\n\t\t\t\tdest[i] = channel[i+start];\n\t\t\t}\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Emitter\";\nimport \"../type/Type\";\nimport \"../shim/AudioBuffer\";\n\n/**\n *  @class  Buffer loading and storage. Tone.Buffer is used internally by all\n *          classes that make requests for audio files such as Tone.Player,\n *          Tone.Sampler and Tone.Convolver.\n *\n *          Aside from load callbacks from individual buffers, Tone.Buffer\n *  \t\tprovides events which keep track of the loading progress\n *  \t\tof _all_ of the buffers. These are Tone.Buffer.on(\"load\" / \"progress\" / \"error\")\n *\n *  @constructor\n *  @extends {Tone}\n *  @param {AudioBuffer|String} url The url to load, or the audio buffer to set.\n *  @param {Function=} onload A callback which is invoked after the buffer is loaded.\n *                            It's recommended to use `Tone.Buffer.on('load', callback)` instead\n *                            since it will give you a callback when _all_ buffers are loaded.\n *  @param {Function=} onerror The callback to invoke if there is an error\n *  @example\n * var buffer = new Tone.Buffer(\"path/to/sound.mp3\", function(){\n * \t//the buffer is now available.\n * \tvar buff = buffer.get();\n * });\n *  @example\n * //can load provide fallback extension types if the first type is not supported.\n * var buffer = new Tone.Buffer(\"path/to/sound.[mp3|ogg|wav]\");\n */\nTone.Buffer = function(){\n\n\tvar options = Tone.defaults(arguments, [\"url\", \"onload\", \"onerror\"], Tone.Buffer);\n\tTone.call(this);\n\n\t/**\n\t *  stores the loaded AudioBuffer\n\t *  @type {AudioBuffer}\n\t *  @private\n\t */\n\tthis._buffer = null;\n\n\t/**\n\t *  indicates if the buffer should be reversed or not\n\t *  @type {Boolean}\n\t *  @private\n\t */\n\tthis._reversed = options.reverse;\n\n\t/**\n\t *  The XHR\n\t *  @type  {XMLHttpRequest}\n\t *  @private\n\t */\n\tthis._xhr = null;\n\n\t/**\n\t * Private callback when the buffer is loaded.\n\t * @type {Function}\n\t * @private\n\t */\n\tthis.onload = Tone.noOp;\n\n\tif (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer){\n\t\tthis.set(options.url);\n\t\tif (!this.loaded){\n\t\t\tthis.onload = options.onload;\n\t\t}\n\t} else if (Tone.isString(options.url)){\n\t\tthis.load(options.url).then(options.onload).catch(options.onerror);\n\t}\n};\n\nTone.extend(Tone.Buffer);\n\n/**\n *  the default parameters\n *  @type {Object}\n */\nTone.Buffer.defaults = {\n\t\"url\" : undefined,\n\t\"reverse\" : false,\n\t\"onload\" : Tone.noOp,\n\t\"onerror\" : Tone.noOp\n};\n\n/**\n *  Pass in an AudioBuffer or Tone.Buffer to set the value\n *  of this buffer.\n *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n *  @returns {Tone.Buffer} this\n */\nTone.Buffer.prototype.set = function(buffer){\n\tif (buffer instanceof Tone.Buffer){\n\t\t//if it's loaded, set it\n\t\tif (buffer.loaded){\n\t\t\tthis._buffer = buffer.get();\n\t\t} else {\n\t\t\t//otherwise when it's loaded, invoke it's callback\n\t\t\tbuffer.onload = function(){\n\t\t\t\tthis.set(buffer);\n\t\t\t\tthis.onload(this);\n\t\t\t}.bind(this);\n\t\t}\n\t} else {\n\t\tthis._buffer = buffer;\n\t}\n\t//reverse it initially\n\tif (this._reversed){\n\t\tthis._reverse();\n\t}\n\treturn this;\n};\n\n/**\n *  @return {AudioBuffer} The audio buffer stored in the object.\n */\nTone.Buffer.prototype.get = function(){\n\treturn this._buffer;\n};\n\n/**\n *  Makes an xhr reqest for the selected url then decodes\n *  the file as an audio buffer. Invokes\n *  the callback once the audio buffer loads.\n *  @param {String} url The url of the buffer to load.\n *                      filetype support depends on the\n *                      browser.\n *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer\n */\nTone.Buffer.prototype.load = function(url, onload, onerror){\n\n\tvar promise = new Promise(function(load, error){\n\n\t\tthis._xhr = Tone.Buffer.load(url,\n\n\t\t\t//success\n\t\t\tfunction(buff){\n\t\t\t\tthis._xhr = null;\n\t\t\t\tthis.set(buff);\n\t\t\t\tload(this);\n\t\t\t\tthis.onload(this);\n\t\t\t\tif (onload){\n\t\t\t\t\tonload(this);\n\t\t\t\t}\n\t\t\t}.bind(this),\n\n\t\t\t//error\n\t\t\tfunction(err){\n\t\t\t\tthis._xhr = null;\n\t\t\t\terror(err);\n\t\t\t\tif (onerror){\n\t\t\t\t\tonerror(err);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\n\t}.bind(this));\n\n\treturn promise;\n};\n\n/**\n *  dispose and disconnect\n *  @returns {Tone.Buffer} this\n */\nTone.Buffer.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis._buffer = null;\n\tif (this._xhr){\n\t\tTone.Buffer._removeFromDownloadQueue(this._xhr);\n\t\tthis._xhr.abort();\n\t\tthis._xhr = null;\n\t}\n\treturn this;\n};\n\n/**\n * If the buffer is loaded or not\n * @memberOf Tone.Buffer#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"loaded\", {\n\t\"get\" : function(){\n\t\treturn this.length > 0;\n\t},\n});\n\n/**\n * The duration of the buffer.\n * @memberOf Tone.Buffer#\n * @type {Number}\n * @name duration\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"duration\", {\n\t\"get\" : function(){\n\t\tif (this._buffer){\n\t\t\treturn this._buffer.duration;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n});\n\n/**\n * The length of the buffer in samples\n * @memberOf Tone.Buffer#\n * @type {Number}\n * @name length\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"length\", {\n\t\"get\" : function(){\n\t\tif (this._buffer){\n\t\t\treturn this._buffer.length;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n});\n\n/**\n * The number of discrete audio channels. Returns 0 if no buffer\n * is loaded.\n * @memberOf Tone.Buffer#\n * @type {Number}\n * @name numberOfChannels\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"numberOfChannels\", {\n\t\"get\" : function(){\n\t\tif (this._buffer){\n\t\t\treturn this._buffer.numberOfChannels;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n});\n\n/**\n *  Set the audio buffer from the array. To create a multichannel AudioBuffer,\n *  pass in a multidimensional array.\n *  @param {Float32Array} array The array to fill the audio buffer\n *  @return {Tone.Buffer} this\n */\nTone.Buffer.prototype.fromArray = function(array){\n\tvar isMultidimensional = array[0].length > 0;\n\tvar channels = isMultidimensional ? array.length : 1;\n\tvar len = isMultidimensional ? array[0].length : array.length;\n\tvar buffer = this.context.createBuffer(channels, len, this.context.sampleRate);\n\tif (!isMultidimensional && channels === 1){\n\t\tarray = [array];\n\t}\n\tfor (var c = 0; c < channels; c++){\n\t\tbuffer.copyToChannel(array[c], c);\n\t}\n\tthis._buffer = buffer;\n\treturn this;\n};\n\n/**\n * \tSums muliple channels into 1 channel\n *  @param {Number=} channel Optionally only copy a single channel from the array.\n *  @return {Array}\n */\nTone.Buffer.prototype.toMono = function(chanNum){\n\tif (Tone.isNumber(chanNum)){\n\t\tthis.fromArray(this.toArray(chanNum));\n\t} else {\n\t\tvar outputArray = new Float32Array(this.length);\n\t\tvar numChannels = this.numberOfChannels;\n\t\tfor (var channel = 0; channel < numChannels; channel++){\n\t\t\tvar channelArray = this.toArray(channel);\n\t\t\tfor (var i = 0; i < channelArray.length; i++){\n\t\t\t\toutputArray[i] += channelArray[i];\n\t\t\t}\n\t\t}\n\t\t//divide by the number of channels\n\t\toutputArray = outputArray.map(function(sample){\n\t\t\treturn sample / numChannels;\n\t\t});\n\t\tthis.fromArray(outputArray);\n\t}\n\treturn this;\n};\n\n/**\n * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional\n * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n *  @param {Number=} channel Optionally only copy a single channel from the array.\n *  @return {Array}\n */\nTone.Buffer.prototype.toArray = function(channel){\n\tif (Tone.isNumber(channel)){\n\t\treturn this.getChannelData(channel);\n\t} else if (this.numberOfChannels === 1){\n\t\treturn this.toArray(0);\n\t} else {\n\t\tvar ret = [];\n\t\tfor (var c = 0; c < this.numberOfChannels; c++){\n\t\t\tret[c] = this.getChannelData(c);\n\t\t}\n\t\treturn ret;\n\t}\n};\n\n/**\n *  Returns the Float32Array representing the PCM audio data for the specific channel.\n *  @param  {Number}  channel  The channel number to return\n *  @return  {Float32Array}  The audio as a TypedArray\n */\nTone.Buffer.prototype.getChannelData = function(channel){\n\treturn this._buffer.getChannelData(channel);\n};\n\n/**\n *  Cut a subsection of the array and return a buffer of the\n *  subsection. Does not modify the original buffer\n *  @param {Time} start The time to start the slice\n *  @param {Time=} end The end time to slice. If none is given\n *                     will default to the end of the buffer\n *  @return {Tone.Buffer} this\n */\nTone.Buffer.prototype.slice = function(start, end){\n\tend = Tone.defaultArg(end, this.duration);\n\tvar startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));\n\tvar endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));\n\tvar replacement = [];\n\tfor (var i = 0; i < this.numberOfChannels; i++){\n\t\treplacement[i] = this.toArray(i).slice(startSamples, endSamples);\n\t}\n\tvar retBuffer = new Tone.Buffer().fromArray(replacement);\n\treturn retBuffer;\n};\n\n/**\n *  Reverse the buffer.\n *  @private\n *  @return {Tone.Buffer} this\n */\nTone.Buffer.prototype._reverse = function(){\n\tif (this.loaded){\n\t\tfor (var i = 0; i < this.numberOfChannels; i++){\n\t\t\tArray.prototype.reverse.call(this.getChannelData(i));\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n * Reverse the buffer.\n * @memberOf Tone.Buffer#\n * @type {Boolean}\n * @name reverse\n */\nObject.defineProperty(Tone.Buffer.prototype, \"reverse\", {\n\t\"get\" : function(){\n\t\treturn this._reversed;\n\t},\n\t\"set\" : function(rev){\n\t\tif (this._reversed !== rev){\n\t\t\tthis._reversed = rev;\n\t\t\tthis._reverse();\n\t\t}\n\t},\n});\n\n///////////////////////////////////////////////////////////////////////////\n// STATIC METHODS\n///////////////////////////////////////////////////////////////////////////\n\n//statically inherits Emitter methods\nTone.Emitter.mixin(Tone.Buffer);\n\n/**\n *  the static queue for all of the xhr requests\n *  @type {Array}\n *  @private\n */\nTone.Buffer._downloadQueue = [];\n\n/**\n *  A path which is prefixed before every url.\n *  @type  {String}\n *  @static\n */\nTone.Buffer.baseUrl = \"\";\n\n/**\n *  Create a Tone.Buffer from the array. To create a multichannel AudioBuffer,\n *  pass in a multidimensional array.\n *  @param {Float32Array} array The array to fill the audio buffer\n *  @return {Tone.Buffer} A Tone.Buffer created from the array\n */\nTone.Buffer.fromArray = function(array){\n\treturn (new Tone.Buffer()).fromArray(array);\n};\n\n/**\n * Creates a Tone.Buffer from a URL, returns a promise\n * which resolves to a Tone.Buffer\n * @param  {String} url The url to load.\n * @return {Promise<Tone.Buffer>}     A promise which resolves to a Tone.Buffer\n */\nTone.Buffer.fromUrl = function(url){\n\tvar buffer = new Tone.Buffer();\n\treturn buffer.load(url).then(function(){\n\t\treturn buffer;\n\t});\n};\n\n/**\n * Remove an xhr request from the download queue\n * @private\n */\nTone.Buffer._removeFromDownloadQueue = function(request){\n\tvar index = Tone.Buffer._downloadQueue.indexOf(request);\n\tif (index !== -1){\n\t\tTone.Buffer._downloadQueue.splice(index, 1);\n\t}\n};\n\n/**\n *  Loads a url using XMLHttpRequest.\n *  @param {String} url\n *  @param {Function} onload\n *  @param {Function} onerror\n *  @param {Function} onprogress\n *  @return {XMLHttpRequest}\n */\nTone.Buffer.load = function(url, onload, onerror){\n\t//default\n\tonload = Tone.defaultArg(onload, Tone.noOp);\n\n\t// test if the url contains multiple extensions\n\tvar matches = url.match(/\\[(.+\\|?)+\\]$/);\n\tif (matches){\n\t\tvar extensions = matches[1].split(\"|\");\n\t\tvar extension = extensions[0];\n\t\tfor (var i = 0; i < extensions.length; i++){\n\t\t\tif (Tone.Buffer.supportsType(extensions[i])){\n\t\t\t\textension = extensions[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\turl = url.replace(matches[0], extension);\n\t}\n\n\tfunction onError(e){\n\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\tTone.Buffer.emit(\"error\", e);\n\t\tif (onerror){\n\t\t\tonerror(e);\n\t\t} else {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tfunction onProgress(){\n\t\t//calculate the progress\n\t\tvar totalProgress = 0;\n\t\tfor (var i = 0; i < Tone.Buffer._downloadQueue.length; i++){\n\t\t\ttotalProgress += Tone.Buffer._downloadQueue[i].progress;\n\t\t}\n\t\tTone.Buffer.emit(\"progress\", totalProgress / Tone.Buffer._downloadQueue.length);\n\t}\n\n\tvar request = new XMLHttpRequest();\n\trequest.open(\"GET\", Tone.Buffer.baseUrl + url, true);\n\trequest.responseType = \"arraybuffer\";\n\t//start out as 0\n\trequest.progress = 0;\n\n\tTone.Buffer._downloadQueue.push(request);\n\n\trequest.addEventListener(\"load\", function(){\n\n\t\tif (request.status === 200){\n\t\t\tTone.context.decodeAudioData(request.response).then(function(buff){\n\n\t\t\t\trequest.progress = 1;\n\t\t\t\tonProgress();\n\t\t\t\tonload(buff);\n\n\t\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\t\tif (Tone.Buffer._downloadQueue.length === 0){\n\t\t\t\t\t//emit the event at the end\n\t\t\t\t\tTone.Buffer.emit(\"load\");\n\t\t\t\t}\n\t\t\t}).catch(function(){\n\t\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\t\tonError(\"Tone.Buffer: could not decode audio data: \"+url);\n\t\t\t});\n\t\t} else {\n\t\t\tonError(\"Tone.Buffer: could not locate file: \"+url);\n\t\t}\n\t});\n\trequest.addEventListener(\"error\", onError);\n\n\trequest.addEventListener(\"progress\", function(event){\n\t\tif (event.lengthComputable){\n\t\t\t//only go to 95%, the last 5% is when the audio is decoded\n\t\t\trequest.progress = (event.loaded / event.total) * 0.95;\n\t\t\tonProgress();\n\t\t}\n\t});\n\n\trequest.send();\n\n\treturn request;\n};\n\n/**\n *  Stop all of the downloads in progress\n *  @return {Tone.Buffer}\n *  @static\n */\nTone.Buffer.cancelDownloads = function(){\n\tTone.Buffer._downloadQueue.slice().forEach(function(request){\n\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\trequest.abort();\n\t});\n\treturn Tone.Buffer;\n};\n\n/**\n *  Checks a url's extension to see if the current browser can play that file type.\n *  @param {String} url The url/extension to test\n *  @return {Boolean} If the file extension can be played\n *  @static\n *  @example\n * Tone.Buffer.supportsType(\"wav\"); //returns true\n * Tone.Buffer.supportsType(\"path/to/file.wav\"); //returns true\n */\nTone.Buffer.supportsType = function(url){\n\tvar extension = url.split(\".\");\n\textension = extension[extension.length - 1];\n\tvar response = document.createElement(\"audio\").canPlayType(\"audio/\"+extension);\n\treturn response !== \"\";\n};\n\n/**\n *  Returns a Promise which resolves when all of the buffers have loaded\n *  @return {Promise}\n */\nTone.loaded = function(){\n\tvar onload, onerror;\n\tfunction removeEvents(){\n\t\t//remove the events when it's resolved\n\t\tTone.Buffer.off(\"load\", onload);\n\t\tTone.Buffer.off(\"error\", onerror);\n\t}\n\treturn new Promise(function(success, fail){\n\t\tonload = function(){\n\t\t\tsuccess();\n\t\t};\n\t\tonerror = function(){\n\t\t\tfail();\n\t\t};\n\t\t//add the event listeners\n\t\tTone.Buffer.on(\"load\", onload);\n\t\tTone.Buffer.on(\"error\", onerror);\n\t}).then(removeEvents).catch(function(e){\n\t\tremoveEvents();\n\t\tthrow new Error(e);\n\t});\n};\n\nexport default Tone.Buffer;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Oscillator\";\nimport \"../signal/Scale\";\nimport \"../core/AudioNode\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../type/Type\";\nimport \"../signal/Zero\";\n\n/**\n *  @class  LFO stands for low frequency oscillator. Tone.LFO produces an output signal\n *          which can be attached to an AudioParam or Tone.Signal\n *          in order to modulate that parameter with an oscillator. The LFO can\n *          also be synced to the transport to start/stop and change when the tempo changes.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Frequency|Object} [frequency] The frequency of the oscillation. Typically, LFOs will be\n *                               in the frequency range of 0.1 to 10 hertz.\n *  @param {number=} min The minimum output value of the LFO.\n *  @param {number=} max The maximum value of the LFO.\n *  @example\n * var lfo = new Tone.LFO(\"4n\", 400, 4000);\n * lfo.connect(filter.frequency);\n */\nTone.LFO = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"min\", \"max\"], Tone.LFO);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._oscillator = new Tone.Oscillator({\n\t\t\"frequency\" : options.frequency,\n\t\t\"type\" : options.type,\n\t});\n\n\t/**\n\t *  the lfo's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._oscillator.frequency;\n\n\t/**\n\t * The amplitude of the LFO, which controls the output range between\n\t * the min and max output. For example if the min is -10 and the max\n\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t * between -5 and 5.\n\t * @type {Number}\n\t * @signal\n\t */\n\tthis.amplitude = this._oscillator.volume;\n\tthis.amplitude.units = Tone.Type.NormalRange;\n\tthis.amplitude.value = options.amplitude;\n\n\t/**\n\t *  The signal which is output when the LFO is stopped\n\t *  @type  {Tone.Signal}\n\t *  @private\n\t */\n\tthis._stoppedSignal = new Tone.Signal(0, Tone.Type.AudioRange);\n\n\t/**\n\t *  Just outputs zeros.\n\t *  @type {Tone.Zero}\n\t *  @private\n\t */\n\tthis._zeros = new Tone.Zero();\n\n\t/**\n\t *  The value that the LFO outputs when it's stopped\n\t *  @type {AudioRange}\n\t *  @private\n\t */\n\tthis._stoppedValue = 0;\n\n\t/**\n\t *  @type {Tone.AudioToGain}\n\t *  @private\n\t */\n\tthis._a2g = new Tone.AudioToGain();\n\n\t/**\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._scaler = this.output = new Tone.Scale(options.min, options.max);\n\n\t/**\n\t *  the units of the LFO (used for converting)\n\t *  @type {Tone.Type}\n\t *  @private\n\t */\n\tthis._units = Tone.Type.Default;\n\tthis.units = options.units;\n\n\t//connect it up\n\tthis._oscillator.chain(this._a2g, this._scaler);\n\tthis._zeros.connect(this._a2g);\n\tthis._stoppedSignal.connect(this._a2g);\n\tthis._readOnly([\"amplitude\", \"frequency\"]);\n\tthis.phase = options.phase;\n};\n\nTone.extend(Tone.LFO, Tone.AudioNode);\n\n/**\n *  the default parameters\n *\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.LFO.defaults = {\n\t\"type\" : \"sine\",\n\t\"min\" : 0,\n\t\"max\" : 1,\n\t\"phase\" : 0,\n\t\"frequency\" : \"4n\",\n\t\"amplitude\" : 1,\n\t\"units\" : Tone.Type.Default\n};\n\n/**\n *  Start the LFO.\n *  @param  {Time} [time=now] the time the LFO will start\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._stoppedSignal.setValueAtTime(0, time);\n\tthis._oscillator.start(time);\n\treturn this;\n};\n\n/**\n *  Stop the LFO.\n *  @param  {Time} [time=now] the time the LFO will stop\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\tthis._oscillator.stop(time);\n\treturn this;\n};\n\n/**\n *  Sync the start/stop/pause to the transport\n *  and the frequency to the bpm of the transport\n *  @returns {Tone.LFO} this\n *  @example\n *  lfo.frequency.value = \"8n\";\n *  lfo.sync().start(0)\n *  //the rate of the LFO will always be an eighth note,\n *  //even as the tempo changes\n */\nTone.LFO.prototype.sync = function(){\n\tthis._oscillator.sync();\n\tthis._oscillator.syncFrequency();\n\treturn this;\n};\n\n/**\n *  unsync the LFO from transport control\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.unsync = function(){\n\tthis._oscillator.unsync();\n\tthis._oscillator.unsyncFrequency();\n\treturn this;\n};\n\n/**\n * The miniumum output of the LFO.\n * @memberOf Tone.LFO#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.LFO.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._toUnits(this._scaler.min);\n\t},\n\tset : function(min){\n\t\tmin = this._fromUnits(min);\n\t\tthis._scaler.min = min;\n\t}\n});\n\n/**\n * The maximum output of the LFO.\n * @memberOf Tone.LFO#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.LFO.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._toUnits(this._scaler.max);\n\t},\n\tset : function(max){\n\t\tmax = this._fromUnits(max);\n\t\tthis._scaler.max = max;\n\t}\n});\n\n/**\n * The type of the oscillator: sine, square, sawtooth, triangle.\n * @memberOf Tone.LFO#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.LFO.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._oscillator.type;\n\t},\n\tset : function(type){\n\t\tthis._oscillator.type = type;\n\t\tthis._stoppedValue = this._oscillator._getInitialValue();\n\t\tthis._stoppedSignal.value = this._stoppedValue;\n\t}\n});\n\n/**\n * The phase of the LFO.\n * @memberOf Tone.LFO#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.LFO.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._oscillator.phase;\n\t},\n\tset : function(phase){\n\t\tthis._oscillator.phase = phase;\n\t\tthis._stoppedValue = this._oscillator._getInitialValue();\n\t\tthis._stoppedSignal.value = this._stoppedValue;\n\t}\n});\n\n/**\n * The output units of the LFO.\n * @memberOf Tone.LFO#\n * @type {Tone.Type}\n * @name units\n */\nObject.defineProperty(Tone.LFO.prototype, \"units\", {\n\tget : function(){\n\t\treturn this._units;\n\t},\n\tset : function(val){\n\t\tvar currentMin = this.min;\n\t\tvar currentMax = this.max;\n\t\t//convert the min and the max\n\t\tthis._units = val;\n\t\tthis.min = currentMin;\n\t\tthis.max = currentMax;\n\t}\n});\n\n/**\n *  Returns the playback state of the source, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.LFO#\n *  @name state\n */\nObject.defineProperty(Tone.LFO.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._oscillator.state;\n\t}\n});\n\n/**\n *  Connect the output of the LFO to an AudioParam, AudioNode, or Tone Node.\n *  Tone.LFO will automatically convert to the destination units of the\n *  will get the units from the connected node.\n *  @param  {Tone | AudioParam | AudioNode} node\n *  @param {number} [outputNum=0] optionally which output to connect from\n *  @param {number} [inputNum=0] optionally which input to connect to\n *  @returns {Tone.LFO} this\n *  @private\n */\nTone.LFO.prototype.connect = function(node){\n\tif (node.constructor === Tone.Signal || node.constructor === Tone.Param){\n\t\tthis.convert = node.convert;\n\t\tthis.units = node.units;\n\t}\n\tTone.SignalBase.prototype.connect.apply(this, arguments);\n\treturn this;\n};\n\n/**\n *  private method borrowed from Param converts\n *  units from their destination value\n *  @function\n *  @private\n */\nTone.LFO.prototype._fromUnits = Tone.Param.prototype._fromUnits;\n\n/**\n *  private method borrowed from Param converts\n *  units to their destination value\n *  @function\n *  @private\n */\nTone.LFO.prototype._toUnits = Tone.Param.prototype._toUnits;\n\n/**\n *  disconnect and dispose\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"amplitude\", \"frequency\"]);\n\tthis._oscillator.dispose();\n\tthis._oscillator = null;\n\tthis._stoppedSignal.dispose();\n\tthis._stoppedSignal = null;\n\tthis._zeros.dispose();\n\tthis._zeros = null;\n\tthis._scaler.dispose();\n\tthis._scaler = null;\n\tthis._a2g.dispose();\n\tthis._a2g = null;\n\tthis.frequency = null;\n\tthis.amplitude = null;\n\treturn this;\n};\n\nexport default Tone.LFO;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Negate\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\n\n/**\n *  @class Subtract the signal connected to <code>input[1]</code> from the signal connected \n *         to <code>input[0]</code>. If an argument is provided in the constructor, the \n *         signals <code>.value</code> will be subtracted from the incoming signal.\n *\n *  @extends {Tone.Signal}\n *  @constructor\n *  @param {number=} value The value to subtract from the incoming signal. If the value\n *                         is omitted, it will subtract the second signal from the first.\n *  @example\n * var sub = new Tone.Subtract(1);\n * var sig = new Tone.Signal(4).connect(sub);\n * //the output of sub is 3. \n *  @example\n * var sub = new Tone.Subtract();\n * var sigA = new Tone.Signal(10);\n * var sigB = new Tone.Signal(2.5);\n * sigA.connect(sub, 0, 0);\n * sigB.connect(sub, 0, 1);\n * //output of sub is 7.5\n */\nTone.Subtract = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  the summing node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._sum = this.input[0] = this.output = new Tone.Gain();\n\n\t/**\n\t *  negate the input of the second input before connecting it\n\t *  to the summing node.\n\t *  @type {Tone.Negate}\n\t *  @private\n\t */\n\tthis._neg = new Tone.Negate();\n\n\t/**\n\t *  the node where the value is set\n\t *  @private\n\t *  @type {Tone.Signal}\n\t */\n\tthis._param = this.input[1] = new Tone.Signal(value);\n\tthis._param.chain(this._neg, this._sum);\n};\n\nTone.extend(Tone.Subtract, Tone.Signal);\n\n/**\n *  Clean up.\n *  @returns {Tone.SignalBase} this\n */\nTone.Subtract.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._neg.dispose();\n\tthis._neg = null;\n\tthis._sum.disconnect();\n\tthis._sum = null;\n\treturn this;\n};\n\nexport default Tone.Subtract;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\nimport \"../core/AudioNode\";\nimport \"../core/Timeline\";\n\n/**\n *  @class Tone.Param wraps the native Web Audio's AudioParam to provide\n *         additional unit conversion functionality. It also\n *         serves as a base-class for classes which have a single,\n *         automatable parameter.\n *  @extends {Tone.AudioNode}\n *  @param  {AudioParam}  param  The parameter to wrap.\n *  @param  {Tone.Type} units The units of the audio param.\n *  @param  {Boolean} convert If the param should be converted.\n */\nTone.Param = function(){\n\n\tvar options = Tone.defaults(arguments, [\"param\", \"units\", \"convert\"], Tone.Param);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The native parameter to control\n\t *  @type  {AudioParam}\n\t *  @private\n\t */\n\tthis._param = this.input = options.param;\n\n\t/**\n\t *  The units of the parameter\n\t *  @type {Tone.Type}\n\t */\n\tthis.units = options.units;\n\n\t/**\n\t *  If the value should be converted or not\n\t *  @type {Boolean}\n\t */\n\tthis.convert = options.convert;\n\n\t/**\n\t *  True if the signal value is being overridden by\n\t *  a connected signal.\n\t *  @readOnly\n\t *  @type  {boolean}\n\t *  @private\n\t */\n\tthis.overridden = false;\n\n\t/**\n\t * The timeline which tracks all of the automations.\n\t * @type {Tone.Timeline}\n\t * @private\n\t */\n\tthis._events = new Tone.Timeline(1000);\n\n\tif (Tone.isDefined(options.value) && this._param){\n\t\tthis.setValueAtTime(options.value, 0);\n\t}\n};\n\nTone.extend(Tone.Param, Tone.AudioNode);\n\n/**\n *  Defaults\n *  @type  {Object}\n *  @const\n */\nTone.Param.defaults = {\n\t\"units\" : Tone.Type.Default,\n\t\"convert\" : true,\n\t\"param\" : undefined\n};\n\n/**\n * The current value of the parameter.\n * @memberOf Tone.Param#\n * @type {Number}\n * @name value\n */\nObject.defineProperty(Tone.Param.prototype, \"value\", {\n\tget : function(){\n\t\tvar now = this.now();\n\t\treturn this._toUnits(this.getValueAtTime(now));\n\t},\n\tset : function(value){\n\t\tthis._initialValue = this._fromUnits(value);\n\t\tthis.cancelScheduledValues(this.now());\n\t\tthis.setValueAtTime(value, this.now());\n\t}\n});\n\n/**\n * The minimum output value of the parameter\n * @memberOf Tone.Param#\n * @type {Number}\n * @name value\n */\nObject.defineProperty(Tone.Param.prototype, \"minValue\", {\n\tget : function(){\n\t\tif (this.units === Tone.Type.Time || this.units === Tone.Type.Frequency ||\n\t\t\tthis.units === Tone.Type.NormalRange || this.units === Tone.Type.Positive ||\n\t\t\tthis.units === Tone.Type.BPM){\n\t\t\treturn 0;\n\t\t} else if (this.units === Tone.Type.AudioRange){\n\t\t\treturn -1;\n\t\t} else if (this.units === Tone.Type.Decibels){\n\t\t\treturn -Infinity;\n\t\t} else {\n\t\t\treturn this._param.minValue;\n\t\t}\n\t}\n});\n\n/**\n * The maximum output value of the parameter\n * @memberOf Tone.Param#\n * @type {Number}\n * @name value\n */\nObject.defineProperty(Tone.Param.prototype, \"maxValue\", {\n\tget : function(){\n\t\tif (this.units === Tone.Type.NormalRange ||\n\t\t\tthis.units === Tone.Type.AudioRange){\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn this._param.maxValue;\n\t\t}\n\t}\n});\n\n/**\n *  Convert the given value from the type specified by Tone.Param.units\n *  into the destination value (such as Gain or Frequency).\n *  @private\n *  @param  {*} val the value to convert\n *  @return {number}     the number which the value should be set to\n */\nTone.Param.prototype._fromUnits = function(val){\n\tif ((this.convert || Tone.isUndef(this.convert)) && !this.overridden){\n\t\tswitch (this.units){\n\t\t\tcase Tone.Type.Time:\n\t\t\t\treturn this.toSeconds(val);\n\t\t\tcase Tone.Type.Frequency:\n\t\t\t\treturn this.toFrequency(val);\n\t\t\tcase Tone.Type.Decibels:\n\t\t\t\treturn Tone.dbToGain(val);\n\t\t\tcase Tone.Type.NormalRange:\n\t\t\t\treturn Math.min(Math.max(val, 0), 1);\n\t\t\tcase Tone.Type.AudioRange:\n\t\t\t\treturn Math.min(Math.max(val, -1), 1);\n\t\t\tcase Tone.Type.Positive:\n\t\t\t\treturn Math.max(val, 0);\n\t\t\tdefault:\n\t\t\t\treturn val;\n\t\t}\n\t} else {\n\t\treturn val;\n\t}\n};\n\n/**\n * Convert the parameters value into the units specified by Tone.Param.units.\n * @private\n * @param  {number} val the value to convert\n * @return {number}\n */\nTone.Param.prototype._toUnits = function(val){\n\tif (this.convert || Tone.isUndef(this.convert)){\n\t\tswitch (this.units){\n\t\t\tcase Tone.Type.Decibels:\n\t\t\t\treturn Tone.gainToDb(val);\n\t\t\tdefault:\n\t\t\t\treturn val;\n\t\t}\n\t} else {\n\t\treturn val;\n\t}\n};\n\n/**\n *  the minimum output value\n *  @type {Number}\n *  @private\n */\nTone.Param.prototype._minOutput = 1e-5;\n\n/**\n *  The event types\n *  @enum {String}\n *  @private\n */\nTone.Param.AutomationType = {\n\tLinear : \"linearRampToValueAtTime\",\n\tExponential : \"exponentialRampToValueAtTime\",\n\tTarget : \"setTargetAtTime\",\n\tSetValue : \"setValueAtTime\",\n\tCancel : \"cancelScheduledValues\"\n};\n\n/**\n *  Schedules a parameter value change at the given time.\n *  @param {*}\tvalue The value to set the signal.\n *  @param {Time}  time The time when the change should occur.\n *  @returns {Tone.Param} this\n *  @example\n * //set the frequency to \"G4\" in exactly 1 second from now.\n * freq.setValueAtTime(\"G4\", \"+1\");\n */\nTone.Param.prototype.setValueAtTime = function(value, time){\n\ttime = this.toSeconds(time);\n\tvalue = this._fromUnits(value);\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\"value\" : value,\n\t\t\"time\" : time,\n\t});\n\tthis.log(Tone.Param.AutomationType.SetValue, value, time);\n\tthis._param.setValueAtTime(value, time);\n\treturn this;\n};\n\n/**\n *  Get the signals value at the given time. Subsequent scheduling\n *  may invalidate the returned value.\n *  @param {Time} time When to get the value\n *  @returns {Number} The value at the given time\n */\nTone.Param.prototype.getValueAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar after = this._events.getAfter(time);\n\tvar before = this._events.get(time);\n\tvar initialValue = Tone.defaultArg(this._initialValue, this._param.defaultValue);\n\tvar value = initialValue;\n\t//if it was set by\n\tif (before === null){\n\t\tvalue = initialValue;\n\t} else if (before.type === Tone.Param.AutomationType.Target){\n\t\tvar previous = this._events.getBefore(before.time);\n\t\tvar previousVal;\n\t\tif (previous === null){\n\t\t\tpreviousVal = initialValue;\n\t\t} else {\n\t\t\tpreviousVal = previous.value;\n\t\t}\n\t\tvalue = this._exponentialApproach(before.time, previousVal, before.value, before.constant, time);\n\t} else if (after === null){\n\t\tvalue = before.value;\n\t} else if (after.type === Tone.Param.AutomationType.Linear){\n\t\tvalue = this._linearInterpolate(before.time, before.value, after.time, after.value, time);\n\t} else if (after.type === Tone.Param.AutomationType.Exponential){\n\t\tvalue = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);\n\t} else {\n\t\tvalue = before.value;\n\t}\n\treturn value;\n};\n\n/**\n *  Creates a schedule point with the current value at the current time.\n *  This is useful for creating an automation anchor point in order to\n *  schedule changes from the current value.\n *\n *  @param {number=} now (Optionally) pass the now value in.\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.setRampPoint = function(time){\n\ttime = this.toSeconds(time);\n\tvar currentVal = this.getValueAtTime(time);\n\tthis.cancelAndHoldAtTime(time);\n\tif (currentVal === 0){\n\t\tcurrentVal = this._minOutput;\n\t}\n\tthis.setValueAtTime(this._toUnits(currentVal), time);\n\treturn this;\n};\n\n/**\n *  Schedules a linear continuous change in parameter value from the\n *  previous scheduled parameter value to the given value.\n *\n *  @param  {number} value\n *  @param  {Time} endTime\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.linearRampToValueAtTime = function(value, endTime){\n\tvalue = this._fromUnits(value);\n\tendTime = this.toSeconds(endTime);\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.Linear,\n\t\t\"value\" : value,\n\t\t\"time\" : endTime,\n\t});\n\tthis.log(Tone.Param.AutomationType.Linear, value, endTime);\n\tthis._param.linearRampToValueAtTime(value, endTime);\n\treturn this;\n};\n\n/**\n *  Schedules an exponential continuous change in parameter value from\n *  the previous scheduled parameter value to the given value.\n *\n *  @param  {number} value\n *  @param  {Time} endTime\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.exponentialRampToValueAtTime = function(value, endTime){\n\tvalue = this._fromUnits(value);\n\tvalue = Math.max(this._minOutput, value);\n\tendTime = this.toSeconds(endTime);\n\t//store the event\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.Exponential,\n\t\t\"time\" : endTime,\n\t\t\"value\" : value\n\t});\n\tthis.log(Tone.Param.AutomationType.Exponential, value, endTime);\n\tthis._param.exponentialRampToValueAtTime(value, endTime);\n\treturn this;\n};\n\n/**\n *  Schedules an exponential continuous change in parameter value from\n *  the current time and current value to the given value over the\n *  duration of the rampTime.\n *\n *  @param  {number} value   The value to ramp to.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //exponentially ramp to the value 2 over 4 seconds.\n * signal.exponentialRampTo(2, 4);\n */\nTone.Param.prototype.exponentialRampTo = function(value, rampTime, startTime){\n\tstartTime = this.toSeconds(startTime);\n\tthis.setRampPoint(startTime);\n\tthis.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\treturn this;\n};\n\n/**\n *  Schedules an linear continuous change in parameter value from\n *  the current time and current value to the given value over the\n *  duration of the rampTime.\n *\n *  @param  {number} value   The value to ramp to.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //linearly ramp to the value 4 over 3 seconds.\n * signal.linearRampTo(4, 3);\n */\nTone.Param.prototype.linearRampTo = function(value, rampTime, startTime){\n\tstartTime = this.toSeconds(startTime);\n\tthis.setRampPoint(startTime);\n\tthis.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time. Since it\n *  is an exponential approach it will continue approaching after the ramp duration. The\n *  rampTime is the time that it takes to reach over 99% of the way towards the value.\n *  @param  {number} value   The value to ramp to.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //exponentially ramp to the value 2 over 4 seconds.\n * signal.exponentialRampTo(2, 4);\n */\nTone.Param.prototype.targetRampTo = function(value, rampTime, startTime){\n\tstartTime = this.toSeconds(startTime);\n\tthis.setRampPoint(startTime);\n\tthis.exponentialApproachValueAtTime(value, startTime, rampTime);\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time. Since it\n *  is an exponential approach it will continue approaching after the ramp duration. The\n *  rampTime is the time that it takes to reach over 99% of the way towards the value. This methods\n *  is similar to setTargetAtTime except the third argument is a time instead of a 'timeConstant'\n *  @param  {number} value   The value to ramp to.\n *  @param {Time}\ttime \tWhen the ramp should start.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @returns {Tone.Param} this\n *  @example\n * //exponentially ramp to the value 2 over 4 seconds.\n * signal.exponentialRampTo(2, 4);\n */\nTone.Param.prototype.exponentialApproachValueAtTime = function(value, time, rampTime){\n\tvar timeConstant = Math.log(this.toSeconds(rampTime)+1)/Math.log(200);\n\ttime = this.toSeconds(time);\n\tthis.setTargetAtTime(value, time, timeConstant);\n\t//at 90% start a linear ramp to the final value\n\tthis.cancelAndHoldAtTime(time + rampTime * 0.9);\n\tthis.linearRampToValueAtTime(value, time + rampTime);\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time with\n *  a rate having the given time constant.\n *  @param {number} value\n *  @param {Time} startTime\n *  @param {number} timeConstant\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.setTargetAtTime = function(value, startTime, timeConstant){\n\tvalue = this._fromUnits(value);\n\t// The value will never be able to approach without timeConstant > 0.\n\tif (timeConstant <= 0){\n\t\tthrow new Error(\"timeConstant must be greater than 0\");\n\t}\n\tstartTime = this.toSeconds(startTime);\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.Target,\n\t\t\"value\" : value,\n\t\t\"time\" : startTime,\n\t\t\"constant\" : timeConstant\n\t});\n\tthis.log(Tone.Param.AutomationType.Target, value, startTime, timeConstant);\n\tthis._param.setTargetAtTime(value, startTime, timeConstant);\n\treturn this;\n};\n\n/**\n *  Sets an array of arbitrary parameter values starting at the given time\n *  for the given duration.\n *\n *  @param {Array} values\n *  @param {Time} startTime\n *  @param {Time} duration\n *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.setValueCurveAtTime = function(values, startTime, duration, scaling){\n\tscaling = Tone.defaultArg(scaling, 1);\n\tduration = this.toSeconds(duration);\n\tstartTime = this.toSeconds(startTime);\n\tthis.setValueAtTime(values[0] * scaling, startTime);\n\tvar segTime = duration / (values.length - 1);\n\tfor (var i = 1; i < values.length; i++){\n\t\tthis.linearRampToValueAtTime(values[i] * scaling, startTime + i * segTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancels all scheduled parameter changes with times greater than or\n *  equal to startTime.\n *\n *  @param  {Time} time\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.cancelScheduledValues = function(time){\n\ttime = this.toSeconds(time);\n\tthis._events.cancel(time);\n\tthis._param.cancelScheduledValues(time);\n\tthis.log(Tone.Param.AutomationType.Cancel, time);\n\treturn this;\n};\n\n/**\n *  This is similar to [cancelScheduledValues](#cancelScheduledValues) except\n *  it holds the automated value at time until the next automated event.\n *  @param  {Time} time\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.cancelAndHoldAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar valueAtTime = this.getValueAtTime(time);\n\tthis.log(\"cancelAndHoldAtTime\", time, \"value=\"+valueAtTime);\n\n\t//remove the schedule events\n\tthis._param.cancelScheduledValues(time);\n\n\t//if there is an event at the given time\n\t//and that even is not a \"set\"\n\tvar before = this._events.get(time);\n\tvar after = this._events.getAfter(time);\n\tif (before && before.time === time){\n\t\t//remove everything after\n\t\tif (after){\n\t\t\tthis._events.cancel(after.time);\n\t\t} else {\n\t\t\tthis._events.cancel(time + this.sampleTime);\n\t\t}\n\t} else if (after){\n\t\t//cancel the next event(s)\n\t\tthis._events.cancel(after.time);\n\t\tif (after.type === Tone.Param.AutomationType.Linear){\n\t\t\tthis.linearRampToValueAtTime(valueAtTime, time);\n\t\t} else if (after.type === Tone.Param.AutomationType.Exponential){\n\t\t\tthis.exponentialRampToValueAtTime(valueAtTime, time);\n\t\t}\n\t}\n\n\t//set the value at the given time\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\"value\" : valueAtTime,\n\t\t\"time\" : time\n\t});\n\tthis._param.setValueAtTime(valueAtTime, time);\n\treturn this;\n};\n\n/**\n *  Ramps to the given value over the duration of the rampTime.\n *  Automatically selects the best ramp type (exponential or linear)\n *  depending on the `units` of the signal\n *\n *  @param  {number} value\n *  @param  {Time} rampTime \tThe time that it takes the\n *                              value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //ramp to the value either linearly or exponentially\n * //depending on the \"units\" value of the signal\n * signal.rampTo(0, 10);\n *  @example\n * //schedule it to ramp starting at a specific time\n * signal.rampTo(0, 10, 5)\n */\nTone.Param.prototype.rampTo = function(value, rampTime, startTime){\n\trampTime = Tone.defaultArg(rampTime, 0.1);\n\tif (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM || this.units === Tone.Type.Decibels){\n\t\tthis.exponentialRampTo(value, rampTime, startTime);\n\t} else {\n\t\tthis.linearRampTo(value, rampTime, startTime);\n\t}\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tAUTOMATION CURVE CALCULATIONS\n//\tMIT License, copyright (c) 2014 Jordan Santell\n///////////////////////////////////////////////////////////////////////////\n\n// Calculates the the value along the curve produced by setTargetAtTime\nTone.Param.prototype._exponentialApproach = function(t0, v0, v1, timeConstant, t){\n\treturn v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n};\n\n// Calculates the the value along the curve produced by linearRampToValueAtTime\nTone.Param.prototype._linearInterpolate = function(t0, v0, t1, v1, t){\n\treturn v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n};\n\n// Calculates the the value along the curve produced by exponentialRampToValueAtTime\nTone.Param.prototype._exponentialInterpolate = function(t0, v0, t1, v1, t){\n\treturn v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n};\n\n/**\n *  Clean up\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._param = null;\n\tthis._events = null;\n\treturn this;\n};\n\nexport default Tone.Param;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/Split\";\nimport \"../component/Merge\";\nimport \"../component/CrossFade\";\n\n/**\n *  @class Base class for Stereo effects. Provides effectSendL/R and effectReturnL/R.\n *\n *\t@constructor\n *\t@extends {Tone.Effect}\n */\nTone.StereoEffect = function(){\n\n\t//get the defaults\n\tTone.AudioNode.call(this);\n\tvar options = Tone.defaults(arguments, [\"wet\"], Tone.Effect);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  the drywet knob to control the amount of effect\n\t *  @type {Tone.CrossFade}\n\t *  @private\n\t */\n\tthis._dryWet = new Tone.CrossFade(options.wet);\n\n\t/**\n\t *  The wet control, i.e. how much of the effected\n\t *  will pass through to the output.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.wet = this._dryWet.fade;\n\n\t/**\n\t *  then split it\n\t *  @type {Tone.Split}\n\t *  @private\n\t */\n\tthis._split = new Tone.Split();\n\n\t/**\n\t *  the effects send LEFT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectSendL = this._split.left;\n\n\t/**\n\t *  the effects send RIGHT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectSendR = this._split.right;\n\n\t/**\n\t *  the stereo effect merger\n\t *  @type {Tone.Merge}\n\t *  @private\n\t */\n\tthis._merge = new Tone.Merge();\n\n\t/**\n\t *  the effect return LEFT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectReturnL = this._merge.left;\n\n\t/**\n\t *  the effect return RIGHT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectReturnR = this._merge.right;\n\n\t//connections\n\tTone.connect(this.input, this._split);\n\t//dry wet connections\n\tTone.connect(this.input, this._dryWet, 0, 0);\n\tthis._merge.connect(this._dryWet, 0, 1);\n\tthis._dryWet.connect(this.output);\n\tthis._readOnly([\"wet\"]);\n};\n\nTone.extend(Tone.StereoEffect, Tone.Effect);\n\n/**\n *  Clean up.\n *  @returns {Tone.StereoEffect} this\n */\nTone.StereoEffect.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._dryWet.dispose();\n\tthis._dryWet = null;\n\tthis._split.dispose();\n\tthis._split = null;\n\tthis._merge.dispose();\n\tthis._merge = null;\n\tthis.effectSendL = null;\n\tthis.effectSendR = null;\n\tthis.effectReturnL = null;\n\tthis.effectReturnR = null;\n\tthis._writable([\"wet\"]);\n\tthis.wet = null;\n\treturn this;\n};\n\nexport default Tone.StereoEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Clock\";\nimport \"../type/Type\";\nimport \"../core/Timeline\";\nimport \"../core/Emitter\";\nimport \"../core/Gain\";\nimport \"../core/IntervalTimeline\";\nimport \"../core/TransportRepeatEvent\";\nimport \"../core/TransportEvent\";\n\n/**\n *  @class  Transport for timing musical events.\n *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n *          Tone.Transport timing events pass in the exact time of the scheduled event\n *          in the argument of the callback function. Pass that time value to the object\n *          you're scheduling. <br><br>\n *          A single transport is created for you when the library is initialized.\n *          <br><br>\n *          The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n *          called with the time of that event as the argument.\n *\n *  @extends {Tone.Emitter}\n *  @singleton\n *  @example\n * //repeated event every 8th note\n * Tone.Transport.scheduleRepeat(function(time){\n * \t//do something with the time\n * }, \"8n\");\n *  @example\n * //schedule an event on the 16th measure\n * Tone.Transport.schedule(function(time){\n * \t//do something with the time\n * }, \"16:0:0\");\n */\nTone.Transport = function(){\n\n\tTone.Emitter.call(this);\n\n\tTone.getContext(function(){\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tLOOPING\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t * \tIf the transport loops or not.\n\t\t *  @type {boolean}\n\t\t */\n\t\tthis.loop = false;\n\n\t\t/**\n\t\t * \tThe loop start position in ticks\n\t\t *  @type {Ticks}\n\t\t *  @private\n\t\t */\n\t\tthis._loopStart = 0;\n\n\t\t/**\n\t\t * \tThe loop end position in ticks\n\t\t *  @type {Ticks}\n\t\t *  @private\n\t\t */\n\t\tthis._loopEnd = 0;\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tCLOCK/TEMPO\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  Pulses per quarter is the number of ticks per quarter note.\n\t\t *  @private\n\t\t *  @type  {Number}\n\t\t */\n\t\tthis._ppq = TransportConstructor.defaults.PPQ;\n\n\t\t/**\n\t\t *  watches the main oscillator for timing ticks\n\t\t *  initially starts at 120bpm\n\t\t *  @private\n\t\t *  @type {Tone.Clock}\n\t\t */\n\t\tthis._clock = new Tone.Clock({\n\t\t\t\"callback\" : this._processTick.bind(this),\n\t\t\t\"frequency\" : 0,\n\t\t});\n\n\t\tthis._bindClockEvents();\n\n\t\t/**\n\t\t *  The Beats Per Minute of the Transport.\n\t\t *  @type {BPM}\n\t\t *  @signal\n\t\t *  @example\n\t\t * Tone.Transport.bpm.value = 80;\n\t\t * //ramp the bpm to 120 over 10 seconds\n\t\t * Tone.Transport.bpm.rampTo(120, 10);\n\t\t */\n\t\tthis.bpm = this._clock.frequency;\n\t\tthis.bpm._toUnits = this._toUnits.bind(this);\n\t\tthis.bpm._fromUnits = this._fromUnits.bind(this);\n\t\tthis.bpm.units = Tone.Type.BPM;\n\t\tthis.bpm.value = TransportConstructor.defaults.bpm;\n\t\tthis._readOnly(\"bpm\");\n\n\t\t/**\n\t\t *  The time signature, or more accurately the numerator\n\t\t *  of the time signature over a denominator of 4.\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._timeSignature = TransportConstructor.defaults.timeSignature;\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tTIMELINE EVENTS\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  All the events in an object to keep track by ID\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t\tthis._scheduledEvents = {};\n\n\t\t/**\n\t\t * \tThe scheduled events.\n\t\t *  @type {Tone.Timeline}\n\t\t *  @private\n\t\t */\n\t\tthis._timeline = new Tone.Timeline();\n\n\t\t/**\n\t\t *  Repeated events\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t\tthis._repeatedEvents = new Tone.IntervalTimeline();\n\n\t\t/**\n\t\t *  All of the synced Signals\n\t\t *  @private\n\t\t *  @type {Array}\n\t\t */\n\t\tthis._syncedSignals = [];\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tSWING\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  The subdivision of the swing\n\t\t *  @type  {Ticks}\n\t\t *  @private\n\t\t */\n\t\tthis._swingTicks = TransportConstructor.defaults.PPQ / 2; //8n\n\n\t\t/**\n\t\t *  The swing amount\n\t\t *  @type {NormalRange}\n\t\t *  @private\n\t\t */\n\t\tthis._swingAmount = 0;\n\n\t\t//transport is a singleton so it adds itself to the context\n\t\tthis.context.transport = this;\n\n\t}.bind(this));\n};\n\nTone.extend(Tone.Transport, Tone.Emitter);\n\n/**\n *  the defaults\n *  @type {Object}\n *  @const\n *  @static\n */\nTone.Transport.defaults = {\n\t\"bpm\" : 120,\n\t\"swing\" : 0,\n\t\"swingSubdivision\" : \"8n\",\n\t\"timeSignature\" : 4,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : \"4m\",\n\t\"PPQ\" : 192\n};\n\n/**\n * Is an instanceof Tone.Transport\n * @type {Boolean}\n */\nTone.Transport.prototype.isTransport = true;\n\n///////////////////////////////////////////////////////////////////////////////\n//\tTICKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  called on every tick\n *  @param   {number} tickTime clock relative tick time\n *  @private\n */\nTone.Transport.prototype._processTick = function(tickTime, ticks){\n\t//handle swing\n\tif (this._swingAmount > 0 &&\n\t\tticks % this._ppq !== 0 && //not on a downbeat\n\t\tticks % (this._swingTicks * 2) !== 0){\n\t\t//add some swing\n\t\tvar progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n\t\tvar amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n\t\ttickTime += Tone.Ticks(this._swingTicks * 2/3).toSeconds() * amount;\n\t}\n\t//do the loop test\n\tif (this.loop){\n\t\tif (ticks >= this._loopEnd){\n\t\t\tthis.emit(\"loopEnd\", tickTime);\n\t\t\tthis._clock.setTicksAtTime(this._loopStart, tickTime);\n\t\t\tticks = this._loopStart;\n\t\t\tthis.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n\t\t\tthis.emit(\"loop\", tickTime);\n\t\t}\n\t}\n\t//invoke the timeline events scheduled on this tick\n\tthis._timeline.forEachAtTime(ticks, function(event){\n\t\tevent.invoke(tickTime);\n\t});\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSCHEDULABLE EVENTS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  Schedule an event along the timeline.\n *  @param {Function} callback The callback to be invoked at the time.\n *  @param {TransportTime}  time The time to invoke the callback at.\n *  @return {Number} The id of the event which can be used for canceling the event.\n *  @example\n * //trigger the callback when the Transport reaches the desired time\n * Tone.Transport.schedule(function(time){\n * \tenvelope.triggerAttack(time);\n * }, \"128i\");\n */\nTone.Transport.prototype.schedule = function(callback, time){\n\tvar event = new Tone.TransportEvent(this, {\n\t\t\"time\" : Tone.TransportTime(time),\n\t\t\"callback\" : callback\n\t});\n\treturn this._addEvent(event, this._timeline);\n};\n\n/**\n *  Schedule a repeated event along the timeline. The event will fire\n *  at the `interval` starting at the `startTime` and for the specified\n *  `duration`.\n *  @param  {Function}  callback   The callback to invoke.\n *  @param  {Time}    interval   The duration between successive\n *                               callbacks. Must be a positive number.\n *  @param  {TransportTime=}    startTime  When along the timeline the events should\n *                               start being invoked.\n *  @param {Time} [duration=Infinity] How long the event should repeat.\n *  @return  {Number}    The ID of the scheduled event. Use this to cancel\n *                           the event.\n *  @example\n * //a callback invoked every eighth note after the first measure\n * Tone.Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n */\nTone.Transport.prototype.scheduleRepeat = function(callback, interval, startTime, duration){\n\tvar event = new Tone.TransportRepeatEvent(this, {\n\t\t\"callback\" : callback,\n\t\t\"interval\" : Tone.Time(interval),\n\t\t\"time\" : Tone.TransportTime(startTime),\n\t\t\"duration\" : Tone.Time(Tone.defaultArg(duration, Infinity)),\n\t});\n\t//kick it off if the Transport is started\n\treturn this._addEvent(event, this._repeatedEvents);\n};\n\n/**\n *  Schedule an event that will be removed after it is invoked. \n *  @param {Function} callback The callback to invoke once.\n *  @param {TransportTime} time The time the callback should be invoked.\n *  @returns {Number} The ID of the scheduled event.\n */\nTone.Transport.prototype.scheduleOnce = function(callback, time){\n\tvar event = new Tone.TransportEvent(this, {\n\t\t\"time\" : Tone.TransportTime(time),\n\t\t\"callback\" : callback,\n\t\t\"once\" : true\n\t});\n\treturn this._addEvent(event, this._timeline);\n};\n\n/**\n *  Clear the passed in event id from the timeline\n *  @param {Number} eventId The id of the event.\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.clear = function(eventId){\n\tif (this._scheduledEvents.hasOwnProperty(eventId)){\n\t\tvar item = this._scheduledEvents[eventId.toString()];\n\t\titem.timeline.remove(item.event);\n\t\titem.event.dispose();\n\t\tdelete this._scheduledEvents[eventId.toString()];\n\t}\n\treturn this;\n};\n\n/**\n * Add an event to the correct timeline. Keep track of the\n * timeline it was added to.\n * @param {Tone.TransportEvent}\tevent\n * @param {Tone.Timeline} timeline\n * @returns {Number} the event id which was just added\n * @private\n */\nTone.Transport.prototype._addEvent = function(event, timeline){\n\tthis._scheduledEvents[event.id.toString()] = {\n\t\t\"event\" : event,\n\t\t\"timeline\" : timeline\n\t};\n\ttimeline.add(event);\n\treturn event.id;\n};\n\n/**\n *  Remove scheduled events from the timeline after\n *  the given time. Repeated events will be removed\n *  if their startTime is after the given time\n *  @param {TransportTime} [after=0] Clear all events after\n *                          this time.\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.cancel = function(after){\n\tafter = Tone.defaultArg(after, 0);\n\tafter = this.toTicks(after);\n\tthis._timeline.forEachFrom(after, function(event){\n\t\tthis.clear(event.id);\n\t}.bind(this));\n\tthis._repeatedEvents.forEachFrom(after, function(event){\n\t\tthis.clear(event.id);\n\t}.bind(this));\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSTART/STOP/PAUSE\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  Bind start/stop/pause events from the clock and emit them.\n *  @private\n */\nTone.Transport.prototype._bindClockEvents = function(){\n\tthis._clock.on(\"start\", function(time, offset){\n\t\toffset = Tone.Ticks(offset).toSeconds();\n\t\tthis.emit(\"start\", time, offset);\n\t}.bind(this));\n\n\tthis._clock.on(\"stop\", function(time){\n\t\tthis.emit(\"stop\", time);\n\t}.bind(this));\n\n\tthis._clock.on(\"pause\", function(time){\n\t\tthis.emit(\"pause\", time);\n\t}.bind(this));\n};\n\n/**\n *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.Transport#\n *  @name state\n */\nObject.defineProperty(Tone.Transport.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._clock.getStateAtTime(this.now());\n\t}\n});\n\n/**\n *  Start the transport and all sources synced to the transport.\n *  @param  {Time} [time=now] The time when the transport should start.\n *  @param  {TransportTime=} offset The timeline offset to start the transport.\n *  @returns {Tone.Transport} this\n *  @example\n * //start the transport in one second starting at beginning of the 5th measure.\n * Tone.Transport.start(\"+1\", \"4:0:0\");\n */\nTone.Transport.prototype.start = function(time, offset){\n\t//start the clock\n\tif (Tone.isDefined(offset)){\n\t\toffset = this.toTicks(offset);\n\t}\n\tthis._clock.start(time, offset);\n\treturn this;\n};\n\n/**\n *  Stop the transport and all sources synced to the transport.\n *  @param  {Time} [time=now] The time when the transport should stop.\n *  @returns {Tone.Transport} this\n *  @example\n * Tone.Transport.stop();\n */\nTone.Transport.prototype.stop = function(time){\n\tthis._clock.stop(time);\n\treturn this;\n};\n\n/**\n *  Pause the transport and all sources synced to the transport.\n *  @param  {Time} [time=now]\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.pause = function(time){\n\tthis._clock.pause(time);\n\treturn this;\n};\n\n/**\n * Toggle the current state of the transport. If it is\n * started, it will stop it, otherwise it will start the Transport.\n * @param  {Time=} time The time of the event\n * @return {Tone.Transport}      this\n */\nTone.Transport.prototype.toggle = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._clock.getStateAtTime(time) !== Tone.State.Started){\n\t\tthis.start(time);\n\t} else {\n\t\tthis.stop(time);\n\t}\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSETTERS/GETTERS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  The time signature as just the numerator over 4.\n *  For example 4/4 would be just 4 and 6/8 would be 3.\n *  @memberOf Tone.Transport#\n *  @type {Number|Array}\n *  @name timeSignature\n *  @example\n * //common time\n * Tone.Transport.timeSignature = 4;\n * // 7/8\n * Tone.Transport.timeSignature = [7, 8];\n * //this will be reduced to a single number\n * Tone.Transport.timeSignature; //returns 3.5\n */\nObject.defineProperty(Tone.Transport.prototype, \"timeSignature\", {\n\tget : function(){\n\t\treturn this._timeSignature;\n\t},\n\tset : function(timeSig){\n\t\tif (Tone.isArray(timeSig)){\n\t\t\ttimeSig = (timeSig[0] / timeSig[1]) * 4;\n\t\t}\n\t\tthis._timeSignature = timeSig;\n\t}\n});\n\n/**\n * When the Tone.Transport.loop = true, this is the starting position of the loop.\n * @memberOf Tone.Transport#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.Transport.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopStart).toSeconds();\n\t},\n\tset : function(startPosition){\n\t\tthis._loopStart = this.toTicks(startPosition);\n\t}\n});\n\n/**\n * When the Tone.Transport.loop = true, this is the ending position of the loop.\n * @memberOf Tone.Transport#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.Transport.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopEnd).toSeconds();\n\t},\n\tset : function(endPosition){\n\t\tthis._loopEnd = this.toTicks(endPosition);\n\t}\n});\n\n/**\n *  Set the loop start and stop at the same time.\n *  @param {TransportTime} startPosition\n *  @param {TransportTime} endPosition\n *  @returns {Tone.Transport} this\n *  @example\n * //loop over the first measure\n * Tone.Transport.setLoopPoints(0, \"1m\");\n * Tone.Transport.loop = true;\n */\nTone.Transport.prototype.setLoopPoints = function(startPosition, endPosition){\n\tthis.loopStart = startPosition;\n\tthis.loopEnd = endPosition;\n\treturn this;\n};\n\n/**\n *  The swing value. Between 0-1 where 1 equal to\n *  the note + half the subdivision.\n *  @memberOf Tone.Transport#\n *  @type {NormalRange}\n *  @name swing\n */\nObject.defineProperty(Tone.Transport.prototype, \"swing\", {\n\tget : function(){\n\t\treturn this._swingAmount;\n\t},\n\tset : function(amount){\n\t\t//scale the values to a normal range\n\t\tthis._swingAmount = amount;\n\t}\n});\n\n/**\n *  Set the subdivision which the swing will be applied to.\n *  The default value is an 8th note. Value must be less\n *  than a quarter note.\n *\n *  @memberOf Tone.Transport#\n *  @type {Time}\n *  @name swingSubdivision\n */\nObject.defineProperty(Tone.Transport.prototype, \"swingSubdivision\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._swingTicks).toNotation();\n\t},\n\tset : function(subdivision){\n\t\tthis._swingTicks = this.toTicks(subdivision);\n\t}\n});\n\n/**\n *  The Transport's position in Bars:Beats:Sixteenths.\n *  Setting the value will jump to that position right away.\n *  @memberOf Tone.Transport#\n *  @type {BarsBeatsSixteenths}\n *  @name position\n */\nObject.defineProperty(Tone.Transport.prototype, \"position\", {\n\tget : function(){\n\t\tvar now = this.now();\n\t\tvar ticks = this._clock.getTicksAtTime(now);\n\t\treturn Tone.Ticks(ticks).toBarsBeatsSixteenths();\n\t},\n\tset : function(progress){\n\t\tvar ticks = this.toTicks(progress);\n\t\tthis.ticks = ticks;\n\t}\n});\n\n/**\n *  The Transport's position in seconds\n *  Setting the value will jump to that position right away.\n *  @memberOf Tone.Transport#\n *  @type {Seconds}\n *  @name seconds\n */\nObject.defineProperty(Tone.Transport.prototype, \"seconds\", {\n\tget : function(){\n\t\treturn this._clock.seconds;\n\t},\n\tset : function(s){\n\t\tvar now = this.now();\n\t\tvar ticks = this.bpm.timeToTicks(s, now);\n\t\tthis.ticks = ticks;\n\t}\n});\n\n/**\n *  The Transport's loop position as a normalized value. Always\n *  returns 0 if the transport if loop is not true.\n *  @memberOf Tone.Transport#\n *  @name progress\n *  @type {NormalRange}\n */\nObject.defineProperty(Tone.Transport.prototype, \"progress\", {\n\tget : function(){\n\t\tif (this.loop){\n\t\t\tvar now = this.now();\n\t\t\tvar ticks = this._clock.getTicksAtTime(now);\n\t\t\treturn (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  The transports current tick position.\n *\n *  @memberOf Tone.Transport#\n *  @type {Ticks}\n *  @name ticks\n */\nObject.defineProperty(Tone.Transport.prototype, \"ticks\", {\n\tget : function(){\n\t\treturn this._clock.ticks;\n\t},\n\tset : function(t){\n\t\tif (this._clock.ticks !== t){\n\t\t\tvar now = this.now();\n\t\t\t//stop everything synced to the transport\n\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\tthis.emit(\"stop\", now);\n\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t\t//restart it with the new time\n\t\t\t\tthis.emit(\"start\", now, this.seconds);\n\t\t\t} else {\n\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n * Get the clock's ticks at the given time.\n * @param  {Time} time  When to get the tick value\n * @return {Ticks}       The tick value at the given time.\n */\nTone.Transport.prototype.getTicksAtTime = function(time){\n\treturn Math.round(this._clock.getTicksAtTime(time));\n};\n\n/**\n *  Return the elapsed seconds at the given time.\n *  @param  {Time}  time  When to get the elapsed seconds\n *  @return  {Seconds}  The number of elapsed seconds\n */\nTone.Transport.prototype.getSecondsAtTime = function(time){\n\treturn this._clock.getSecondsAtTime(time);\n};\n\n/**\n *  Pulses Per Quarter note. This is the smallest resolution\n *  the Transport timing supports. This should be set once\n *  on initialization and not set again. Changing this value\n *  after other objects have been created can cause problems.\n *\n *  @memberOf Tone.Transport#\n *  @type {Number}\n *  @name PPQ\n */\nObject.defineProperty(Tone.Transport.prototype, \"PPQ\", {\n\tget : function(){\n\t\treturn this._ppq;\n\t},\n\tset : function(ppq){\n\t\tvar bpm = this.bpm.value;\n\t\tthis._ppq = ppq;\n\t\tthis.bpm.value = bpm;\n\t}\n});\n\n/**\n *  Convert from BPM to frequency (factoring in PPQ)\n *  @param  {BPM}  bpm The BPM value to convert to frequency\n *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.\n *  @private\n */\nTone.Transport.prototype._fromUnits = function(bpm){\n\treturn 1 / (60 / bpm / this.PPQ);\n};\n\n/**\n *  Convert from frequency (with PPQ) into BPM\n *  @param  {Frequency}  freq The clocks frequency to convert to BPM\n *  @return  {BPM}  The frequency value as BPM.\n *  @private\n */\nTone.Transport.prototype._toUnits = function(freq){\n\treturn (freq / this.PPQ) * 60;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSYNCING\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  Returns the time aligned to the next subdivision\n *  of the Transport. If the Transport is not started,\n *  it will return 0.\n *  Note: this will not work precisely during tempo ramps.\n *  @param  {Time}  subdivision  The subdivision to quantize to\n *  @return  {Number}  The context time of the next subdivision.\n *  @example\n * Tone.Transport.start(); //the transport must be started\n * Tone.Transport.nextSubdivision(\"4n\");\n */\nTone.Transport.prototype.nextSubdivision = function(subdivision){\n\tsubdivision = this.toTicks(subdivision);\n\tif (this.state !== Tone.State.Started){\n\t\t//if the transport's not started, return 0\n\t\treturn 0;\n\t} else {\n\t\tvar now = this.now();\n\t\t//the remainder of the current ticks and the subdivision\n\t\tvar transportPos = this.getTicksAtTime(now);\n\t\tvar remainingTicks = subdivision - transportPos % subdivision;\n\t\treturn this._clock.nextTickTime(remainingTicks, now);\n\t}\n};\n\n/**\n *  Attaches the signal to the tempo control signal so that\n *  any changes in the tempo will change the signal in the same\n *  ratio.\n *\n *  @param  {Tone.Signal} signal\n *  @param {number=} ratio Optionally pass in the ratio between\n *                         the two signals. Otherwise it will be computed\n *                         based on their current values.\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.syncSignal = function(signal, ratio){\n\tif (!ratio){\n\t\t//get the sync ratio\n\t\tvar now = this.now();\n\t\tif (signal.getValueAtTime(now) !== 0){\n\t\t\tratio = signal.getValueAtTime(now) / this.bpm.getValueAtTime(now);\n\t\t} else {\n\t\t\tratio = 0;\n\t\t}\n\t}\n\tvar ratioSignal = new Tone.Gain(ratio);\n\tthis.bpm.chain(ratioSignal, signal._param);\n\tthis._syncedSignals.push({\n\t\t\"ratio\" : ratioSignal,\n\t\t\"signal\" : signal,\n\t\t\"initial\" : signal.value\n\t});\n\tsignal.value = 0;\n\treturn this;\n};\n\n/**\n *  Unsyncs a previously synced signal from the transport's control.\n *  See Tone.Transport.syncSignal.\n *  @param  {Tone.Signal} signal\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.unsyncSignal = function(signal){\n\tfor (var i = this._syncedSignals.length - 1; i >= 0; i--){\n\t\tvar syncedSignal = this._syncedSignals[i];\n\t\tif (syncedSignal.signal === signal){\n\t\t\tsyncedSignal.ratio.dispose();\n\t\t\tsyncedSignal.signal.value = syncedSignal.initial;\n\t\t\tthis._syncedSignals.splice(i, 1);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Transport} this\n *  @private\n */\nTone.Transport.prototype.dispose = function(){\n\tTone.Emitter.prototype.dispose.call(this);\n\tthis._clock.dispose();\n\tthis._clock = null;\n\tthis._writable(\"bpm\");\n\tthis.bpm = null;\n\tthis._timeline.dispose();\n\tthis._timeline = null;\n\tthis._repeatedEvents.dispose();\n\tthis._repeatedEvents = null;\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tINITIALIZATION\n///////////////////////////////////////////////////////////////////////////////\n\nvar TransportConstructor = Tone.Transport;\nTone.Transport = new TransportConstructor();\n\nTone.Context.on(\"init\", function(context){\n\tif (context.transport && context.transport.isTransport){\n\t\tTone.Transport = context.transport;\n\t} else {\n\t\tTone.Transport = new TransportConstructor();\n\t}\n});\n\nTone.Context.on(\"close\", function(context){\n\tif (context.transport && context.transport.isTransport){\n\t\tcontext.transport.dispose();\n\t}\n});\n\nexport default Tone.Transport;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../source/Source\";\nimport \"../core/Transport\";\nimport \"../source/OscillatorNode\";\n\n/**\n *  @class Tone.Oscillator supports a number of features including\n *         phase rotation, multiple oscillator types (see Tone.Oscillator.type),\n *         and Transport syncing (see Tone.Oscillator.syncFrequency).\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {Frequency} [frequency] Starting frequency\n *  @param {string} [type] The oscillator type. Read more about type below.\n *  @example\n * //make and start a 440hz sine tone\n * var osc = new Tone.Oscillator(440, \"sine\").toMaster().start();\n */\nTone.Oscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.Oscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  the main oscillator\n\t *  @type {OscillatorNode}\n\t *  @private\n\t */\n\tthis._oscillator = null;\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  the periodic wave\n\t *  @type {PeriodicWave}\n\t *  @private\n\t */\n\tthis._wave = null;\n\n\t/**\n\t *  The partials of the oscillator\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._partials = options.partials;\n\n\t/**\n\t *  The number of partials to limit or extend the periodic wave by\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._partialCount = options.partialCount;\n\n\t/**\n\t *  the phase of the oscillator\n\t *  between 0 - 360\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._phase = options.phase;\n\n\t/**\n\t *  the type of the oscillator\n\t *  @type {string}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t//setup\n\tif (options.partialCount && options.type !== Tone.Oscillator.Type.Custom){\n\t\tthis._type = this.baseType + options.partialCount.toString();\n\t}\n\tthis.phase = this._phase;\n\tthis._readOnly([\"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.Oscillator, Tone.Source);\n\n/**\n *  the default parameters\n *  @type {Object}\n */\nTone.Oscillator.defaults = {\n\t\"type\" : \"sine\",\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"partials\" : [],\n\t\"partialCount\" : 0\n};\n\n/**\n *  The Oscillator types\n *  @enum {String}\n */\nTone.Oscillator.Type = {\n\tSine : \"sine\",\n\tTriangle : \"triangle\",\n\tSawtooth : \"sawtooth\",\n\tSquare : \"square\",\n\tCustom : \"custom\"\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.Oscillator.prototype._start = function(time){\n\tthis.log(\"start\", time);\n\t//new oscillator with previous values\n\tvar oscillator = new Tone.OscillatorNode();\n\tthis._oscillator = oscillator;\n\tif (this._wave){\n\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t} else {\n\t\tthis._oscillator.type = this._type;\n\t}\n\t//connect the control signal to the oscillator frequency & detune\n\tthis._oscillator.connect(this.output);\n\tthis.frequency.connect(this._oscillator.frequency);\n\tthis.detune.connect(this._oscillator.detune);\n\n\t//start the oscillator\n\ttime = this.toSeconds(time);\n\tthis._oscillator.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @private\n *  @param  {Time} [time=now] (optional) timing parameter\n *  @returns {Tone.Oscillator} this\n */\nTone.Oscillator.prototype._stop = function(time){\n\tthis.log(\"stop\", time);\n\tif (this._oscillator){\n\t\ttime = this.toSeconds(time);\n\t\tthis._oscillator.stop(time);\n\t}\n\treturn this;\n};\n\n/**\n * Restart the oscillator. Does not stop the oscillator, but instead\n * just cancels any scheduled 'stop' from being invoked.\n * @param  {Time=} time\n * @return {Tone.Oscillator}      this\n */\nTone.Oscillator.prototype.restart = function(time){\n\tif (this._oscillator){\n\t\tthis._oscillator.cancelStop();\n\t}\n\tthis._state.cancel(this.toSeconds(time));\n\treturn this;\n};\n\n/**\n *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n *  will also affect the oscillators frequency.\n *  @returns {Tone.Oscillator} this\n *  @example\n * Tone.Transport.bpm.value = 120;\n * osc.frequency.value = 440;\n * //the ration between the bpm and the frequency will be maintained\n * osc.syncFrequency();\n * Tone.Transport.bpm.value = 240;\n * // the frequency of the oscillator is doubled to 880\n */\nTone.Oscillator.prototype.syncFrequency = function(){\n\tTone.Transport.syncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n *  Unsync the oscillator's frequency from the Transport.\n *  See Tone.Oscillator.syncFrequency\n *  @returns {Tone.Oscillator} this\n */\nTone.Oscillator.prototype.unsyncFrequency = function(){\n\tTone.Transport.unsyncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n * setting the first x number of partials of the oscillator. For example: \"sine4\" would\n * set be the first 4 partials of the sine wave and \"triangle8\" would set the first\n * 8 partials of the triangle wave.\n * <br><br>\n * Uses PeriodicWave internally even for native types so that it can set the phase.\n * PeriodicWave equations are from the\n * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).\n *\n * @memberOf Tone.Oscillator#\n * @type {string}\n * @name type\n * @example\n * //set it to a square wave\n * osc.type = \"square\";\n * @example\n * //set the first 6 partials of a sawtooth wave\n * osc.type = \"sawtooth6\";\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tvar isBasicType = [Tone.Oscillator.Type.Sine, Tone.Oscillator.Type.Square, Tone.Oscillator.Type.Triangle, Tone.Oscillator.Type.Sawtooth].includes(type);\n\t\tif (this._phase === 0 && isBasicType){\n\t\t\tthis._wave = null;\n\t\t\tthis._partialCount = 0;\n\t\t\t//just go with the basic approach\n\t\t\tif (this._oscillator !== null){\n\t\t\t\tthis._oscillator.type = type;\n\t\t\t}\n\t\t} else {\n\t\t\tvar coefs = this._getRealImaginary(type, this._phase);\n\t\t\tvar periodicWave = this.context.createPeriodicWave(coefs[0], coefs[1]);\n\t\t\tthis._wave = periodicWave;\n\t\t\tif (this._oscillator !== null){\n\t\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t}\n\t\t}\n\t\tthis._type = type;\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.Oscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._type.replace(this.partialCount, \"\");\n\t},\n\tset : function(baseType){\n\t\tif (this.partialCount && this._type !== Tone.Oscillator.Type.Custom && baseType !== Tone.Oscillator.Type.Custom){\n\t\t\tthis.type = baseType + this.partialCount;\n\t\t} else {\n\t\t\tthis.type = baseType;\n\t\t}\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @example\n * osc.type = 'sine'\n * osc.partialCount = 3\n * //is equivalent to\n * osc.type = 'sine3'\n * @memberOf Tone.Oscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._partialCount;\n\t},\n\tset : function(p){\n\t\tvar type = this._type;\n\t\tvar partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n\t\tif (partial){\n\t\t\ttype = partial[1];\n\t\t}\n\t\tif (this._type !== Tone.Oscillator.Type.Custom){\n\t\t\tif (p === 0){\n\t\t\t\tthis.type = type;\n\t\t\t} else {\n\t\t\t\tthis.type = type + p.toString();\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n *  Get the object's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. \n *  @memberOf Tone.Oscillator#\n *  @returns {Object}\n */\nTone.Oscillator.prototype.get = function(){\n\tvar values = Tone.prototype.get.apply(this, arguments);\n\tif (values.type !== Tone.Oscillator.Type.Custom){\n\t\tdelete values.partials;\n\t}\n\treturn values;\n};\n\n/**\n *  Returns the real and imaginary components based\n *  on the oscillator type.\n *  @returns {Array} [real, imaginary]\n *  @private\n */\nTone.Oscillator.prototype._getRealImaginary = function(type, phase){\n\tvar fftSize = 4096;\n\tvar periodicWaveSize = fftSize / 2;\n\n\tvar real = new Float32Array(periodicWaveSize);\n\tvar imag = new Float32Array(periodicWaveSize);\n\n\tvar partialCount = 1;\n\tif (type === Tone.Oscillator.Type.Custom){\n\t\tpartialCount = this._partials.length + 1;\n\t\tthis._partialCount = this._partials.length;\n\t\tperiodicWaveSize = partialCount;\n\t} else {\n\t\tvar partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t\tif (partial){\n\t\t\tpartialCount = parseInt(partial[2]) + 1;\n\t\t\tthis._partialCount = parseInt(partial[2]);\n\t\t\ttype = partial[1];\n\t\t\tpartialCount = Math.max(partialCount, 2);\n\t\t\tperiodicWaveSize = partialCount;\n\t\t} else {\n\t\t\tthis._partialCount = 0;\n\t\t}\n\t\tthis._partials = [];\n\t}\n\n\tfor (var n = 1; n < periodicWaveSize; ++n){\n\t\tvar piFactor = 2 / (n * Math.PI);\n\t\tvar b;\n\t\tswitch (type){\n\t\t\tcase Tone.Oscillator.Type.Sine:\n\t\t\t\tb = (n <= partialCount) ? 1 : 0;\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Square:\n\t\t\t\tb = (n & 1) ? 2 * piFactor : 0;\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Sawtooth:\n\t\t\t\tb = piFactor * ((n & 1) ? 1 : -1);\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Triangle:\n\t\t\t\tif (n & 1){\n\t\t\t\t\tb = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n\t\t\t\t} else {\n\t\t\t\t\tb = 0;\n\t\t\t\t}\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Custom:\n\t\t\t\tb = this._partials[n - 1];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new TypeError(\"Tone.Oscillator: invalid type: \"+type);\n\t\t}\n\t\tif (b !== 0){\n\t\t\treal[n] = -b * Math.sin(phase * n);\n\t\t\timag[n] = b * Math.cos(phase * n);\n\t\t} else {\n\t\t\treal[n] = 0;\n\t\t\timag[n] = 0;\n\t\t}\n\t}\n\treturn [real, imag];\n};\n\n/**\n *  Compute the inverse FFT for a given phase.\n *  @param  {Float32Array}  real\n *  @param  {Float32Array}  imag\n *  @param  {NormalRange}  phase\n *  @return  {AudioRange}\n *  @private\n */\nTone.Oscillator.prototype._inverseFFT = function(real, imag, phase){\n\tvar sum = 0;\n\tvar len = real.length;\n\tfor (var i = 0; i < len; i++){\n\t\tsum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t}\n\treturn sum;\n};\n\n/**\n *  Returns the initial value of the oscillator.\n *  @return  {AudioRange}\n *  @private\n */\nTone.Oscillator.prototype._getInitialValue = function(){\n\tvar coefs = this._getRealImaginary(this._type, 0);\n\tvar real = coefs[0];\n\tvar imag = coefs[1];\n\tvar maxValue = 0;\n\tvar twoPi = Math.PI * 2;\n\t//check for peaks in 8 places\n\tfor (var i = 0; i < 8; i++){\n\t\tmaxValue = Math.max(this._inverseFFT(real, imag, (i / 8) * twoPi), maxValue);\n\t}\n\treturn -this._inverseFFT(real, imag, this._phase) / maxValue;\n};\n\n/**\n * The partials of the waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.Oscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._partials;\n\t},\n\tset : function(partials){\n\t\tthis._partials = partials;\n\t\tthis.type = Tone.Oscillator.Type.Custom;\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.Oscillator#\n * @type {Degrees}\n * @name phase\n * @example\n * osc.phase = 180; //flips the phase of the oscillator\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._phase * (180 / Math.PI);\n\t},\n\tset : function(phase){\n\t\tthis._phase = phase * Math.PI / 180;\n\t\t//reset the type\n\t\tthis.type = this._type;\n\t}\n});\n\n/**\n *  Dispose and disconnect.\n *  @return {Tone.Oscillator} this\n */\nTone.Oscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tif (this._oscillator !== null){\n\t\tthis._oscillator.dispose();\n\t\tthis._oscillator = null;\n\t}\n\tthis._wave = null;\n\tthis._writable([\"frequency\", \"detune\"]);\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis._partials = null;\n\treturn this;\n};\n\nexport default Tone.Oscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n *  @extends {Tone}\n *  @param {Time=} delayTime The delay applied to the incoming signal.\n *  @param {Time=} maxDelay The maximum delay time.\n */\nTone.Delay = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"maxDelay\"], Tone.Delay);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t * The maximum delay time initialized with the node\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._maxDelay = Math.max(this.toSeconds(options.maxDelay), this.toSeconds(options.delayTime));\n\t\n\t/**\n\t *  The native delay node\n\t *  @type {DelayNode}\n\t *  @private\n\t */\n\tthis._delayNode = this.input = this.output = this.context.createDelay(this._maxDelay);\n\n\t/**\n\t *  The amount of time the incoming signal is\n\t *  delayed.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = new Tone.Param({\n\t\t\"param\" : this._delayNode.delayTime,\n\t\t\"units\" : Tone.Type.Time,\n\t\t\"value\" : options.delayTime\n\t});\n\n\tthis._readOnly(\"delayTime\");\n};\n\nTone.extend(Tone.Delay, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Delay.defaults = {\n\t\"maxDelay\" : 1,\n\t\"delayTime\" : 0\n};\n\n/**\n * The maximum delay time. This cannot be changed. The value is passed into the constructor.\n * @memberof Tone.Delay#\n * @type {Time}\n * @name maxDelay\n * @readOnly\n */\nObject.defineProperty(Tone.Delay.prototype, \"maxDelay\", {\n\tget : function(){\n\t\treturn this._maxDelay;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.Delay}  this\n */\nTone.Delay.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._delayNode.disconnect();\n\tthis._delayNode = null;\n\tthis._writable(\"delayTime\");\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.Delay;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *\t@class  Tone.Split splits an incoming signal into left and right channels.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {number} [channels=2] The number of channels to merge.\n *  @example\n * var split = new Tone.Split();\n * stereoSignal.connect(split);\n */\nTone.Split = function(channels){\n\n\t//defaults to 2 channels\n\tchannels = Tone.defaultArg(channels, 2);\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(0, channels);\n\n\t/**\n\t *  @type {ChannelSplitterNode}\n\t *  @private\n\t */\n\tthis._splitter = this.input = this.context.createChannelSplitter(channels);\n\n\t//connections\n\tfor (var i = 0; i < channels; i++){\n\t\tthis.output[i] = new Tone.Gain();\n\t\tTone.connect(this._splitter, this.output[i], i, 0);\n\t\tthis.output[i].channelCount = 1;\n\t\tthis.output[i].channelCountMode = \"explicit\";\n\t}\n\n\t/**\n\t *  Left channel output.\n\t *  Alias for <code>output[0]</code>\n\t *  @type {Tone.Gain}\n\t */\n\tthis.left = this.output[0];\n\n\t/**\n\t *  Right channel output.\n\t *  Alias for <code>output[1]</code>\n\t *  @type {Tone.Gain}\n\t */\n\tthis.right = this.output[1];\n};\n\nTone.extend(Tone.Split, Tone.AudioNode);\n\n/**\n *  Clean up.\n *  @returns {Tone.Split} this\n */\nTone.Split.prototype.dispose = function(){\n\tthis.output.forEach(function(output){\n\t\toutput.dispose();\n\t});\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._splitter.disconnect();\n\tthis.left = null;\n\tthis.right = null;\n\tthis._splitter = null;\n\treturn this;\n};\n\nexport default Tone.Split;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Emitter\";\nimport \"../core/Timeline\";\nimport \"../shim/AudioContext\";\n\nvar AudioContextProperties = [\"baseLatency\", \"destination\", \"currentTime\", \"sampleRate\", \"listener\", \"state\"];\nvar AudioContextMethods = [\"suspend\", \"close\", \"resume\", \"getOutputTimestamp\", \"createMediaElementSource\", \"createMediaStreamSource\", \"createMediaStreamDestination\", \"createBuffer\", \"decodeAudioData\", \"createBufferSource\", \"createConstantSource\", \"createGain\", \"createDelay\", \"createBiquadFilter\", \"createIIRFilter\", \"createWaveShaper\", \"createPanner\", \"createConvolver\", \"createDynamicsCompressor\", \"createAnalyser\", \"createScriptProcessor\", \"createStereoPanner\", \"createOscillator\", \"createPeriodicWave\", \"createChannelSplitter\", \"createChannelMerger\", \"audioWorklet\"];\n\n/**\n *  @class Wrapper around the native AudioContext.\n *  @extends {Tone.Emitter}\n *  @param {AudioContext=} context optionally pass in a context\n */\nTone.Context = function(){\n\n\tTone.Emitter.call(this);\n\n\tvar options = Tone.defaults(arguments, [\"context\"], Tone.Context);\n\n\tif (!options.context){\n\t\toptions.context = new Tone.global.AudioContext();\n\t\tif (!options.context){\n\t\t\tthrow new Error(\"could not create AudioContext. Possibly too many AudioContexts running already.\");\n\t\t}\n\t}\n\tthis._context = options.context;\n\t//make sure it's not an AudioContext wrapper\n\twhile (this._context.rawContext){\n\t\tthis._context = this._context.rawContext;\n\t}\n\n\t// extend all of the properties\n\tAudioContextProperties.forEach(function(prop){\n\t\tthis._defineProperty(this._context, prop);\n\t}.bind(this));\n\t// extend all of the methods\n\tAudioContextMethods.forEach(function(method){\n\t\tthis._defineMethod(this._context, method);\n\t}.bind(this));\n\n\t/**\n\t *  The default latency hint\n\t *  @type  {String}\n\t *  @private\n\t */\n\tthis._latencyHint = options.latencyHint;\n\n\t/**\n\t *  An object containing all of the constants AudioBufferSourceNodes\n\t *  @type  {Object}\n\t *  @private\n\t */\n\tthis._constants = {};\n\n\t///////////////////////////////////////////////////////////////////////\n\t// WORKER\n\t///////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  The amount of time events are scheduled\n\t *  into the future\n\t *  @type  {Number}\n\t */\n\tthis.lookAhead = options.lookAhead;\n\n\t/**\n\t *  A reference to the actual computed update interval\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._computedUpdateInterval = 0;\n\n\t/**\n\t *  A reliable callback method\n\t *  @private\n\t *  @type  {Ticker}\n\t */\n\tthis._ticker = new Ticker(this.emit.bind(this, \"tick\"), options.clockSource, options.updateInterval);\n\n\t///////////////////////////////////////////////////////////////////////\n\t// TIMEOUTS\n\t///////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  All of the setTimeout events.\n\t *  @type  {Tone.Timeline}\n\t *  @private\n\t */\n\tthis._timeouts = new Tone.Timeline();\n\n\t/**\n\t *  The timeout id counter\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._timeoutIds = 0;\n\n\tthis.on(\"tick\", this._timeoutLoop.bind(this));\n\n\t//forward state change events\n\tthis._context.onstatechange = function(e){\n\t\tthis.emit(\"statechange\", e);\n\t}.bind(this);\n};\n\nTone.extend(Tone.Context, Tone.Emitter);\nTone.Emitter.mixin(Tone.Context);\n\n/**\n * defaults\n * @static\n * @type {Object}\n */\nTone.Context.defaults = {\n\t\"clockSource\" : \"worker\",\n\t\"latencyHint\" : \"interactive\",\n\t\"lookAhead\" : 0.1,\n\t\"updateInterval\" : 0.03\n};\n\n/**\n * Is an instanceof Tone.Context\n * @type {Boolean}\n */\nTone.Context.prototype.isContext = true;\n\n/**\n *  Define a property on this Tone.Context.\n *  This is used to extend the native AudioContext\n *  @param  {AudioContext}  context\n *  @param  {String}  prop\n *  @private\n */\nTone.Context.prototype._defineProperty = function(context, prop){\n\tif (Tone.isUndef(this[prop])){\n\t\tObject.defineProperty(this, prop, {\n\t\t\t\"get\" : function(){\n\t\t\t\treturn context[prop];\n\t\t\t},\n\t\t\t\"set\" : function(val){\n\t\t\t\tcontext[prop] = val;\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n *  Define a method on this Tone.Context.\n *  This is used to extend the native AudioContext\n *  @param  {AudioContext}  context\n *  @param  {String}  prop\n *  @private\n */\nTone.Context.prototype._defineMethod = function(context, prop){\n\tif (Tone.isUndef(this[prop])){\n\t\tObject.defineProperty(this, prop, {\n\t\t\t\"get\" : function(){\n\t\t\t\treturn context[prop].bind(context);\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n *  The current audio context time\n *  @return  {Number}\n */\nTone.Context.prototype.now = function(){\n\treturn this._context.currentTime + this.lookAhead;\n};\n\n/**\n *  The audio output destination. Alias for Tone.Master\n *  @readyOnly\n *  @type  {Tone.Master}\n */\nObject.defineProperty(Tone.Context.prototype, \"destination\", {\n\t\"get\" : function(){\n\t\tif (!this.master){\n\t\t\treturn this._context.destination;\n\t\t} else {\n\t\t\treturn this.master;\n\t\t}\n\t}\n});\n\n/**\n *  Starts the audio context from a suspended state. This is required\n *  to initially start the AudioContext.\n *  @return  {Promise}\n */\nTone.Context.prototype.resume = function(){\n\tif (this._context.state === \"suspended\" && this._context instanceof AudioContext){\n\t\treturn this._context.resume();\n\t} else {\n\t\treturn Promise.resolve();\n\t}\n};\n\n/**\n *  Promise which is invoked when the context is running.\n *  Tries to resume the context if it's not started.\n *  @return  {Promise}\n */\nTone.Context.prototype.close = function(){\n\tvar closePromise = Promise.resolve();\n\t//never close the global Tone.Context\n\tif (this !== Tone.global.TONE_AUDIO_CONTEXT){\n\t\tclosePromise = this.rawContext.close();\n\t}\n\treturn closePromise.then(function(){\n\t\tTone.Context.emit(\"close\", this);\n\t}.bind(this));\n};\n\n/**\n *  Generate a looped buffer at some constant value.\n *  @param  {Number}  val\n *  @return  {BufferSourceNode}\n */\nTone.Context.prototype.getConstant = function(val){\n\tif (this._constants[val]){\n\t\treturn this._constants[val];\n\t} else {\n\t\tvar buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n\t\tvar arr = buffer.getChannelData(0);\n\t\tfor (var i = 0; i < arr.length; i++){\n\t\t\tarr[i] = val;\n\t\t}\n\t\tvar constant = this._context.createBufferSource();\n\t\tconstant.channelCount = 1;\n\t\tconstant.channelCountMode = \"explicit\";\n\t\tconstant.buffer = buffer;\n\t\tconstant.loop = true;\n\t\tconstant.start(0);\n\t\tthis._constants[val] = constant;\n\t\treturn constant;\n\t}\n};\n\n/**\n *  The private loop which keeps track of the context scheduled timeouts\n *  Is invoked from the clock source\n *  @private\n */\nTone.Context.prototype._timeoutLoop = function(){\n\tvar now = this.now();\n\twhile (this._timeouts && this._timeouts.length && this._timeouts.peek().time <= now){\n\t\tthis._timeouts.shift().callback();\n\t}\n};\n\n/**\n *  A setTimeout which is gaurenteed by the clock source.\n *  Also runs in the offline context.\n *  @param  {Function}  fn       The callback to invoke\n *  @param  {Seconds}    timeout  The timeout in seconds\n *  @returns {Number} ID to use when invoking Tone.Context.clearTimeout\n */\nTone.Context.prototype.setTimeout = function(fn, timeout){\n\tthis._timeoutIds++;\n\tvar now = this.now();\n\tthis._timeouts.add({\n\t\t\"callback\" : fn,\n\t\t\"time\" : now + timeout,\n\t\t\"id\" : this._timeoutIds\n\t});\n\treturn this._timeoutIds;\n};\n\n/**\n *  Clears a previously scheduled timeout with Tone.context.setTimeout\n *  @param  {Number}  id  The ID returned from setTimeout\n *  @return  {Tone.Context}  this\n */\nTone.Context.prototype.clearTimeout = function(id){\n\tthis._timeouts.forEach(function(event){\n\t\tif (event.id === id){\n\t\t\tthis.remove(event);\n\t\t}\n\t});\n\treturn this;\n};\n\n/**\n *  How often the Web Worker callback is invoked.\n *  This number corresponds to how responsive the scheduling\n *  can be. Context.updateInterval + Context.lookAhead gives you the\n *  total latency between scheduling an event and hearing it.\n *  @type {Number}\n *  @memberOf Tone.Context#\n *  @name updateInterval\n */\nObject.defineProperty(Tone.Context.prototype, \"updateInterval\", {\n\t\"get\" : function(){\n\t\treturn this._ticker.updateInterval;\n\t},\n\t\"set\" : function(interval){\n\t\tthis._ticker.updateInterval = interval;\n\t}\n});\n\n/**\n *  The unwrapped AudioContext.\n *  @type {AudioContext}\n *  @memberOf Tone.Context#\n *  @name rawContext\n *  @readOnly\n */\nObject.defineProperty(Tone.Context.prototype, \"rawContext\", {\n\t\"get\" : function(){\n\t\treturn this._context;\n\t}\n});\n\n/**\n *  What the source of the clock is, either \"worker\" (Web Worker [default]),\n *  \"timeout\" (setTimeout), or \"offline\" (none).\n *  @type {String}\n *  @memberOf Tone.Context#\n *  @name clockSource\n */\nObject.defineProperty(Tone.Context.prototype, \"clockSource\", {\n\t\"get\" : function(){\n\t\treturn this._ticker.type;\n\t},\n\t\"set\" : function(type){\n\t\tthis._ticker.type = type;\n\t}\n});\n\n/**\n *  The type of playback, which affects tradeoffs between audio\n *  output latency and responsiveness.\n *\n *  In addition to setting the value in seconds, the latencyHint also\n *  accepts the strings \"interactive\" (prioritizes low latency),\n *  \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n *  latency and performance), and \"fastest\" (lowest latency, might glitch more often).\n *  @type {String|Seconds}\n *  @memberOf Tone.Context#\n *  @name latencyHint\n *  @example\n * //set the lookAhead to 0.3 seconds\n * Tone.context.latencyHint = 0.3;\n */\nObject.defineProperty(Tone.Context.prototype, \"latencyHint\", {\n\t\"get\" : function(){\n\t\treturn this._latencyHint;\n\t},\n\t\"set\" : function(hint){\n\t\tvar lookAhead = hint;\n\t\tthis._latencyHint = hint;\n\t\tif (Tone.isString(hint)){\n\t\t\tswitch (hint){\n\t\t\t\tcase \"interactive\" :\n\t\t\t\t\tlookAhead = 0.1;\n\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"playback\" :\n\t\t\t\t\tlookAhead = 0.8;\n\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"balanced\" :\n\t\t\t\t\tlookAhead = 0.25;\n\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"fastest\" :\n\t\t\t\t\tthis._context.latencyHint = \"interactive\";\n\t\t\t\t\tlookAhead = 0.01;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.lookAhead = lookAhead;\n\t\tthis.updateInterval = lookAhead/3;\n\t}\n});\n\n/**\n *  Unlike other dispose methods, this returns a Promise\n *  which executes when the context is closed and disposed\n *  @returns {Promise} this\n */\nTone.Context.prototype.dispose = function(){\n\treturn this.close().then(function(){\n\t\tTone.Emitter.prototype.dispose.call(this);\n\t\tthis._ticker.dispose();\n\t\tthis._ticker = null;\n\t\tthis._timeouts.dispose();\n\t\tthis._timeouts = null;\n\t\tfor (var con in this._constants){\n\t\t\tthis._constants[con].disconnect();\n\t\t}\n\t\tthis._constants = null;\n\t}.bind(this));\n};\n\n/**\n * @class A class which provides a reliable callback using either\n *        a Web Worker, or if that isn't supported, falls back to setTimeout.\n * @private\n */\nvar Ticker = function(callback, type, updateInterval){\n\n\t/**\n\t * Either \"worker\" or \"timeout\"\n\t * @type {String}\n\t * @private\n\t */\n\tthis._type = type;\n\n\t/**\n\t * The update interval of the worker\n\t * @private\n\t * @type {Number}\n\t */\n\tthis._updateInterval = updateInterval;\n\n\t/**\n\t * The callback to invoke at regular intervals\n\t * @type {Function}\n\t * @private\n\t */\n\tthis._callback = Tone.defaultArg(callback, Tone.noOp);\n\n\t//create the clock source for the first time\n\tthis._createClock();\n};\n\n/**\n * The possible ticker types\n * @private\n * @type {Object}\n */\nTicker.Type = {\n\t\"Worker\" : \"worker\",\n\t\"Timeout\" : \"timeout\",\n\t\"Offline\" : \"offline\"\n};\n\n/**\n *  Generate a web worker\n *  @return  {WebWorker}\n *  @private\n */\nTicker.prototype._createWorker = function(){\n\n\t//URL Shim\n\tTone.global.URL = Tone.global.URL || Tone.global.webkitURL;\n\n\tvar blob = new Blob([\n\t\t//the initial timeout time\n\t\t\"var timeoutTime = \"+(this._updateInterval * 1000).toFixed(1)+\";\" +\n\t\t//onmessage callback\n\t\t\"self.onmessage = function(msg){\" +\n\t\t\"\ttimeoutTime = parseInt(msg.data);\" +\n\t\t\"};\" +\n\t\t//the tick function which posts a message\n\t\t//and schedules a new tick\n\t\t\"function tick(){\" +\n\t\t\"\tsetTimeout(tick, timeoutTime);\" +\n\t\t\"\tself.postMessage('tick');\" +\n\t\t\"}\" +\n\t\t//call tick initially\n\t\t\"tick();\"\n\t]);\n\tvar blobUrl = URL.createObjectURL(blob);\n\tvar worker = new Worker(blobUrl);\n\n\tworker.onmessage = this._callback.bind(this);\n\n\tthis._worker = worker;\n};\n\n/**\n * Create a timeout loop\n * @private\n */\nTicker.prototype._createTimeout = function(){\n\tthis._timeout = setTimeout(function(){\n\t\tthis._createTimeout();\n\t\tthis._callback();\n\t}.bind(this), this._updateInterval * 1000);\n};\n\n/**\n * Create the clock source.\n * @private\n */\nTicker.prototype._createClock = function(){\n\tif (this._type === Ticker.Type.Worker){\n\t\ttry {\n\t\t\tthis._createWorker();\n\t\t} catch (e){\n\t\t\t// workers not supported, fallback to timeout\n\t\t\tthis._type = Ticker.Type.Timeout;\n\t\t\tthis._createClock();\n\t\t}\n\t} else if (this._type === Ticker.Type.Timeout){\n\t\tthis._createTimeout();\n\t}\n};\n\n/**\n * @memberOf Ticker#\n * @type {Number}\n * @name updateInterval\n * @private\n */\nObject.defineProperty(Ticker.prototype, \"updateInterval\", {\n\t\"get\" : function(){\n\t\treturn this._updateInterval;\n\t},\n\t\"set\" : function(interval){\n\t\tthis._updateInterval = Math.max(interval, 128/44100);\n\t\tif (this._type === Ticker.Type.Worker){\n\t\t\tthis._worker.postMessage(Math.max(interval * 1000, 1));\n\t\t}\n\t}\n});\n\n/**\n * The type of the ticker, either a worker or a timeout\n * @memberOf Ticker#\n * @type {Number}\n * @name type\n * @private\n */\nObject.defineProperty(Ticker.prototype, \"type\", {\n\t\"get\" : function(){\n\t\treturn this._type;\n\t},\n\t\"set\" : function(type){\n\t\tthis._disposeClock();\n\t\tthis._type = type;\n\t\tthis._createClock();\n\t}\n});\n\n/**\n * Clean up the current clock source\n * @private\n */\nTicker.prototype._disposeClock = function(){\n\tif (this._timeout){\n\t\tclearTimeout(this._timeout);\n\t\tthis._timeout = null;\n\t}\n\tif (this._worker){\n\t\tthis._worker.terminate();\n\t\tthis._worker.onmessage = null;\n\t\tthis._worker = null;\n\t}\n};\n\n/**\n * Clean up\n * @private\n */\nTicker.prototype.dispose = function(){\n\tthis._disposeClock();\n\tthis._callback = null;\n};\n\n// set the audio context initially, and if one is not already created\nif (Tone.supported && !Tone.initialized){\t\t\t\n\tif (!Tone.global.TONE_AUDIO_CONTEXT){\n\t\tTone.global.TONE_AUDIO_CONTEXT = new Tone.Context();\n\t}\n\tTone.context = Tone.global.TONE_AUDIO_CONTEXT;\n\n\t// log on first initialization\n\t// allow optional silencing of this log\n\tif (!Tone.global.TONE_SILENCE_LOGGING){\n\t\tvar prefix = \"v\";\n\t\tif (Tone.version === \"dev\"){\n\t\t\tprefix = \"\";\n\t\t}\n\t\tvar printString = \" * Tone.js \" + prefix + Tone.version + \" * \"; \n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(\"%c\" + printString, \"background: #000; color: #fff\");\n\t}\n} else if (!Tone.supported && !Tone.global.TONE_SILENCE_LOGGING){\n\t// eslint-disable-next-line no-console\n\tconsole.warn(\"This browser does not support Tone.js\");\n}\n\nexport default Tone.Context;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\nimport \"../core/Master\";\n\n/**\n *  @class  Base-class for all instruments\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n */\nTone.Instrument = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.Instrument.defaults);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The output and volume triming node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * source.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\t/**\n\t * Keep track of all events scheduled to the transport\n\t * when the instrument is 'synced'\n\t * @type {Array<Number>}\n\t * @private\n\t */\n\tthis._scheduledEvents = [];\n};\n\nTone.extend(Tone.Instrument, Tone.AudioNode);\n\n/**\n *  the default attributes\n *  @type {object}\n */\nTone.Instrument.defaults = {\n\t/** the volume of the output in decibels */\n\t\"volume\" : 0\n};\n\n/**\n *  @abstract\n *  @param {string|number} note the note to trigger\n *  @param {Time} [time=now] the time to trigger the ntoe\n *  @param {number} [velocity=1] the velocity to trigger the note\n */\nTone.Instrument.prototype.triggerAttack = Tone.noOp;\n\n/**\n *  @abstract\n *  @param {Time} [time=now] when to trigger the release\n */\nTone.Instrument.prototype.triggerRelease = Tone.noOp;\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * instrument.sync()\n * //schedule 3 notes when the transport first starts\n * instrument.triggerAttackRelease('C4', '8n', 0)\n * instrument.triggerAttackRelease('E4', '8n', '8n')\n * instrument.triggerAttackRelease('G4', '8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.Instrument.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 1);\n\tthis._syncMethod(\"triggerRelease\", 0);\n\treturn this;\n};\n\n/**\n * Wrap the given method so that it can be synchronized\n * @param {String} method Which method to wrap and sync\n * @param  {Number} timePosition What position the time argument appears in\n * @private\n */\nTone.Instrument.prototype._syncMethod = function(method, timePosition){\n\tvar originalMethod = this[\"_original_\"+method] = this[method];\n\tthis[method] = function(){\n\t\tvar args = Array.prototype.slice.call(arguments);\n\t\tvar time = args[timePosition];\n\t\tvar id = Tone.Transport.schedule(function(t){\n\t\t\targs[timePosition] = t;\n\t\t\toriginalMethod.apply(this, args);\n\t\t}.bind(this), time);\n\t\tthis._scheduledEvents.push(id);\n\t}.bind(this);\n};\n\n/**\n * Unsync the instrument from the Transport\n * @returns {Tone.Instrument} this\n */\nTone.Instrument.prototype.unsync = function(){\n\tthis._scheduledEvents.forEach(function(id){\n\t\tTone.Transport.clear(id);\n\t});\n\tthis._scheduledEvents = [];\n\tif (this._original_triggerAttack){\n\t\tthis.triggerAttack = this._original_triggerAttack;\n\t\tthis.triggerRelease = this._original_triggerRelease;\n\t}\n\treturn this;\n};\n\n/**\n *  Trigger the attack and then the release after the duration.\n *  @param  {Frequency} note     The note to trigger.\n *  @param  {Time} duration How long the note should be held for before\n *                          triggering the release. This value must be greater than 0.\n *  @param {Time} [time=now]  When the note should be triggered.\n *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n *  @returns {Tone.Instrument} this\n *  @example\n * //trigger \"C4\" for the duration of an 8th note\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n */\nTone.Instrument.prototype.triggerAttackRelease = function(note, duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tduration = this.toSeconds(duration);\n\tthis.triggerAttack(note, time, velocity);\n\tthis.triggerRelease(time + duration);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.Instrument} this\n */\nTone.Instrument.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis._writable([\"volume\"]);\n\tthis.volume = null;\n\tthis.unsync();\n\tthis._scheduledEvents = null;\n\treturn this;\n};\n\nexport default Tone.Instrument;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/Signal\";\n\n/**\n *  @class AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1]. \n *         See Tone.GainToAudio.\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @example\n *  var a2g = new Tone.AudioToGain();\n */\nTone.AudioToGain = function(){\n\n\tTone.SignalBase.call(this);\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._norm = this.input = this.output = new Tone.WaveShaper(function(x){\n\t\treturn (x + 1) / 2;\n\t});\n};\n\nTone.extend(Tone.AudioToGain, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.AudioToGain} this\n */\nTone.AudioToGain.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._norm.dispose();\n\tthis._norm = null;\n\treturn this;\n};\n\nexport default Tone.AudioToGain;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Subtract\";\nimport \"../signal/EqualPowerGain\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n * @class  Tone.Crossfade provides equal power fading between two inputs.\n *         More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n *\n * @constructor\n * @extends {Tone.AudioNode}\n * @param {NormalRange} [initialFade=0.5]\n * @example\n * var crossFade = new Tone.CrossFade(0.5);\n * //connect effect A to crossfade from\n * //effect output 0 to crossfade input 0\n * effectA.connect(crossFade, 0, 0);\n * //connect effect B to crossfade from\n * //effect output 0 to crossfade input 1\n * effectB.connect(crossFade, 0, 1);\n * crossFade.fade.value = 0;\n * // ^ only effectA is output\n * crossFade.fade.value = 1;\n * // ^ only effectB is output\n * crossFade.fade.value = 0.5;\n * // ^ the two signals are mixed equally.\n */\nTone.CrossFade = function(initialFade){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(2, 1);\n\n\t/**\n\t *  Alias for <code>input[0]</code>.\n\t *  @type {Tone.Gain}\n\t */\n\tthis.a = this.input[0] = new Tone.Gain();\n\n\t/**\n\t *  Alias for <code>input[1]</code>.\n\t *  @type {Tone.Gain}\n\t */\n\tthis.b = this.input[1] = new Tone.Gain();\n\n\t/**\n\t * \tThe mix between the two inputs. A fade value of 0\n\t * \twill output 100% <code>input[0]</code> and\n\t * \ta value of 1 will output 100% <code>input[1]</code>.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.fade = new Tone.Signal(Tone.defaultArg(initialFade, 0.5), Tone.Type.NormalRange);\n\n\t/**\n\t *  equal power gain cross fade\n\t *  @private\n\t *  @type {Tone.EqualPowerGain}\n\t */\n\tthis._equalPowerA = new Tone.EqualPowerGain();\n\n\t/**\n\t *  equal power gain cross fade\n\t *  @private\n\t *  @type {Tone.EqualPowerGain}\n\t */\n\tthis._equalPowerB = new Tone.EqualPowerGain();\n\n\t/**\n\t *  invert the incoming signal\n\t *  @private\n\t *  @type {Tone}\n\t */\n\tthis._one = this.context.getConstant(1);\n\n\t/**\n\t *  invert the incoming signal\n\t *  @private\n\t *  @type {Tone.Subtract}\n\t */\n\tthis._invert = new Tone.Subtract();\n\n\t//connections\n\tthis.a.connect(this.output);\n\tthis.b.connect(this.output);\n\tthis.fade.chain(this._equalPowerB, this.b.gain);\n\tTone.connect(this._one, this._invert, 0, 0);\n\tthis.fade.connect(this._invert, 0, 1);\n\tthis._invert.chain(this._equalPowerA, this.a.gain);\n\tthis._readOnly(\"fade\");\n};\n\nTone.extend(Tone.CrossFade, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.CrossFade} this\n */\nTone.CrossFade.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"fade\");\n\tthis._equalPowerA.dispose();\n\tthis._equalPowerA = null;\n\tthis._equalPowerB.dispose();\n\tthis._equalPowerB = null;\n\tthis.fade.dispose();\n\tthis.fade = null;\n\tthis._invert.dispose();\n\tthis._invert = null;\n\tthis._one = null;\n\tthis.a.dispose();\n\tthis.a = null;\n\tthis.b.dispose();\n\tthis.b = null;\n\treturn this;\n};\n\nexport default Tone.CrossFade;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class A Timeline class for scheduling and maintaining state\n *         along a timeline. All events must have a \"time\" property.\n *         Internally, events are stored in time order for fast\n *         retrieval.\n *  @extends {Tone}\n *  @param {Positive} [memory=Infinity] The number of previous events that are retained.\n */\nTone.Timeline = function(){\n\n\tvar options = Tone.defaults(arguments, [\"memory\"], Tone.Timeline);\n\tTone.call(this);\n\n\t/**\n\t *  The array of scheduled timeline events\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._timeline = [];\n\n\t/**\n\t *  The memory of the timeline, i.e.\n\t *  how many events in the past it will retain\n\t *  @type {Positive}\n\t */\n\tthis.memory = options.memory;\n};\n\nTone.extend(Tone.Timeline);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n */\nTone.Timeline.defaults = {\n\t\"memory\" : Infinity\n};\n\n/**\n *  The number of items in the timeline.\n *  @type {Number}\n *  @memberOf Tone.Timeline#\n *  @name length\n *  @readOnly\n */\nObject.defineProperty(Tone.Timeline.prototype, \"length\", {\n\tget : function(){\n\t\treturn this._timeline.length;\n\t}\n});\n\n/**\n *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n *  @param  {Object}  event  The event object to insert into the\n *                           timeline.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.add = function(event){\n\t//the event needs to have a time attribute\n\tif (Tone.isUndef(event.time)){\n\t\tthrow new Error(\"Tone.Timeline: events must have a time attribute\");\n\t}\n\tevent.time = event.time.valueOf();\n\tvar index = this._search(event.time);\n\tthis._timeline.splice(index + 1, 0, event);\n\t//if the length is more than the memory, remove the previous ones\n\tif (this.length > this.memory){\n\t\tvar diff = this.length - this.memory;\n\t\tthis._timeline.splice(0, diff);\n\t}\n\treturn this;\n};\n\n/**\n *  Remove an event from the timeline.\n *  @param  {Object}  event  The event object to remove from the list.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.remove = function(event){\n\tvar index = this._timeline.indexOf(event);\n\tif (index !== -1){\n\t\tthis._timeline.splice(index, 1);\n\t}\n\treturn this;\n};\n\n/**\n *  Get the nearest event whose time is less than or equal to the given time.\n *  @param  {Number}  time  The time to query.\n *  @param  {String}  comparator Which value in the object to compare\n *  @returns {Object} The event object set after that time.\n */\nTone.Timeline.prototype.get = function(time, comparator){\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar index = this._search(time, comparator);\n\tif (index !== -1){\n\t\treturn this._timeline[index];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Return the first event in the timeline without removing it\n *  @returns {Object} The first event object\n */\nTone.Timeline.prototype.peek = function(){\n\treturn this._timeline[0];\n};\n\n/**\n *  Return the first event in the timeline and remove it\n *  @returns {Object} The first event object\n */\nTone.Timeline.prototype.shift = function(){\n\treturn this._timeline.shift();\n};\n\n/**\n *  Get the event which is scheduled after the given time.\n *  @param  {Number}  time  The time to query.\n *  @param  {String}  comparator Which value in the object to compare\n *  @returns {Object} The event object after the given time\n */\nTone.Timeline.prototype.getAfter = function(time, comparator){\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar index = this._search(time, comparator);\n\tif (index + 1 < this._timeline.length){\n\t\treturn this._timeline[index + 1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Get the event before the event at the given time.\n *  @param  {Number}  time  The time to query.\n *  @param  {String}  comparator Which value in the object to compare\n *  @returns {Object} The event object before the given time\n */\nTone.Timeline.prototype.getBefore = function(time, comparator){\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar len = this._timeline.length;\n\t//if it's after the last item, return the last item\n\tif (len > 0 && this._timeline[len - 1][comparator] < time){\n\t\treturn this._timeline[len - 1];\n\t}\n\tvar index = this._search(time, comparator);\n\tif (index - 1 >= 0){\n\t\treturn this._timeline[index - 1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Cancel events after the given time\n *  @param  {Number}  time  The time to query.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.cancel = function(after){\n\tif (this._timeline.length > 1){\n\t\tvar index = this._search(after);\n\t\tif (index >= 0){\n\t\t\tif (this._timeline[index].time === after){\n\t\t\t\t//get the first item with that time\n\t\t\t\tfor (var i = index; i >= 0; i--){\n\t\t\t\t\tif (this._timeline[i].time === after){\n\t\t\t\t\t\tindex = i;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._timeline = this._timeline.slice(0, index);\n\t\t\t} else {\n\t\t\t\tthis._timeline = this._timeline.slice(0, index + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._timeline = [];\n\t\t}\n\t} else if (this._timeline.length === 1){\n\t\t//the first item's time\n\t\tif (this._timeline[0].time >= after){\n\t\t\tthis._timeline = [];\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel events before or equal to the given time.\n *  @param  {Number}  time  The time to cancel before.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.cancelBefore = function(time){\n\tvar index = this._search(time);\n\tif (index >= 0){\n\t\tthis._timeline = this._timeline.slice(index + 1);\n\t}\n\treturn this;\n};\n\n/**\n * Returns the previous event if there is one. null otherwise\n * @param  {Object} event The event to find the previous one of\n * @return {Object}       The event right before the given event\n */\nTone.Timeline.prototype.previousEvent = function(event){\n\tvar index = this._timeline.indexOf(event);\n\tif (index > 0){\n\t\treturn this._timeline[index-1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Does a binary search on the timeline array and returns the\n *  nearest event index whose time is after or equal to the given time.\n *  If a time is searched before the first index in the timeline, -1 is returned.\n *  If the time is after the end, the index of the last item is returned.\n *  @param  {Number}  time\n *  @param  {String}  comparator Which value in the object to compare\n *  @return  {Number} the index in the timeline array\n *  @private\n */\nTone.Timeline.prototype._search = function(time, comparator){\n\tif (this._timeline.length === 0){\n\t\treturn -1;\n\t}\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar beginning = 0;\n\tvar len = this._timeline.length;\n\tvar end = len;\n\tif (len > 0 && this._timeline[len - 1][comparator] <= time){\n\t\treturn len - 1;\n\t}\n\twhile (beginning < end){\n\t\t// calculate the midpoint for roughly equal partition\n\t\tvar midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t\tvar event = this._timeline[midPoint];\n\t\tvar nextEvent = this._timeline[midPoint + 1];\n\t\tif (event[comparator] === time){\n\t\t\t//choose the last one that has the same time\n\t\t\tfor (var i = midPoint; i < this._timeline.length; i++){\n\t\t\t\tvar testEvent = this._timeline[i];\n\t\t\t\tif (testEvent[comparator] === time){\n\t\t\t\t\tmidPoint = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn midPoint;\n\t\t} else if (event[comparator] < time && nextEvent[comparator] > time){\n\t\t\treturn midPoint;\n\t\t} else if (event[comparator] > time){\n\t\t\t//search lower\n\t\t\tend = midPoint;\n\t\t} else {\n\t\t\t//search upper\n\t\t\tbeginning = midPoint + 1;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/**\n *  Internal iterator. Applies extra safety checks for\n *  removing items from the array.\n *  @param  {Function}  callback\n *  @param  {Number=}    lowerBound\n *  @param  {Number=}    upperBound\n *  @private\n */\nTone.Timeline.prototype._iterate = function(callback, lowerBound, upperBound){\n\tlowerBound = Tone.defaultArg(lowerBound, 0);\n\tupperBound = Tone.defaultArg(upperBound, this._timeline.length-1);\n\tthis._timeline.slice(lowerBound, upperBound+1).forEach(function(event){\n\t\tcallback.call(this, event);\n\t}.bind(this));\n};\n\n/**\n *  Iterate over everything in the array\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEach = function(callback){\n\tthis._iterate(callback);\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array at or before the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachBefore = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar upperBound = this._search(time);\n\tif (upperBound !== -1){\n\t\tthis._iterate(callback, 0, upperBound);\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array after the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachAfter = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar lowerBound = this._search(time);\n\tthis._iterate(callback, lowerBound + 1);\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array between the startTime and endTime. \n *  The timerange is inclusive of the startTime, but exclusive of the endTime. \n *  range = [startTime, endTime). \n *  @param  {Number}  startTime The time to check if items are before\n *  @param  {Number}  endTime The end of the test interval. \n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachBetween = function(startTime, endTime, callback){\n\tvar lowerBound = this._search(startTime);\n\tvar upperBound = this._search(endTime);\n\tif (lowerBound !== -1 && upperBound !== -1){\n\t\tif (this._timeline[lowerBound].time !== startTime){\n\t\t\tlowerBound += 1;\n\t\t}\n\t\t//exclusive of the end time\n\t\tif (this._timeline[upperBound].time === endTime){\n\t\t\tupperBound -= 1;\n\t\t}\n\t\tthis._iterate(callback, lowerBound, upperBound);\n\t} else if (lowerBound === -1){\n\t\tthis._iterate(callback, 0, upperBound);\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array at or after the given time. Similar to\n *  forEachAfter, but includes the item(s) at the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachFrom = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar lowerBound = this._search(time);\n\t//work backwards until the event time is less than time\n\twhile (lowerBound >= 0 && this._timeline[lowerBound].time >= time){\n\t\tlowerBound--;\n\t}\n\tthis._iterate(callback, lowerBound + 1);\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array at the given time\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachAtTime = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar upperBound = this._search(time);\n\tif (upperBound !== -1){\n\t\tthis._iterate(function(event){\n\t\t\tif (event.time === time){\n\t\t\t\tcallback.call(this, event);\n\t\t\t}\n\t\t}, 0, upperBound);\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Timeline}  this\n */\nTone.Timeline.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis._timeline = null;\n\treturn this;\n};\n\nexport default Tone.Timeline;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../signal/Signal\";\n\n/**\n *  @class  This is an abstract base class for other monophonic instruments to \n *          extend. IMPORTANT: It does not make any sound on its own and\n *          shouldn't be directly instantiated.\n *\n *  @constructor\n *  @abstract\n *  @extends {Tone.Instrument}\n */\nTone.Monophonic = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.Monophonic.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The glide time between notes. \n\t *  @type {Time}\n\t */\n\tthis.portamento = options.portamento;\n};\n\nTone.extend(Tone.Monophonic, Tone.Instrument);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Monophonic.defaults = {\n\t\"portamento\" : 0\n};\n\n/**\n *  Trigger the attack of the note optionally with a given velocity. \n *  \n *  \n *  @param  {Frequency} note     The note to trigger.\n *  @param  {Time} [time=now]     When the note should start.\n *  @param  {number} [velocity=1] velocity The velocity scaler \n *                                determines how \"loud\" the note \n *                                will be triggered.\n *  @returns {Tone.Monophonic} this\n *  @example\n * synth.triggerAttack(\"C4\");\n *  @example\n * //trigger the note a half second from now at half velocity\n * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n */\nTone.Monophonic.prototype.triggerAttack = function(note, time, velocity){\n\tthis.log(\"triggerAttack\", note, time, velocity);\n\ttime = this.toSeconds(time);\n\tthis._triggerEnvelopeAttack(time, velocity);\n\tthis.setNote(note, time);\n\treturn this;\n};\n\n/**\n *  Trigger the release portion of the envelope\n *  @param  {Time} [time=now] If no time is given, the release happens immediatly\n *  @returns {Tone.Monophonic} this\n *  @example\n * synth.triggerRelease();\n */\nTone.Monophonic.prototype.triggerRelease = function(time){\n\tthis.log(\"triggerRelease\", time);\n\ttime = this.toSeconds(time);\n\tthis._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  override this method with the actual method\n *  @abstract\n *  @private\n */\t\nTone.Monophonic.prototype._triggerEnvelopeAttack = function(){};\n\n/**\n *  override this method with the actual method\n *  @abstract\n *  @private\n */\t\nTone.Monophonic.prototype._triggerEnvelopeRelease = function(){};\n\n/**\n *  Get the level of the output at the given time. Measures\n *  the envelope(s) value at the time. \n *  @param {Time} time The time to query the envelope value\n *  @return {NormalRange} The output level between 0-1\n */\nTone.Monophonic.prototype.getLevelAtTime = function(time){\n\ttime = this.toSeconds(time);\n\treturn this.envelope.getValueAtTime(time);\n};\n\n/**\n *  Set the note at the given time. If no time is given, the note\n *  will set immediately. \n *  @param {Frequency} note The note to change to.\n *  @param  {Time} [time=now] The time when the note should be set. \n *  @returns {Tone.Monophonic} this\n * @example\n * //change to F#6 in one quarter note from now.\n * synth.setNote(\"F#6\", \"+4n\");\n * @example\n * //change to Bb4 right now\n * synth.setNote(\"Bb4\");\n */\nTone.Monophonic.prototype.setNote = function(note, time){\n\ttime = this.toSeconds(time);\n\tif (this.portamento > 0 && this.getLevelAtTime(time) > 0.05){\n\t\tvar portTime = this.toSeconds(this.portamento);\n\t\tthis.frequency.exponentialRampTo(note, portTime, time);\n\t} else {\n\t\tthis.frequency.setValueAtTime(note, time);\n\t}\n\treturn this;\n};\n\nexport default Tone.Monophonic;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Multiply\";\nimport \"../signal/Signal\";\n\n/**\n *  @class  Performs a linear scaling on an input signal.\n *          Scales a NormalRange input to between\n *          outputMin and outputMax.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @param {number} [outputMin=0] The output value when the input is 0. \n *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n *  @example\n * var scale = new Tone.Scale(50, 100);\n * var signal = new Tone.Signal(0.5).connect(scale);\n * //the output of scale equals 75\n */\nTone.Scale = function(outputMin, outputMax){\n\n\tTone.SignalBase.call(this);\n\t\n\t/** \n\t *  @private\n\t *  @type {number}\n\t */\n\tthis._outputMin = Tone.defaultArg(outputMin, 0);\n\n\t/** \n\t *  @private\n\t *  @type {number}\n\t */\n\tthis._outputMax = Tone.defaultArg(outputMax, 1);\n\n\t/** \n\t *  @private\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = this.input = new Tone.Multiply(1);\n\t\n\t/** \n\t *  @private\n\t *  @type {Tone.Add}\n\t *  @private\n\t */\n\tthis._add = this.output = new Tone.Add(0);\n\n\tthis._scale.connect(this._add);\n\tthis._setRange();\n};\n\nTone.extend(Tone.Scale, Tone.SignalBase);\n\n/**\n * The minimum output value. This number is output when \n * the value input value is 0. \n * @memberOf Tone.Scale#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.Scale.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._outputMin;\n\t},\n\tset : function(min){\n\t\tthis._outputMin = min;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n * The maximum output value. This number is output when \n * the value input value is 1. \n * @memberOf Tone.Scale#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.Scale.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._outputMax;\n\t},\n\tset : function(max){\n\t\tthis._outputMax = max;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n *  set the values\n *  @private\n */\nTone.Scale.prototype._setRange = function(){\n\tthis._add.value = this._outputMin;\n\tthis._scale.value = this._outputMax - this._outputMin;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Scale} this\n */\nTone.Scale.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._add.dispose();\n\tthis._add = null;\n\tthis._scale.dispose();\n\tthis._scale = null;\n\treturn this;\n}; \n\nexport default Tone.Scale;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Volume is a simple volume node, useful for creating a volume fader.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Decibels} [volume=0] the initial volume\n *  @example\n * var vol = new Tone.Volume(-12);\n * instrument.chain(vol, Tone.Master);\n */\nTone.Volume = function(){\n\n\tvar options = Tone.defaults(arguments, [\"volume\"], Tone.Volume);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t * the output node\n\t * @type {GainNode}\n\t * @private\n\t */\n\tthis.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);\n\n\t/**\n\t * The unmuted volume\n\t * @type {Decibels}\n\t * @private\n\t */\n\tthis._unmutedVolume = options.volume;\n\n\t/**\n\t *  The volume control in decibels.\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.volume = this.output.gain;\n\n\tthis._readOnly(\"volume\");\n\n\t//set the mute initially\n\tthis.mute = options.mute;\n};\n\nTone.extend(Tone.Volume, Tone.AudioNode);\n\n/**\n *  Defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.Volume.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n * Mute the output.\n * @memberOf Tone.Volume#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * volume.mute = true;\n */\nObject.defineProperty(Tone.Volume.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this.volume.value === -Infinity;\n\t},\n\tset : function(mute){\n\t\tif (!this.mute && mute){\n\t\t\tthis._unmutedVolume = this.volume.value;\n\t\t\t//maybe it should ramp here?\n\t\t\tthis.volume.value = -Infinity;\n\t\t} else if (this.mute && !mute){\n\t\t\tthis.volume.value = this._unmutedVolume;\n\t\t}\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Volume} this\n */\nTone.Volume.prototype.dispose = function(){\n\tthis.input.dispose();\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"volume\");\n\tthis.volume.dispose();\n\tthis.volume = null;\n\treturn this;\n};\n\nexport default Tone.Volume;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\nimport \"../signal/SignalBase\";\n\n/**\n *  @class Tone.Zero outputs 0's at audio-rate. The reason this has to be\n *         it's own class is that many browsers optimize out Tone.Signal\n *         with a value of 0 and will not process nodes further down the graph.\n *  @extends {Tone.SignalBase}\n */\nTone.Zero = function(){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  The gain node\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._gain = this.input = this.output = new Tone.Gain();\n\n\tTone.connect(this.context.getConstant(0), this._gain);\n};\n\nTone.extend(Tone.Zero, Tone.SignalBase);\n\n/**\n *  clean up\n *  @return  {Tone.Zero}  this\n */\nTone.Zero.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._gain.dispose();\n\tthis._gain = null;\n\treturn this;\n};\n\nexport default Tone.Zero;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\n\n/**\n *  @class Add a signal and a number or two signals. When no value is\n *         passed into the constructor, Tone.Add will sum <code>input[0]</code>\n *         and <code>input[1]</code>. If a value is passed into the constructor, \n *         the it will be added to the input.\n *  \n *  @constructor\n *  @extends {Tone.Signal}\n *  @param {number=} value If no value is provided, Tone.Add will sum the first\n *                         and second inputs. \n *  @example\n * var signal = new Tone.Signal(2);\n * var add = new Tone.Add(2);\n * signal.connect(add);\n * //the output of add equals 4\n *  @example\n * //if constructed with no arguments\n * //it will add the first and second inputs\n * var add = new Tone.Add();\n * var sig0 = new Tone.Signal(3).connect(add, 0, 0);\n * var sig1 = new Tone.Signal(4).connect(add, 0, 1);\n * //the output of add equals 7. \n */\nTone.Add = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  the summing node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._sum = this.input[0] = this.input[1] = this.output = new Tone.Gain();\n\n\t/**\n\t *  @private\n\t *  @type {Tone.Signal}\n\t */\n\tthis._param = this.input[1] = new Tone.Signal(value);\n\n\tthis._param.connect(this._sum);\n};\n\nTone.extend(Tone.Add, Tone.Signal);\n\n/**\n *  Clean up.\n *  @returns {Tone.Add} this\n */\nTone.Add.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._sum.dispose();\n\tthis._sum = null;\n\treturn this;\n}; \n\nexport default Tone.Add;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Base class for all Signals. Used Internally.\n *\n *  @constructor\n *  @extends {Tone}\n */\nTone.SignalBase = function(){\n\tTone.AudioNode.call(this);\n};\n\nTone.extend(Tone.SignalBase, Tone.AudioNode);\n\n/**\n *  When signals connect to other signals or AudioParams,\n *  they take over the output value of that signal or AudioParam.\n *  For all other nodes, the behavior is the same as a default <code>connect</code>.\n *\n *  @override\n *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node\n *  @param {number} [outputNumber=0] The output number to connect from.\n *  @param {number} [inputNumber=0] The input number to connect to.\n *  @returns {Tone.SignalBase} this\n */\nTone.SignalBase.prototype.connect = function(node, outputNumber, inputNumber){\n\t//zero it out so that the signal can have full control\n\tif ((Tone.Signal && Tone.Signal === node.constructor) ||\n\t\t\t(Tone.Param && Tone.Param === node.constructor)){\n\t\t//cancel changes\n\t\tnode._param.cancelScheduledValues(0);\n\t\t//reset the value\n\t\tnode._param.setValueAtTime(0, 0);\n\t\t//mark the value as overridden\n\t\tnode.overridden = true;\n\t} else if (node instanceof AudioParam){\n\t\tnode.cancelScheduledValues(0);\n\t\tnode.setValueAtTime(0, 0);\n\t}\n\tTone.AudioNode.prototype.connect.call(this, node, outputNumber, inputNumber);\n\treturn this;\n};\n\nexport default Tone.SignalBase;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Envelope\";\nimport \"../core/Gain\";\n\n/**\n *  @class  Tone.AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n *          Unlike Tone.Envelope, which outputs the envelope's value, Tone.AmplitudeEnvelope accepts\n *          an audio signal as the input and will apply the envelope to the amplitude\n *          of the signal. Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n *  @constructor\n *  @extends {Tone.Envelope}\n *  @param {Time|Object} [attack] The amount of time it takes for the envelope to go from\n *                               0 to it's maximum value.\n *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n *                       \tto fall to the sustain value.\n *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n *                                \tthe release is triggered.\n *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n *  @example\n * var ampEnv = new Tone.AmplitudeEnvelope({\n * \t\"attack\": 0.1,\n * \t\"decay\": 0.2,\n * \t\"sustain\": 1.0,\n * \t\"release\": 0.8\n * }).toMaster();\n * //create an oscillator and connect it\n * var osc = new Tone.Oscillator().connect(ampEnv).start();\n * //trigger the envelopes attack and release \"8t\" apart\n * ampEnv.triggerAttackRelease(\"8t\");\n */\nTone.AmplitudeEnvelope = function(){\n\n\tTone.Envelope.apply(this, arguments);\n\n\t/**\n\t *  the input node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.input = this.output = new Tone.Gain();\n\n\tthis._sig.connect(this.output.gain);\n};\n\nTone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);\n\n/**\n *  Clean up\n *  @return  {Tone.AmplitudeEnvelope}  this\n */\nTone.AmplitudeEnvelope.prototype.dispose = function(){\n\tTone.Envelope.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.AmplitudeEnvelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../source/Source\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Wrapper around the native BufferSourceNode.\n *  @extends {Tone.AudioNode}\n *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n *  @param  {Function}  onload  The callback to invoke when the\n *                               buffer is done playing.\n */\nTone.BufferSource = function(){\n\n\tvar options = Tone.defaults(arguments, [\"buffer\", \"onload\"], Tone.BufferSource);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The callback to invoke after the\n\t *  buffer source is done playing.\n\t *  @type  {Function}\n\t */\n\tthis.onended = options.onended;\n\n\t/**\n\t *  The time that the buffer was started.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._startTime = -1;\n\n\t/**\n\t *  An additional flag if the actual BufferSourceNode\n\t *  has been started. b/c stopping an unstarted buffer\n\t *  will throw it into an invalid state\n\t *  @type  {Boolean}\n\t *  @private\n\t */\n\tthis._sourceStarted = false;\n\n\t/**\n\t *  Flag if the source has already been stopped\n\t *  @type  {Boolean}\n\t *  @private\n\t */\n\tthis._sourceStopped = false;\n\n\t/**\n\t *  The time that the buffer is scheduled to stop.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._stopTime = -1;\n\n\t/**\n\t *  The gain node which envelopes the BufferSource\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._gainNode = this.output = new Tone.Gain(0);\n\n\t/**\n\t *  The buffer source\n\t *  @type  {AudioBufferSourceNode}\n\t *  @private\n\t */\n\tthis._source = this.context.createBufferSource();\n\tTone.connect(this._source, this._gainNode);\n\tthis._source.onended = this._onended.bind(this);\n\n\t/**\n\t * The private buffer instance\n\t * @type {Tone.Buffer}\n\t * @private\n\t */\n\tthis._buffer = new Tone.Buffer(options.buffer, options.onload);\n\n\t/**\n\t *  The playbackRate of the buffer\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.playbackRate = new Tone.Param({\n\t\tparam : this._source.playbackRate,\n\t\tunits : Tone.Type.Positive,\n\t\tvalue : options.playbackRate\n\t});\n\n\t/**\n\t *  The fadeIn time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeIn = options.fadeIn;\n\n\t/**\n\t *  The fadeOut time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeOut = options.fadeOut;\n\n\t/**\n\t * The curve applied to the fades, either \"linear\" or \"exponential\"\n\t * @type {String}\n\t */\n\tthis.curve = options.curve;\n\n\t/**\n\t * The onended timeout\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._onendedTimeout = -1;\n\n\t//set some values initially\n\tthis.loop = options.loop;\n\tthis.loopStart = options.loopStart;\n\tthis.loopEnd = options.loopEnd;\n};\n\nTone.extend(Tone.BufferSource, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.BufferSource.defaults = {\n\t\"onended\" : Tone.noOp,\n\t\"onload\" : Tone.noOp,\n\t\"loop\" : false,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : 0,\n\t\"fadeIn\" : 0,\n\t\"fadeOut\" : 0,\n\t\"curve\" : \"linear\",\n\t\"playbackRate\" : 1\n};\n\n/**\n *  Returns the playback state of the source, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.BufferSource#\n *  @name state\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"state\", {\n\tget : function(){\n\t\treturn this.getStateAtTime(this.now());\n\t}\n});\n\n/**\n *  Get the playback state at the given time\n *  @param  {Time}  time  The time to test the state at\n *  @return  {Tone.State}  The playback state. \n */\nTone.BufferSource.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._startTime !== -1 && \n\t\tthis._startTime <= time && \n\t\t(this._stopTime === -1 || time < this._stopTime) && \n\t\t!this._sourceStopped){\n\t\treturn Tone.State.Started;\n\t} else {\n\t\treturn Tone.State.Stopped;\n\t}\n};\n\n/**\n *  Start the buffer\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @param  {Gain}  [gain=1]  The gain to play the buffer back at.\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.start = function(time, offset, duration, gain){\n\tthis.log(\"start\", time, offset, duration, gain);\n\tthis.assert(this._startTime === -1, \"can only be started once\");\n\tthis.assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n\tthis.assert(!this._sourceStopped, \"source is already stopped\");\n\n\ttime = this.toSeconds(time);\n\t//if it's a loop the default offset is the loopstart point\n\tif (this.loop){\n\t\toffset = Tone.defaultArg(offset, this.loopStart);\n\t} else {\n\t\t//otherwise the default offset is 0\n\t\toffset = Tone.defaultArg(offset, 0);\n\t}\n\toffset = this.toSeconds(offset);\n\t//make sure the offset is not less than 0\n\toffset = Math.max(offset, 0);\n\n\tgain = Tone.defaultArg(gain, 1);\n\n\t//apply a fade in envelope\n\tvar fadeInTime = this.toSeconds(this.fadeIn);\n\tif (fadeInTime > 0){\n\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t\tif (this.curve === \"linear\"){\n\t\t\tthis._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n\t\t} else {\n\t\t\tthis._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n\t\t}\n\t} else {\n\t\tthis._gainNode.gain.setValueAtTime(gain, time);\n\t}\n\n\tthis._startTime = time;\n\n\t//if a duration is given, schedule a stop\n\tif (Tone.isDefined(duration)){\n\t\tvar computedDur = this.toSeconds(duration);\n\t\t//make sure it's never negative\n\t\tcomputedDur = Math.max(computedDur, 0);\n\n\t\tthis.stop(time + computedDur);\n\t}\n\n\t//start the buffer source\n\tif (this.loop){\n\t\t//modify the offset if it's greater than the loop time\n\t\tvar loopEnd = this.loopEnd || this.buffer.duration;\n\t\tvar loopStart = this.loopStart;\n\t\tvar loopDuration = loopEnd - loopStart;\n\t\t//move the offset back\n\t\tif (offset >= loopEnd){\n\t\t\toffset = ((offset - loopStart) % loopDuration) + loopStart;\n\t\t}\n\t}\n\tthis._source.buffer = this.buffer.get();\n\tthis._source.loopEnd = this.loopEnd || this.buffer.duration;\n\tif (offset < this.buffer.duration){\n\t\tthis._sourceStarted = true;\n\t\tthis._source.start(time, offset);\n\t}\n\n\treturn this;\n};\n\n/**\n *  Stop the buffer. \n *  @param  {Time=}  time         The time the buffer should stop.\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.stop = function(time){\n\tthis.log(\"stop\", time);\n\tthis.assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n\tthis.assert(!this._sourceStopped, \"source is already stopped\");\n\n\ttime = this.toSeconds(time);\n\n\t//if the event has already been scheduled, clear it\n\tif (this._stopTime !== -1){\n\t\tthis.cancelStop();\n\t}\n\n\t//the fadeOut time\n\tvar fadeOutTime = this.toSeconds(this.fadeOut);\n\n\t//cancel the previous curve\n\tthis._stopTime = time + fadeOutTime;\n\n\tif (fadeOutTime > 0){\n\t\t//start the fade out curve at the given time\n\t\tif (this.curve === \"linear\"){\n\t\t\tthis._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n\t\t} else {\n\t\t\tthis._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n\t\t}\n\t} else {\n\t\t//stop any ongoing ramps, and set the value to 0\n\t\tthis._gainNode.gain.cancelAndHoldAtTime(time);\n\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t}\n\n\tTone.context.clearTimeout(this._onendedTimeout);\n\tthis._onendedTimeout = Tone.context.setTimeout(this._onended.bind(this), this._stopTime - this.now());\n\n\treturn this;\n};\n\n/**\n *  Cancel a scheduled stop event\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.cancelStop = function(){\n\tif (this._startTime !== -1 && !this._sourceStopped){\n\t\t//cancel the stop envelope\n\t\tvar fadeInTime = this.toSeconds(this.fadeIn);\n\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime + fadeInTime + this.sampleTime);\n\t\tthis.context.clearTimeout(this._onendedTimeout);\n\t\tthis._stopTime = -1;\n\t}\n\treturn this;\n};\n\n/**\n *  Internal callback when the buffer is ended.\n *  Invokes `onended` and disposes the node.\n *  @private\n */\nTone.BufferSource.prototype._onended = function(){\n\tif (!this._sourceStopped){\n\t\tthis._sourceStopped = true;\n\t\t//allow additional time for the exponential curve to fully decay\n\t\tvar additionalTail = this.curve === \"exponential\" ? this.fadeOut * 2 : 0;\n\t\tif (this._sourceStarted && this._stopTime !== -1){\n\t\t\tthis._source.stop(this._stopTime + additionalTail);\n\t\t}\n\t\tthis.onended(this);\n\n\t\t//dispose the source after it's come to a stop\n\t\tsetTimeout(function(){\n\t\t\t//if it hasn't already been disposed\n\t\t\tif (this._source){\n\t\t\t\tthis._source.disconnect();\n\t\t\t\tthis._gainNode.disconnect();\n\t\t\t}\n\t\t}.bind(this), additionalTail * 1000 + 100);\n\t}\n};\n\n/**\n * If loop is true, the loop will start at this position.\n * @memberOf Tone.BufferSource#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn this._source.loopStart;\n\t},\n\tset : function(loopStart){\n\t\tthis._source.loopStart = this.toSeconds(loopStart);\n\t}\n});\n\n/**\n * If loop is true, the loop will end at this position.\n * @memberOf Tone.BufferSource#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn this._source.loopEnd;\n\t},\n\tset : function(loopEnd){\n\t\tthis._source.loopEnd = this.toSeconds(loopEnd);\n\t}\n});\n\n/**\n * The audio buffer belonging to the player.\n * @memberOf Tone.BufferSource#\n * @type {Tone.Buffer}\n * @name buffer\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"buffer\", {\n\tget : function(){\n\t\treturn this._buffer;\n\t},\n\tset : function(buffer){\n\t\tthis._buffer.set(buffer);\n\t}\n});\n\n/**\n * If the buffer should loop once it's over.\n * @memberOf Tone.BufferSource#\n * @type {Boolean}\n * @name loop\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._source.loop;\n\t},\n\tset : function(loop){\n\t\tthis._source.loop = loop;\n\t\tthis.cancelStop();\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.dispose = function(){\n\tif (!this._wasDisposed){\n\t\tthis._wasDisposed = true;\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis.onended = null;\n\t\tthis._source.onended = null;\n\t\tthis._source.disconnect();\n\t\tthis._source = null;\n\t\tthis._gainNode.dispose();\n\t\tthis._gainNode = null;\n\t\tthis._buffer.dispose();\n\t\tthis._buffer = null;\n\t\tthis._startTime = -1;\n\t\tthis.playbackRate = null;\n\t\tTone.context.clearTimeout(this._onendedTimeout);\n\t}\n\treturn this;\n};\n\nexport default Tone.BufferSource;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\n\n/**\n * \t@class  Tone.FeedbackEffect provides a loop between an \n * \t        audio source and its own output. This is a base-class\n * \t        for feedback effects. \n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {NormalRange|Object} [feedback] The initial feedback value.\n */\nTone.FeedbackEffect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"feedback\"], Tone.FeedbackEffect);\n\tTone.Effect.call(this, options);\n\t\n\t/**\n\t *  the gain which controls the feedback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackGain = new Tone.Gain(options.feedback, Tone.Type.NormalRange);\n\n\t/**\n\t *  The amount of signal which is fed back into the effect input. \n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.feedback = this._feedbackGain.gain;\n\n\t//the feedback loop\n\tthis.effectReturn.chain(this._feedbackGain, this.effectSend);\n\tthis._readOnly([\"feedback\"]);\n};\n\nTone.extend(Tone.FeedbackEffect, Tone.Effect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.FeedbackEffect.defaults = {\n\t\"feedback\" : 0.125\n};\n\n/**\n *  Clean up. \n *  @returns {Tone.FeedbackEffect} this\n */\nTone.FeedbackEffect.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._writable([\"feedback\"]);\n\tthis._feedbackGain.dispose();\n\tthis._feedbackGain = null;\n\tthis.feedback = null;\n\treturn this;\n};\n\nexport default Tone.FeedbackEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Timeline\";\nimport \"../type/Type\";\n\n/**\n *  @class  A Timeline State. Provides the methods: <code>setStateAtTime(\"state\", time)</code>\n *          and <code>getValueAtTime(time)</code>.\n *\n *  @extends {Tone.Timeline}\n *  @param {String} initial The initial state of the TimelineState. \n *                          Defaults to <code>undefined</code>\n */\nTone.TimelineState = function(initial){\n\n\tTone.Timeline.call(this);\n\n\t/**\n\t *  The initial state\n\t *  @private\n\t *  @type {String}\n\t */\n\tthis._initial = initial;\n};\n\nTone.extend(Tone.TimelineState, Tone.Timeline);\n\n/**\n *  Returns the scheduled state scheduled before or at\n *  the given time.\n *  @param  {Number}  time  The time to query.\n *  @return  {String}  The name of the state input in setStateAtTime.\n */\nTone.TimelineState.prototype.getValueAtTime = function(time){\n\tvar event = this.get(time);\n\tif (event !== null){\n\t\treturn event.state;\n\t} else {\n\t\treturn this._initial;\n\t}\n};\n\n/**\n *  Add a state to the timeline.\n *  @param  {String}  state The name of the state to set.\n *  @param  {Number}  time  The time to query.\n *  @returns {Tone.TimelineState} this\n */\nTone.TimelineState.prototype.setStateAtTime = function(state, time){\n\t//all state changes need to be >= the previous state time\n\t//TODO throw error if time < the previous event time\n\tthis.add({\n\t\t\"state\" : state,\n\t\t\"time\" : time\n\t});\n\treturn this;\n};\n\n/**\n *  Return the event before the time with the given state\n *  @param {Tone.State} state The state to look for\n *  @param  {Time}  time  When to check before\t\t\t\n *  @return  {Object}  The event with the given state before the time\n */\nTone.TimelineState.prototype.getLastState = function(state, time){\n\ttime = this.toSeconds(time);\n\tvar index = this._search(time);\n\tfor (var i = index; i >= 0; i--){\n\t\tvar event = this._timeline[i];\n\t\tif (event.state === state){\n\t\t\treturn event;\n\t\t}\n\t}\n};\n\n/**\n *  Return the event after the time with the given state\n *  @param {Tone.State} state The state to look for\n *  @param  {Time}  time  When to check from\n *  @return  {Object}  The event with the given state after the time\n */\nTone.TimelineState.prototype.getNextState = function(state, time){\n\ttime = this.toSeconds(time);\n\tvar index = this._search(time);\n\tif (index !== -1){\n\t\tfor (var i = index; i < this._timeline.length; i++){\n\t\t\tvar event = this._timeline[i];\n\t\t\tif (event.state === state){\n\t\t\t\treturn event;\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default Tone.TimelineState;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Tone.Emitter gives classes which extend it\n *         the ability to listen for and emit events.\n *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n *         MIT (c) 2011 Jerome Etienne.\n *\n *  @extends {Tone}\n */\nTone.Emitter = function(){\n\tTone.call(this);\n\t/**\n\t *  Contains all of the events.\n\t *  @private\n\t *  @type  {Object}\n\t */\n\tthis._events = {};\n};\n\nTone.extend(Tone.Emitter);\n\n/**\n *  Bind a callback to a specific event.\n *  @param  {String}    event     The name of the event to listen for.\n *  @param  {Function}  callback  The callback to invoke when the\n *                                event is emitted\n *  @return  {Tone.Emitter}    this\n */\nTone.Emitter.prototype.on = function(event, callback){\n\t//split the event\n\tvar events = event.split(/\\W+/);\n\tfor (var i = 0; i < events.length; i++){\n\t\tvar eventName = events[i];\n\t\tif (!this._events.hasOwnProperty(eventName)){\n\t\t\tthis._events[eventName] = [];\n\t\t}\n\t\tthis._events[eventName].push(callback);\n\t}\n\treturn this;\n};\n\n/**\n *  Bind a callback which is only invoked once\n *  @param  {String}    event     The name of the event to listen for.\n *  @param  {Function}  callback  The callback to invoke when the\n *                                event is emitted\n *  @return  {Tone.Emitter}    this\n */\nTone.Emitter.prototype.once = function(event, callback){\n\tvar boundCallback = function(){\n\t\t//invoke the callback\n\t\tcallback.apply(this, arguments);\n\t\tthis.off(event, boundCallback);\n\t}.bind(this);\n\tthis.on(event, boundCallback);\n\treturn this;\n};\n\n/**\n *  Remove the event listener.\n *  @param  {String}    event     The event to stop listening to.\n *  @param  {Function=}  callback  The callback which was bound to\n *                                the event with Tone.Emitter.on.\n *                                If no callback is given, all callbacks\n *                                events are removed.\n *  @return  {Tone.Emitter}    this\n */\nTone.Emitter.prototype.off = function(event, callback){\n\tvar events = event.split(/\\W+/);\n\tfor (var ev = 0; ev < events.length; ev++){\n\t\tevent = events[ev];\n\t\tif (this._events.hasOwnProperty(event)){\n\t\t\tif (Tone.isUndef(callback)){\n\t\t\t\tthis._events[event] = [];\n\t\t\t} else {\n\t\t\t\tvar eventList = this._events[event];\n\t\t\t\tfor (var i = 0; i < eventList.length; i++){\n\t\t\t\t\tif (eventList[i] === callback){\n\t\t\t\t\t\teventList.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Invoke all of the callbacks bound to the event\n *  with any arguments passed in.\n *  @param  {String}  event  The name of the event.\n *  @param {...*} args The arguments to pass to the functions listening.\n *  @return  {Tone.Emitter}  this\n */\nTone.Emitter.prototype.emit = function(event){\n\tif (this._events){\n\t\tvar args = Array.apply(null, arguments).slice(1);\n\t\tif (this._events.hasOwnProperty(event)){\n\t\t\tvar eventList = this._events[event].slice(0);\n\t\t\tfor (var i = 0, len = eventList.length; i < len; i++){\n\t\t\t\teventList[i].apply(this, args);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Add Emitter functions (on/off/emit) to the object\n *  @param  {Object|Function}  object  The object or class to extend.\n *  @returns {Tone.Emitter}\n */\nTone.Emitter.mixin = function(object){\n\tvar functions = [\"on\", \"once\", \"off\", \"emit\"];\n\tobject._events = {};\n\tfor (var i = 0; i < functions.length; i++){\n\t\tvar func = functions[i];\n\t\tvar emitterFunc = Tone.Emitter.prototype[func];\n\t\tobject[func] = emitterFunc;\n\t}\n\treturn Tone.Emitter;\n};\n\n/**\n *  Clean up\n *  @return  {Tone.Emitter}  this\n */\nTone.Emitter.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis._events = null;\n\treturn this;\n};\n\nexport default Tone.Emitter;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/AudioContext\";\n\n/**\n *  AnalyserNode.getFloatTimeDomainData polyfill\n *  @private\n */\nif (Tone.supported){\n\tif (!AnalyserNode.prototype.getFloatTimeDomainData){\n\t\t//referenced https://github.com/mohayonao/get-float-time-domain-data\n\t\tAnalyserNode.prototype.getFloatTimeDomainData = function(array){\n\t\t\tvar uint8 = new Uint8Array(array.length);\n\t\t\tthis.getByteTimeDomainData(uint8);\n\t\t\tfor (var i = 0; i < uint8.length; i++){\n\t\t\t\tarray[i] = (uint8[i] - 128) / 128;\n\t\t\t}\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/AudioNode\";\nimport \"../shim/AnalyserNode\";\n\n/**\n *  @class  Wrapper around the native Web Audio's\n *          [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n *          Extracts FFT or Waveform data from the incoming signal.\n *  @extends {Tone.AudioNode}\n *  @param {String=} type The return type of the analysis, either \"fft\", or \"waveform\".\n *  @param {Number=} size The size of the FFT. Value must be a power of\n *                       two in the range 16 to 16384.\n */\nTone.Analyser = function(){\n\n\tvar options = Tone.defaults(arguments, [\"type\", \"size\"], Tone.Analyser);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The analyser node.\n\t *  @private\n\t *  @type {AnalyserNode}\n\t */\n\tthis._analyser = this.input = this.output = this.context.createAnalyser();\n\n\t/**\n\t *  The analysis type\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  The buffer that the FFT data is written to\n\t *  @type {TypedArray}\n\t *  @private\n\t */\n\tthis._buffer = null;\n\n\t//set the values initially\n\tthis.size = options.size;\n\tthis.type = options.type;\n};\n\nTone.extend(Tone.Analyser, Tone.AudioNode);\n\n/**\n *  The default values.\n *  @type {Object}\n *  @const\n */\nTone.Analyser.defaults = {\n\t\"size\" : 1024,\n\t\"type\" : \"fft\",\n\t\"smoothing\" : 0.8\n};\n\n/**\n *  Possible return types of analyser.getValue()\n *  @enum {String}\n */\nTone.Analyser.Type = {\n\tWaveform : \"waveform\",\n\tFFT : \"fft\"\n};\n\n/**\n *  Run the analysis given the current settings and return the\n *  result as a TypedArray of length [size](#size).\n *  @returns {TypedArray}\n */\nTone.Analyser.prototype.getValue = function(){\n\tif (this._type === Tone.Analyser.Type.FFT){\n\t\tthis._analyser.getFloatFrequencyData(this._buffer);\n\t} else if (this._type === Tone.Analyser.Type.Waveform){\n\t\tthis._analyser.getFloatTimeDomainData(this._buffer);\n\t}\n\treturn this._buffer;\n};\n\n/**\n *  The size of analysis. This must be a power of two in the range 16 to 16384.\n *  @memberOf Tone.Analyser#\n *  @type {Number}\n *  @name size\n */\nObject.defineProperty(Tone.Analyser.prototype, \"size\", {\n\tget : function(){\n\t\treturn this._analyser.frequencyBinCount;\n\t},\n\tset : function(size){\n\t\t// fftSize is double frequencyBinCount\n\t\tthis._analyser.fftSize = size * 2;\n\t\tthis._buffer = new Float32Array(size);\n\t}\n});\n\n/**\n *  The analysis function returned by analyser.getValue(), either \"fft\" or \"waveform\".\n *  @memberOf Tone.Analyser#\n *  @type {String}\n *  @name type\n */\nObject.defineProperty(Tone.Analyser.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tif (type !== Tone.Analyser.Type.Waveform && type !== Tone.Analyser.Type.FFT){\n\t\t\tthrow new TypeError(\"Tone.Analyser: invalid type: \"+type);\n\t\t}\n\t\tthis._type = type;\n\t}\n});\n\n/**\n *  0 represents no time averaging with the last analysis frame.\n *  @memberOf Tone.Analyser#\n *  @type {NormalRange}\n *  @name smoothing\n */\nObject.defineProperty(Tone.Analyser.prototype, \"smoothing\", {\n\tget : function(){\n\t\treturn this._analyser.smoothingTimeConstant;\n\t},\n\tset : function(val){\n\t\tthis._analyser.smoothingTimeConstant = val;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.Analyser}  this\n */\nTone.Analyser.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.disconnect();\n\tthis._analyser = null;\n\tthis._buffer = null;\n};\n\nexport default Tone.Analyser;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../source/PulseOscillator\";\nimport \"../source/PWMOscillator\";\nimport \"../source/FMOscillator\";\nimport \"../source/AMOscillator\";\nimport \"../source/FatOscillator\";\n\n/**\n *  @class Tone.OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n *         Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n *         into one class. The oscillator class can be changed by setting the `type`.\n *         `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n *         any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n *         will use the FMOscillator, AMOscillator or FatOscillator respectively.\n *         For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n *         to a FatOscillator of type \"sawtooth\".\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The initial frequency of the oscillator.\n *  @param {String} type The type of the oscillator.\n *  @example\n *  var omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n */\nTone.OmniOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.OmniOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  the type of the oscillator source\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._sourceType = undefined;\n\n\t/**\n\t *  the oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._oscillator = null;\n\n\t//set the oscillator\n\tthis.type = options.type;\n\tthis._readOnly([\"frequency\", \"detune\"]);\n\t//set the options\n\tthis.set(options);\n};\n\nTone.extend(Tone.OmniOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.OmniOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"type\" : \"sine\",\n\t\"phase\" : 0\n};\n\n/**\n *  @enum {String}\n *  @private\n */\nvar OmniOscType = {\n\tPulse : \"PulseOscillator\",\n\tPWM : \"PWMOscillator\",\n\tOsc : \"Oscillator\",\n\tFM : \"FMOscillator\",\n\tAM : \"AMOscillator\",\n\tFat : \"FatOscillator\"\n};\n\n/**\n *  start the oscillator\n *  @param {Time} [time=now] the time to start the oscillator\n *  @private\n */\nTone.OmniOscillator.prototype._start = function(time){\n\tthis._oscillator.start(time);\n};\n\n/**\n *  start the oscillator\n *  @param {Time} [time=now] the time to start the oscillator\n *  @private\n */\nTone.OmniOscillator.prototype._stop = function(time){\n\tthis._oscillator.stop(time);\n};\n\nTone.OmniOscillator.prototype.restart = function(time){\n\tthis._oscillator.restart(time);\n};\n\n/**\n * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n * when it's not.\n *\n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name type\n * @example\n * omniOsc.type = \"pwm\";\n * //modulationFrequency is parameter which is available\n * //only when the type is \"pwm\".\n * omniOsc.modulationFrequency.value = 0.5;\n * @example\n * //an square wave frequency modulated by a sawtooth\n * omniOsc.type = \"fmsquare\";\n * omniOsc.modulationType = \"sawtooth\";\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"type\", {\n\tget : function(){\n\t\tvar prefix = \"\";\n\t\tif (this._sourceType === OmniOscType.FM){\n\t\t\tprefix = \"fm\";\n\t\t} else if (this._sourceType === OmniOscType.AM){\n\t\t\tprefix = \"am\";\n\t\t} else if (this._sourceType === OmniOscType.Fat){\n\t\t\tprefix = \"fat\";\n\t\t}\n\t\treturn prefix + this._oscillator.type;\n\t},\n\tset : function(type){\n\t\tif (type.substr(0, 2) === \"fm\"){\n\t\t\tthis._createNewOscillator(OmniOscType.FM);\n\t\t\tthis._oscillator.type = type.substr(2);\n\t\t} else if (type.substr(0, 2) === \"am\"){\n\t\t\tthis._createNewOscillator(OmniOscType.AM);\n\t\t\tthis._oscillator.type = type.substr(2);\n\t\t} else if (type.substr(0, 3) === \"fat\"){\n\t\t\tthis._createNewOscillator(OmniOscType.Fat);\n\t\t\tthis._oscillator.type = type.substr(3);\n\t\t} else if (type === \"pwm\"){\n\t\t\tthis._createNewOscillator(OmniOscType.PWM);\n\t\t} else if (type === \"pulse\"){\n\t\t\tthis._createNewOscillator(OmniOscType.Pulse);\n\t\t} else {\n\t\t\tthis._createNewOscillator(OmniOscType.Osc);\n\t\t\tthis._oscillator.type = type;\n\t\t}\n\t}\n});\n\n/**\n * The partials of the waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * This is not available on \"pwm\" and \"pulse\" oscillator types.\n * @memberOf Tone.OmniOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._oscillator.partials;\n\t},\n\tset : function(partials){\n\t\tthis._oscillator.partials = partials;\n\t}\n});\n\n/**\n * The partial count of the oscillator. This is not available on \"pwm\" and \"pulse\" oscillator types.\n * @memberOf Tone.OmniOscillator#\n * @type {Number}\n * @name partialCount\n * @example\n * //set the maximum number of partials\n * osc.partialCount = 0;\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._oscillator.partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._oscillator.partialCount = partialCount;\n\t}\n});\n\n/**\n *  Set a member/attribute of the oscillator.\n *  @param {Object|String} params\n *  @param {number=} value\n *  @param {Time=} rampTime\n *  @returns {Tone.OmniOscillator} this\n */\nTone.OmniOscillator.prototype.set = function(params, value){\n\t//make sure the type is set first\n\tif (params === \"type\"){\n\t\tthis.type = value;\n\t} else if (Tone.isObject(params) && params.hasOwnProperty(\"type\")){\n\t\tthis.type = params.type;\n\t}\n\t//then set the rest\n\tTone.prototype.set.apply(this, arguments);\n\treturn this;\n};\n\n/**\n *  Get the object's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. Pass in a single attribute to retrieve or an array\n *  of attributes. The attribute strings can also include a \".\"\n *  to access deeper properties.\n *  @param {Array=|string|undefined} params the parameters to get, otherwise will return\n *  \t\t\t\t\t                  all available.\n *  @returns {Object}\n */\nTone.OmniOscillator.prototype.get = function(params){\n\tvar options = this._oscillator.get(params);\n\toptions.type = this.type;\n\treturn options;\n};\n\n/**\n *  connect the oscillator to the frequency and detune signals\n *  @private\n */\nTone.OmniOscillator.prototype._createNewOscillator = function(oscType){\n\tif (oscType !== this._sourceType){\n\t\tthis._sourceType = oscType;\n\t\tvar OscillatorConstructor = Tone[oscType];\n\t\t//short delay to avoid clicks on the change\n\t\tvar now = this.now();\n\t\tif (this._oscillator !== null){\n\t\t\tvar oldOsc = this._oscillator;\n\t\t\toldOsc.stop(now);\n\t\t\t//dispose the old one\n\t\t\tthis.context.setTimeout(function(){\n\t\t\t\toldOsc.dispose();\n\t\t\t\toldOsc = null;\n\t\t\t}, this.blockTime);\n\t\t}\n\t\tthis._oscillator = new OscillatorConstructor();\n\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\tthis.detune.connect(this._oscillator.detune);\n\t\tthis._oscillator.connect(this.output);\n\t\tif (this.state === Tone.State.Started){\n\t\t\tthis._oscillator.start(now);\n\t\t}\n\t}\n};\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.OmniOscillator#\n * @type {Degrees}\n * @name phase\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._oscillator.phase;\n\t},\n\tset : function(phase){\n\t\tthis._oscillator.phase = phase;\n\t}\n});\n\n/**\n * The source type names\n * @private\n * @type {Object}\n */\nvar SourceTypeNames = {\n\tPulseOscillator : \"pulse\",\n\tPWMOscillator : \"pwm\",\n\tOscillator : \"oscillator\",\n\tFMOscillator : \"fm\",\n\tAMOscillator : \"am\",\n\tFatOscillator : \"fat\"\n};\n\n/**\n * The source type of the oscillator. \n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name sourceType\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n * omniOsc.sourceType // 'fm'\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"sourceType\", {\n\tget : function(){\n\t\treturn SourceTypeNames[this._sourceType];\n\t},\n\tset : function(sType){\n\t\t//the basetype defaults to sine\n\t\tvar baseType = \"sine\";\n\t\tif (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\"){\n\t\t\tbaseType = this._oscillator.type;\n\t\t} \n\n\t\t//set the type\n\t\tif (sType === SourceTypeNames.FMOscillator){\n\t\t\tthis.type = \"fm\" + baseType;\n\t\t} else if (sType === SourceTypeNames.AMOscillator){\n\t\t\tthis.type = \"am\" + baseType;\n\t\t} else if (sType === SourceTypeNames.FatOscillator){\n\t\t\tthis.type = \"fat\" + baseType;\n\t\t} else if (sType === SourceTypeNames.Oscillator){\n\t\t\tthis.type = baseType;\n\t\t} else if (sType === SourceTypeNames.PulseOscillator){\n\t\t\tthis.type = \"pulse\";\n\t\t} else if (sType === SourceTypeNames.PWMOscillator){\n\t\t\tthis.type = \"pwm\";\n\t\t}\n\t}\n});\n\n/**\n * The base type of the oscillator.\n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name baseType\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n * omniOsc.sourceType // 'fm'\n * omniOsc.baseType //'square'\n * omniOsc.partialCount //4\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._oscillator.baseType;\n\t},\n\tset : function(baseType){\n\t\tif (this.sourceType !== SourceTypeNames.PulseOscillator && this.sourceType !== SourceTypeNames.PWMOscillator){\n\t\t\tthis._oscillator.baseType = baseType;\n\t\t}\n\t}\n});\n\n/**\n * The width of the oscillator (only if the oscillator is set to \"pulse\")\n * @memberOf Tone.OmniOscillator#\n * @type {NormalRange}\n * @signal\n * @name width\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n * //can access the width attribute only if type === \"pulse\"\n * omniOsc.width.value = 0.2;\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"width\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.Pulse){\n\t\t\treturn this._oscillator.width;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n * The number of detuned oscillators\n * @memberOf Tone.OmniOscillator#\n * @type {Number}\n * @name count\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"count\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\treturn this._oscillator.count;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t},\n\tset : function(count){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\tthis._oscillator.count = count;\n\t\t}\n\t}\n});\n\n/**\n * The detune spread between the oscillators. If \"count\" is\n * set to 3 oscillators and the \"spread\" is set to 40,\n * the three oscillators would be detuned like this: [-20, 0, 20]\n * for a total detune spread of 40 cents. See Tone.FatOscillator\n * for more info.\n * @memberOf Tone.OmniOscillator#\n * @type {Cents}\n * @name spread\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"spread\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\treturn this._oscillator.spread;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t},\n\tset : function(spread){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\tthis._oscillator.spread = spread;\n\t\t}\n\t}\n});\n\n/**\n * The type of the modulator oscillator. Only if the oscillator\n * is set to \"am\" or \"fm\" types. see. Tone.AMOscillator or Tone.FMOscillator\n * for more info.\n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name modulationType\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationType\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\treturn this._oscillator.modulationType;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t},\n\tset : function(mType){\n\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\tthis._oscillator.modulationType = mType;\n\t\t}\n\t}\n});\n\n/**\n * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n * ratio of the frequency of the modulating signal (mf) to the amplitude of the\n * modulating signal (ma) -- as in ma/mf.\n * See Tone.FMOscillator for more info.\n * @type {Positive}\n * @signal\n * @name modulationIndex\n * @memberof Tone.OmniOscillator#\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationIndex\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.FM){\n\t\t\treturn this._oscillator.modulationIndex;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n *  A harmonicity of 1 gives both oscillators the same frequency.\n *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator\n *  for more info.\n *  @memberOf Tone.OmniOscillator#\n *  @signal\n *  @type {Positive}\n *  @name harmonicity\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"harmonicity\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\treturn this._oscillator.harmonicity;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n * The modulationFrequency Signal of the oscillator\n * (only if the oscillator type is set to pwm). See\n * Tone.PWMOscillator for more info.\n * @memberOf Tone.OmniOscillator#\n * @type {Frequency}\n * @signal\n * @name modulationFrequency\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"pwm\");\n * //can access the modulationFrequency attribute only if type === \"pwm\"\n * omniOsc.modulationFrequency.value = 0.2;\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationFrequency\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.PWM){\n\t\t\treturn this._oscillator.modulationFrequency;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.OmniOscillator} this\n */\nTone.OmniOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"detune\"]);\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis._oscillator.dispose();\n\tthis._oscillator = null;\n\tthis._sourceType = null;\n\treturn this;\n};\n\nexport default Tone.OmniOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../source/OmniOscillator\";\nimport \"../instrument/Monophonic\";\n\n/**\n *  @class  Tone.Synth is composed simply of a Tone.OmniOscillator\n *          routed through a Tone.AmplitudeEnvelope.\n *          <img src=\"https://docs.google.com/drawings/d/1-1_0YW2Z1J2EPI36P8fNCMcZG7N1w1GZluPs4og4evo/pub?w=1163&h=231\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var synth = new Tone.Synth().toMaster();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n */\nTone.Synth = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.Synth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.OmniOscillator}\n\t */\n\tthis.oscillator = new Tone.OmniOscillator(options.oscillator);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this.oscillator.frequency;\n\n\t/**\n\t *  The detune control.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this.oscillator.detune;\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t//connect the oscillators to the output\n\tthis.oscillator.chain(this.envelope, this.output);\n\tthis._readOnly([\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n};\n\nTone.extend(Tone.Synth, Tone.Monophonic);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.Synth.defaults = {\n\t\"oscillator\" : {\n\t\t\"type\" : \"triangle\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.005,\n\t\t\"decay\" : 0.1,\n\t\t\"sustain\" : 0.3,\n\t\t\"release\" : 1\n\t}\n};\n\n/**\n *  start the attack portion of the envelope\n *  @param {Time} [time=now] the time the attack should start\n *  @param {number} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.Synth} this\n *  @private\n */\nTone.Synth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\t//the envelopes\n\tthis.envelope.triggerAttack(time, velocity);\n\tthis.oscillator.start(time);\n\t//if there is no release portion, stop the oscillator\n\tif (this.envelope.sustain === 0){\n\t\tthis.oscillator.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n\t}\n\treturn this;\n};\n\n/**\n *  start the release portion of the envelope\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.Synth} this\n *  @private\n */\nTone.Synth.prototype._triggerEnvelopeRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis.oscillator.stop(time + this.toSeconds(this.envelope.release));\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.Synth} this\n */\nTone.Synth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n\tthis.oscillator.dispose();\n\tthis.oscillator = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\tthis.frequency = null;\n\tthis.detune = null;\n\treturn this;\n};\n\nexport default Tone.Synth;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../core/Buffer\";\nimport \"../source/BufferSource\";\n\n/**\n *  @class  Tone.Noise is a noise generator. It uses looped noise buffers to save on performance.\n *          Tone.Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n *          colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {string} type the noise type (white|pink|brown)\n *  @example\n * //initialize the noise and start\n * var noise = new Tone.Noise(\"pink\").start();\n *\n * //make an autofilter to shape the noise\n * var autoFilter = new Tone.AutoFilter({\n * \t\"frequency\" : \"8m\",\n * \t\"min\" : 800,\n * \t\"max\" : 15000\n * }).connect(Tone.Master);\n *\n * //connect the noise\n * noise.connect(autoFilter);\n * //start the autofilter LFO\n * autoFilter.start()\n */\nTone.Noise = function(){\n\n\tvar options = Tone.defaults(arguments, [\"type\"], Tone.Noise);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  @private\n\t *  @type {AudioBufferSourceNode}\n\t */\n\tthis._source = null;\n\n\t/**\n\t *  the buffer\n\t *  @private\n\t *  @type {AudioBuffer}\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  The playback rate of the noise. Affects\n\t *  the \"frequency\" of the noise.\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis._playbackRate = options.playbackRate;\n};\n\nTone.extend(Tone.Noise, Tone.Source);\n\n/**\n *  the default parameters\n *\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Noise.defaults = {\n\t\"type\" : \"white\",\n\t\"playbackRate\" : 1\n};\n\n/**\n * The type of the noise. Can be \"white\", \"brown\", or \"pink\".\n * @memberOf Tone.Noise#\n * @type {string}\n * @name type\n * @example\n * noise.type = \"white\";\n */\nObject.defineProperty(Tone.Noise.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tif (this._type !== type){\n\t\t\tif (type in _noiseBuffers){\n\t\t\t\tthis._type = type;\n\t\t\t\t//if it's playing, stop and restart it\n\t\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\t\tvar now = this.now();\n\t\t\t\t\tthis._stop(now);\n\t\t\t\t\tthis._start(now);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new TypeError(\"Tone.Noise: invalid type: \"+type);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n *  The playback rate of the noise. Affects\n *  the \"frequency\" of the noise.\n *  @type {Positive}\n *  @signal\n */\nObject.defineProperty(Tone.Noise.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tif (this._source){\n\t\t\tthis._source.playbackRate.value = rate;\n\t\t}\n\t}\n});\n\n/**\n *  internal start method\n *\n *  @param {Time} time\n *  @private\n */\nTone.Noise.prototype._start = function(time){\n\tvar buffer = _noiseBuffers[this._type];\n\tthis._source = new Tone.BufferSource(buffer).connect(this.output);\n\tthis._source.loop = true;\n\tthis._source.playbackRate.value = this._playbackRate;\n\tthis._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n};\n\n/**\n *  internal stop method\n *\n *  @param {Time} time\n *  @private\n */\nTone.Noise.prototype._stop = function(time){\n\tif (this._source){\n\t\tthis._source.stop(this.toSeconds(time));\n\t\tthis._source = null;\n\t}\n};\n\n/**\n * Restarts the noise.\n * @param  {Time} time When to restart the noise.\n * @return {Tone.Noise}      this\n */\nTone.Noise.prototype.restart = function(time){\n\t//TODO could be optimized by cancelling the buffer source 'stop'\n\t//stop and restart\n\tthis._stop(time);\n\tthis._start(time);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Noise} this\n */\nTone.Noise.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tif (this._source !== null){\n\t\tthis._source.disconnect();\n\t\tthis._source = null;\n\t}\n\tthis._buffer = null;\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n// THE BUFFERS\n///////////////////////////////////////////////////////////////////////////\n\n//Noise buffer stats\nvar bufferLength = 44100 * 5;\nvar channels = 2;\n\n/**\n *\tThe noise arrays. Generated on initialization.\n *  borrowed heavily from https://github.com/zacharydenton/noise.js\n *  (c) 2013 Zach Denton (MIT)\n *  @static\n *  @private\n *  @type {Array}\n */\nvar _noiseBuffers = {};\nvar _noiseCache = {};\n\nObject.defineProperty(_noiseBuffers, \"pink\", {\n\tget : function(){\n\t\tif (!_noiseCache.pink){\n\t\t\tvar buffer = [];\n\t\t\tfor (var channelNum = 0; channelNum < channels; channelNum++){\n\t\t\t\tvar channel = new Float32Array(bufferLength);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tvar b0, b1, b2, b3, b4, b5, b6;\n\t\t\t\tb0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\t\t\t\tfor (var i = 0; i < bufferLength; i++){\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\tb0 = 0.99886 * b0 + white * 0.0555179;\n\t\t\t\t\tb1 = 0.99332 * b1 + white * 0.0750759;\n\t\t\t\t\tb2 = 0.96900 * b2 + white * 0.1538520;\n\t\t\t\t\tb3 = 0.86650 * b3 + white * 0.3104856;\n\t\t\t\t\tb4 = 0.55000 * b4 + white * 0.5329522;\n\t\t\t\t\tb5 = -0.7616 * b5 - white * 0.0168980;\n\t\t\t\t\tchannel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t\t\t\t\tchannel[i] *= 0.11; // (roughly) compensate for gain\n\t\t\t\t\tb6 = white * 0.115926;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.pink = new Tone.Buffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.pink;\n\t}\n});\n\nObject.defineProperty(_noiseBuffers, \"brown\", {\n\tget : function(){\n\t\tif (!_noiseCache.brown){\n\t\t\tvar buffer = [];\n\t\t\tfor (var channelNum = 0; channelNum < channels; channelNum++){\n\t\t\t\tvar channel = new Float32Array(bufferLength);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tvar lastOut = 0.0;\n\t\t\t\tfor (var i = 0; i < bufferLength; i++){\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\tchannel[i] = (lastOut + (0.02 * white)) / 1.02;\n\t\t\t\t\tlastOut = channel[i];\n\t\t\t\t\tchannel[i] *= 3.5; // (roughly) compensate for gain\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.brown = new Tone.Buffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.brown;\n\t}\n});\n\nObject.defineProperty(_noiseBuffers, \"white\", {\n\tget : function(){\n\t\tif (!_noiseCache.white){\n\t\t\tvar buffer = [];\n\t\t\tfor (var channelNum = 0; channelNum < channels; channelNum++){\n\t\t\t\tvar channel = new Float32Array(bufferLength);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tfor (var i = 0; i < bufferLength; i++){\n\t\t\t\t\tchannel[i] = Math.random() * 2 - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.white = new Tone.Buffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.white;\n\t}\n});\n\nexport default Tone.Noise;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Volume\";\nimport \"../core/Context\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  A single master output which is connected to the\n *          AudioDestinationNode (aka your speakers).\n *          It provides useful conveniences such as the ability\n *          to set the volume and mute the entire application.\n *          It also gives you the ability to apply master effects to your application.\n *          <br><br>\n *          Like Tone.Transport, A single Tone.Master is created\n *          on initialization and you do not need to explicitly construct one.\n *\n *  @constructor\n *  @extends {Tone}\n *  @singleton\n *  @example\n * //the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.Master);\n * //a convenience for connecting to the master output is also provided:\n * oscillator.toMaster();\n * //the above two examples are equivalent.\n */\nTone.Master = function(){\n\n\tTone.AudioNode.call(this);\n\tTone.getContext(function(){\n\t\tthis.createInsOuts(1, 0);\n\n\t\t/**\n\t\t *  The private volume node\n\t\t *  @type  {Tone.Volume}\n\t\t *  @private\n\t\t */\n\t\tthis._volume = this.output = new Tone.Volume();\n\n\t\t/**\n\t\t * The volume of the master output.\n\t\t * @type {Decibels}\n\t\t * @signal\n\t\t */\n\t\tthis.volume = this._volume.volume;\n\n\t\tthis._readOnly(\"volume\");\n\t\t//connections\n\t\tTone.connectSeries(this.input, this.output, this.context.destination);\n\n\t\t//master is a singleton so it adds itself to the context\n\t\tthis.context.master = this;\n\t}.bind(this));\n};\n\nTone.extend(Tone.Master, Tone.AudioNode);\n\n/**\n *  @type {Object}\n *  @const\n */\nTone.Master.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n * Is an instanceof Tone.Master\n * @type {Boolean}\n */\nTone.Master.prototype.isMaster = true;\n\n/**\n * Mute the output.\n * @memberOf Tone.Master#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * Tone.Master.mute = true;\n */\nObject.defineProperty(Tone.Master.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n *  chained in the master effects chain.\n *  @param {...(AudioNode|Tone)} nodes All arguments will be connected in a row\n *                                  and the Master will be routed through it.\n *  @return  {Tone.Master}  this\n *  @example\n * //some overall compression to keep the levels in check\n * var masterCompressor = new Tone.Compressor({\n * \t\"threshold\" : -6,\n * \t\"ratio\" : 3,\n * \t\"attack\" : 0.5,\n * \t\"release\" : 0.1\n * });\n * //give a little boost to the lows\n * var lowBump = new Tone.Filter(200, \"lowshelf\");\n * //route everything through the filter\n * //and compressor before going to the speakers\n * Tone.Master.chain(lowBump, masterCompressor);\n */\nTone.Master.prototype.chain = function(){\n\tthis.input.disconnect();\n\tvar args = Array.from(arguments);\n\targs.unshift(this.input);\n\targs.push(this.output);\n\tTone.connectSeries.apply(undefined, args);\n};\n\n/**\n *  Clean up\n *  @return  {Tone.Master}  this\n */\nTone.Master.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"volume\");\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tAUGMENT TONE's PROTOTYPE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)\n *  @returns {Tone.AudioNode} this\n *  @example\n * //connect an oscillator to the master output\n * var osc = new Tone.Oscillator().toMaster();\n */\nTone.AudioNode.prototype.toMaster = function(){\n\tthis.connect(this.context.master);\n\treturn this;\n};\n\n/**\n *  initialize the module and listen for new audio contexts\n *  @private\n */\nvar MasterConstructor = Tone.Master;\nTone.Master = new MasterConstructor();\n\nTone.Context.on(\"init\", function(context){\n\t// if it already exists, just restore it\n\tif (context.master && context.master.isMaster){\n\t\tTone.Master = context.master;\n\t} else {\n\t\tTone.Master = new MasterConstructor();\n\t}\n});\n\nTone.Context.on(\"close\", function(context){\n\tif (context.master && context.master.isMaster){\n\t\tcontext.master.dispose();\n\t}\n});\n\nexport default Tone.Master;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/ScaledEnvelope\";\nimport \"../component/Envelope\";\n\n/**\n *  @class Tone.FrequencyEnvelope is a Tone.ScaledEnvelope, but instead of `min` and `max`\n *         it's got a `baseFrequency` and `octaves` parameter.\n *\n *  @extends {Tone.Envelope}\n *  @constructor\n *  @param {Time|Object} [attack]\tthe attack time in seconds\n *  @param {Time} [decay]\tthe decay time in seconds\n *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n *  @param {Time} [release]\tthe release time in seconds\n *  @example\n *  var freqEnv = new Tone.FrequencyEnvelope({\n *  \t\"attack\" : 0.2,\n *  \t\"baseFrequency\" : \"C2\",\n *  \t\"octaves\" : 4\n *  });\n *  freqEnv.connect(oscillator.frequency);\n */\nTone.FrequencyEnvelope = function(){\n\n\tvar options = Tone.defaults(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope);\n\t//merge it with the frequency envelope defaults\n\toptions = Tone.defaultArg(options, Tone.FrequencyEnvelope.defaults);\n\tTone.ScaledEnvelope.call(this, options);\n\n\t/**\n\t *  Stores the octave value\n\t *  @type {Positive}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t//setup\n\tthis.baseFrequency = options.baseFrequency;\n\tthis.octaves = options.octaves;\n\tthis.exponent = options.exponent;\n};\n\nTone.extend(Tone.FrequencyEnvelope, Tone.Envelope);\n\n/**\n *  the default parameters\n *  @static\n */\nTone.FrequencyEnvelope.defaults = {\n\t\"baseFrequency\" : 200,\n\t\"octaves\" : 4,\n\t\"exponent\" : 1\n};\n\n/**\n * The envelope's mininum output value. This is the value which it\n * starts at.\n * @memberOf Tone.FrequencyEnvelope#\n * @type {Frequency}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.FrequencyEnvelope.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._scale.min;\n\t},\n\tset : function(min){\n\t\tthis._scale.min = this.toFrequency(min);\n\t\t//also update the octaves\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n * The number of octaves above the baseFrequency that the\n * envelope will scale to.\n * @memberOf Tone.FrequencyEnvelope#\n * @type {Positive}\n * @name octaves\n */\nObject.defineProperty(Tone.FrequencyEnvelope.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octaves){\n\t\tthis._octaves = octaves;\n\t\tthis._scale.max = this.baseFrequency * Math.pow(2, octaves);\n\t}\n});\n\n/**\n * The envelope's exponent value.\n * @memberOf Tone.FrequencyEnvelope#\n * @type {number}\n * @name exponent\n */\nObject.defineProperty(Tone.FrequencyEnvelope.prototype, \"exponent\", {\n\tget : function(){\n\t\treturn this._exp.value;\n\t},\n\tset : function(exp){\n\t\tthis._exp.value = exp;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.FrequencyEnvelope} this\n */\nTone.FrequencyEnvelope.prototype.dispose = function(){\n\tTone.ScaledEnvelope.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.FrequencyEnvelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Scale\";\nimport \"../signal/Pow\";\n\n/**\n *  @class  Performs an exponential scaling on an input signal.\n *          Scales a NormalRange value [0,1] exponentially\n *          to the output range of outputMin to outputMax.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @param {number} [outputMin=0] The output value when the input is 0.\n *  @param {number} [outputMax=1]\tThe output value when the input is 1.\n *  @param {number} [exponent=2] The exponent which scales the incoming signal.\n *  @example\n * var scaleExp = new Tone.ScaleExp(0, 100, 2);\n * var signal = new Tone.Signal(0.5).connect(scaleExp);\n */\nTone.ScaleExp = function(outputMin, outputMax, exponent){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  scale the input to the output range\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._scale = this.output = new Tone.Scale(outputMin, outputMax);\n\n\t/**\n\t *  @private\n\t *  @type {Tone.Pow}\n\t *  @private\n\t */\n\tthis._exp = this.input = new Tone.Pow(Tone.defaultArg(exponent, 2));\n\n\tthis._exp.connect(this._scale);\n};\n\nTone.extend(Tone.ScaleExp, Tone.SignalBase);\n\n/**\n * Instead of interpolating linearly between the <code>min</code> and\n * <code>max</code> values, setting the exponent will interpolate between\n * the two values with an exponential curve.\n * @memberOf Tone.ScaleExp#\n * @type {number}\n * @name exponent\n */\nObject.defineProperty(Tone.ScaleExp.prototype, \"exponent\", {\n\tget : function(){\n\t\treturn this._exp.value;\n\t},\n\tset : function(exp){\n\t\tthis._exp.value = exp;\n\t}\n});\n\n/**\n * The minimum output value. This number is output when\n * the value input value is 0.\n * @memberOf Tone.ScaleExp#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.ScaleExp.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._scale.min;\n\t},\n\tset : function(min){\n\t\tthis._scale.min = min;\n\t}\n});\n\n/**\n * The maximum output value. This number is output when\n * the value input value is 1.\n * @memberOf Tone.ScaleExp#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.ScaleExp.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._scale.max;\n\t},\n\tset : function(max){\n\t\tthis._scale.max = max;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.ScaleExp} this\n */\nTone.ScaleExp.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._exp.dispose();\n\tthis._exp = null;\n\treturn this;\n};\n\nexport default Tone.ScaleExp;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Compressor is a thin wrapper around the Web Audio\n *         [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n *         Compression reduces the volume of loud sounds or amplifies quiet sounds\n *         by narrowing or \"compressing\" an audio signal's dynamic range.\n *         Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Decibels|Object} [threshold] The value above which the compression starts to be applied.\n *  @param {Positive} [ratio] The gain reduction ratio.\n *  @example\n * var comp = new Tone.Compressor(-30, 3);\n */\nTone.Compressor = function(){\n\n\tvar options = Tone.defaults(arguments, [\"threshold\", \"ratio\"], Tone.Compressor);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the compressor node\n\t *  @type {DynamicsCompressorNode}\n\t *  @private\n\t */\n\tthis._compressor = this.input = this.output = this.context.createDynamicsCompressor();\n\n\t/**\n\t *  the threshold vaue\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.threshold = new Tone.Param({\n\t\t\"param\" : this._compressor.threshold,\n\t\t\"units\" : Tone.Type.Decibels,\n\t\t\"convert\" : false\n\t});\n\n\t/**\n\t *  The attack parameter\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.attack = new Tone.Param(this._compressor.attack, Tone.Type.Time);\n\n\t/**\n\t *  The release parameter\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.release = new Tone.Param(this._compressor.release, Tone.Type.Time);\n\n\t/**\n\t *  The knee parameter\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.knee = new Tone.Param({\n\t\t\"param\" : this._compressor.knee,\n\t\t\"units\" : Tone.Type.Decibels,\n\t\t\"convert\" : false\n\t});\n\n\t/**\n\t *  The ratio value\n\t *  @type {Number}\n\t *  @signal\n\t */\n\tthis.ratio = new Tone.Param({\n\t\t\"param\" : this._compressor.ratio,\n\t\t\"convert\" : false\n\t});\n\n\t//set the defaults\n\tthis._readOnly([\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n\tthis.set(options);\n};\n\nTone.extend(Tone.Compressor, Tone.AudioNode);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Compressor.defaults = {\n\t\"ratio\" : 12,\n\t\"threshold\" : -24,\n\t\"release\" : 0.25,\n\t\"attack\" : 0.003,\n\t\"knee\" : 30\n};\n\n/**\n *  clean up\n *  @returns {Tone.Compressor} this\n */\nTone.Compressor.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n\tthis._compressor.disconnect();\n\tthis._compressor = null;\n\tthis.attack.dispose();\n\tthis.attack = null;\n\tthis.release.dispose();\n\tthis.release = null;\n\tthis.threshold.dispose();\n\tthis.threshold = null;\n\tthis.ratio.dispose();\n\tthis.ratio = null;\n\tthis.knee.dispose();\n\tthis.knee = null;\n\treturn this;\n};\n\nexport default Tone.Compressor;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/OfflineAudioContext\";\n\nif (Tone.supported){\n\tif (!Tone.global.hasOwnProperty(\"AudioContext\") && Tone.global.hasOwnProperty(\"webkitAudioContext\")){\n\t\tTone.global.AudioContext = Tone.global.webkitAudioContext;\n\t}\n\n\t//not functionally equivalent, but only an API placeholder\n\tif (!AudioContext.prototype.close){\n\t\tAudioContext.prototype.close = function(){\n\t\t\tif (Tone.isFunction(this.suspend)){\n\t\t\t\tthis.suspend();\n\t\t\t}\n\t\t\treturn Promise.resolve();\n\t\t};\n\t}\n\n\t//not functionally equivalent\n\tif (!AudioContext.prototype.resume){\n\t\tAudioContext.prototype.resume = function(){\n\t\t\t//play some silent audio to jumpstart the context\n\t\t\tvar buffer = this.createBuffer(1, 1, this.sampleRate);\n\t\t\tvar source = this.createBufferSource();\n\t\t\tsource.buffer = buffer;\n\t\t\tsource.connect(this.destination);\n\t\t\tsource.start(0);\n\t\t\treturn Promise.resolve();\n\t\t};\n\t}\n\n\t//createGain\n\tif (!AudioContext.prototype.createGain && AudioContext.prototype.createGainNode){\n\t\tAudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t}\n\n\t//createDelay\n\tif (!AudioContext.prototype.createDelay && AudioContext.prototype.createDelayNode){\n\t\tAudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t}\n\n\t//test decodeAudioData returns a promise\n\t// https://github.com/mohayonao/web-audio-api-shim/blob/master/src/AudioContext.js\n\t// MIT License (c) 2015 @mohayonao\n\tvar decodeAudioDataPromise = false;\n\tvar offlineContext = new OfflineAudioContext(1, 1, 44100);\n\tvar audioData = new Uint32Array([1179011410, 48, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 8, 0, 0, 0, 0]).buffer;\n\ttry {\n\t\tvar ret = offlineContext.decodeAudioData(audioData);\n\t\tif (ret && Tone.isFunction(ret.then)){\n\t\t\tdecodeAudioDataPromise = true;\n\t\t}\n\t} catch (e){\n\t\tdecodeAudioDataPromise = false;\n\t}\n\n\tif (!decodeAudioDataPromise){\n\t\tAudioContext.prototype._native_decodeAudioData = AudioContext.prototype.decodeAudioData;\n\t\tAudioContext.prototype.decodeAudioData = function(audioData){\n\t\t\treturn new Promise(function(success, error){\n\t\t\t\tthis._native_decodeAudioData(audioData, success, error);\n\t\t\t}.bind(this));\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Time\";\n\n/**\n *  @class Tone.TransportTime is a the time along the Transport's\n *         timeline. It is similar to Tone.Time, but instead of evaluating\n *         against the AudioContext's clock, it is evaluated against\n *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n *  @constructor\n *  @param  {Time}  val    The time value as a number or string\n *  @param  {String=}  units  Unit values\n *  @extends {Tone.Time}\n */\nTone.TransportTime = function(val, units){\n\tif (this instanceof Tone.TransportTime){\n\n\t\tTone.Time.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.TransportTime(val, units);\n\t}\n};\n\nTone.extend(Tone.TransportTime, Tone.Time);\n\n/**\n * Return the current time in whichever context is relevant\n * @type {Number}\n * @private\n */\nTone.TransportTime.prototype._now = function(){\n\treturn Tone.Transport.seconds;\n};\n\nexport default Tone.TransportTime;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/TimeBase\";\n\n/**\n *  @class Tone.Frequency is a primitive type for encoding Frequency values.\n *         Eventually all time values are evaluated to hertz\n *         using the `eval` method.\n *  @constructor\n *  @extends {Tone.TimeBase}\n *  @param  {String|Number}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * Tone.Frequency(\"C3\") // 261\n * Tone.Frequency(38, \"midi\") //\n * Tone.Frequency(\"C3\").transpose(4);\n */\nTone.Frequency = function(val, units){\n\tif (this instanceof Tone.Frequency){\n\n\t\tTone.TimeBase.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Frequency(val, units);\n\t}\n};\n\nTone.extend(Tone.Frequency, Tone.TimeBase);\n\n///////////////////////////////////////////////////////////////////////////\n//\tAUGMENT BASE EXPRESSIONS\n///////////////////////////////////////////////////////////////////////////\n\nTone.Frequency.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {\n\t\"midi\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?midi)/,\n\t\tmethod : function(value){\n\t\t\tif (this._defaultUnits === \"midi\"){\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn Tone.Frequency.mtof(value);\n\t\t\t}\n\t\t}\n\t},\n\t\"note\" : {\n\t\tregexp : /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t\tmethod : function(pitch, octave){\n\t\t\tvar index = noteToScaleIndex[pitch.toLowerCase()];\n\t\t\tvar noteNumber = index + (parseInt(octave) + 1) * 12;\n\t\t\tif (this._defaultUnits === \"midi\"){\n\t\t\t\treturn noteNumber;\n\t\t\t} else {\n\t\t\t\treturn Tone.Frequency.mtof(noteNumber);\n\t\t\t}\n\t\t}\n\t},\n\t\"tr\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\tmethod : function(m, q, s){\n\t\t\tvar total = 1;\n\t\t\tif (m && m !== \"0\"){\n\t\t\t\ttotal *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t}\n\t\t\tif (q && q !== \"0\"){\n\t\t\t\ttotal *= this._beatsToUnits(parseFloat(q));\n\t\t\t}\n\t\t\tif (s && s !== \"0\"){\n\t\t\t\ttotal *= this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t}\n\t\t\treturn total;\n\t\t}\n\t}\n});\n\n///////////////////////////////////////////////////////////////////////////\n//\tEXPRESSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Transposes the frequency by the given number of semitones.\n *  @param  {Interval}  interval\n *  @return  {Tone.Frequency} A new transposed frequency\n *  @example\n * Tone.Frequency(\"A4\").transpose(3); //\"C5\"\n */\nTone.Frequency.prototype.transpose = function(interval){\n\treturn new this.constructor(this.valueOf() * Tone.intervalToFrequencyRatio(interval));\n};\n\n/**\n *  Takes an array of semitone intervals and returns\n *  an array of frequencies transposed by those intervals.\n *  @param  {Array}  intervals\n *  @return  {Array<Tone.Frequency>} Returns an array of Frequencies\n *  @example\n * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n */\nTone.Frequency.prototype.harmonize = function(intervals){\n\treturn intervals.map(function(interval){\n\t\treturn this.transpose(interval);\n\t}.bind(this));\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tUNIT CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Return the value of the frequency as a MIDI note\n *  @return  {MIDI}\n *  @example\n * Tone.Frequency(\"C4\").toMidi(); //60\n */\nTone.Frequency.prototype.toMidi = function(){\n\treturn Tone.Frequency.ftom(this.valueOf());\n};\n\n/**\n *  Return the value of the frequency in Scientific Pitch Notation\n *  @return  {Note}\n *  @example\n * Tone.Frequency(69, \"midi\").toNote(); //\"A4\"\n */\nTone.Frequency.prototype.toNote = function(){\n\tvar freq = this.toFrequency();\n\tvar log = Math.log2(freq / Tone.Frequency.A4);\n\tvar noteNumber = Math.round(12 * log) + 57;\n\tvar octave = Math.floor(noteNumber/12);\n\tif (octave < 0){\n\t\tnoteNumber += -12 * octave;\n\t}\n\tvar noteName = scaleIndexToNote[noteNumber % 12];\n\treturn noteName + octave.toString();\n};\n\n/**\n *  Return the duration of one cycle in seconds.\n *  @return  {Seconds}\n */\nTone.Frequency.prototype.toSeconds = function(){\n\treturn 1 / Tone.TimeBase.prototype.toSeconds.call(this);\n};\n\n/**\n *  Return the value in Hertz\n *  @return  {Frequency}\n */\nTone.Frequency.prototype.toFrequency = function(){\n\treturn Tone.TimeBase.prototype.toFrequency.call(this);\n};\n\n/**\n *  Return the duration of one cycle in ticks\n *  @return  {Ticks}\n */\nTone.Frequency.prototype.toTicks = function(){\n\tvar quarterTime = this._beatsToUnits(1);\n\tvar quarters = this.valueOf() / quarterTime;\n\treturn Math.floor(quarters * Tone.Transport.PPQ);\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tUNIT CONVERSIONS HELPERS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  With no arguments, return 0\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._noArg = function(){\n\treturn 0;\n};\n\n/**\n *  Returns the value of a frequency in the current units\n *  @param {Frequency} freq\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._frequencyToUnits = function(freq){\n\treturn freq;\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._ticksToUnits = function(ticks){\n\treturn 1 / ((ticks * 60) / (Tone.Transport.bpm.value * Tone.Transport.PPQ));\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._beatsToUnits = function(beats){\n\treturn 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._secondsToUnits = function(seconds){\n\treturn 1 / seconds;\n};\n\n/**\n *  The default units if none are given.\n *  @private\n */\nTone.Frequency.prototype._defaultUnits = \"hz\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tFREQUENCY CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Note to scale index\n *  @type  {Object}\n *  @private\n */\nvar noteToScaleIndex = {\n\t\"cbb\" : -2, \"cb\" : -1, \"c\" : 0, \"c#\" : 1, \"cx\" : 2,\n\t\"dbb\" : 0, \"db\" : 1, \"d\" : 2, \"d#\" : 3, \"dx\" : 4,\n\t\"ebb\" : 2, \"eb\" : 3, \"e\" : 4, \"e#\" : 5, \"ex\" : 6,\n\t\"fbb\" : 3, \"fb\" : 4, \"f\" : 5, \"f#\" : 6, \"fx\" : 7,\n\t\"gbb\" : 5, \"gb\" : 6, \"g\" : 7, \"g#\" : 8, \"gx\" : 9,\n\t\"abb\" : 7, \"ab\" : 8, \"a\" : 9, \"a#\" : 10, \"ax\" : 11,\n\t\"bbb\" : 9, \"bb\" : 10, \"b\" : 11, \"b#\" : 12, \"bx\" : 13,\n};\n\n/**\n *  scale index to note (sharps)\n *  @type  {Array}\n *  @private\n */\nvar scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n/**\n *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)\n *  A4's values in Hertz.\n *  @type {Frequency}\n *  @static\n */\nTone.Frequency.A4 = 440;\n\n/**\n *  Convert a MIDI note to frequency value.\n *  @param  {MIDI} midi The midi number to convert.\n *  @return {Frequency} the corresponding frequency value\n *  @static\n *  @example\n * Tone.Frequency.mtof(69); // returns 440\n */\nTone.Frequency.mtof = function(midi){\n\treturn Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);\n};\n\n/**\n *  Convert a frequency value to a MIDI note.\n *  @param {Frequency} frequency The value to frequency value to convert.\n *  @returns  {MIDI}\n *  @static\n *  @example\n * Tone.Frequency.ftom(440); // returns 69\n */\nTone.Frequency.ftom = function(frequency){\n\treturn 69 + Math.round(12 * Math.log2(frequency / Tone.Frequency.A4));\n};\n\nexport default Tone.Frequency;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Pow\";\nimport \"../type/Type\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n *          envelope generator. Tone.Envelope outputs a signal which\n *          can be connected to an AudioParam or Tone.Signal.\n *          <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Time} [attack] The amount of time it takes for the envelope to go from\n *                         0 to it's maximum value.\n *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n *                       \tto fall to the sustain value. Value must be greater than 0.\n *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n *                                \tthe release is triggered.\n *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n *                         \tValue must be greater than 0.\n *  @example\n * //an amplitude envelope\n * var gainNode = Tone.context.createGain();\n * var env = new Tone.Envelope({\n * \t\"attack\" : 0.1,\n * \t\"decay\" : 0.2,\n * \t\"sustain\" : 1,\n * \t\"release\" : 0.8,\n * });\n * env.connect(gainNode.gain);\n */\nTone.Envelope = function(){\n\n\t//get all of the defaults\n\tvar options = Tone.defaults(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  When triggerAttack is called, the attack time is the amount of\n\t *  time it takes for the envelope to reach it's maximum value.\n\t *  @type {Time}\n\t */\n\tthis.attack = options.attack;\n\n\t/**\n\t *  After the attack portion of the envelope, the value will fall\n\t *  over the duration of the decay time to it's sustain value.\n\t *  @type {Time}\n\t */\n\tthis.decay = options.decay;\n\n\t/**\n\t * \tThe sustain value is the value\n\t * \twhich the envelope rests at after triggerAttack is\n\t * \tcalled, but before triggerRelease is invoked.\n\t *  @type {NormalRange}\n\t */\n\tthis.sustain = options.sustain;\n\n\t/**\n\t *  After triggerRelease is called, the envelope's\n\t *  value will fall to it's miminum value over the\n\t *  duration of the release time.\n\t *  @type {Time}\n\t */\n\tthis.release = options.release;\n\n\t/**\n\t *  the next time the envelope is at standby\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._attackCurve = \"linear\";\n\n\t/**\n\t *  the next time the envelope is at standby\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._releaseCurve = \"exponential\";\n\n\t/**\n\t *  the signal\n\t *  @type {Tone.Signal}\n\t *  @private\n\t */\n\tthis._sig = this.output = new Tone.Signal(0);\n\n\t//set the attackCurve initially\n\tthis.attackCurve = options.attackCurve;\n\tthis.releaseCurve = options.releaseCurve;\n\tthis.decayCurve = options.decayCurve;\n};\n\nTone.extend(Tone.Envelope, Tone.AudioNode);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n */\nTone.Envelope.defaults = {\n\t\"attack\" : 0.01,\n\t\"decay\" : 0.1,\n\t\"sustain\" : 0.5,\n\t\"release\" : 1,\n\t\"attackCurve\" : \"linear\",\n\t\"decayCurve\" : \"exponential\",\n\t\"releaseCurve\" : \"exponential\",\n};\n\n/**\n * Read the current value of the envelope. Useful for\n * syncronizing visual output to the envelope.\n * @memberOf Tone.Envelope#\n * @type {Number}\n * @name value\n * @readOnly\n */\nObject.defineProperty(Tone.Envelope.prototype, \"value\", {\n\tget : function(){\n\t\treturn this.getValueAtTime(this.now());\n\t}\n});\n\n/**\n *  Get the curve\n *  @param  {Array|String}  curve\n *  @param  {String}  direction  In/Out\n *  @return  {String}  The curve name\n *  @private\n */\nTone.Envelope.prototype._getCurve = function(curve, direction){\n\tif (Tone.isString(curve)){\n\t\treturn curve;\n\t} else if (Tone.isArray(curve)){\n\t\t//look up the name in the curves array\n\t\tfor (var t in Tone.Envelope.Type){\n\t\t\tif (Tone.Envelope.Type[t][direction] === curve){\n\t\t\t\treturn t;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n *  Assign a the curve to the given name using the direction\n *  @param  {String}  name\n *  @param  {String}  direction In/Out\n *  @param  {Array}  curve\n *  @private\n */\nTone.Envelope.prototype._setCurve = function(name, direction, curve){\n\t//check if it's a valid type\n\tif (Tone.Envelope.Type.hasOwnProperty(curve)){\n\t\tvar curveDef = Tone.Envelope.Type[curve];\n\t\tif (Tone.isObject(curveDef)){\n\t\t\tthis[name] = curveDef[direction];\n\t\t} else {\n\t\t\tthis[name] = curveDef;\n\t\t}\n\t} else if (Tone.isArray(curve)){\n\t\tthis[name] = curve;\n\t} else {\n\t\tthrow new Error(\"Tone.Envelope: invalid curve: \" + curve);\n\t}\n};\n\n/**\n * The shape of the attack.\n * Can be any of these strings:\n * <ul>\n *   <li>linear</li>\n *   <li>exponential</li>\n *   <li>sine</li>\n *   <li>cosine</li>\n *   <li>bounce</li>\n *   <li>ripple</li>\n *   <li>step</li>\n * </ul>\n * Can also be an array which describes the curve. Values\n * in the array are evenly subdivided and linearly\n * interpolated over the duration of the attack.\n * @memberOf Tone.Envelope#\n * @type {String|Array}\n * @name attackCurve\n * @example\n * env.attackCurve = \"linear\";\n * @example\n * //can also be an array\n * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]\n */\nObject.defineProperty(Tone.Envelope.prototype, \"attackCurve\", {\n\tget : function(){\n\t\treturn this._getCurve(this._attackCurve, \"In\");\n\t},\n\tset : function(curve){\n\t\tthis._setCurve(\"_attackCurve\", \"In\", curve);\n\t}\n});\n\n/**\n * The shape of the release. See the attack curve types.\n * @memberOf Tone.Envelope#\n * @type {String|Array}\n * @name releaseCurve\n * @example\n * env.releaseCurve = \"linear\";\n */\nObject.defineProperty(Tone.Envelope.prototype, \"releaseCurve\", {\n\tget : function(){\n\t\treturn this._getCurve(this._releaseCurve, \"Out\");\n\t},\n\tset : function(curve){\n\t\tthis._setCurve(\"_releaseCurve\", \"Out\", curve);\n\t}\n});\n\n/**\n * The shape of the decay either \"linear\" or \"exponential\"\n * @memberOf Tone.Envelope#\n * @type {String}\n * @name decayCurve\n * @example\n * env.decayCurve = \"linear\";\n */\nObject.defineProperty(Tone.Envelope.prototype, \"decayCurve\", {\n\tget : function(){\n\t\treturn this._decayCurve;\n\t},\n\tset : function(curve){\n\t\tvar curves = [\"linear\", \"exponential\"];\n\t\tif (!curves.includes(curve)){\n\t\t\tthrow new Error(\"Tone.Envelope: invalid curve: \" + curve);\n\t\t} else {\n\t\t\tthis._decayCurve = curve;\n\t\t}\n\t}\n});\n\n/**\n *  Trigger the attack/decay portion of the ADSR envelope.\n *  @param  {Time} [time=now] When the attack should start.\n *  @param {NormalRange} [velocity=1] The velocity of the envelope scales the vales.\n *                               number between 0-1\n *  @returns {Tone.Envelope} this\n *  @example\n *  //trigger the attack 0.5 seconds from now with a velocity of 0.2\n *  env.triggerAttack(\"+0.5\", 0.2);\n */\nTone.Envelope.prototype.triggerAttack = function(time, velocity){\n\tthis.log(\"triggerAttack\", time, velocity);\n\ttime = this.toSeconds(time);\n\tvar originalAttack = this.toSeconds(this.attack);\n\tvar attack = originalAttack;\n\tvar decay = this.toSeconds(this.decay);\n\tvelocity = Tone.defaultArg(velocity, 1);\n\t//check if it's not a complete attack\n\tvar currentValue = this.getValueAtTime(time);\n\tif (currentValue > 0){\n\t\t//subtract the current value from the attack time\n\t\tvar attackRate = 1 / attack;\n\t\tvar remainingDistance = 1 - currentValue;\n\t\t//the attack is now the remaining time\n\t\tattack = remainingDistance / attackRate;\n\t}\n\t//attack\n\tif (attack === 0){\n\t\t//case where the attack time is 0 should set instantly\n\t\tthis._sig.setValueAtTime(velocity, time);\n\t} else if (this._attackCurve === \"linear\"){\n\t\tthis._sig.linearRampTo(velocity, attack, time);\n\t} else if (this._attackCurve === \"exponential\"){\n\t\tthis._sig.targetRampTo(velocity, attack, time);\n\t} else if (attack > 0){\n\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\tvar curve = this._attackCurve;\n\t\t//find the starting position in the curve\n\t\tfor (var i = 1; i < curve.length; i++){\n\t\t\t//the starting index is between the two values\n\t\t\tif (curve[i-1] <= currentValue && currentValue <= curve[i]){\n\t\t\t\tcurve = this._attackCurve.slice(i);\n\t\t\t\t//the first index is the current value\n\t\t\t\tcurve[0] = currentValue;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t}\n\t//decay\n\tif (decay){\n\t\tvar decayValue = velocity * this.sustain;\n\t\tvar decayStart = time + attack;\n\t\tthis.log(\"decay\", decayStart);\n\t\tif (this._decayCurve === \"linear\"){\n\t\t\tthis._sig.linearRampTo(decayValue, decay, decayStart+this.sampleTime);\n\t\t} else if (this._decayCurve === \"exponential\"){\n\t\t\tthis._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Triggers the release of the envelope.\n *  @param  {Time} [time=now] When the release portion of the envelope should start.\n *  @returns {Tone.Envelope} this\n *  @example\n *  //trigger release immediately\n *  env.triggerRelease();\n */\nTone.Envelope.prototype.triggerRelease = function(time){\n\tthis.log(\"triggerRelease\", time);\n\ttime = this.toSeconds(time);\n\tvar currentValue = this.getValueAtTime(time);\n\tif (currentValue > 0){\n\t\tvar release = this.toSeconds(this.release);\n\t\tif (this._releaseCurve === \"linear\"){\n\t\t\tthis._sig.linearRampTo(0, release, time);\n\t\t} else if (this._releaseCurve === \"exponential\"){\n\t\t\tthis._sig.targetRampTo(0, release, time);\n\t\t} else {\n\t\t\tvar curve = this._releaseCurve;\n\t\t\tif (Tone.isArray(curve)){\n\t\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\t\tthis._sig.setValueCurveAtTime(curve, time, release, currentValue);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Get the scheduled value at the given time. This will\n *  return the unconverted (raw) value.\n *  @param  {Number}  time  The time in seconds.\n *  @return  {Number}  The scheduled value at the given time.\n */\nTone.Envelope.prototype.getValueAtTime = function(time){\n\treturn this._sig.getValueAtTime(time);\n};\n\n/**\n *  triggerAttackRelease is shorthand for triggerAttack, then waiting\n *  some duration, then triggerRelease.\n *  @param {Time} duration The duration of the sustain.\n *  @param {Time} [time=now] When the attack should be triggered.\n *  @param {number} [velocity=1] The velocity of the envelope.\n *  @returns {Tone.Envelope} this\n *  @example\n * //trigger the attack and then the release after 0.6 seconds.\n * env.triggerAttackRelease(0.6);\n */\nTone.Envelope.prototype.triggerAttackRelease = function(duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.triggerAttack(time, velocity);\n\tthis.triggerRelease(time + this.toSeconds(duration));\n\treturn this;\n};\n\n/**\n *  Cancels all scheduled envelope changes after the given time.\n *  @param  {Time} after\n *  @returns {Tone.Envelope} this\n */\nTone.Envelope.prototype.cancel = function(after){\n\tthis._sig.cancelScheduledValues(after);\n\treturn this;\n};\n\n/**\n *  Borrows the connect method from Tone.Signal.\n *  @function\n *  @private\n */\nTone.Envelope.prototype.connect = Tone.SignalBase.prototype.connect;\n\n/**\n \t *  Generate some complex envelope curves.\n \t */\n(function _createCurves(){\n\n\tvar curveLen = 128;\n\n\tvar i, k;\n\n\t//cosine curve\n\tvar cosineCurve = [];\n\tfor (i = 0; i < curveLen; i++){\n\t\tcosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n\t}\n\n\t//ripple curve\n\tvar rippleCurve = [];\n\tvar rippleCurveFreq = 6.4;\n\tfor (i = 0; i < curveLen - 1; i++){\n\t\tk = (i / (curveLen - 1));\n\t\tvar sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t\trippleCurve[i] = sineWave/10 + k * 0.83;\n\t}\n\trippleCurve[curveLen - 1] = 1;\n\n\t//stairs curve\n\tvar stairsCurve = [];\n\tvar steps = 5;\n\tfor (i = 0; i < curveLen; i++){\n\t\tstairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n\t}\n\n\t//in-out easing curve\n\tvar sineCurve = [];\n\tfor (i = 0; i < curveLen; i++){\n\t\tk = i / (curveLen - 1);\n\t\tsineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t}\n\n\t//a bounce curve\n\tvar bounceCurve = [];\n\tfor (i = 0; i < curveLen; i++){\n\t\tk = i / (curveLen - 1);\n\t\tvar freq = Math.pow(k, 3) * 4 + 0.2;\n\t\tvar val = Math.cos(freq * Math.PI * 2 * k);\n\t\tbounceCurve[i] = Math.abs(val * (1 - k));\n\t}\n\n\t/**\n\t *  Invert a value curve to make it work for the release\n\t *  @private\n\t */\n\tfunction invertCurve(curve){\n\t\tvar out = new Array(curve.length);\n\t\tfor (var j = 0; j < curve.length; j++){\n\t\t\tout[j] = 1 - curve[j];\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t *  reverse the curve\n\t *  @private\n\t */\n\tfunction reverseCurve(curve){\n\t\treturn curve.slice(0).reverse();\n\t}\n\n\t/**\n\t *  attack and release curve arrays\n\t *  @type  {Object}\n\t *  @private\n\t */\n\tTone.Envelope.Type = {\n\t\t\"linear\" : \"linear\",\n\t\t\"exponential\" : \"exponential\",\n\t\t\"bounce\" : {\n\t\t\tIn : invertCurve(bounceCurve),\n\t\t\tOut : bounceCurve\n\t\t},\n\t\t\"cosine\" : {\n\t\t\tIn : cosineCurve,\n\t\t\tOut : reverseCurve(cosineCurve)\n\t\t},\n\t\t\"step\" : {\n\t\t\tIn : stairsCurve,\n\t\t\tOut : invertCurve(stairsCurve)\n\t\t},\n\t\t\"ripple\" : {\n\t\t\tIn : rippleCurve,\n\t\t\tOut : invertCurve(rippleCurve)\n\t\t},\n\t\t\"sine\" : {\n\t\t\tIn : sineCurve,\n\t\t\tOut : invertCurve(sineCurve)\n\t\t}\n\t};\n\n})();\n\n/**\n *  Disconnect and dispose.\n *  @returns {Tone.Envelope} this\n */\nTone.Envelope.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._sig.dispose();\n\tthis._sig = null;\n\tthis._attackCurve = null;\n\tthis._releaseCurve = null;\n\treturn this;\n};\n\nexport default Tone.Envelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../component/Merge\";\nimport \"../signal/Zero\";\nimport \"../component/Split\";\nimport \"../core/Gain\";\nimport \"../signal/Signal\";\nimport \"../core/Context\";\n\nif (Tone.supported && !Tone.global.AudioContext.prototype.createStereoPanner){\n\n\t/**\n\t * @class Shimmed StereoPannerNode\n\t * @param  {AudioContext} context\n\t * @private\n\t */\n\tvar StereoPannerNode = function(context){\n\n\t\t/**\n\t\t * The audio context\n\t\t * @type {AudioContext}\n\t\t */\n\t\tthis.context = context;\n\n\t\t/**\n\t\t * The left/right panning. [-1, 1]\n\t\t * @type {AudioRange}\n\t\t * @signal\n\t\t */\n\t\tthis.pan = new Tone.Signal(0, Tone.Type.AudioRange);\n\n\t\t/**\n\t\t * Equal power scaling of the right gain\n\t\t * @type {Tone.WaveShaper}\n\t\t */\n\t\tvar rightWaveShaper = new Tone.WaveShaper(function(val){\n\t\t\treturn Tone.equalPowerScale((val+1)/2);\n\t\t}, 4096);\n\n\t\t/**\n\t\t * Equal power scaling of the left gain\n\t\t * @type {Tone.WaveShaper}\n\t\t * @private\n\t\t */\n\t\tvar leftWaveShaper = new Tone.WaveShaper(function(val){\n\t\t\treturn Tone.equalPowerScale(1 - (val+1)/2);\n\t\t}, 4096);\n\n\t\t/**\n\t\t * The left gain value\n\t\t * @type {Tone.Gain}\n\t\t * @private\n\t\t */\n\t\tvar leftGain = new Tone.Gain();\n\n\t\t/**\n\t\t * The right gain value\n\t\t * @type {Tone.Gain}\n\t\t * @private\n\t\t */\n\t\tvar rightGain = new Tone.Gain();\n\n\t\t/**\n\t\t * Split the incoming signal\n\t\t * @type {Tone.Split}\n\t\t * @private\n\t\t */\n\t\tvar split = this.input = new Tone.Split();\n\t\t//fixes safari issue with splitting audio\n\t\tsplit._splitter.channelCountMode = \"explicit\";\n\n\t\t/**\n\t\t * Keeps the waveshapers from optimizing 0s\n\t\t * @type {Tone.Zero}\n\t\t * @private\n\t\t */\n\t\tvar zero = new Tone.Zero();\n\t\tzero.fan(rightWaveShaper, leftWaveShaper);\n\n\t\t/**\n\t\t * Merge the outgoing signal\n\t\t * @type {Tone.Merge}\n\t\t * @private\n\t\t */\n\t\tvar merge = this.output = new Tone.Merge();\n\n\t\t//connections\n\t\tsplit.left.chain(leftGain, merge.left);\n\t\tsplit.right.chain(rightGain, merge.right);\n\t\tthis.pan.chain(leftWaveShaper, leftGain.gain);\n\t\tthis.pan.chain(rightWaveShaper, rightGain.gain);\n\t};\n\n\tStereoPannerNode.prototype.disconnect = function(){\n\t\tthis.output.disconnect.apply(this.output, arguments);\n\t};\n\n\tStereoPannerNode.prototype.connect = function(){\n\t\tthis.output.connect.apply(this.output, arguments);\n\t};\n\n\t//add it to the AudioContext\n\tAudioContext.prototype.createStereoPanner = function(){\n\t\treturn new StereoPannerNode(this);\n\t};\n\tTone.Context.prototype.createStereoPanner = function(){\n\t\treturn new StereoPannerNode(this);\n\t};\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../component/Merge\";\nimport \"../component/Split\";\nimport \"../shim/StereoPannerNode\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../signal/Zero\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Panner is an equal power Left/Right Panner and does not\n *          support 3D. Panner uses the StereoPannerNode when available.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {NormalRange} [initialPan=0] The initail panner value (center).\n *  @example\n *  //pan the input signal hard right.\n *  var panner = new Tone.Panner(1);\n */\nTone.Panner = function(){\n\n\tvar options = Tone.defaults(arguments, [\"pan\"], Tone.Panner);\n\tTone.AudioNode.call(this);\n\t/**\n\t*  the panner node\n\t*  @type {StereoPannerNode}\n\t*  @private\n\t*/\n\tthis._panner = this.input = this.output = this.context.createStereoPanner();\n\n\t/**\n\t*  The pan control. -1 = hard left, 1 = hard right.\n\t*  @type {AudioRange}\n\t*  @signal\n\t*/\n\tthis.pan = this._panner.pan;\n\n\t//initial value\n\tthis.pan.value = options.pan;\n\tthis._readOnly(\"pan\");\n};\n\nTone.extend(Tone.Panner, Tone.AudioNode);\n\n/**\n *  Defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.Panner.defaults = {\n\t\"pan\" : 0\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Panner} this\n */\nTone.Panner.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"pan\");\n\tthis._panner.disconnect();\n\tthis._panner = null;\n\tthis.pan = null;\n\treturn this;\n};\n\nexport default Tone.Panner;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\n\n/**\n *  @class Tone.FMOscillator\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The starting frequency of the oscillator.\n *  @param {String} type The type of the carrier oscillator.\n *  @param {String} modulationType The type of the modulator oscillator.\n *  @example\n * //a sine oscillator frequency-modulated by a square wave\n * var fmOsc = new Tone.FMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n */\nTone.FMOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"modulationType\"], Tone.FMOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The carrier oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Oscillator(options.frequency, options.type);\n\n\t/**\n\t *  The oscillator's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._carrier.detune;\n\tthis.detune.value = options.detune;\n\n\t/**\n\t *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t *  modulating signal (ma) -- as in ma/mf.\n\t *\t@type {Positive}\n\t *\t@signal\n\t */\n\tthis.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\tthis.modulationIndex.units = Tone.Type.Positive;\n\n\t/**\n\t *  The modulating oscillator\n\t *  @type  {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\n\t/**\n\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t *  A harmonicity of 1 gives both oscillators the same frequency.\n\t *  Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch the modulator an octave below carrier\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain(0);\n\n\t//connections\n\tthis.frequency.connect(this._carrier.frequency);\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\tthis._modulator.connect(this._modulationNode.gain);\n\tthis._modulationNode.connect(this._carrier.frequency);\n\tthis._carrier.connect(this.output);\n\tthis.detune.connect(this._modulator.detune);\n\n\tthis.phase = options.phase;\n\n\tthis._readOnly([\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n};\n\nTone.extend(Tone.FMOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.FMOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"type\" : \"sine\",\n\t\"modulationIndex\" : 2,\n\t\"modulationType\" : \"square\",\n\t\"harmonicity\" : 1\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.FMOscillator.prototype._start = function(time){\n\tthis._modulator.start(time);\n\tthis._carrier.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.FMOscillator.prototype._stop = function(time){\n\tthis._modulator.stop(time);\n\tthis._carrier.stop(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.FMOscillator.prototype.restart = function(time){\n\tthis._modulator.restart(time);\n\tthis._carrier.restart(time);\n};\n\n/**\n * The type of the carrier oscillator\n * @memberOf Tone.FMOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._carrier.type;\n\t},\n\tset : function(type){\n\t\tthis._carrier.type = type;\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.FMOscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._carrier.baseType;\n\t},\n\tset : function(baseType){\n\t\tthis._carrier.baseType = baseType;\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @memberOf Tone.FMOscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._carrier.partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n});\n\n/**\n * The type of the modulator oscillator\n * @memberOf Tone.FMOscillator#\n * @type {String}\n * @name modulationType\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"modulationType\", {\n\tget : function(){\n\t\treturn this._modulator.type;\n\t},\n\tset : function(type){\n\t\tthis._modulator.type = type;\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.FMOscillator#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._carrier.phase;\n\t},\n\tset : function(phase){\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n});\n\n/**\n * The partials of the carrier waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.FMOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._carrier.partials;\n\t},\n\tset : function(partials){\n\t\tthis._carrier.partials = partials;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.FMOscillator} this\n */\nTone.FMOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis.modulationIndex.dispose();\n\tthis.modulationIndex = null;\n\treturn this;\n};\n\nexport default Tone.FMOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Signal\";\nimport \"../signal/WaveShaper\";\nimport \"../core/Gain\";\n\n/**\n *  @class Tone.PulseOscillator is a pulse oscillator with control over pulse width,\n *         also known as the duty cycle. At 50% duty cycle (width = 0.5) the wave is\n *         a square and only odd-numbered harmonics are present. At all other widths\n *         even-numbered harmonics are present. Read more\n *         [here](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {Frequency} [frequency] The frequency of the oscillator\n *  @param {NormalRange} [width] The width of the pulse\n *  @example\n * var pulse = new Tone.PulseOscillator(\"E5\", 0.4).toMaster().start();\n */\nTone.PulseOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"width\"], Tone.Oscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The width of the pulse.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\n\t/**\n\t *  gate the width amount\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._widthGate = new Tone.Gain(0);\n\n\t/**\n\t *  the sawtooth oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._sawtooth = new Tone.Oscillator({\n\t\tfrequency : options.frequency,\n\t\tdetune : options.detune,\n\t\ttype : \"sawtooth\",\n\t\tphase : options.phase\n\t});\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._sawtooth.frequency;\n\n\t/**\n\t *  The detune in cents.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._sawtooth.detune;\n\n\t/**\n\t *  Threshold the signal to turn it into a square\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._thresh = new Tone.WaveShaper(function(val){\n\t\tif (val < 0){\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t});\n\n\t//connections\n\tthis._sawtooth.chain(this._thresh, this.output);\n\tthis.width.chain(this._widthGate, this._thresh);\n\tthis._readOnly([\"width\", \"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.PulseOscillator, Tone.Source);\n\n/**\n *  The default parameters.\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.PulseOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"width\" : 0.2,\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} time\n *  @private\n */\nTone.PulseOscillator.prototype._start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._sawtooth.start(time);\n\tthis._widthGate.gain.setValueAtTime(1, time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time\n *  @private\n */\nTone.PulseOscillator.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._sawtooth.stop(time);\n\t//the width is still connected to the output.\n\t//that needs to be stopped also\n\tthis._widthGate.gain.setValueAtTime(0, time);\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.PulseOscillator.prototype.restart = function(time){\n\tthis._sawtooth.restart(time);\n\tthis._widthGate.gain.cancelScheduledValues(time);\n\tthis._widthGate.gain.setValueAtTime(1, time);\n};\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.PulseOscillator#\n * @type {Degrees}\n * @name phase\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._sawtooth.phase;\n\t},\n\tset : function(phase){\n\t\tthis._sawtooth.phase = phase;\n\t}\n});\n\n/**\n * The type of the oscillator. Always returns \"pulse\".\n * @readOnly\n * @memberOf Tone.PulseOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn \"pulse\";\n\t}\n});\n\n/**\n * The baseType of the oscillator. Always returns \"pulse\".\n * @readOnly\n * @memberOf Tone.PulseOscillator#\n * @type {string}\n * @name baseType\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn \"pulse\";\n\t}\n});\n\n/**\n * The partials of the waveform. Cannot set partials for this waveform type\n * @memberOf Tone.PulseOscillator#\n * @type {Array}\n * @name partials\n * @private\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn [];\n\t}\n});\n\n/**\n *  Clean up method.\n *  @return {Tone.PulseOscillator} this\n */\nTone.PulseOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._sawtooth.dispose();\n\tthis._sawtooth = null;\n\tthis._writable([\"width\", \"frequency\", \"detune\"]);\n\tthis.width.dispose();\n\tthis.width = null;\n\tthis._widthGate.dispose();\n\tthis._widthGate = null;\n\tthis._thresh.dispose();\n\tthis._thresh = null;\n\tthis.frequency = null;\n\tthis.detune = null;\n\treturn this;\n};\n\nexport default Tone.PulseOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../type/Type\";\nimport \"../core/TimelineState\";\n\n/**\n *  @class  Tone.Event abstracts away Tone.Transport.schedule and provides a schedulable\n *          callback for a single or repeatable events along the timeline.\n *\n *  @extends {Tone}\n *  @param {function} callback The callback to invoke at the time.\n *  @param {*} value The value or values which should be passed to\n *                      the callback function on invocation.\n *  @example\n * var chord = new Tone.Event(function(time, chord){\n * \t//the chord as well as the exact time of the event\n * \t//are passed in as arguments to the callback function\n * }, [\"D4\", \"E4\", \"F4\"]);\n * //start the chord at the beginning of the transport timeline\n * chord.start();\n * //loop it every measure for 8 measures\n * chord.loop = 8;\n * chord.loopEnd = \"1m\";\n */\nTone.Event = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"value\"], Tone.Event);\n\tTone.call(this);\n\n\t/**\n\t *  Loop value\n\t *  @type  {Boolean|Positive}\n\t *  @private\n\t */\n\tthis._loop = options.loop;\n\n\t/**\n\t *  The callback to invoke.\n\t *  @type  {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t/**\n\t *  The value which is passed to the\n\t *  callback function.\n\t *  @type  {*}\n\t *  @private\n\t */\n\tthis.value = options.value;\n\n\t/**\n\t *  When the note is scheduled to start.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopStart = this.toTicks(options.loopStart);\n\n\t/**\n\t *  When the note is scheduled to start.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopEnd = this.toTicks(options.loopEnd);\n\n\t/**\n\t *  Tracks the scheduled events\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\n\t/**\n\t *  The playback speed of the note. A speed of 1\n\t *  is no change.\n\t *  @private\n\t *  @type {Positive}\n\t */\n\tthis._playbackRate = 1;\n\n\t/**\n\t *  A delay time from when the event is scheduled to start\n\t *  @type {Ticks}\n\t *  @private\n\t */\n\tthis._startOffset = 0;\n\n\t/**\n\t *  private holder of probability value\n\t *  @type {NormalRange}\n\t *  @private\n\t */\n\tthis._probability = options.probability;\n\n\t/**\n\t *  the amount of variation from the\n\t *  given time.\n\t *  @type {Boolean|Time}\n\t *  @private\n\t */\n\tthis._humanize = options.humanize;\n\n\t/**\n\t *  If mute is true, the callback won't be\n\t *  invoked.\n\t *  @type {Boolean}\n\t */\n\tthis.mute = options.mute;\n\n\t//set the initial values\n\tthis.playbackRate = options.playbackRate;\n};\n\nTone.extend(Tone.Event);\n\n/**\n *  The default values\n *  @type  {Object}\n *  @const\n */\nTone.Event.defaults = {\n\t\"callback\" : Tone.noOp,\n\t\"loop\" : false,\n\t\"loopEnd\" : \"1m\",\n\t\"loopStart\" : 0,\n\t\"playbackRate\" : 1,\n\t\"value\" : null,\n\t\"probability\" : 1,\n\t\"mute\" : false,\n\t\"humanize\" : false,\n};\n\n/**\n *  Reschedule all of the events along the timeline\n *  with the updated values.\n *  @param {Time} after Only reschedules events after the given time.\n *  @return  {Tone.Event}  this\n *  @private\n */\nTone.Event.prototype._rescheduleEvents = function(after){\n\t//if no argument is given, schedules all of the events\n\tafter = Tone.defaultArg(after, -1);\n\tthis._state.forEachFrom(after, function(event){\n\t\tvar duration;\n\t\tif (event.state === Tone.State.Started){\n\t\t\tif (Tone.isDefined(event.id)){\n\t\t\t\tTone.Transport.clear(event.id);\n\t\t\t}\n\t\t\tvar startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n\t\t\tif (this._loop === true || Tone.isNumber(this._loop) && this._loop > 1){\n\t\t\t\tduration = Infinity;\n\t\t\t\tif (Tone.isNumber(this._loop)){\n\t\t\t\t\tduration = (this._loop) * this._getLoopDuration();\n\t\t\t\t}\n\t\t\t\tvar nextEvent = this._state.getAfter(startTick);\n\t\t\t\tif (nextEvent !== null){\n\t\t\t\t\tduration = Math.min(duration, nextEvent.time - startTick);\n\t\t\t\t}\n\t\t\t\tif (duration !== Infinity){\n\t\t\t\t\t//schedule a stop since it's finite duration\n\t\t\t\t\tthis._state.setStateAtTime(Tone.State.Stopped, startTick + duration + 1);\n\t\t\t\t\tduration = Tone.Ticks(duration);\n\t\t\t\t}\n\t\t\t\tvar interval = Tone.Ticks(this._getLoopDuration());\n\t\t\t\tevent.id = Tone.Transport.scheduleRepeat(this._tick.bind(this), interval, Tone.Ticks(startTick), duration);\n\t\t\t} else {\n\t\t\t\tevent.id = Tone.Transport.schedule(this._tick.bind(this), Tone.Ticks(startTick));\n\t\t\t}\n\t\t}\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Returns the playback state of the note, either \"started\" or \"stopped\".\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.Event#\n *  @name state\n */\nObject.defineProperty(Tone.Event.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._state.getValueAtTime(Tone.Transport.ticks);\n\t}\n});\n\n/**\n *  The start from the scheduled start time\n *  @type {Ticks}\n *  @memberOf Tone.Event#\n *  @name startOffset\n *  @private\n */\nObject.defineProperty(Tone.Event.prototype, \"startOffset\", {\n\tget : function(){\n\t\treturn this._startOffset;\n\t},\n\tset : function(offset){\n\t\tthis._startOffset = offset;\n\t}\n});\n\n/**\n *  The probability of the notes being triggered.\n *  @memberOf Tone.Event#\n *  @type {NormalRange}\n *  @name probability\n */\nObject.defineProperty(Tone.Event.prototype, \"probability\", {\n\tget : function(){\n\t\treturn this._probability;\n\t},\n\tset : function(prob){\n\t\tthis._probability = prob;\n\t}\n});\n\n/**\n *  If set to true, will apply small random variation\n *  to the callback time. If the value is given as a time, it will randomize\n *  by that amount.\n *  @type {Boolean|Time}\n *  @name humanize\n *  @memberof Tone.Event#\n *  @example\n * event.humanize = true;\n */\nObject.defineProperty(Tone.Event.prototype, \"humanize\", {\n\tget : function(){\n\t\treturn this._humanize;\n\t},\n\tset : function(variation){\n\t\tthis._humanize = variation;\n\t}\n});\n\n/**\n *  Start the note at the given time.\n *  @param  {TimelinePosition}  time  When the note should start.\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.start = function(time){\n\ttime = this.toTicks(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Stopped){\n\t\tthis._state.add({\n\t\t\t\"state\" : Tone.State.Started,\n\t\t\t\"time\" : time,\n\t\t\t\"id\" : undefined,\n\t\t});\n\t\tthis._rescheduleEvents(time);\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the Event at the given time.\n *  @param  {TimelinePosition}  time  When the note should stop.\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.stop = function(time){\n\tthis.cancel(time);\n\ttime = this.toTicks(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\t\tvar previousEvent = this._state.getBefore(time);\n\t\tvar reschedulTime = time;\n\t\tif (previousEvent !== null){\n\t\t\treschedulTime = previousEvent.time;\n\t\t}\n\t\tthis._rescheduleEvents(reschedulTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel all scheduled events greater than or equal to the given time\n *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.cancel = function(time){\n\ttime = Tone.defaultArg(time, -Infinity);\n\ttime = this.toTicks(time);\n\tthis._state.forEachFrom(time, function(event){\n\t\tTone.Transport.clear(event.id);\n\t});\n\tthis._state.cancel(time);\n\treturn this;\n};\n\n/**\n *  The callback function invoker. Also\n *  checks if the Event is done playing\n *  @param  {Number}  time  The time of the event in seconds\n *  @private\n */\nTone.Event.prototype._tick = function(time){\n\tvar ticks = Tone.Transport.getTicksAtTime(time);\n\tif (!this.mute && this._state.getValueAtTime(ticks) === Tone.State.Started){\n\t\tif (this.probability < 1 && Math.random() > this.probability){\n\t\t\treturn;\n\t\t}\n\t\tif (this.humanize){\n\t\t\tvar variation = 0.02;\n\t\t\tif (!Tone.isBoolean(this.humanize)){\n\t\t\t\tvariation = this.toSeconds(this.humanize);\n\t\t\t}\n\t\t\ttime += (Math.random() * 2 - 1) * variation;\n\t\t}\n\t\tthis.callback(time, this.value);\n\t}\n};\n\n/**\n *  Get the duration of the loop.\n *  @return  {Ticks}\n *  @private\n */\nTone.Event.prototype._getLoopDuration = function(){\n\treturn Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n};\n\n/**\n *  If the note should loop or not\n *  between Tone.Event.loopStart and\n *  Tone.Event.loopEnd. If set to true,\n *  the event will loop indefinitely,\n *  if set to a number greater than 1\n *  it will play a specific number of\n *  times, if set to false, 0 or 1, the\n *  part will only play once.\n *  @memberOf Tone.Event#\n *  @type {Boolean|Positive}\n *  @name loop\n */\nObject.defineProperty(Tone.Event.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._loop;\n\t},\n\tset : function(loop){\n\t\tthis._loop = loop;\n\t\tthis._rescheduleEvents();\n\t}\n});\n\n/**\n * \tThe playback rate of the note. Defaults to 1.\n *  @memberOf Tone.Event#\n *  @type {Positive}\n *  @name playbackRate\n *  @example\n * note.loop = true;\n * //repeat the note twice as fast\n * note.playbackRate = 2;\n */\nObject.defineProperty(Tone.Event.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tthis._rescheduleEvents();\n\t}\n});\n\n/**\n *  The loopEnd point is the time the event will loop\n *  if Tone.Event.loop is true.\n *  @memberOf Tone.Event#\n *  @type {Time}\n *  @name loopEnd\n */\nObject.defineProperty(Tone.Event.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopEnd).toSeconds();\n\t},\n\tset : function(loopEnd){\n\t\tthis._loopEnd = this.toTicks(loopEnd);\n\t\tif (this._loop){\n\t\t\tthis._rescheduleEvents();\n\t\t}\n\t}\n});\n\n/**\n *  The time when the loop should start.\n *  @memberOf Tone.Event#\n *  @type {Time}\n *  @name loopStart\n */\nObject.defineProperty(Tone.Event.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopStart).toSeconds();\n\t},\n\tset : function(loopStart){\n\t\tthis._loopStart = this.toTicks(loopStart);\n\t\tif (this._loop){\n\t\t\tthis._rescheduleEvents();\n\t\t}\n\t}\n});\n\n/**\n *  The current progress of the loop interval.\n *  Returns 0 if the event is not started yet or\n *  it is not set to loop.\n *  @memberOf Tone.Event#\n *  @type {NormalRange}\n *  @name progress\n *  @readOnly\n */\nObject.defineProperty(Tone.Event.prototype, \"progress\", {\n\tget : function(){\n\t\tif (this._loop){\n\t\t\tvar ticks = Tone.Transport.ticks;\n\t\t\tvar lastEvent = this._state.get(ticks);\n\t\t\tif (lastEvent !== null && lastEvent.state === Tone.State.Started){\n\t\t\t\tvar loopDuration = this._getLoopDuration();\n\t\t\t\tvar progress = (ticks - lastEvent.time) % loopDuration;\n\t\t\t\treturn progress / loopDuration;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.dispose = function(){\n\tthis.cancel();\n\tthis._state.dispose();\n\tthis._state = null;\n\tthis.callback = null;\n\tthis.value = null;\n};\n\nexport default Tone.Event;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Subtract\";\nimport \"../signal/Add\";\nimport \"../component/Merge\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Mid/Side processing separates the the 'mid' signal\n *         (which comes out of both the left and the right channel)\n *         and the 'side' (which only comes out of the the side channels).\n *         MidSideMerge merges the mid and side signal after they've been seperated\n *         by Tone.MidSideSplit.<br><br>\n *         <code>\n *         Left = (Mid+Side)/sqrt(2);   // obtain left signal from mid and side<br>\n *         Right = (Mid-Side)/sqrt(2);   // obtain right signal from mid and side<br>\n *         </code>\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n */\nTone.MidSideMerge = function(){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  The mid signal input. Alias for\n\t *  <code>input[0]</code>\n\t *  @type  {Tone.Gain}\n\t */\n\tthis.mid = this.input[0] = new Tone.Gain();\n\n\t/**\n\t *  recombine the mid/side into Left\n\t *  @type {Tone.Add}\n\t *  @private\n\t */\n\tthis._left = new Tone.Add();\n\n\t/**\n\t * Multiply the left by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis._timesTwoLeft = new Tone.Multiply(Math.SQRT1_2);\n\n\t/**\n\t *  The side signal input. Alias for\n\t *  <code>input[1]</code>\n\t *  @type  {Tone.Gain}\n\t */\n\tthis.side = this.input[1] = new Tone.Gain();\n\n\t/**\n\t *  recombine the mid/side into Right\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._right = new Tone.Subtract(/*\"($0 - $1) * $2\"*/);\n\n\t/**\n\t * Multiply the right by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis._timesTwoRight = new Tone.Multiply(Math.SQRT1_2);\n\n\t/**\n\t *  Merge the left/right signal back into a stereo signal.\n\t *  @type {Tone.Merge}\n\t *  @private\n\t */\n\tthis._merge = this.output = new Tone.Merge();\n\n\tthis.mid.connect(this._left, 0, 0);\n\tthis.side.connect(this._left, 0, 1);\n\tthis.mid.connect(this._right, 0, 0);\n\tthis.side.connect(this._right, 0, 1);\n\tthis._left.connect(this._timesTwoLeft);\n\tthis._right.connect(this._timesTwoRight);\n\tthis._timesTwoLeft.connect(this._merge, 0, 0);\n\tthis._timesTwoRight.connect(this._merge, 0, 1);\n};\n\nTone.extend(Tone.MidSideMerge, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.MidSideMerge} this\n */\nTone.MidSideMerge.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.side.dispose();\n\tthis.side = null;\n\tthis._left.dispose();\n\tthis._left = null;\n\tthis._timesTwoLeft.dispose();\n\tthis._timesTwoLeft = null;\n\tthis._right.dispose();\n\tthis._right = null;\n\tthis._timesTwoRight.dispose();\n\tthis._timesTwoRight = null;\n\tthis._merge.dispose();\n\tthis._merge = null;\n\treturn this;\n};\n\nexport default Tone.MidSideMerge;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Subtract\";\nimport \"../signal/Signal\";\nimport \"../component/Split\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Mid/Side processing separates the the 'mid' signal\n *         (which comes out of both the left and the right channel)\n *         and the 'side' (which only comes out of the the side channels). <br><br>\n *         <code>\n *         Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right<br>\n *         Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ<br>\n *         </code>\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n */\nTone.MidSideSplit = function(){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(0, 2);\n\n\t/**\n\t *  split the incoming signal into left and right channels\n\t *  @type  {Tone.Split}\n\t *  @private\n\t */\n\tthis._split = this.input = new Tone.Split();\n\n\t/**\n\t *  The mid send. Connect to mid processing. Alias for\n\t *  <code>output[0]</code>\n\t *  @type {Tone.Add}\n\t */\n\tthis._midAdd = new Tone.Add();\n\n\t/**\n\t * Multiply the _midAdd by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis.mid = this.output[0] = new Tone.Multiply(Math.SQRT1_2);\n\n\t/**\n\t *  The side output. Connect to side processing. Also Output 1\n\t *  @type {Tone.Subtract}\n\t */\n\tthis._sideSubtract = new Tone.Subtract();\n\n\t/**\n\t * Multiply the _midAdd by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis.side = this.output[1] = new Tone.Multiply(Math.SQRT1_2);\n\n\tthis._split.connect(this._midAdd, 0, 0);\n\tthis._split.connect(this._midAdd, 1, 1);\n\tthis._split.connect(this._sideSubtract, 0, 0);\n\tthis._split.connect(this._sideSubtract, 1, 1);\n\tthis._midAdd.connect(this.mid);\n\tthis._sideSubtract.connect(this.side);\n};\n\nTone.extend(Tone.MidSideSplit, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.MidSideSplit} this\n */\nTone.MidSideSplit.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.side.dispose();\n\tthis.side = null;\n\tthis._midAdd.dispose();\n\tthis._midAdd = null;\n\tthis._sideSubtract.dispose();\n\tthis._sideSubtract = null;\n\tthis._split.dispose();\n\tthis._split = null;\n\treturn this;\n};\n\nexport default Tone.MidSideSplit;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../component/Filter\";\nimport \"../core/AudioNode\";\nimport \"../component/FeedbackCombFilter\";\n\n/**\n *  @class Tone.Lowpass is a lowpass feedback comb filter. It is similar to\n *         Tone.FeedbackCombFilter, but includes a lowpass filter.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Time|Object} [delayTime] The delay time of the comb filter\n *  @param {NormalRange=} resonance The resonance (feedback) of the comb filter\n *  @param {Frequency=} dampening The cutoff of the lowpass filter dampens the\n *                                signal as it is fedback.\n */\nTone.LowpassCombFilter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"resonance\", \"dampening\"], Tone.LowpassCombFilter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the delay node\n\t *  @type {DelayNode}\n\t *  @private\n\t */\n\tthis._combFilter = this.output = new Tone.FeedbackCombFilter(options.delayTime, options.resonance);\n\n\t/**\n\t *  The delayTime of the comb filter.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._combFilter.delayTime;\n\n\t/**\n\t *  the lowpass filter\n\t *  @type  {BiquadFilterNode}\n\t *  @private\n\t */\n\tthis._lowpass = this.input = new Tone.Filter({\n\t\t\"frequency\" : options.dampening,\n\t\t\"type\" : \"lowpass\",\n\t\t\"Q\" : 0,\n\t\t\"rolloff\" : -12\n\t});\n\n\t/**\n\t *  The dampening control of the feedback\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.dampening = this._lowpass.frequency;\n\t\n\t/**\n\t *  The amount of feedback of the delayed signal.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.resonance = this._combFilter.resonance;\n\n\t//connections\n\tthis._lowpass.connect(this._combFilter);\n\tthis._readOnly([\"dampening\", \"resonance\", \"delayTime\"]);\n};\n\nTone.extend(Tone.LowpassCombFilter, Tone.AudioNode);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.LowpassCombFilter.defaults = {\n\t\"delayTime\" : 0.1,\n\t\"resonance\" : 0.5,\n\t\"dampening\" : 3000\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.LowpassCombFilter} this\n */\nTone.LowpassCombFilter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"dampening\", \"resonance\", \"delayTime\"]);\n\tthis._combFilter.dispose();\n\tthis._combFilter = null;\n\tthis.resonance = null;\n\tthis.delayTime = null;\n\tthis._lowpass.dispose();\n\tthis._lowpass = null;\n\tthis.dampening = null;\n\treturn this;\n};\n\nexport default Tone.LowpassCombFilter;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/TransportTime\";\n\n/**\n *  @class Tone.Ticks is a primitive type for encoding Time values.\n *         Tone.Ticks can be constructed with or without the `new` keyword. Tone.Ticks can be passed\n *         into the parameter of any method which takes time as an argument.\n *  @constructor\n *  @extends {Tone.TransportTime}\n *  @param  {String|Number}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * var t = Tone.Ticks(\"4n\");//a quarter note\n */\nTone.Ticks = function(val, units){\n\tif (this instanceof Tone.Ticks){\n\n\t\tTone.TransportTime.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Ticks(val, units);\n\t}\n};\n\nTone.extend(Tone.Ticks, Tone.TransportTime);\n\n/**\n *  The default units if none are given.\n *  @type {String}\n *  @private\n */\nTone.Ticks.prototype._defaultUnits = \"i\";\n\n/**\n * Get the current time in the given units\n * @return {Ticks}\n * @private\n */\nTone.Ticks.prototype._now = function(){\n\treturn Tone.Transport.ticks;\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.Ticks.prototype._beatsToUnits = function(beats){\n\treturn this._getPPQ() * beats;\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.Ticks.prototype._secondsToUnits = function(seconds){\n\treturn Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.Ticks.prototype._ticksToUnits = function(ticks){\n\treturn ticks;\n};\n\n/**\n *  Return the time in ticks\n *  @return  {Ticks}\n */\nTone.Ticks.prototype.toTicks = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the time in ticks\n *  @return  {Ticks}\n */\nTone.Ticks.prototype.toSeconds = function(){\n\treturn (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n};\n\nexport default Tone.Ticks;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Ticks\";\n\n/**\n *  @class Tone.TransportEvent is an internal class used by (Tone.Transport)[Transport]\n *         to schedule events. Do no invoke this class directly, it is\n *         handled from within Tone.Transport.\n *  @extends {Tone}\n *  @param {Object} options\n */\nTone.TransportEvent = function(Transport, options){\n\n\toptions = Tone.defaultArg(options, Tone.TransportEvent.defaults);\n\tTone.call(this);\n\n\t/**\n\t * Reference to the Transport that created it\n\t * @type {Tone.Transport}\n\t */\n\tthis.Transport = Transport;\n\n\t/**\n\t * The unique id of the event\n\t * @type {Number}\n\t */\n\tthis.id = Tone.TransportEvent._eventId++;\n\n\t/**\n\t * The time the event starts\n\t * @type {Ticks}\n\t */\n\tthis.time = Tone.Ticks(options.time);\n\n\t/**\n\t * The callback to invoke\n\t * @type {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t/**\n\t * If the event should be removed after being created.\n\t * @type {Boolean}\n\t * @private\n\t */\n\tthis._once = options.once;\n};\n\nTone.extend(Tone.TransportEvent);\n\n/**\n * The defaults\n * @static\n * @type {Object}\n */\nTone.TransportEvent.defaults = {\n\t\"once\" : false,\n\t\"callback\" : Tone.noOp,\n};\n\n/**\n * Current ID counter\n * @private\n * @static\n * @type {Number}\n */\nTone.TransportEvent._eventId = 0;\n\n/**\n * Invoke the event callback.\n * @param  {Time} time  The AudioContext time in seconds of the event\n */\nTone.TransportEvent.prototype.invoke = function(time){\n\tif (this.callback){\n\t\tthis.callback(time);\n\t\tif (this._once && this.Transport){\n\t\t\tthis.Transport.clear(this.id);\n\t\t}\n\t}\n};\n\n/**\n * Clean up\n * @return {Tone.TransportEvent} this\n */\nTone.TransportEvent.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis.Transport = null;\n\tthis.callback = null;\n\tthis.time = null;\n\treturn this;\n};\n\nexport default Tone.TransportEvent;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/TickSignal\";\nimport \"../core/TimelineState\";\nimport \"../core/Timeline\";\nimport \"../core/Param\";\n\n/**\n *  @class  Uses [Tone.TickSignal](TickSignal) to track elapsed ticks with\n *  \t\tcomplex automation curves.\n *\n * \t@constructor\n *  @extends {Tone}\n *  @param {Frequency} frequency The initial frequency that the signal ticks at\n *  @param {Tone.Param=} param A parameter to control (such as playbackRate)\n */\nTone.TickSource = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\"], Tone.TickSource);\n\n\t/**\n\t *  The frequency the callback function should be invoked.\n\t *  @type  {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.TickSignal(options.frequency);\n\tthis._readOnly(\"frequency\");\n\n\t/**\n\t *  The state timeline\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\tthis._state.setStateAtTime(Tone.State.Stopped, 0);\n\n\t/**\n\t * The offset values of the ticks\n\t * @type {Tone.Timeline}\n\t * @private\n\t */\n\tthis._tickOffset = new Tone.Timeline();\n\t//add the first event\n\tthis.setTicksAtTime(0, 0);\n};\n\nTone.extend(Tone.TickSource);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.TickSource.defaults = {\n\t\"frequency\" : 1,\n};\n\n/**\n *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.TickSource#\n *  @name state\n */\nObject.defineProperty(Tone.TickSource.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._state.getValueAtTime(this.now());\n\t}\n});\n\n/**\n *  Start the clock at the given time. Optionally pass in an offset\n *  of where to start the tick counter from.\n *  @param  {Time=}  time    The time the clock should start\n *  @param {Ticks} [offset=0] The number of ticks to start the source at\n *  @return  {Tone.TickSource}  this\n */\nTone.TickSource.prototype.start = function(time, offset){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) !== Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tif (Tone.isDefined(offset)){\n\t\t\tthis.setTicksAtTime(offset, time);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the clock. Stopping the clock resets the tick counter to 0.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.TickSource} this\n *  @example\n * clock.stop();\n */\nTone.TickSource.prototype.stop = function(time){\n\ttime = this.toSeconds(time);\n\t//cancel the previous stop\n\tif (this._state.getValueAtTime(time) === Tone.State.Stopped){\n\t\tvar event = this._state.get(time);\n\t\tif (event.time > 0){\n\t\t\tthis._tickOffset.cancel(event.time);\n\t\t\tthis._state.cancel(event.time);\n\t\t}\n\t}\n\tthis._state.cancel(time);\n\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\tthis.setTicksAtTime(0, time);\n\treturn this;\n};\n\n/**\n *  Pause the clock. Pausing does not reset the tick counter.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.TickSource} this\n */\nTone.TickSource.prototype.pause = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Paused, time);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n *  @param {Time} [time=now] When to clear the events after\n *  @returns {Tone.TickSource} this\n */\nTone.TickSource.prototype.cancel = function(time){\n\ttime = this.toSeconds(time);\n\tthis._state.cancel(time);\n\tthis._tickOffset.cancel(time);\n\treturn this;\n};\n\n/**\n * Get the elapsed ticks at the given time\n * @param  {Time} time  When to get the tick value\n * @return {Ticks}     The number of ticks\n */\nTone.TickSource.prototype.getTicksAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar stopEvent = this._state.getLastState(Tone.State.Stopped, time);\n\t//this event allows forEachBetween to iterate until the current time\n\tvar tmpEvent = { state : Tone.State.Paused, time : time };\n\tthis._state.add(tmpEvent);\n\n\t//keep track of the previous offset event\n\tvar lastState = stopEvent;\n\tvar elapsedTicks = 0;\n\n\t//iterate through all the events since the last stop\n\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, function(e){\n\t\tvar periodStartTime = lastState.time;\n\t\t//if there is an offset event in this period use that\n\t\tvar offsetEvent = this._tickOffset.get(e.time);\n\t\tif (offsetEvent.time >= lastState.time){\n\t\t\telapsedTicks = offsetEvent.ticks;\n\t\t\tperiodStartTime = offsetEvent.time;\n\t\t}\n\t\tif (lastState.state === Tone.State.Started && e.state !== Tone.State.Started){\n\t\t\telapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n\t\t} \n\t\tlastState = e;\n\t}.bind(this));\n\n\t//remove the temporary event\n\tthis._state.remove(tmpEvent);\n\n\t//return the ticks\n\treturn elapsedTicks;\n};\n\n/**\n *  The number of times the callback was invoked. Starts counting at 0\n *  and increments after the callback was invoked. Returns -1 when stopped.\n *  @memberOf Tone.TickSource#\n *  @name ticks\n *  @type {Ticks}\n */\nObject.defineProperty(Tone.TickSource.prototype, \"ticks\", {\n\tget : function(){\n\t\treturn this.getTicksAtTime(this.now());\n\t},\n\tset : function(t){\n\t\tthis.setTicksAtTime(t, this.now());\n\t}\n});\n\n/**\n *  The time since ticks=0 that the TickSource has been running. Accounts\n *  for tempo curves\n *  @memberOf Tone.TickSource#\n *  @name seconds\n *  @type {Seconds}\n */\nObject.defineProperty(Tone.TickSource.prototype, \"seconds\", {\n\tget : function(){\n\t\treturn this.getSecondsAtTime(this.now());\n\t},\n\tset : function(s){\n\t\tvar now = this.now();\n\t\tvar ticks = this.frequency.timeToTicks(s, now);\n\t\tthis.setTicksAtTime(ticks, now);\n\t}\n});\n\n/**\n *  Return the elapsed seconds at the given time.\n *  @param  {Time}  time  When to get the elapsed seconds\n *  @return  {Seconds}  The number of elapsed seconds\n */\nTone.TickSource.prototype.getSecondsAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar stopEvent = this._state.getLastState(Tone.State.Stopped, time);\n\t//this event allows forEachBetween to iterate until the current time\n\tvar tmpEvent = { state : Tone.State.Paused, time : time };\n\tthis._state.add(tmpEvent);\n\n\t//keep track of the previous offset event\n\tvar lastState = stopEvent;\n\tvar elapsedSeconds = 0;\n\n\t//iterate through all the events since the last stop\n\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, function(e){\n\t\tvar periodStartTime = lastState.time;\n\t\t//if there is an offset event in this period use that\n\t\tvar offsetEvent = this._tickOffset.get(e.time);\n\t\tif (offsetEvent.time >= lastState.time){\n\t\t\telapsedSeconds = offsetEvent.seconds;\n\t\t\tperiodStartTime = offsetEvent.time;\n\t\t}\n\t\tif (lastState.state === Tone.State.Started && e.state !== Tone.State.Started){\n\t\t\telapsedSeconds += e.time - periodStartTime;\n\t\t} \n\t\tlastState = e;\n\t}.bind(this));\n\n\t//remove the temporary event\n\tthis._state.remove(tmpEvent);\n\n\t//return the ticks\n\treturn elapsedSeconds;\n};\n\n/**\n * Set the clock's ticks at the given time.\n * @param  {Ticks} ticks The tick value to set\n * @param  {Time} time  When to set the tick value\n * @return {Tone.TickSource}       this\n */\nTone.TickSource.prototype.setTicksAtTime = function(ticks, time){\n\ttime = this.toSeconds(time);\n\tthis._tickOffset.cancel(time);\n\tthis._tickOffset.add({\n\t\t\"time\" : time,\n\t\t\"ticks\" : ticks,\n\t\t\"seconds\" : this.frequency.getDurationOfTicks(ticks, time)\n\t});\n\treturn this;\n};\n\n/**\n *  Returns the scheduled state at the given time.\n *  @param  {Time}  time  The time to query.\n *  @return  {String}  The name of the state input in setStateAtTime.\n *  @example\n * source.start(\"+0.1\");\n * source.getStateAtTime(\"+0.1\"); //returns \"started\"\n */\nTone.TickSource.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\treturn this._state.getValueAtTime(time);\n};\n\n/**\n * Get the time of the given tick. The second argument\n * is when to test before. Since ticks can be set (with setTicksAtTime)\n * there may be multiple times for a given tick value. \n * @param  {Ticks} ticks The tick number.\n * @param  {Time=} before When to measure the tick value from. \n * @return {Time}       The time of the tick\n */\nTone.TickSource.prototype.getTimeOfTick = function(tick, before){\n\tbefore = Tone.defaultArg(before, this.now());\n\tvar offset = this._tickOffset.get(before);\n\tvar event = this._state.get(before);\n\tvar startTime = Math.max(offset.time, event.time);\n\tvar absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n\treturn this.frequency.getTimeOfTick(absoluteTicks);\n};\n\n/**\n * @callback forEachTickBetween\n * @param {Time} when\n * @param {Ticks} when\n */\n\n/**\n *  Invoke the callback event at all scheduled ticks between the \n *  start time and the end time\n *  @param  {Time}    startTime  The beginning of the search range\n *  @param  {Time}    endTime    The end of the search range\n *  @param  {ForEachCallback}  callback   The callback to invoke with each tick\n *  @return  {Tone.TickSource}    this\n */\nTone.TickSource.prototype.forEachTickBetween = function(startTime, endTime, callback){\n\n\t//only iterate through the sections where it is \"started\"\n\tvar lastStateEvent = this._state.get(startTime);\n\tthis._state.forEachBetween(startTime, endTime, function(event){\n\t\tif (lastStateEvent.state === Tone.State.Started && event.state !== Tone.State.Started){\n\t\t\tthis.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n\t\t}\n\t\tlastStateEvent = event;\n\t}.bind(this));\n\n\tstartTime = Math.max(lastStateEvent.time, startTime);\n\n\tif (lastStateEvent.state === Tone.State.Started && this._state){\n\t\t//figure out the difference between the frequency ticks and the \n\t\tvar startTicks = this.frequency.getTicksAtTime(startTime);\n\t\tvar ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n\t\tvar diff = startTicks - ticksAtStart;\n\t\tvar offset = diff % 1;\n\t\tif (offset !== 0){\n\t\t\toffset = 1 - offset;\n\t\t}\n\t\tvar nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n\t\tvar error = null;\n\t\twhile (nextTickTime < endTime && this._state){\n\t\t\ttry {\n\t\t\t\tcallback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n\t\t\t} catch (e){\n\t\t\t\terror = e;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (this._state){\n\t\t\t\tnextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n\t\t\t} \n\t\t}\n\t}\n\n\tif (error){\n\t\tthrow error;\n\t}\n\t\n\treturn this;\n};\n\n/**\n *  Clean up\n *  @returns {Tone.TickSource} this\n */\nTone.TickSource.prototype.dispose = function(){\n\tTone.Param.prototype.dispose.call(this);\n\tthis._state.dispose();\n\tthis._state = null;\n\tthis._tickOffset.dispose();\n\tthis._tickOffset = null;\n\tthis._writable(\"frequency\");\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\treturn this;\n};\n\nexport default Tone.TickSource;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Abs\";\nimport \"../signal/Subtract\";\nimport \"../signal/Signal\";\nimport \"../type/Type\";\nimport \"../core/Delay\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Follower is a  crude envelope follower which will follow\n *          the amplitude of an incoming signal. Read more about envelope followers (also known\n *          as envelope detectors) on [Wikipedia](https://en.wikipedia.org/wiki/Envelope_detector).\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Time} [smoothing=0.05] The rate of change of the follower.\n *  @example\n * var follower = new Tone.Follower(0.3);\n */\nTone.Follower = function(){\n\n\tvar options = Tone.defaults(arguments, [\"smoothing\"], Tone.Follower);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  @type {Tone.Abs}\n\t *  @private\n\t */\n\tthis._abs = new Tone.Abs();\n\n\t/**\n\t *  the lowpass filter which smooths the input\n\t *  @type {BiquadFilterNode}\n\t *  @private\n\t */\n\tthis._filter = this.context.createBiquadFilter();\n\tthis._filter.type = \"lowpass\";\n\tthis._filter.frequency.value = 0;\n\tthis._filter.Q.value = 0;\n\n\t/**\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._sub = new Tone.Subtract();\n\n\t/**\n\t *  delay node to compare change over time\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delay = new Tone.Delay(this.blockTime);\n\n\t/**\n\t *  the smoothing value\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._smoothing = options.smoothing;\n\n\tTone.connect(this.input, this._delay);\n\tTone.connect(this.input, this._sub, 0, 1);\n\tthis._sub.chain(this._abs, this._filter, this.output);\n\n\t//set the smoothing initially\n\tthis.smoothing = options.smoothing;\n};\n\nTone.extend(Tone.Follower, Tone.AudioNode);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Follower.defaults = {\n\t\"smoothing\" : 0.05,\n};\n\n/**\n * The attack time.\n * @memberOf Tone.Follower#\n * @type {Time}\n * @name smoothing\n */\nObject.defineProperty(Tone.Follower.prototype, \"smoothing\", {\n\tget : function(){\n\t\treturn this._smoothing;\n\t},\n\tset : function(smoothing){\n\t\tthis._smoothing = smoothing;\n\t\tthis._filter.frequency.value = Tone.Time(smoothing).toFrequency() * 0.5;\n\t}\n});\n\n/**\n *  Borrows the connect method from Signal so that the output can be used\n *  as a Tone.Signal control signal.\n *  @function\n */\nTone.Follower.prototype.connect = Tone.SignalBase.prototype.connect;\n\n/**\n *  dispose\n *  @returns {Tone.Follower} this\n */\nTone.Follower.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._filter.disconnect();\n\tthis._filter = null;\n\tthis._delay.dispose();\n\tthis._delay = null;\n\tthis._sub.disconnect();\n\tthis._sub = null;\n\tthis._abs.dispose();\n\tthis._abs = null;\n\treturn this;\n};\n\nexport default Tone.Follower;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/ScaleExp\";\nimport \"../signal/Signal\";\nimport \"../core/Param\";\nimport \"../core/Delay\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Comb filters are basic building blocks for physical modeling. Read more\n *         about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Time|Object} [delayTime] The delay time of the filter.\n *  @param {NormalRange=} resonance The amount of feedback the filter has.\n */\nTone.FeedbackCombFilter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"resonance\"], Tone.FeedbackCombFilter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the delay node\n\t *  @type {DelayNode}\n\t *  @private\n\t */\n\tthis._delay = this.input = this.output = new Tone.Delay(options.delayTime);\n\n\t/**\n\t *  The amount of delay of the comb filter.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._delay.delayTime;\n\n\t/**\n\t *  the feedback node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\n\t/**\n\t *  The amount of feedback of the delayed signal.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.resonance = this._feedback.gain;\n\n\tthis._delay.chain(this._feedback, this._delay);\n\tthis._readOnly([\"resonance\", \"delayTime\"]);\n};\n\nTone.extend(Tone.FeedbackCombFilter, Tone.AudioNode);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.FeedbackCombFilter.defaults = {\n\t\"delayTime\" : 0.1,\n\t\"resonance\" : 0.5\n};\n\n/**\n *  clean up\n *  @returns {Tone.FeedbackCombFilter} this\n */\nTone.FeedbackCombFilter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"resonance\", \"delayTime\"]);\n\tthis._delay.dispose();\n\tthis._delay = null;\n\tthis.delayTime = null;\n\tthis._feedback.dispose();\n\tthis._feedback = null;\n\tthis.resonance = null;\n\treturn this;\n};\n\nexport default Tone.FeedbackCombFilter;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Filter\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Split the incoming signal into three bands (low, mid, high)\n *         with two crossover frequency controls.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Frequency|Object} [lowFrequency] the low/mid crossover frequency\n *  @param {Frequency} [highFrequency] the mid/high crossover frequency\n */\nTone.MultibandSplit = function(){\n\n\tvar options = Tone.defaults(arguments, [\"lowFrequency\", \"highFrequency\"], Tone.MultibandSplit);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the input\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.input = new Tone.Gain();\n\n\t/**\n\t *  the outputs\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis.output = new Array(3);\n\n\t/**\n\t *  The low band. Alias for <code>output[0]</code>\n\t *  @type {Tone.Filter}\n\t */\n\tthis.low = this.output[0] = new Tone.Filter(0, \"lowpass\");\n\n\t/**\n\t *  the lower filter of the mid band\n\t *  @type {Tone.Filter}\n\t *  @private\n\t */\n\tthis._lowMidFilter = new Tone.Filter(0, \"highpass\");\n\n\t/**\n\t *  The mid band output. Alias for <code>output[1]</code>\n\t *  @type {Tone.Filter}\n\t */\n\tthis.mid = this.output[1] = new Tone.Filter(0, \"lowpass\");\n\n\t/**\n\t *  The high band output. Alias for <code>output[2]</code>\n\t *  @type {Tone.Filter}\n\t */\n\tthis.high = this.output[2] = new Tone.Filter(0, \"highpass\");\n\n\t/**\n\t *  The low/mid crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.lowFrequency = new Tone.Signal(options.lowFrequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The mid/high crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.highFrequency = new Tone.Signal(options.highFrequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The quality of all the filters\n\t *  @type {Number}\n\t *  @signal\n\t */\n\tthis.Q = new Tone.Signal(options.Q);\n\n\tthis.input.fan(this.low, this.high);\n\tthis.input.chain(this._lowMidFilter, this.mid);\n\t//the frequency control signal\n\tthis.lowFrequency.connect(this.low.frequency);\n\tthis.lowFrequency.connect(this._lowMidFilter.frequency);\n\tthis.highFrequency.connect(this.mid.frequency);\n\tthis.highFrequency.connect(this.high.frequency);\n\t//the Q value\n\tthis.Q.connect(this.low.Q);\n\tthis.Q.connect(this._lowMidFilter.Q);\n\tthis.Q.connect(this.mid.Q);\n\tthis.Q.connect(this.high.Q);\n\n\tthis._readOnly([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n};\n\nTone.extend(Tone.MultibandSplit, Tone.AudioNode);\n\n/**\n *  @private\n *  @static\n *  @type {Object}\n */\nTone.MultibandSplit.defaults = {\n\t\"lowFrequency\" : 400,\n\t\"highFrequency\" : 2500,\n\t\"Q\" : 1,\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.MultibandSplit} this\n */\nTone.MultibandSplit.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n\tthis.low.dispose();\n\tthis.low = null;\n\tthis._lowMidFilter.dispose();\n\tthis._lowMidFilter = null;\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.high.dispose();\n\tthis.high = null;\n\tthis.lowFrequency.dispose();\n\tthis.lowFrequency = null;\n\tthis.highFrequency.dispose();\n\tthis.highFrequency = null;\n\tthis.Q.dispose();\n\tthis.Q = null;\n\treturn this;\n};\n\nexport default Tone.MultibandSplit;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Pow applies an exponent to the incoming signal. The incoming signal\n *         must be AudioRange.\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @param {Positive} exp The exponent to apply to the incoming signal, must be at least 2. \n *  @example\n * var pow = new Tone.Pow(2);\n * var sig = new Tone.Signal(0.5).connect(pow);\n * //output of pow is 0.25. \n */\nTone.Pow = function(exp){\n\n\tTone.SignalBase.call(this);\n\t\n\t/**\n\t * the exponent\n\t * @private\n\t * @type {number}\n\t */\n\tthis._exp = Tone.defaultArg(exp, 1);\n\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);\n};\n\nTone.extend(Tone.Pow, Tone.SignalBase);\n\n/**\n * The value of the exponent.\n * @memberOf Tone.Pow#\n * @type {number}\n * @name value\n */\nObject.defineProperty(Tone.Pow.prototype, \"value\", {\n\tget : function(){\n\t\treturn this._exp;\n\t},\n\tset : function(exp){\n\t\tthis._exp = exp;\n\t\tthis._expScaler.setMap(this._expFunc(this._exp));\n\t}\n});\n\n/**\n *  the function which maps the waveshaper\n *  @param   {number} exp\n *  @return {function}\n *  @private\n */\nTone.Pow.prototype._expFunc = function(exp){\n\treturn function(val){\n\t\treturn Math.pow(Math.abs(val), exp);\n\t};\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Pow} this\n */\nTone.Pow.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._expScaler.dispose();\n\tthis._expScaler = null;\n\treturn this;\n};\n\nexport default Tone.Pow;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Tone.TimeBase is a flexible encoding of time\n *         which can be evaluated to and from a string.\n *  @extends {Tone}\n *  @param  {Time}  val    The time value as a number, string or object\n *  @param  {String=}  units  Unit values\n *  @example\n * Tone.TimeBase(4, \"n\")\n * Tone.TimeBase(2, \"t\")\n * Tone.TimeBase(\"2t\")\n * Tone.TimeBase({\"2t\" : 2})\n * Tone.TimeBase(\"2t\") + Tone.TimeBase(\"4n\");\n */\nTone.TimeBase = function(val, units){\n\n\t//allows it to be constructed with or without 'new'\n\tif (this instanceof Tone.TimeBase){\n\n\t\t/**\n\t\t *  The value\n\t\t *  @type  {Number|String|Tone.TimeBase}\n\t\t *  @private\n\t\t */\n\t\tthis._val = val;\n\n\t\t/**\n\t\t * The units\n\t\t * @type {String?}\n\t\t * @private\n\t\t */\n\t\tthis._units = units;\n\n\t\t//test if the value is a string representation of a number\n\t\tif (Tone.isUndef(this._units) && Tone.isString(this._val) &&\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tparseFloat(this._val) == this._val && this._val.charAt(0) !== \"+\"){\n\t\t\tthis._val = parseFloat(this._val);\n\t\t\tthis._units = this._defaultUnits;\n\t\t} else if (val && val.constructor === this.constructor){\n\t\t\t//if they're the same type, just copy values over\n\t\t\tthis._val = val._val;\n\t\t\tthis._units = val._units;\n\t\t} else if (val instanceof Tone.TimeBase){\n\t\t\tswitch (this._defaultUnits){\n\t\t\t\tcase \"s\" :\n\t\t\t\t\tthis._val = val.toSeconds();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"i\" :\n\t\t\t\t\tthis._val = val.toTicks();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"hz\" :\n\t\t\t\t\tthis._val = val.toFrequency();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"midi\" :\n\t\t\t\t\tthis._val = val.toMidi();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault :\n\t\t\t\t\tthrow new Error(\"Unrecognized default units \"+this._defaultUnits);\n\t\t\t}\n\t\t}\n\n\t} else {\n\n\t\treturn new Tone.TimeBase(val, units);\n\t}\n};\n\nTone.extend(Tone.TimeBase);\n\n///////////////////////////////////////////////////////////////////////////\n//\tABSTRACT SYNTAX TREE PARSER\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  All the primary expressions.\n *  @private\n *  @type  {Object}\n */\nTone.TimeBase.prototype._expressions = {\n\t\"n\" : {\n\t\tregexp : /^(\\d+)n(\\.?)$/i,\n\t\tmethod : function(value, dot){\n\t\t\tvalue = parseInt(value);\n\t\t\tvar scalar = dot === \".\" ? 1.5 : 1;\n\t\t\tif (value === 1){\n\t\t\t\treturn this._beatsToUnits(this._getTimeSignature())*scalar;\n\t\t\t} else {\n\t\t\t\treturn this._beatsToUnits(4 / value)*scalar;\n\t\t\t}\n\t\t}\n\t},\n\t\"t\" : {\n\t\tregexp : /^(\\d+)t$/i,\n\t\tmethod : function(value){\n\t\t\tvalue = parseInt(value);\n\t\t\treturn this._beatsToUnits(8 / (parseInt(value) * 3));\n\t\t}\n\t},\n\t\"m\" : {\n\t\tregexp : /^(\\d+)m$/i,\n\t\tmethod : function(value){\n\t\t\treturn this._beatsToUnits(parseInt(value) * this._getTimeSignature());\n\t\t}\n\t},\n\t\"i\" : {\n\t\tregexp : /^(\\d+)i$/i,\n\t\tmethod : function(value){\n\t\t\treturn this._ticksToUnits(parseInt(value));\n\t\t}\n\t},\n\t\"hz\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?)hz$/i,\n\t\tmethod : function(value){\n\t\t\treturn this._frequencyToUnits(parseFloat(value));\n\t\t}\n\t},\n\t\"tr\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n\t\tmethod : function(m, q, s){\n\t\t\tvar total = 0;\n\t\t\tif (m && m !== \"0\"){\n\t\t\t\ttotal += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t}\n\t\t\tif (q && q !== \"0\"){\n\t\t\t\ttotal += this._beatsToUnits(parseFloat(q));\n\t\t\t}\n\t\t\tif (s && s !== \"0\"){\n\t\t\t\ttotal += this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t}\n\t\t\treturn total;\n\t\t}\n\t},\n\t\"s\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?)s$/,\n\t\tmethod : function(value){\n\t\t\treturn this._secondsToUnits(parseFloat(value));\n\t\t}\n\t},\n\t\"samples\" : {\n\t\tregexp : /^(\\d+)samples$/,\n\t\tmethod : function(value){\n\t\t\treturn parseInt(value) / this.context.sampleRate;\n\t\t}\n\t},\n\t\"default\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?)$/,\n\t\tmethod : function(value){\n\t\t\treturn this._expressions[this._defaultUnits].method.call(this, value);\n\t\t}\n\t}\n};\n\n/**\n *  The default units if none are given.\n *  @type {String}\n *  @private\n */\nTone.TimeBase.prototype._defaultUnits = \"s\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tTRANSPORT FALLBACKS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * Return the bpm, or 120 if Transport is not available\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._getBpm = function(){\n\tif (Tone.Transport){\n\t\treturn Tone.Transport.bpm.value;\n\t} else {\n\t\treturn 120;\n\t}\n};\n\n/**\n * Return the timeSignature or 4 if Transport is not available\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._getTimeSignature = function(){\n\tif (Tone.Transport){\n\t\treturn Tone.Transport.timeSignature;\n\t} else {\n\t\treturn 4;\n\t}\n};\n\n/**\n * Return the PPQ or 192 if Transport is not available\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._getPPQ = function(){\n\tif (Tone.Transport){\n\t\treturn Tone.Transport.PPQ;\n\t} else {\n\t\treturn 192;\n\t}\n};\n\n/**\n * Return the current time in whichever context is relevant\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._now = function(){\n\treturn this.now();\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tUNIT CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Returns the value of a frequency in the current units\n *  @param {Frequency} freq\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._frequencyToUnits = function(freq){\n\treturn 1/freq;\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._beatsToUnits = function(beats){\n\treturn (60 / this._getBpm()) * beats;\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._secondsToUnits = function(seconds){\n\treturn seconds;\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._ticksToUnits = function(ticks){\n\treturn ticks * (this._beatsToUnits(1) / this._getPPQ());\n};\n\n/**\n * With no arguments, return 'now'\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._noArg = function(){\n\treturn this._now();\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tEXPRESSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Evaluate the time value. Returns the time\n *  in seconds.\n *  @return  {Seconds}\n */\nTone.TimeBase.prototype.valueOf = function(){\n\tif (Tone.isUndef(this._val)){\n\t\treturn this._noArg();\n\t} else if (Tone.isString(this._val) && Tone.isUndef(this._units)){\n\t\tfor (var units in this._expressions){\n\t\t\tif (this._expressions[units].regexp.test(this._val.trim())){\n\t\t\t\tthis._units = units;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else if (Tone.isObject(this._val)){\n\t\tvar total = 0;\n\t\tfor (var typeName in this._val){\n\t\t\tvar quantity = this._val[typeName];\n\t\t\tvar time = (new this.constructor(typeName)).valueOf() * quantity;\n\t\t\ttotal += time;\n\t\t}\n\t\treturn total;\n\t}\n\tif (Tone.isDefined(this._units)){\n\t\tvar expr = this._expressions[this._units];\n\t\tvar matching = this._val.toString().trim().match(expr.regexp);\n\t\tif (matching){\n\t\t\treturn expr.method.apply(this, matching.slice(1));\n\t\t} else {\n\t\t\treturn expr.method.call(this, parseFloat(this._val));\n\t\t}\n\t} else {\n\t\treturn this._val;\n\t}\n};\n\n/**\n *  Return the value in seconds\n *  @return {Seconds}\n */\nTone.TimeBase.prototype.toSeconds = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the value in hertz\n *  @return {Frequency}\n */\nTone.TimeBase.prototype.toFrequency = function(){\n\treturn 1 / this.toSeconds();\n};\n\n/**\n *  Return the time in samples\n *  @return  {Samples}\n */\nTone.TimeBase.prototype.toSamples = function(){\n\treturn this.toSeconds() * this.context.sampleRate;\n};\n\n/**\n *  Return the time in milliseconds.\n *  @return  {Milliseconds}\n */\nTone.TimeBase.prototype.toMilliseconds = function(){\n\treturn this.toSeconds() * 1000;\n};\n\n/**\n *  Clean up\n *  @return {Tone.TimeBase} this\n */\nTone.TimeBase.prototype.dispose = function(){\n\tthis._val = null;\n\tthis._units = null;\n};\n\nexport default Tone.TimeBase;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/TimeBase\";\nimport \"../type/Frequency\";\n\n/**\n *  @class Tone.Time is a primitive type for encoding Time values.\n *         Tone.Time can be constructed with or without the `new` keyword. Tone.Time can be passed\n *         into the parameter of any method which takes time as an argument.\n *  @constructor\n *  @extends {Tone.TimeBase}\n *  @param  {String|Number|Object}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * var t = Tone.Time(\"4n\");//a quarter note\n */\nTone.Time = function(val, units){\n\tif (this instanceof Tone.Time){\n\n\t\tTone.TimeBase.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Time(val, units);\n\t}\n};\n\nTone.extend(Tone.Time, Tone.TimeBase);\n\n/**\n * Extend the base expressions\n */\nTone.Time.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {\n\t\"quantize\" : {\n\t\tregexp : /^@(.+)/,\n\t\tmethod : function(capture){\n\t\t\tif (Tone.Transport){\n\t\t\t\tvar quantTo = new this.constructor(capture);\n\t\t\t\treturn this._secondsToUnits(Tone.Transport.nextSubdivision(quantTo));\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t},\n\t\"now\" : {\n\t\tregexp : /^\\+(.+)/,\n\t\tmethod : function(capture){\n\t\t\treturn this._now() + (new this.constructor(capture));\n\t\t}\n\t}\n});\n\n/**\n *  Quantize the time by the given subdivision. Optionally add a\n *  percentage which will move the time value towards the ideal\n *  quantized value by that percentage.\n *  @param  {Number|Time}  val    The subdivision to quantize to\n *  @param  {NormalRange}  [percent=1]  Move the time value\n *                                   towards the quantized value by\n *                                   a percentage.\n *  @return  {Number}  this\n *  @example\n * Tone.Time(21).quantize(2) //returns 22\n * Tone.Time(0.6).quantize(\"4n\", 0.5) //returns 0.55\n */\nTone.Time.prototype.quantize = function(subdiv, percent){\n\tpercent = Tone.defaultArg(percent, 1);\n\tvar subdivision = new this.constructor(subdiv);\n\tvar value = this.valueOf();\n\tvar multiple = Math.round(value / subdivision);\n\tvar ideal = multiple * subdivision;\n\tvar diff = ideal - value;\n\treturn value + diff * percent;\n};\n\n///////////////////////////////////////////////////////////////////////////\n// CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Convert a Time to Notation. The notation values are will be the\n *  closest representation between 1m to 128th note.\n *  @return {Notation}\n *  @example\n * //if the Transport is at 120bpm:\n * Tone.Time(2).toNotation();//returns \"1m\"\n */\nTone.Time.prototype.toNotation = function(){\n\tvar time = this.toSeconds();\n\tvar testNotations = [\"1m\"];\n\tfor (var power = 1; power < 8; power++){\n\t\tvar subdiv = Math.pow(2, power);\n\t\ttestNotations.push(subdiv + \"n.\");\n\t\ttestNotations.push(subdiv + \"n\");\n\t\ttestNotations.push(subdiv + \"t\");\n\t}\n\ttestNotations.push(\"0\");\n\t//find the closets notation representation\n\tvar closest = testNotations[0];\n\tvar closestSeconds = Tone.Time(testNotations[0]).toSeconds();\n\ttestNotations.forEach(function(notation){\n\t\tvar notationSeconds = Tone.Time(notation).toSeconds();\n\t\tif (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)){\n\t\t\tclosest = notation;\n\t\t\tclosestSeconds = notationSeconds;\n\t\t}\n\t});\n\treturn closest;\n};\n\n/**\n *  Return the time encoded as Bars:Beats:Sixteenths.\n *  @return  {BarsBeatsSixteenths}\n */\nTone.Time.prototype.toBarsBeatsSixteenths = function(){\n\tvar quarterTime = this._beatsToUnits(1);\n\tvar quarters = this.valueOf() / quarterTime;\n\tquarters = parseFloat(quarters.toFixed(4));\n\tvar measures = Math.floor(quarters / this._getTimeSignature());\n\tvar sixteenths = (quarters % 1) * 4;\n\tquarters = Math.floor(quarters) % this._getTimeSignature();\n\tsixteenths = sixteenths.toString();\n\tif (sixteenths.length > 3){\n\t\t// the additional parseFloat removes insignificant trailing zeroes\n\t\tsixteenths = parseFloat(parseFloat(sixteenths).toFixed(3));\n\t}\n\tvar progress = [measures, quarters, sixteenths];\n\treturn progress.join(\":\");\n};\n\n/**\n *  Return the time in ticks.\n *  @return  {Ticks}\n */\nTone.Time.prototype.toTicks = function(){\n\tvar quarterTime = this._beatsToUnits(1);\n\tvar quarters = this.valueOf() / quarterTime;\n\treturn Math.round(quarters * this._getPPQ());\n};\n\n/**\n *  Return the time in seconds.\n *  @return  {Seconds}\n */\nTone.Time.prototype.toSeconds = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the value as a midi note.\n *  @return  {Midi}\n */\nTone.Time.prototype.toMidi = function(){\n\treturn Tone.Frequency.ftom(this.toFrequency());\n};\n\nexport default Tone.Time;\n\n","import Tone from \"../core/Tone\";\n\nif (Tone.supported){\n\tif (!OscillatorNode.prototype.setPeriodicWave){\n\t\tOscillatorNode.prototype.setPeriodicWave = OscillatorNode.prototype.setWaveTable;\n\t}\n\tif (!AudioContext.prototype.createPeriodicWave){\n\t\tAudioContext.prototype.createPeriodicWave = AudioContext.prototype.createWaveTable;\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../source/Source\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\nimport \"../shim/OscillatorNode\";\n\n/**\n *  @class Wrapper around the native fire-and-forget OscillatorNode. Adds the\n *     ability to reschedule the stop method. ***[Tone.Oscillator](Oscillator) is better \n *     for most use-cases***\n *  @extends {Tone.AudioNode}\n *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n *  @param  {Function}  onload  The callback to invoke when the\n *                               buffer is done playing.\n */\nTone.OscillatorNode = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.OscillatorNode);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The callback to invoke after the\n\t *  buffer source is done playing.\n\t *  @type  {Function}\n\t */\n\tthis.onended = options.onended;\n\n\t/**\n\t *  The oscillator start time\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._startTime = -1;\n\n\t/**\n\t *  The oscillator stop time\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._stopTime = -1;\n\n\t/**\n\t *  The gain node which envelopes the OscillatorNode\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._gainNode = this.output = new Tone.Gain(0);\n\n\t/**\n\t *  The oscillator\n\t *  @type  {OscillatorNode}\n\t *  @private\n\t */\n\tthis._oscillator = this.context.createOscillator();\n\tTone.connect(this._oscillator, this._gainNode);\n\tthis.type = options.type;\n\n\t/**\n\t *  The frequency of the oscillator\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Param({\n\t\tparam : this._oscillator.frequency, \n\t\tunits : Tone.Type.Frequency,\n\t\tvalue : options.frequency\n\t});\n\n\t/**\n\t *  The detune of the oscillator\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Param({\n\t\tparam : this._oscillator.detune,\n\t\tunits : Tone.Type.Cents,\n\t\tvalue : options.detune\n\t});\n\n\t/**\n\t *  The value that the buffer ramps to\n\t *  @type {Gain}\n\t *  @private\n\t */\n\tthis._gain = 1;\n};\n\nTone.extend(Tone.OscillatorNode, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.OscillatorNode.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"type\" : \"sine\",\n\t\"onended\" : Tone.noOp\n};\n\n/**\n *  Returns the playback state of the oscillator, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.OscillatorNode#\n *  @name state\n */\nObject.defineProperty(Tone.OscillatorNode.prototype, \"state\", {\n\tget : function(){\n\t\treturn this.getStateAtTime(this.now());\n\t}\n});\n\n/**\n *  Get the playback state at the given time\n *  @param  {Time}  time  The time to test the state at\n *  @return  {Tone.State}  The playback state. \n */\nTone.OscillatorNode.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._startTime !== -1 && time >= this._startTime && (this._stopTime === -1 || time <= this._stopTime)){\n\t\treturn Tone.State.Started;\n\t} else {\n\t\treturn Tone.State.Stopped;\n\t}\n};\n\n/**\n     * Start the oscillator node at the given time\n     * @param  {Time=} time When to start the oscillator\n     * @return {OscillatorNode}      this\n     */\nTone.OscillatorNode.prototype.start = function(time){\n\tthis.log(\"start\", time);\n\tif (this._startTime === -1){\n\t\tthis._startTime = this.toSeconds(time);\n\t\tthis._startTime = Math.max(this._startTime, this.context.currentTime);\n\t\tthis._oscillator.start(this._startTime);\n\t\tthis._gainNode.gain.setValueAtTime(1, this._startTime);\n\t} else {\n\t\tthrow new Error(\"cannot call OscillatorNode.start more than once\");\n\t}\n\treturn this;\n};\n\n/**\n     * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n     * @param  {PeriodicWave} periodicWave PeriodicWave should be created with context.createPeriodicWave\n     * @return {OscillatorNode} this\n     */\nTone.OscillatorNode.prototype.setPeriodicWave = function(periodicWave){\n\tthis._oscillator.setPeriodicWave(periodicWave);\n\treturn this;\n};\n\n/**\n     * Stop the oscillator node at the given time\n     * @param  {Time=} time When to stop the oscillator\n     * @return {OscillatorNode}      this\n     */\nTone.OscillatorNode.prototype.stop = function(time){\n\tthis.log(\"stop\", time);\n\tthis.assert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n\t//cancel the previous stop\n\tthis.cancelStop();\n\t//reschedule it\n\tthis._stopTime = this.toSeconds(time);\n\tthis._stopTime = Math.max(this._stopTime, this.context.currentTime);\n\tif (this._stopTime > this._startTime){\n\t\tthis._gainNode.gain.setValueAtTime(0, this._stopTime);\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._timeout = this.context.setTimeout(function(){\n\t\t\tthis._oscillator.stop(this.now());\n\t\t\tthis.onended();\n\t\t\t//disconnect the object when it's ended\n\t\t\tsetTimeout(function(){\n\t\t\t\tif (this._oscillator){\n\t\t\t\t\tthis._oscillator.disconnect();\n\t\t\t\t\tthis._gainNode.disconnect();\n\t\t\t\t}\n\t\t\t}.bind(this), 100);\n\t\t}.bind(this), this._stopTime - this.context.currentTime);\n\t} else {\n\t\t//cancel the stop envelope\n\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel a scheduled stop event\n *  @return  {Tone.OscillatorNode}  this\n */\nTone.OscillatorNode.prototype.cancelStop = function(){\n\tif (this._startTime !== -1){\n\t\t//cancel the stop envelope\n\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime);\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._stopTime = -1;\n\t}\n\treturn this;\n};\n\n/**\n * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n * @memberOf Tone.OscillatorNode#\n * @type {Time}\n * @name type\n */\nObject.defineProperty(Tone.OscillatorNode.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._oscillator.type;\n\t},\n\tset : function(type){\n\t\tthis._oscillator.type = type;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.OscillatorNode}  this\n */\nTone.OscillatorNode.prototype.dispose = function(){\n\tif (!this._wasDisposed){\n\t\tthis._wasDisposed = true;\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis.onended = null;\n\t\tthis._oscillator.disconnect();\n\t\tthis._oscillator = null;\n\t\tthis._gainNode.dispose();\n\t\tthis._gainNode = null;\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\tthis.detune.dispose();\n\t\tthis.detune = null;\n\t}\n\treturn this;\n};\n\nexport default Tone.OscillatorNode;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../source/Source\";\nimport \"../source/TickSource\";\nimport \"../source/BufferSource\";\n\n/**\n *  @class  Tone.Player is an audio file player with start, loop, and stop functions.\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {string|AudioBuffer} url Either the AudioBuffer or the url from\n *                                  which to load the AudioBuffer\n *  @param {Function=} onload The function to invoke when the buffer is loaded.\n *                            Recommended to use Tone.Buffer.on('load') instead.\n *  @example\n * var player = new Tone.Player(\"./path/to/sample.mp3\").toMaster();\n * //play as soon as the buffer is loaded\n * player.autostart = true;\n */\nTone.Player = function(url){\n\n\tvar options;\n\tif (url instanceof Tone.Buffer && url.loaded){\n\t\turl = url.get();\n\t\toptions = Tone.Player.defaults;\n\t} else {\n\t\toptions = Tone.defaults(arguments, [\"url\", \"onload\"], Tone.Player);\n\t}\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  If the file should play as soon\n\t *  as the buffer is loaded.\n\t *  @type {Boolean}\n\t *  @example\n\t * //will play as soon as it's loaded\n\t * var player = new Tone.Player({\n\t * \t\"url\" : \"./path/to/sample.mp3\",\n\t * \t\"autostart\" : true,\n\t * }).toMaster();\n\t */\n\tthis.autostart = options.autostart;\n\n\t/**\n\t *  the buffer\n\t *  @private\n\t *  @type {Tone.Buffer}\n\t */\n\tthis._buffer = new Tone.Buffer({\n\t\t\"url\" : options.url,\n\t\t\"onload\" : this._onload.bind(this, options.onload),\n\t\t\"reverse\" : options.reverse\n\t});\n\tif (url instanceof AudioBuffer){\n\t\tthis._buffer.set(url);\n\t}\n\n\t/**\n\t *  if the buffer should loop once it's over\n\t *  @type {Boolean}\n\t *  @private\n\t */\n\tthis._loop = options.loop;\n\n\t/**\n\t *  if 'loop' is true, the loop will start at this position\n\t *  @type {Time}\n\t *  @private\n\t */\n\tthis._loopStart = options.loopStart;\n\n\t/**\n\t *  if 'loop' is true, the loop will end at this position\n\t *  @type {Time}\n\t *  @private\n\t */\n\tthis._loopEnd = options.loopEnd;\n\n\t/**\n\t *  the playback rate\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._playbackRate = options.playbackRate;\n\n\t/**\n\t *  All of the active buffer source nodes\n\t *  @type {Array<Tone.BufferSource>}\n\t *  @private\n\t */\n\tthis._activeSources = [];\n\n\t/**\n\t *  The fadeIn time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeIn = options.fadeIn;\n\n\t/**\n\t *  The fadeOut time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeOut = options.fadeOut;\n};\n\nTone.extend(Tone.Player, Tone.Source);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Player.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"playbackRate\" : 1,\n\t\"loop\" : false,\n\t\"autostart\" : false,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : 0,\n\t\"reverse\" : false,\n\t\"fadeIn\" : 0,\n\t\"fadeOut\" : 0\n};\n\n/**\n *  Load the audio file as an audio buffer.\n *  Decodes the audio asynchronously and invokes\n *  the callback once the audio buffer loads.\n *  Note: this does not need to be called if a url\n *  was passed in to the constructor. Only use this\n *  if you want to manually load a new url.\n * @param {string} url The url of the buffer to load.\n *                     Filetype support depends on the\n *                     browser.\n *  @param  {Function=} callback The function to invoke once\n *                               the sample is loaded.\n *  @returns {Promise}\n */\nTone.Player.prototype.load = function(url, callback){\n\treturn this._buffer.load(url, this._onload.bind(this, callback));\n};\n\n/**\n * Internal callback when the buffer is loaded.\n * @private\n */\nTone.Player.prototype._onload = function(callback){\n\tcallback = Tone.defaultArg(callback, Tone.noOp);\n\tcallback(this);\n\tif (this.autostart){\n\t\tthis.start();\n\t}\n};\n\n/**\n * Internal callback when the buffer is done playing.\n * @private\n */\nTone.Player.prototype._onSourceEnd = function(source){\n\tvar index = this._activeSources.indexOf(source);\n\tthis._activeSources.splice(index, 1);\n\tif (this._activeSources.length === 0 && !this._synced){\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, Tone.now());\n\t}\n};\n\n/**\n *  Play the buffer at the given startTime. Optionally add an offset\n *  and/or duration which will play the buffer from a position\n *  within the buffer for the given duration.\n *\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @returns {Tone.Player} this\n *  @memberOf Tone.Player#\n *  @method start\n *  @name start\n */\n\n/**\n *  Internal start method\n *  @private\n */\nTone.Player.prototype._start = function(startTime, offset, duration){\n\t//if it's a loop the default offset is the loopstart point\n\tif (this._loop){\n\t\toffset = Tone.defaultArg(offset, this._loopStart);\n\t} else {\n\t\t//otherwise the default offset is 0\n\t\toffset = Tone.defaultArg(offset, 0);\n\t}\n\n\t//compute the values in seconds\n\toffset = this.toSeconds(offset);\n\t\n\t//if it's synced, it should factor in the playback rate for computing the offset\n\tif (this._synced){\n\t\toffset *= this._playbackRate;\n\t}\n\n\t//compute the duration which is either the passed in duration of the buffer.duration - offset\n\tvar computedDuration = Tone.defaultArg(duration, Math.max(this._buffer.duration - offset, 0));\n\tcomputedDuration = this.toSeconds(computedDuration);\n\n\t//scale it by the playback rate\n\tcomputedDuration = computedDuration / this._playbackRate;\n\n\t//get the start time\n\tstartTime = this.toSeconds(startTime);\n\n\t//make the source\n\tvar source = new Tone.BufferSource({\n\t\t\"buffer\" : this._buffer,\n\t\t\"loop\" : this._loop,\n\t\t\"loopStart\" : this._loopStart,\n\t\t\"loopEnd\" : this._loopEnd,\n\t\t\"onended\" : this._onSourceEnd.bind(this),\n\t\t\"playbackRate\" : this._playbackRate,\n\t\t\"fadeIn\" : this.fadeIn,\n\t\t\"fadeOut\" : this.fadeOut,\n\t}).connect(this.output);\n\n\t//set the looping properties\n\tif (!this._loop && !this._synced){\n\t\t//if it's not looping, set the state change at the end of the sample\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, startTime + computedDuration);\n\t}\n\n\t//add it to the array of active sources\n\tthis._activeSources.push(source);\n\n\t//start it\n\tif (this._loop && Tone.isUndef(duration)){\n\t\tsource.start(startTime, offset);\n\t} else {\n\t\t//subtract the fade out time\n\t\tsource.start(startTime, offset, computedDuration - this.toSeconds(this.fadeOut));\n\t}\n\treturn this;\n};\n\n/**\n *  Stop playback.\n *  @private\n *  @param  {Time} [time=now]\n *  @returns {Tone.Player} this\n */\nTone.Player.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._activeSources.forEach(function(source){\n\t\tsource.stop(time);\n\t});\n\treturn this;\n};\n\n/**\n * Stop and then restart the player from the beginning (or offset)\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @returns {Tone.Player} this\n */\nTone.Player.prototype.restart = function(time, offset, duration){\n\tthis._stop(time);\n\tthis._start(time, offset, duration);\n\treturn this;\n};\n\n/**\n *  Seek to a specific time in the player's buffer. If the\n *  source is no longer playing at that time, it will stop.\n *  If you seek to a time that\n *  @param {Time} offset The time to seek to.\n *  @param {Time=} time The time for the seek event to occur.\n *  @return {Tone.Player} this\n *  @example\n * source.start(0.2);\n * source.stop(0.4);\n */\nTone.Player.prototype.seek = function(offset, time){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\toffset = this.toSeconds(offset);\n\t\t// if it's currently playing, stop it\n\t\tthis._stop(time);\n\t\t//restart it at the given time\n\t\tthis._start(time, offset);\n\t}\n\treturn this;\n};\n\n/**\n *  Set the loop start and end. Will only loop if loop is\n *  set to true.\n *  @param {Time} loopStart The loop end time\n *  @param {Time} loopEnd The loop end time\n *  @returns {Tone.Player} this\n *  @example\n * //loop 0.1 seconds of the file.\n * player.setLoopPoints(0.2, 0.3);\n * player.loop = true;\n */\nTone.Player.prototype.setLoopPoints = function(loopStart, loopEnd){\n\tthis.loopStart = loopStart;\n\tthis.loopEnd = loopEnd;\n\treturn this;\n};\n\n/**\n * If loop is true, the loop will start at this position.\n * @memberOf Tone.Player#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.Player.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn this._loopStart;\n\t},\n\tset : function(loopStart){\n\t\tthis._loopStart = loopStart;\n\t\t//get the current source\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.loopStart = loopStart;\n\t\t});\n\t}\n});\n\n/**\n * If loop is true, the loop will end at this position.\n * @memberOf Tone.Player#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.Player.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn this._loopEnd;\n\t},\n\tset : function(loopEnd){\n\t\tthis._loopEnd = loopEnd;\n\t\t//get the current source\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.loopEnd = loopEnd;\n\t\t});\n\t}\n});\n\n/**\n * The audio buffer belonging to the player.\n * @memberOf Tone.Player#\n * @type {Tone.Buffer}\n * @name buffer\n */\nObject.defineProperty(Tone.Player.prototype, \"buffer\", {\n\tget : function(){\n\t\treturn this._buffer;\n\t},\n\tset : function(buffer){\n\t\tthis._buffer.set(buffer);\n\t}\n});\n\n/**\n * If the buffer should loop once it's over.\n * @memberOf Tone.Player#\n * @type {Boolean}\n * @name loop\n */\nObject.defineProperty(Tone.Player.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._loop;\n\t},\n\tset : function(loop){\n\t\t//if no change, do nothing\n\t\tif (this._loop === loop){\n\t\t\treturn;\n\t\t}\n\t\tthis._loop = loop;\n\t\t//set the loop of all of the sources\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.loop = loop;\n\t\t});\n\t\tif (loop){\n\t\t\t//remove the next stopEvent\n\t\t\tvar stopEvent = this._state.getNextState(Tone.State.Stopped, this.now());\n\t\t\tif (stopEvent){\n\t\t\t\tthis._state.cancel(stopEvent.time);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n * The playback speed. 1 is normal speed. This is not a signal because\n * Safari and iOS currently don't support playbackRate as a signal.\n * @memberOf Tone.Player#\n * @type {Number}\n * @name playbackRate\n */\nObject.defineProperty(Tone.Player.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tvar now = this.now();\n\n\t\t//cancel the stop event since it's at a different time now\n\t\tvar stopEvent = this._state.getNextState(Tone.State.Stopped, now);\n\t\tif (stopEvent){\n\t\t\tthis._state.cancel(stopEvent.time);\n\t\t}\n\n\t\t//set all the sources\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.cancelStop();\n\t\t\tsource.playbackRate.setValueAtTime(rate, now);\n\t\t});\n\t}\n});\n\n/**\n * The direction the buffer should play in\n * @memberOf Tone.Player#\n * @type {Boolean}\n * @name reverse\n */\nObject.defineProperty(Tone.Player.prototype, \"reverse\", {\n\tget : function(){\n\t\treturn this._buffer.reverse;\n\t},\n\tset : function(rev){\n\t\tthis._buffer.reverse = rev;\n\t}\n});\n\n/**\n * If all the buffer is loaded\n * @memberOf Tone.Player#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Player.prototype, \"loaded\", {\n\tget : function(){\n\t\treturn this._buffer.loaded;\n\t}\n});\n\n/**\n *  Dispose and disconnect.\n *  @return {Tone.Player} this\n */\nTone.Player.prototype.dispose = function(){\n\t//disconnect all of the players\n\tthis._activeSources.forEach(function(source){\n\t\tsource.dispose();\n\t});\n\tthis._activeSources = null;\n\tTone.Source.prototype.dispose.call(this);\n\tthis._buffer.dispose();\n\tthis._buffer = null;\n\treturn this;\n};\n\nexport default Tone.Player;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../component/FrequencyEnvelope\";\nimport \"../source/OmniOscillator\";\nimport \"../signal/Signal\";\nimport \"../component/Filter\";\nimport \"../instrument/Monophonic\";\n\n/**\n *  @class  Tone.MonoSynth is composed of one oscillator, one filter, and two envelopes.\n *          The amplitude of the Tone.Oscillator and the cutoff frequency of the\n *          Tone.Filter are controlled by Tone.Envelopes.\n *          <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var synth = new Tone.MonoSynth({\n * \t\"oscillator\" : {\n * \t\t\"type\" : \"square\"\n *  },\n *  \"envelope\" : {\n *  \t\"attack\" : 0.1\n *  }\n * }).toMaster();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n */\nTone.MonoSynth = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.MonoSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.OmniOscillator}\n\t */\n\tthis.oscillator = new Tone.OmniOscillator(options.oscillator);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this.oscillator.frequency;\n\n\t/**\n\t *  The detune control.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this.oscillator.detune;\n\n\t/**\n\t *  The filter.\n\t *  @type {Tone.Filter}\n\t */\n\tthis.filter = new Tone.Filter(options.filter);\n\tthis.filter.frequency.value = 5000;\n\n\t/**\n\t *  The filter envelope.\n\t *  @type {Tone.FrequencyEnvelope}\n\t */\n\tthis.filterEnvelope = new Tone.FrequencyEnvelope(options.filterEnvelope);\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t//connect the oscillators to the output\n\tthis.oscillator.chain(this.filter, this.envelope, this.output);\n\t//connect the filter envelope\n\tthis.filterEnvelope.connect(this.filter.frequency);\n\tthis._readOnly([\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n};\n\nTone.extend(Tone.MonoSynth, Tone.Monophonic);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.MonoSynth.defaults = {\n\t\"frequency\" : \"C4\",\n\t\"detune\" : 0,\n\t\"oscillator\" : {\n\t\t\"type\" : \"square\"\n\t},\n\t\"filter\" : {\n\t\t\"Q\" : 6,\n\t\t\"type\" : \"lowpass\",\n\t\t\"rolloff\" : -24\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.005,\n\t\t\"decay\" : 0.1,\n\t\t\"sustain\" : 0.9,\n\t\t\"release\" : 1\n\t},\n\t\"filterEnvelope\" : {\n\t\t\"attack\" : 0.06,\n\t\t\"decay\" : 0.2,\n\t\t\"sustain\" : 0.5,\n\t\t\"release\" : 2,\n\t\t\"baseFrequency\" : 200,\n\t\t\"octaves\" : 7,\n\t\t\"exponent\" : 2\n\t}\n};\n\n/**\n *  start the attack portion of the envelope\n *  @param {Time} [time=now] the time the attack should start\n *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.MonoSynth} this\n *  @private\n */\nTone.MonoSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis.envelope.triggerAttack(time, velocity);\n\tthis.filterEnvelope.triggerAttack(time);\n\tthis.oscillator.start(time);\n\tif (this.envelope.sustain === 0){\n\t\tthis.oscillator.stop(time + this.envelope.attack + this.envelope.decay);\n\t}\n\treturn this;\n};\n\n/**\n *  start the release portion of the envelope\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.MonoSynth} this\n *  @private\n */\nTone.MonoSynth.prototype._triggerEnvelopeRelease = function(time){\n\tthis.envelope.triggerRelease(time);\n\tthis.filterEnvelope.triggerRelease(time);\n\tthis.oscillator.stop(time + this.envelope.release);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.MonoSynth} this\n */\nTone.MonoSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n\tthis.oscillator.dispose();\n\tthis.oscillator = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\tthis.filterEnvelope.dispose();\n\tthis.filterEnvelope = null;\n\tthis.filter.dispose();\n\tthis.filter = null;\n\tthis.frequency = null;\n\tthis.detune = null;\n\treturn this;\n};\n\nexport default Tone.MonoSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\n\n/**\n *  @class Tone.FatOscillator is an array of oscillators with detune spread between the oscillators\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The oscillator's frequency.\n *  @param {String} type The type of the oscillator.\n *  @param {Cents} spread The detune spread between the oscillators.\n *  @example\n * var fatOsc = new Tone.FatOscillator(\"Ab3\", \"sine\", 40).toMaster().start();\n */\nTone.FatOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"spread\"], Tone.FatOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The oscillator's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  The array of oscillators\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._oscillators = [];\n\n\t/**\n\t *  The total spread of the oscillators\n\t *  @type  {Cents}\n\t *  @private\n\t */\n\tthis._spread = options.spread;\n\n\t/**\n\t *  The type of the oscillator\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  The phase of the oscillators\n\t *  @type {Degrees}\n\t *  @private\n\t */\n\tthis._phase = options.phase;\n\n\t/**\n\t *  The partials array\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._partials = options.partials;\n\n\t/**\n\t *  The number of partials to use\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._partialCount = options.partialCount;\n\n\t//set the count initially\n\tthis.count = options.count;\n\tthis._readOnly([\"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.FatOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.FatOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"spread\" : 20,\n\t\"count\" : 3,\n\t\"type\" : \"sawtooth\",\n\t\"partials\" : [],\n\t\"partialCount\" : 0\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.FatOscillator.prototype._start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._forEach(function(osc){\n\t\tosc.start(time);\n\t});\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.FatOscillator.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._forEach(function(osc){\n\t\tosc.stop(time);\n\t});\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.FatOscillator.prototype.restart = function(time){\n\ttime = this.toSeconds(time);\n\tthis._forEach(function(osc){\n\t\tosc.restart(time);\n\t});\n};\n\n/**\n *  Iterate over all of the oscillators\n *  @param  {Function}  iterator  The iterator function\n *  @private\n */\nTone.FatOscillator.prototype._forEach = function(iterator){\n\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\titerator.call(this, this._oscillators[i], i);\n\t}\n};\n\n/**\n * The type of the carrier oscillator\n * @memberOf Tone.FatOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tthis._type = type;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.type = type;\n\t\t});\n\t}\n});\n\n/**\n * The detune spread between the oscillators. If \"count\" is\n * set to 3 oscillators and the \"spread\" is set to 40,\n * the three oscillators would be detuned like this: [-20, 0, 20]\n * for a total detune spread of 40 cents.\n * @memberOf Tone.FatOscillator#\n * @type {Cents}\n * @name spread\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"spread\", {\n\tget : function(){\n\t\treturn this._spread;\n\t},\n\tset : function(spread){\n\t\tthis._spread = spread;\n\t\tif (this._oscillators.length > 1){\n\t\t\tvar start = -spread/2;\n\t\t\tvar step = spread / (this._oscillators.length - 1);\n\t\t\tthis._forEach(function(osc, i){\n\t\t\t\tosc.detune.value = start + step * i;\n\t\t\t});\n\t\t}\n\t}\n});\n\n/**\n * The number of detuned oscillators\n * @memberOf Tone.FatOscillator#\n * @type {Number}\n * @name count\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"count\", {\n\tget : function(){\n\t\treturn this._oscillators.length;\n\t},\n\tset : function(count){\n\t\tcount = Math.max(count, 1);\n\t\tif (this._oscillators.length !== count){\n\t\t\t//dispose the previous oscillators\n\t\t\tthis._forEach(function(osc){\n\t\t\t\tosc.dispose();\n\t\t\t});\n\t\t\tthis._oscillators = [];\n\t\t\tfor (var i = 0; i < count; i++){\n\t\t\t\tvar osc = new Tone.Oscillator();\n\t\t\t\tif (this.type === Tone.Oscillator.Type.Custom){\n\t\t\t\t\tosc.partials = this._partials;\n\t\t\t\t} else {\n\t\t\t\t\tosc.type = this._type;\n\t\t\t\t}\n\t\t\t\tosc.partialCount = this._partialCount;\n\t\t\t\tosc.phase = this._phase + (i / count) * 360;\n\t\t\t\tosc.volume.value = -6 - count*1.1;\n\t\t\t\tthis.frequency.connect(osc.frequency);\n\t\t\t\tthis.detune.connect(osc.detune);\n\t\t\t\tosc.connect(this.output);\n\t\t\t\tthis._oscillators[i] = osc;\n\t\t\t}\n\t\t\t//set the spread\n\t\t\tthis.spread = this._spread;\n\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\tthis._forEach(function(osc){\n\t\t\t\t\tosc.start();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.FatOscillator#\n * @type {Number}\n * @name phase\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._phase;\n\t},\n\tset : function(phase){\n\t\tthis._phase = phase;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.phase = phase;\n\t\t});\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.FatOscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._oscillators[0].baseType;\n\t},\n\tset : function(baseType){\n\t\tthis._forEach(function(osc){\n\t\t\tosc.baseType = baseType;\n\t\t});\n\t\tthis._type = this._oscillators[0].type;\n\t}\n});\n\n/**\n * The partials of the carrier waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.FatOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._oscillators[0].partials;\n\t},\n\tset : function(partials){\n\t\tthis._partials = partials;\n\t\tthis._type = Tone.Oscillator.Type.Custom;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.partials = partials;\n\t\t});\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @memberOf Tone.FatOscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._oscillators[0].partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._partialCount = partialCount;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.partialCount = partialCount;\n\t\t});\n\t\tthis._type = this._oscillators[0].type;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.FatOscillator} this\n */\nTone.FatOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"detune\"]);\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis._forEach(function(osc){\n\t\tosc.dispose();\n\t});\n\tthis._oscillators = null;\n\tthis._partials = null;\n\treturn this;\n};\n\nexport default Tone.FatOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\nimport \"../signal/AudioToGain\";\n\n/**\n *  @class Tone.AMOscillator\n *\n *  @extends {Tone.Oscillator}\n *  @constructor\n *  @param {Frequency} frequency The starting frequency of the oscillator.\n *  @param {String} type The type of the carrier oscillator.\n *  @param {String} modulationType The type of the modulator oscillator.\n *  @example\n * //a sine oscillator frequency-modulated by a square wave\n * var fmOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n */\nTone.AMOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"modulationType\"], Tone.AMOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The carrier oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Oscillator(options.frequency, options.type);\n\n\t/**\n\t *  The oscillator's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._carrier.frequency;\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._carrier.detune;\n\tthis.detune.value = options.detune;\n\n\t/**\n\t *  The modulating oscillator\n\t *  @type  {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\n\t/**\n\t *  convert the -1,1 output to 0,1\n\t *  @type {Tone.AudioToGain}\n\t *  @private\n\t */\n\tthis._modulationScale = new Tone.AudioToGain();\n\n\t/**\n\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t *  A harmonicity of 1 gives both oscillators the same frequency.\n\t *  Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch the modulator an octave below carrier\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain(0);\n\n\t//connections\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.detune.connect(this._modulator.detune);\n\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\tthis._carrier.chain(this._modulationNode, this.output);\n\n\tthis.phase = options.phase;\n\n\tthis._readOnly([\"frequency\", \"detune\", \"harmonicity\"]);\n};\n\nTone.extend(Tone.AMOscillator, Tone.Oscillator);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.AMOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"type\" : \"sine\",\n\t\"modulationType\" : \"square\",\n\t\"harmonicity\" : 1\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.AMOscillator.prototype._start = function(time){\n\tthis._modulator.start(time);\n\tthis._carrier.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.AMOscillator.prototype._stop = function(time){\n\tthis._modulator.stop(time);\n\tthis._carrier.stop(time);\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.AMOscillator.prototype.restart = function(time){\n\tthis._modulator.restart(time);\n\tthis._carrier.restart(time);\n};\n\n/**\n * The type of the carrier oscillator\n * @memberOf Tone.AMOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._carrier.type;\n\t},\n\tset : function(type){\n\t\tthis._carrier.type = type;\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.AMOscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._carrier.baseType;\n\t},\n\tset : function(baseType){\n\t\tthis._carrier.baseType = baseType;\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @memberOf Tone.AMOscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._carrier.partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n});\n\n/**\n * The type of the modulator oscillator\n * @memberOf Tone.AMOscillator#\n * @type {string}\n * @name modulationType\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"modulationType\", {\n\tget : function(){\n\t\treturn this._modulator.type;\n\t},\n\tset : function(type){\n\t\tthis._modulator.type = type;\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.AMOscillator#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._carrier.phase;\n\t},\n\tset : function(phase){\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n});\n\n/**\n * The partials of the carrier waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.AMOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._carrier.partials;\n\t},\n\tset : function(partials){\n\t\tthis._carrier.partials = partials;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.AMOscillator} this\n */\nTone.AMOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"detune\", \"harmonicity\"]);\n\tthis.frequency = null;\n\tthis.detune = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis._modulationScale.dispose();\n\tthis._modulationScale = null;\n\treturn this;\n};\n\nexport default Tone.AMOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/PulseOscillator\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\n\n/**\n *  @class Tone.PWMOscillator modulates the width of a Tone.PulseOscillator\n *         at the modulationFrequency. This has the effect of continuously\n *         changing the timbre of the oscillator by altering the harmonics\n *         generated.\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The starting frequency of the oscillator.\n *  @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse.\n *  @example\n *  var pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toMaster().start();\n */\nTone.PWMOscillator = function(){\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"modulationFrequency\"], Tone.PWMOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  the pulse oscillator\n\t *  @type {Tone.PulseOscillator}\n\t *  @private\n\t */\n\tthis._pulse = new Tone.PulseOscillator(options.modulationFrequency);\n\t//change the pulse oscillator type\n\tthis._pulse._sawtooth.type = \"sine\";\n\n\t/**\n\t *  the modulator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Oscillator({\n\t\t\"frequency\" : options.frequency,\n\t\t\"detune\" : options.detune,\n\t\t\"phase\" : options.phase\n\t});\n\n\t/**\n\t *  Scale the oscillator so it doesn't go silent\n\t *  at the extreme values.\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = new Tone.Multiply(2);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._modulator.frequency;\n\n\t/**\n\t *  The detune of the oscillator.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._modulator.detune;\n\n\t/**\n\t *  The modulation rate of the oscillator.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.modulationFrequency = this._pulse.frequency;\n\n\t//connections\n\tthis._modulator.chain(this._scale, this._pulse.width);\n\tthis._pulse.connect(this.output);\n\tthis._readOnly([\"modulationFrequency\", \"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.PWMOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.PWMOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"modulationFrequency\" : 0.4,\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.PWMOscillator.prototype._start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._modulator.start(time);\n\tthis._pulse.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.PWMOscillator.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._modulator.stop(time);\n\tthis._pulse.stop(time);\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.PWMOscillator.prototype.restart = function(time){\n\tthis._modulator.restart(time);\n\tthis._pulse.restart(time);\n};\n\n/**\n * The type of the oscillator. Always returns \"pwm\".\n * @readOnly\n * @memberOf Tone.PWMOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn \"pwm\";\n\t}\n});\n\n/**\n * The baseType of the oscillator. Always returns \"pwm\".\n * @readOnly\n * @memberOf Tone.PWMOscillator#\n * @type {string}\n * @name baseType\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn \"pwm\";\n\t}\n});\n\n/**\n * The partials of the waveform. Cannot set partials for this waveform type\n * @memberOf Tone.PWMOscillator#\n * @type {Array}\n * @name partials\n * @private\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn [];\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.PWMOscillator#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._modulator.phase;\n\t},\n\tset : function(phase){\n\t\tthis._modulator.phase = phase;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.PWMOscillator} this\n */\nTone.PWMOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._pulse.dispose();\n\tthis._pulse = null;\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis._writable([\"modulationFrequency\", \"frequency\", \"detune\"]);\n\tthis.frequency = null;\n\tthis.detune = null;\n\tthis.modulationFrequency = null;\n\treturn this;\n};\n\nexport default Tone.PWMOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Event\";\nimport \"../type/Type\";\nimport \"../core/Transport\";\n\n/**\n *  @class Tone.Part is a collection Tone.Events which can be\n *         started/stopped and looped as a single unit.\n *\n *  @extends {Tone.Event}\n *  @param {Function} callback The callback to invoke on each event\n *  @param {Array} events the array of events\n *  @example\n * var part = new Tone.Part(function(time, note){\n * \t//the notes given as the second element in the array\n * \t//will be passed in as the second argument\n * \tsynth.triggerAttackRelease(note, \"8n\", time);\n * }, [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n *  @example\n * //use an array of objects as long as the object has a \"time\" attribute\n * var part = new Tone.Part(function(time, value){\n * \t//the value is an object which contains both the note and the velocity\n * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n * }, [{\"time\" : 0, \"note\" : \"C3\", \"velocity\": 0.9},\n * \t   {\"time\" : \"0:2\", \"note\" : \"C4\", \"velocity\": 0.5}\n * ]).start(0);\n */\nTone.Part = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"events\"], Tone.Part);\n\tTone.Event.call(this, options);\n\n\t/**\n\t *  An array of Objects.\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._events = [];\n\n\t//add the events\n\tfor (var i = 0; i < options.events.length; i++){\n\t\tif (Array.isArray(options.events[i])){\n\t\t\tthis.add(options.events[i][0], options.events[i][1]);\n\t\t} else {\n\t\t\tthis.add(options.events[i]);\n\t\t}\n\t}\n};\n\nTone.extend(Tone.Part, Tone.Event);\n\n/**\n *  The default values\n *  @type  {Object}\n *  @const\n */\nTone.Part.defaults = {\n\t\"callback\" : Tone.noOp,\n\t\"loop\" : false,\n\t\"loopEnd\" : \"1m\",\n\t\"loopStart\" : 0,\n\t\"playbackRate\" : 1,\n\t\"probability\" : 1,\n\t\"humanize\" : false,\n\t\"mute\" : false,\n\t\"events\" : []\n};\n\n/**\n *  Start the part at the given time.\n *  @param  {TransportTime}  time    When to start the part.\n *  @param  {Time=}  offset  The offset from the start of the part\n *                           to begin playing at.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.start = function(time, offset){\n\tvar ticks = this.toTicks(time);\n\tif (this._state.getValueAtTime(ticks) !== Tone.State.Started){\n\t\tif (this._loop){\n\t\t\toffset = Tone.defaultArg(offset, this._loopStart);\n\t\t} else {\n\t\t\toffset = Tone.defaultArg(offset, 0);\n\t\t}\n\t\toffset = this.toTicks(offset);\n\t\tthis._state.add({\n\t\t\t\"state\" : Tone.State.Started,\n\t\t\t\"time\" : ticks,\n\t\t\t\"offset\" : offset\n\t\t});\n\t\tthis._forEach(function(event){\n\t\t\tthis._startNote(event, ticks, offset);\n\t\t});\n\t}\n\treturn this;\n};\n\n/**\n *  Start the event in the given event at the correct time given\n *  the ticks and offset and looping.\n *  @param  {Tone.Event}  event\n *  @param  {Ticks}  ticks\n *  @param  {Ticks}  offset\n *  @private\n */\nTone.Part.prototype._startNote = function(event, ticks, offset){\n\tticks -= offset;\n\tif (this._loop){\n\t\tif (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd){\n\t\t\tif (event.startOffset < offset){\n\t\t\t\t//start it on the next loop\n\t\t\t\tticks += this._getLoopDuration();\n\t\t\t}\n\t\t\tevent.start(Tone.Ticks(ticks));\n\t\t} else if (event.startOffset < this._loopStart && event.startOffset >= offset){\n\t\t\tevent.loop = false;\n\t\t\tevent.start(Tone.Ticks(ticks));\n\t\t}\n\t} else if (event.startOffset >= offset){\n\t\tevent.start(Tone.Ticks(ticks));\n\t}\n};\n\n/**\n *  The start from the scheduled start time\n *  @type {Ticks}\n *  @memberOf Tone.Part#\n *  @name startOffset\n *  @private\n */\nObject.defineProperty(Tone.Part.prototype, \"startOffset\", {\n\tget : function(){\n\t\treturn this._startOffset;\n\t},\n\tset : function(offset){\n\t\tthis._startOffset = offset;\n\t\tthis._forEach(function(event){\n\t\t\tevent.startOffset += this._startOffset;\n\t\t});\n\t}\n});\n\n/**\n *  Stop the part at the given time.\n *  @param  {TimelinePosition}  time  When to stop the part.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.stop = function(time){\n\tvar ticks = this.toTicks(time);\n\tthis._state.cancel(ticks);\n\tthis._state.setStateAtTime(Tone.State.Stopped, ticks);\n\tthis._forEach(function(event){\n\t\tevent.stop(time);\n\t});\n\treturn this;\n};\n\n/**\n *  Get/Set an Event's value at the given time.\n *  If a value is passed in and no event exists at\n *  the given time, one will be created with that value.\n *  If two events are at the same time, the first one will\n *  be returned.\n *  @example\n * part.at(\"1m\"); //returns the part at the first measure\n *\n * part.at(\"2m\", \"C2\"); //set the value at \"2m\" to C2.\n * //if an event didn't exist at that time, it will be created.\n *  @param {TransportTime} time The time of the event to get or set.\n *  @param {*=} value If a value is passed in, the value of the\n *                    event at the given time will be set to it.\n *  @return {Tone.Event} the event at the time\n */\nTone.Part.prototype.at = function(time, value){\n\ttime = Tone.TransportTime(time);\n\tvar tickTime = Tone.Ticks(1).toSeconds();\n\tfor (var i = 0; i < this._events.length; i++){\n\t\tvar event = this._events[i];\n\t\tif (Math.abs(time.toTicks() - event.startOffset) < tickTime){\n\t\t\tif (Tone.isDefined(value)){\n\t\t\t\tevent.value = value;\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t}\n\t//if there was no event at that time, create one\n\tif (Tone.isDefined(value)){\n\t\tthis.add(time, value);\n\t\t//return the new event\n\t\treturn this._events[this._events.length - 1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Add a an event to the part.\n *  @param {Time} time The time the note should start.\n *                            If an object is passed in, it should\n *                            have a 'time' attribute and the rest\n *                            of the object will be used as the 'value'.\n *  @param  {Tone.Event|*}  value\n *  @returns {Tone.Part} this\n *  @example\n * part.add(\"1m\", \"C#+11\");\n */\nTone.Part.prototype.add = function(time, value){\n\t//extract the parameters\n\tif (time.hasOwnProperty(\"time\")){\n\t\tvalue = time;\n\t\ttime = value.time;\n\t}\n\ttime = this.toTicks(time);\n\tvar event;\n\tif (value instanceof Tone.Event){\n\t\tevent = value;\n\t\tevent.callback = this._tick.bind(this);\n\t} else {\n\t\tevent = new Tone.Event({\n\t\t\t\"callback\" : this._tick.bind(this),\n\t\t\t\"value\" : value,\n\t\t});\n\t}\n\t//the start offset\n\tevent.startOffset = time;\n\n\t//initialize the values\n\tevent.set({\n\t\t\"loopEnd\" : this.loopEnd,\n\t\t\"loopStart\" : this.loopStart,\n\t\t\"loop\" : this.loop,\n\t\t\"humanize\" : this.humanize,\n\t\t\"playbackRate\" : this.playbackRate,\n\t\t\"probability\" : this.probability\n\t});\n\n\tthis._events.push(event);\n\n\t//start the note if it should be played right now\n\tthis._restartEvent(event);\n\treturn this;\n};\n\n/**\n *  Restart the given event\n *  @param  {Tone.Event}  event\n *  @private\n */\nTone.Part.prototype._restartEvent = function(event){\n\tthis._state.forEach(function(stateEvent){\n\t\tif (stateEvent.state === Tone.State.Started){\n\t\t\tthis._startNote(event, stateEvent.time, stateEvent.offset);\n\t\t} else {\n\t\t\t//stop the note\n\t\t\tevent.stop(Tone.Ticks(stateEvent.time));\n\t\t}\n\t}.bind(this));\n};\n\n/**\n *  Remove an event from the part. If the event at that time is a Tone.Part,\n *  it will remove the entire part.\n *  @param {Time} time The time of the event\n *  @param {*} value Optionally select only a specific event value\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.remove = function(time, value){\n\t//extract the parameters\n\tif (time.hasOwnProperty(\"time\")){\n\t\tvalue = time;\n\t\ttime = value.time;\n\t}\n\ttime = this.toTicks(time);\n\tfor (var i = this._events.length - 1; i >= 0; i--){\n\t\tvar event = this._events[i];\n\t\tif (event.startOffset === time){\n\t\t\tif (Tone.isUndef(value) || (Tone.isDefined(value) && event.value === value)){\n\t\t\t\tthis._events.splice(i, 1);\n\t\t\t\tevent.dispose();\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Remove all of the notes from the group.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.removeAll = function(){\n\tthis._forEach(function(event){\n\t\tevent.dispose();\n\t});\n\tthis._events = [];\n\treturn this;\n};\n\n/**\n *  Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n *  @param {TimelinePosition} after The time after which to cancel the scheduled events.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.cancel = function(after){\n\tthis._forEach(function(event){\n\t\tevent.cancel(after);\n\t});\n\tthis._state.cancel(this.toTicks(after));\n\treturn this;\n};\n\n/**\n *  Iterate over all of the events\n *  @param {Function} callback\n *  @param {Object} ctx The context\n *  @private\n */\nTone.Part.prototype._forEach = function(callback, ctx){\n\tif (this._events){\n\t\tctx = Tone.defaultArg(ctx, this);\n\t\tfor (var i = this._events.length - 1; i >= 0; i--){\n\t\t\tvar e = this._events[i];\n\t\t\tif (e instanceof Tone.Part){\n\t\t\t\te._forEach(callback, ctx);\n\t\t\t} else {\n\t\t\t\tcallback.call(ctx, e);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Set the attribute of all of the events\n *  @param  {String}  attr  the attribute to set\n *  @param  {*}  value      The value to set it to\n *  @private\n */\nTone.Part.prototype._setAll = function(attr, value){\n\tthis._forEach(function(event){\n\t\tevent[attr] = value;\n\t});\n};\n\n/**\n *  Internal tick method\n *  @param  {Number}  time  The time of the event in seconds\n *  @private\n */\nTone.Part.prototype._tick = function(time, value){\n\tif (!this.mute){\n\t\tthis.callback(time, value);\n\t}\n};\n\n/**\n *  Determine if the event should be currently looping\n *  given the loop boundries of this Part.\n *  @param  {Tone.Event}  event  The event to test\n *  @private\n */\nTone.Part.prototype._testLoopBoundries = function(event){\n\tif (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)){\n\t\tevent.cancel(0);\n\t} else if (event.state === Tone.State.Stopped){\n\t\t//reschedule it if it's stopped\n\t\tthis._restartEvent(event);\n\t}\n};\n\n/**\n *  The probability of the notes being triggered.\n *  @memberOf Tone.Part#\n *  @type {NormalRange}\n *  @name probability\n */\nObject.defineProperty(Tone.Part.prototype, \"probability\", {\n\tget : function(){\n\t\treturn this._probability;\n\t},\n\tset : function(prob){\n\t\tthis._probability = prob;\n\t\tthis._setAll(\"probability\", prob);\n\t}\n});\n\n/**\n *  If set to true, will apply small random variation\n *  to the callback time. If the value is given as a time, it will randomize\n *  by that amount.\n *  @example\n * event.humanize = true;\n *  @type {Boolean|Time}\n *  @name humanize\n *  @memberof Tone.Part#\n */\nObject.defineProperty(Tone.Part.prototype, \"humanize\", {\n\tget : function(){\n\t\treturn this._humanize;\n\t},\n\tset : function(variation){\n\t\tthis._humanize = variation;\n\t\tthis._setAll(\"humanize\", variation);\n\t}\n});\n\n/**\n *  If the part should loop or not\n *  between Tone.Part.loopStart and\n *  Tone.Part.loopEnd. If set to true,\n *  the part will loop indefinitely,\n *  if set to a number greater than 1\n *  it will play a specific number of\n *  times, if set to false, 0 or 1, the\n *  part will only play once.\n *  @memberOf Tone.Part#\n *  @type {Boolean|Positive}\n *  @name loop\n *  @example\n * //loop the part 8 times\n * part.loop = 8;\n */\nObject.defineProperty(Tone.Part.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._loop;\n\t},\n\tset : function(loop){\n\t\tthis._loop = loop;\n\t\tthis._forEach(function(event){\n\t\t\tevent._loopStart = this._loopStart;\n\t\t\tevent._loopEnd = this._loopEnd;\n\t\t\tevent.loop = loop;\n\t\t\tthis._testLoopBoundries(event);\n\t\t});\n\t}\n});\n\n/**\n *  The loopEnd point determines when it will\n *  loop if Tone.Part.loop is true.\n *  @memberOf Tone.Part#\n *  @type {Time}\n *  @name loopEnd\n */\nObject.defineProperty(Tone.Part.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopEnd).toSeconds();\n\t},\n\tset : function(loopEnd){\n\t\tthis._loopEnd = this.toTicks(loopEnd);\n\t\tif (this._loop){\n\t\t\tthis._forEach(function(event){\n\t\t\t\tevent.loopEnd = loopEnd;\n\t\t\t\tthis._testLoopBoundries(event);\n\t\t\t});\n\t\t}\n\t}\n});\n\n/**\n *  The loopStart point determines when it will\n *  loop if Tone.Part.loop is true.\n *  @memberOf Tone.Part#\n *  @type {Time}\n *  @name loopStart\n */\nObject.defineProperty(Tone.Part.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopStart).toSeconds();\n\t},\n\tset : function(loopStart){\n\t\tthis._loopStart = this.toTicks(loopStart);\n\t\tif (this._loop){\n\t\t\tthis._forEach(function(event){\n\t\t\t\tevent.loopStart = this.loopStart;\n\t\t\t\tthis._testLoopBoundries(event);\n\t\t\t});\n\t\t}\n\t}\n});\n\n/**\n * \tThe playback rate of the part\n *  @memberOf Tone.Part#\n *  @type {Positive}\n *  @name playbackRate\n */\nObject.defineProperty(Tone.Part.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tthis._setAll(\"playbackRate\", rate);\n\t}\n});\n\n/**\n * \tThe number of scheduled notes in the part.\n *  @memberOf Tone.Part#\n *  @type {Positive}\n *  @name length\n *  @readOnly\n */\nObject.defineProperty(Tone.Part.prototype, \"length\", {\n\tget : function(){\n\t\treturn this._events.length;\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.dispose = function(){\n\tTone.Event.prototype.dispose.call(this);\n\tthis.removeAll();\n\tthis.callback = null;\n\tthis._events = null;\n\treturn this;\n};\n\nexport default Tone.Part;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Event\";\n\n/**\n *  @class Tone.Loop creates a looped callback at the \n *         specified interval. The callback can be \n *         started, stopped and scheduled along\n *         the Transport's timeline. \n *  @example\n * var loop = new Tone.Loop(function(time){\n * \t//triggered every eighth note. \n * \tconsole.log(time);\n * }, \"8n\").start(0);\n * Tone.Transport.start();\n *  @extends {Tone}\n *  @param {Function} callback The callback to invoke with the event.\n *  @param {Time} interval The time between successive callback calls. \n */\nTone.Loop = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"interval\"], Tone.Loop);\n\tTone.call(this);\n\n\t/**\n\t *  The event which produces the callbacks\n\t */\n\tthis._event = new Tone.Event({\n\t\t\"callback\" : this._tick.bind(this),\n\t\t\"loop\" : true,\n\t\t\"loopEnd\" : options.interval,\n\t\t\"playbackRate\" : options.playbackRate,\n\t\t\"probability\" : options.probability\n\t});\n\n\t/**\n\t *  The callback to invoke with the next event in the pattern\n\t *  @type {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t//set the iterations\n\tthis.iterations = options.iterations;\n};\n\nTone.extend(Tone.Loop);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Loop.defaults = {\n\t\"interval\" : \"4n\",\n\t\"callback\" : Tone.noOp,\n\t\"playbackRate\" : 1,\n\t\"iterations\" : Infinity,\n\t\"probability\" : true,\n\t\"mute\" : false\n};\n\n/**\n *  Start the loop at the specified time along the Transport's\n *  timeline.\n *  @param  {TimelinePosition=}  time  When to start the Loop.\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.start = function(time){\n\tthis._event.start(time);\n\treturn this;\n};\n\n/**\n *  Stop the loop at the given time.\n *  @param  {TimelinePosition=}  time  When to stop the Loop.\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.stop = function(time){\n\tthis._event.stop(time);\n\treturn this;\n};\n\n/**\n *  Cancel all scheduled events greater than or equal to the given time\n *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.cancel = function(time){\n\tthis._event.cancel(time);\n\treturn this;\n};\n\n/**\n *  Internal function called when the notes should be called\n *  @param  {Number}  time  The time the event occurs\n *  @private\n */\nTone.Loop.prototype._tick = function(time){\n\tthis.callback(time);\n};\n\n/**\n *  The state of the Loop, either started or stopped.\n *  @memberOf Tone.Loop#\n *  @type {String}\n *  @name state\n *  @readOnly\n */\nObject.defineProperty(Tone.Loop.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._event.state;\n\t}\n});\n\n/**\n *  The progress of the loop as a value between 0-1. 0, when\n *  the loop is stopped or done iterating. \n *  @memberOf Tone.Loop#\n *  @type {NormalRange}\n *  @name progress\n *  @readOnly\n */\nObject.defineProperty(Tone.Loop.prototype, \"progress\", {\n\tget : function(){\n\t\treturn this._event.progress;\n\t}\n});\n\n/**\n *  The time between successive callbacks. \n *  @example\n * loop.interval = \"8n\"; //loop every 8n\n *  @memberOf Tone.Loop#\n *  @type {Time}\n *  @name interval\n */\nObject.defineProperty(Tone.Loop.prototype, \"interval\", {\n\tget : function(){\n\t\treturn this._event.loopEnd;\n\t},\n\tset : function(interval){\n\t\tthis._event.loopEnd = interval;\n\t}\n});\n\n/**\n *  The playback rate of the loop. The normal playback rate is 1 (no change). \n *  A `playbackRate` of 2 would be twice as fast. \n *  @memberOf Tone.Loop#\n *  @type {Time}\n *  @name playbackRate\n */\nObject.defineProperty(Tone.Loop.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._event.playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._event.playbackRate = rate;\n\t}\n});\n\n/**\n *  Random variation +/-0.01s to the scheduled time. \n *  Or give it a time value which it will randomize by.\n *  @type {Boolean|Time}\n *  @memberOf Tone.Loop#\n *  @name humanize\n */\nObject.defineProperty(Tone.Loop.prototype, \"humanize\", {\n\tget : function(){\n\t\treturn this._event.humanize;\n\t},\n\tset : function(variation){\n\t\tthis._event.humanize = variation;\n\t}\n});\n\n/**\n *  The probably of the callback being invoked.\n *  @memberOf Tone.Loop#\n *  @type {NormalRange}\n *  @name probability\n */\nObject.defineProperty(Tone.Loop.prototype, \"probability\", {\n\tget : function(){\n\t\treturn this._event.probability;\n\t},\n\tset : function(prob){\n\t\tthis._event.probability = prob;\n\t}\n});\n\n/**\n *  Muting the Loop means that no callbacks are invoked.\n *  @memberOf Tone.Loop#\n *  @type {Boolean}\n *  @name mute\n */\nObject.defineProperty(Tone.Loop.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._event.mute;\n\t},\n\tset : function(mute){\n\t\tthis._event.mute = mute;\n\t}\n});\n\n/**\n *  The number of iterations of the loop. The default\n *  value is Infinity (loop forever).\n *  @memberOf Tone.Loop#\n *  @type {Positive}\n *  @name iterations\n */\nObject.defineProperty(Tone.Loop.prototype, \"iterations\", {\n\tget : function(){\n\t\tif (this._event.loop === true){\n\t\t\treturn Infinity;\n\t\t} else {\n\t\t\treturn this._event.loop;\n\t\t}\n\t},\n\tset : function(iters){\n\t\tif (iters === Infinity){\n\t\t\tthis._event.loop = true;\n\t\t} else {\n\t\t\tthis._event.loop = iters;\n\t\t}\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.dispose = function(){\n\tthis._event.dispose();\n\tthis._event = null;\n\tthis.callback = null;\n};\n\nexport default Tone.Loop;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/StereoEffect\";\nimport \"../effect/FeedbackEffect\";\n\n/**\n *  @class Just like a stereo feedback effect, but the feedback is routed from left to right\n *         and right to left instead of on the same channel.\n *\n *\t@constructor\n *\t@extends {Tone.StereoEffect}\n */\nTone.StereoXFeedbackEffect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"feedback\"], Tone.FeedbackEffect);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  The amount of feedback from the output\n\t *  back into the input of the effect (routed\n\t *  across left and right channels).\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\n\t/**\n\t *  the left side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackLR = new Tone.Gain();\n\n\t/**\n\t *  the right side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackRL = new Tone.Gain();\n\n\t//connect it up\n\tthis.effectReturnL.chain(this._feedbackLR, this.effectSendR);\n\tthis.effectReturnR.chain(this._feedbackRL, this.effectSendL);\n\tthis.feedback.fan(this._feedbackLR.gain, this._feedbackRL.gain);\n\tthis._readOnly([\"feedback\"]);\n};\n\nTone.extend(Tone.StereoXFeedbackEffect, Tone.StereoEffect);\n\n/**\n *  clean up\n *  @returns {Tone.StereoXFeedbackEffect} this\n */\nTone.StereoXFeedbackEffect.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"feedback\"]);\n\tthis.feedback.dispose();\n\tthis.feedback = null;\n\tthis._feedbackLR.dispose();\n\tthis._feedbackLR = null;\n\tthis._feedbackRL.dispose();\n\tthis._feedbackRL = null;\n\treturn this;\n};\n\nexport default Tone.StereoXFeedbackEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/MidSideSplit\";\nimport \"../component/MidSideMerge\";\n\n/**\n *  @class Mid/Side processing separates the the 'mid' signal\n *         (which comes out of both the left and the right channel)\n *         and the 'side' (which only comes out of the the side channels)\n *         and effects them separately before being recombined.\n *         Applies a Mid/Side seperation and recombination.\n *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n *         <br><br>\n *         This is a base-class for Mid/Side Effects.\n *\n *  @extends {Tone.Effect}\n *  @constructor\n */\nTone.MidSideEffect = function(){\n\n\tTone.Effect.apply(this, arguments);\n\n\t/**\n\t *  The mid/side split\n\t *  @type  {Tone.MidSideSplit}\n\t *  @private\n\t */\n\tthis._midSideSplit = new Tone.MidSideSplit();\n\n\t/**\n\t *  The mid/side merge\n\t *  @type  {Tone.MidSideMerge}\n\t *  @private\n\t */\n\tthis._midSideMerge = new Tone.MidSideMerge();\n\n\t/**\n\t *  The mid send. Connect to mid processing\n\t *  @type {Tone}\n\t *  @private\n\t */\n\tthis.midSend = this._midSideSplit.mid;\n\n\t/**\n\t *  The side send. Connect to side processing\n\t *  @type {Tone}\n\t *  @private\n\t */\n\tthis.sideSend = this._midSideSplit.side;\n\n\t/**\n\t *  The mid return connection\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.midReturn = this._midSideMerge.mid;\n\n\t/**\n\t *  The side return connection\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.sideReturn = this._midSideMerge.side;\n\n\t//the connections\n\tthis.effectSend.connect(this._midSideSplit);\n\tthis._midSideMerge.connect(this.effectReturn);\n};\n\nTone.extend(Tone.MidSideEffect, Tone.Effect);\n\n/**\n *  Clean up.\n *  @returns {Tone.MidSideEffect} this\n */\nTone.MidSideEffect.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._midSideSplit.dispose();\n\tthis._midSideSplit = null;\n\tthis._midSideMerge.dispose();\n\tthis._midSideMerge = null;\n\tthis.midSend = null;\n\tthis.sideSend = null;\n\tthis.midReturn = null;\n\tthis.sideReturn = null;\n\treturn this;\n};\n\nexport default Tone.MidSideEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../effect/Effect\";\n\n/**\n *  @class  Tone.Convolver is a wrapper around the Native Web Audio\n *          [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n *          Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n *          [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {string|Tone.Buffer|Object} [url] The URL of the impulse response or the Tone.Buffer\n *                                           contianing the impulse response.\n *  @param {Function=} onload The callback to invoke when the url is loaded.\n *  @example\n * //initializing the convolver with an impulse response\n * var convolver = new Tone.Convolver(\"./path/to/ir.wav\").toMaster();\n */\nTone.Convolver = function(){\n\n\tvar options = Tone.defaults(arguments, [\"url\", \"onload\"], Tone.Convolver);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  convolver node\n\t *  @type {ConvolverNode}\n\t *  @private\n\t */\n\tthis._convolver = this.context.createConvolver();\n\n\t/**\n\t *  the convolution buffer\n\t *  @type {Tone.Buffer}\n\t *  @private\n\t */\n\tthis._buffer = new Tone.Buffer(options.url, function(buffer){\n\t\tthis.buffer = buffer.get();\n\t\toptions.onload();\n\t}.bind(this));\n\n\t//set if it's already loaded\n\tif (this._buffer.loaded){\n\t\tthis.buffer = this._buffer;\n\t}\n\n\t//initially set normalization\n\tthis.normalize = options.normalize;\n\n\tthis.connectEffect(this._convolver);\n};\n\nTone.extend(Tone.Convolver, Tone.Effect);\n\n/**\n *  @static\n *  @const\n *  @type  {Object}\n */\nTone.Convolver.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"normalize\" : true\n};\n\n/**\n *  The convolver's buffer\n *  @memberOf Tone.Convolver#\n *  @type {AudioBuffer}\n *  @name buffer\n */\nObject.defineProperty(Tone.Convolver.prototype, \"buffer\", {\n\t\"get\" : function(){\n\t\tif (this._buffer.length){\n\t\t\treturn this._buffer;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t},\n\t\"set\" : function(buffer){\n\t\tthis._buffer.set(buffer);\n\t\t//if it's already got a buffer, create a new one\n\t\tif (this._convolver.buffer){\n\t\t\t//disconnect the old one\n\t\t\tthis.effectSend.disconnect();\n\t\t\tthis._convolver.disconnect();\n\t\t\t//create and connect a new one\n\t\t\tthis._convolver = this.context.createConvolver();\n\t\t\tthis.connectEffect(this._convolver);\n\t\t}\n\t\tthis._convolver.buffer = this._buffer.get();\n\t}\n});\n\n/**\n *  The normalize property of the ConvolverNode interface is a boolean that controls whether the impulse response from the buffer will be scaled by an equal-power normalization when the buffer attribute is set, or not.\n *  @memberOf Tone.Convolver#\n *  @type {Boolean}\n *  @name normalize\n */\nObject.defineProperty(Tone.Convolver.prototype, \"normalize\", {\n\t\"get\" : function(){\n\t\treturn this._convolver.normalize;\n\t},\n\t\"set\" : function(norm){\n\t\tthis._convolver.normalize = norm;\n\t}\n});\n\n/**\n *  Load an impulse response url as an audio buffer.\n *  Decodes the audio asynchronously and invokes\n *  the callback once the audio buffer loads.\n *  @param {string} url The url of the buffer to load.\n *                      filetype support depends on the\n *                      browser.\n *  @param  {function=} callback\n *  @returns {Promise}\n */\nTone.Convolver.prototype.load = function(url, callback){\n\treturn this._buffer.load(url, function(buff){\n\t\tthis.buffer = buff;\n\t\tif (callback){\n\t\t\tcallback();\n\t\t}\n\t}.bind(this));\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Convolver} this\n */\nTone.Convolver.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._buffer.dispose();\n\tthis._buffer = null;\n\tthis._convolver.disconnect();\n\tthis._convolver = null;\n\treturn this;\n};\n\nexport default Tone.Convolver;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/Multiply\";\nimport \"../signal/Subtract\";\n\n/**\n *  @class Signal-rate modulo operator. Only works in AudioRange [-1, 1] and for modulus\n *         values in the NormalRange.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @param {NormalRange} modulus The modulus to apply.\n *  @example\n * var mod = new Tone.Modulo(0.2)\n * var sig = new Tone.Signal(0.5).connect(mod);\n * //mod outputs 0.1\n */\nTone.Modulo = function(modulus){\n\n\tTone.SignalBase.call(this);\n\tthis.createInsOuts(1, 0);\n\n\t/**\n\t *  A waveshaper gets the integer multiple of\n\t *  the input signal and the modulus.\n\t *  @private\n\t *  @type {Tone.WaveShaper}\n\t */\n\tthis._shaper = new Tone.WaveShaper(Math.pow(2, 16));\n\n\t/**\n\t *  the integer multiple is multiplied by the modulus\n\t *  @type  {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._multiply = new Tone.Multiply();\n\n\t/**\n\t *  and subtracted from the input signal\n\t *  @type  {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._subtract = this.output = new Tone.Subtract();\n\n\t/**\n\t *  the modulus signal\n\t *  @type  {Tone.Signal}\n\t *  @private\n\t */\n\tthis._modSignal = new Tone.Signal(modulus);\n\n\t//connections\n\tTone.connect(this.input, this._shaper);\n\tTone.connect(this.input, this._subtract);\n\tthis._modSignal.connect(this._multiply, 0, 0);\n\tthis._shaper.connect(this._multiply, 0, 1);\n\tthis._multiply.connect(this._subtract, 0, 1);\n\tthis._setWaveShaper(modulus);\n};\n\nTone.extend(Tone.Modulo, Tone.SignalBase);\n\n/**\n *  @param  {number}  mod  the modulus to apply\n *  @private\n */\nTone.Modulo.prototype._setWaveShaper = function(mod){\n\tthis._shaper.setMap(function(val){\n\t\tvar multiple = Math.floor((val + 0.0001) / mod);\n\t\treturn multiple;\n\t});\n};\n\n/**\n * The modulus value.\n * @memberOf Tone.Modulo#\n * @type {NormalRange}\n * @name value\n */\nObject.defineProperty(Tone.Modulo.prototype, \"value\", {\n\tget : function(){\n\t\treturn this._modSignal.value;\n\t},\n\tset : function(mod){\n\t\tthis._modSignal.value = mod;\n\t\tthis._setWaveShaper(mod);\n\t}\n});\n\n/**\n * clean up\n *  @returns {Tone.Modulo} this\n */\nTone.Modulo.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._shaper.dispose();\n\tthis._shaper = null;\n\tthis._multiply.dispose();\n\tthis._multiply = null;\n\tthis._subtract.dispose();\n\tthis._subtract = null;\n\tthis._modSignal.dispose();\n\tthis._modSignal = null;\n\treturn this;\n};\n\nexport default Tone.Modulo;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Context\";\nimport \"../shim/OfflineAudioContext\";\n\n/**\n *  @class Wrapper around the OfflineAudioContext\n *  @extends {Tone.Context}\n *  @param  {Number}  channels  The number of channels to render\n *  @param  {Number}  duration  The duration to render in samples\n *  @param {Number} sampleRate the sample rate to render at\n */\nTone.OfflineContext = function(channels, duration, sampleRate){\n\n\t/**\n\t *  The offline context\n\t *  @private\n\t *  @type  {OfflineAudioContext}\n\t */\n\tvar offlineContext = new OfflineAudioContext(channels, duration * sampleRate, sampleRate);\n\n\t//wrap the methods/members\n\tTone.Context.call(this, {\n\t\t\"context\" : offlineContext,\n\t\t\"clockSource\" : \"offline\",\n\t\t\"lookAhead\" : 0,\n\t\t\"updateInterval\" : 128 / sampleRate\n\t});\n\n\t/**\n\t *  A private reference to the duration\n\t *  @private\n\t *  @type  {Number}\n\t */\n\tthis._duration = duration;\n\n\t/**\n\t *  An artificial clock source\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._currentTime = 0;\n};\n\nTone.extend(Tone.OfflineContext, Tone.Context);\n\n/**\n *  Override the now method to point to the internal clock time\n *  @return  {Number}\n */\nTone.OfflineContext.prototype.now = function(){\n\treturn this._currentTime;\n};\n\n/**\n *  Overwrite resume, should not do anything in the OfflineAudioContext.\n *  @return {Promise}\n */\nTone.OfflineContext.prototype.resume = function(){\n\treturn Promise.resolve();\n};\n\n/**\n *  Render the output of the OfflineContext\n *  @return  {Promise}\n */\nTone.OfflineContext.prototype.render = function(){\n\twhile (this._duration - this._currentTime >= 0){\n\t\t//invoke all the callbacks on that time\n\t\tthis.emit(\"tick\");\n\t\t//increment the clock in 5ms chunks\n\t\tthis._currentTime += 0.005;\n\t}\n\n\treturn this._context.startRendering();\n};\n\n/**\n *  Close the context\n *  @return  {Promise}\n */\nTone.OfflineContext.prototype.close = function(){\n\tthis._context = null;\n\treturn Promise.resolve();\n};\n\nexport default Tone.OfflineContext;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../core/Buffer\";\nimport \"../core/OfflineContext\";\nimport \"../core/Master\";\n\n/**\n *  Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext.\n *  The OfflineAudioContext is capable of rendering much faster than real time in many cases.\n *  The callback function also passes in an offline instance of Tone.Transport which can be used\n *  to schedule events along the Transport. **NOTE** OfflineAudioContext has the same restrictions\n *  as the AudioContext in that on certain platforms (like iOS) it must be invoked by an explicit\n *  user action like a click or tap. \n *  @param  {Function}  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.\n *  @param  {Time}  duration     the amount of time to record for.\n *  @return  {Promise}  The promise which is invoked with the Tone.Buffer of the recorded output.\n *  @example\n * //render 2 seconds of the oscillator\n * Tone.Offline(function(){\n * \t//only nodes created in this callback will be recorded\n * \tvar oscillator = new Tone.Oscillator().toMaster().start(0)\n * \t//schedule their events\n * }, 2).then(function(buffer){\n * \t//do something with the output buffer\n * })\n * @example\n * //can also schedule events along the Transport\n * //using the passed in Offline Transport\n * Tone.Offline(function(Transport){\n * \tvar osc = new Tone.Oscillator().toMaster()\n * \tTransport.schedule(function(time){\n * \t\tosc.start(time).stop(time + 0.1)\n * \t}, 1)\n * \tTransport.start(0.2)\n * }, 4).then(function(buffer){\n * \t//do something with the output buffer\n * })\n */\nTone.Offline = function(callback, duration){\n\t//set the OfflineAudioContext\n\tvar sampleRate = Tone.context.sampleRate;\n\tvar originalContext = Tone.context;\n\n\tvar context = new Tone.OfflineContext(2, duration, sampleRate);\n\tTone.context = context;\n\n\t//invoke the callback/scheduling\n\tvar response = callback(Tone.Transport);\n\n\t//the return value\n\tvar ret = null;\n\n\tif (response && Tone.isFunction(response.then)){\n\t\t//wait for the promise to resolve\n\t\tret = response.then(function(){\n\t\t\t//then render the audio\n\t\t\treturn context.render();\n\t\t});\n\t} else {\n\t\t//process the audio\n\t\tret = context.render();\n\t}\n\n\t//return the original AudioContext\n\tTone.context = originalContext;\n\n\t//return the audio\n\treturn ret.then(function(buffer){\n\t\t//wrap it in a Tone.Buffer\n\t\treturn new Tone.Buffer(buffer);\n\t});\n};\n\nexport default Tone.Offline;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\n\n/**\n *  @class A data structure for holding multiple buffers.\n *  \n *  @param  {Object|Array}    urls      An object literal or array\n *                                      of urls to load.\n *  @param  {Function=}  callback  The callback to invoke when\n *                                 the buffers are loaded. \n *  @extends {Tone}\n *  @example\n * //load a whole bank of piano samples\n * var pianoSamples = new Tone.Buffers({\n * \t\"C4\" : \"path/to/C4.mp3\"\n * \t\"C#4\" : \"path/to/C#4.mp3\"\n * \t\"D4\" : \"path/to/D4.mp3\"\n * \t\"D#4\" : \"path/to/D#4.mp3\"\n * \t...\n * }, function(){\n * \t//play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"C4\");\n * \tplayer.start();\n * });\n * \t@example\n * //To pass in additional parameters in the second parameter\n * var buffers = new Tone.Buffers(urls, {\n * \t\"onload\" : callback,\n * \t\"baseUrl\" : \"../path/to/audio/\"\n * })\n */\nTone.Buffers = function(urls){\n\n\t//remove the urls from the options\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.shift();\n\tvar options = Tone.defaults(args, [\"onload\", \"baseUrl\"], Tone.Buffers);\n\tTone.call(this);\n\n\t/**\n\t *  All of the buffers\n\t *  @type  {Object}\n\t *  @private\n\t */\n\tthis._buffers = {};\n\n\t/**\n\t *  A path which is prefixed before every url.\n\t *  @type  {String}\n\t */\n\tthis.baseUrl = options.baseUrl;\n\n\tthis._loadingCount = 0;\n\t//add each one\n\tfor (var key in urls){\n\t\tthis._loadingCount++;\n\t\tthis.add(key, urls[key], this._bufferLoaded.bind(this, options.onload));\n\t}\n};\n\nTone.extend(Tone.Buffers);\n\n/**\n *  Defaults\n *  @type  {Object}\n */\nTone.Buffers.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"baseUrl\" : \"\"\n};\n\n/**\n *  True if the buffers object has a buffer by that name.\n *  @param  {String|Number}  name  The key or index of the \n *                                 buffer.\n *  @return  {Boolean}\n */\nTone.Buffers.prototype.has = function(name){\n\treturn this._buffers.hasOwnProperty(name);\n};\n\n/**\n *  Get a buffer by name. If an array was loaded, \n *  then use the array index.\n *  @param  {String|Number}  name  The key or index of the \n *                                 buffer.\n *  @return  {Tone.Buffer}\n */\nTone.Buffers.prototype.get = function(name){\n\tif (this.has(name)){\n\t\treturn this._buffers[name];\n\t} else {\n\t\tthrow new Error(\"Tone.Buffers: no buffer named \"+name);\n\t}\n};\n\n/**\n *  A buffer was loaded. decrement the counter.\n *  @param  {Function}  callback \n *  @private\n */\nTone.Buffers.prototype._bufferLoaded = function(callback){\n\tthis._loadingCount--;\n\tif (this._loadingCount === 0 && callback){\n\t\tcallback(this);\n\t}\n};\n\n/**\n * If the buffers are loaded or not\n * @memberOf Tone.Buffers#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Buffers.prototype, \"loaded\", {\n\tget : function(){\n\t\tvar isLoaded = true;\n\t\tfor (var buffName in this._buffers){\n\t\t\tvar buff = this.get(buffName);\n\t\t\tisLoaded = isLoaded && buff.loaded;\n\t\t}\n\t\treturn isLoaded;\n\t}\n});\n\n/**\n *  Add a buffer by name and url to the Buffers\n *  @param  {String}    name      A unique name to give\n *                                the buffer\n *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer, \n *                                                 or a buffer which will be added\n *                                                 with the given name.\n *  @param  {Function=}  callback  The callback to invoke \n *                                 when the url is loaded.\n */\nTone.Buffers.prototype.add = function(name, url, callback){\n\tcallback = Tone.defaultArg(callback, Tone.noOp);\n\tif (url instanceof Tone.Buffer){\n\t\tthis._buffers[name] = url;\n\t\tcallback(this);\n\t} else if (url instanceof AudioBuffer){\n\t\tthis._buffers[name] = new Tone.Buffer(url);\n\t\tcallback(this);\n\t} else if (Tone.isString(url)){\n\t\tthis._buffers[name] = new Tone.Buffer(this.baseUrl + url, callback);\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Buffers} this\n */\nTone.Buffers.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tfor (var name in this._buffers){\n\t\tthis._buffers[name].dispose();\n\t}\n\tthis._buffers = null;\n\treturn this;\n};\n\nexport default Tone.Buffers;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Generate patterns from an array of values.\n *         Has a number of arpeggiation and randomized\n *         selection patterns. \n *           <ul>\n *  \t        <li>\"up\" - cycles upward</li>\n *  \t\t\t<li>\"down\" - cycles downward</li>\n *  \t\t\t<li>\"upDown\" - up then and down</li>\n *  \t\t\t<li>\"downUp\" - cycles down then and up</li>\n *  \t\t\t<li>\"alternateUp\" - jump up two and down one</li>\n *  \t\t\t<li>\"alternateDown\" - jump down two and up one</li>\n *  \t\t\t<li>\"random\" - randomly select an index</li>\n *  \t\t\t<li>\"randomWalk\" - randomly moves one index away from the current position</li>\n *  \t\t\t<li>\"randomOnce\" - randomly select an index without repeating until all values have been chosen.</li>\n *     \t\t</ul>\n *  @param  {Array}  values   An array of options to choose from.\n *  @param  {Tone.CtrlPattern.Type=}  type  The name of the pattern.\n *  @extends {Tone}\n */\nTone.CtrlPattern = function(){\n\n\tvar options = Tone.defaults(arguments, [\"values\", \"type\"], Tone.CtrlPattern);\n\tTone.call(this);\n\n\t/**\n\t *  The array of values to arpeggiate over\n\t *  @type {Array}\n\t */\n\tthis.values = options.values;\n\t\n\t/**\n\t *  The current position in the values array\n\t *  @type  {Number}\n\t */\n\tthis.index = 0;\n\n\t/**\n\t *  The type placeholder\n\t *  @type {Tone.CtrlPattern.Type}\n\t *  @private\n\t */\n\tthis._type = null;\n\n\t/**\n\t *  Shuffled values for the RandomOnce type\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._shuffled = null;\n\n\t/**\n\t *  The direction of the movement\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._direction = null;\n\n\tthis.type = options.type;\n};\n\nTone.extend(Tone.CtrlPattern);\n\n/**\n *  The Control Patterns\n *  @type  {Object}\n *  @static\n */\nTone.CtrlPattern.Type = {\n\tUp : \"up\",\n\tDown : \"down\",\n\tUpDown : \"upDown\",\n\tDownUp : \"downUp\",\n\tAlternateUp : \"alternateUp\",\n\tAlternateDown : \"alternateDown\",\n\tRandom : \"random\",\n\tRandomWalk : \"randomWalk\",\n\tRandomOnce : \"randomOnce\",\n};\n\n/**\n *  The default values. \n *  @type  {Object}\n */\nTone.CtrlPattern.defaults = {\n\t\"type\" : Tone.CtrlPattern.Type.Up,\n\t\"values\" : []\n};\n\n/**\n *  The value at the current index of the pattern.\n *  @readOnly\n *  @memberOf Tone.CtrlPattern#\n *  @type {*}\n *  @name value\n */\nObject.defineProperty(Tone.CtrlPattern.prototype, \"value\", {\n\tget : function(){\n\t\t//some safeguards\n\t\tif (this.values.length === 0){\n\t\t\treturn undefined;\n\t\t} else if (this.values.length === 1){\n\t\t\treturn this.values[0];\n\t\t} \n\t\tthis.index = Math.min(this.index, this.values.length - 1);\n\t\tvar val = this.values[this.index];\n\t\tif (this.type === Tone.CtrlPattern.Type.RandomOnce){\n\t\t\tif (this.values.length !== this._shuffled.length){\n\t\t\t\tthis._shuffleValues();\n\t\t\t}\n\t\t\tval = this.values[this._shuffled[this.index]];\n\t\t}\n\t\treturn val;\n\t}\n});\n\n/**\n *  The pattern used to select the next\n *  item from the values array\n *  @memberOf Tone.CtrlPattern#\n *  @type {Tone.CtrlPattern.Type}\n *  @name type\n */\nObject.defineProperty(Tone.CtrlPattern.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tthis._type = type;\n\t\tthis._shuffled = null;\n\n\t\t//the first index\n\t\tif (this._type === Tone.CtrlPattern.Type.Up ||\n\t\t\t\tthis._type === Tone.CtrlPattern.Type.UpDown || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.RandomOnce ||\n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateUp){\n\t\t\tthis.index = 0;\n\t\t} else if (this._type === Tone.CtrlPattern.Type.Down ||\n\t\t\t\tthis._type === Tone.CtrlPattern.Type.DownUp || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateDown){\n\t\t\tthis.index = this.values.length - 1;\n\t\t}\n\n\t\t//the direction\n\t\tif (this._type === Tone.CtrlPattern.Type.UpDown || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateUp){\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t} else if (this._type === Tone.CtrlPattern.Type.DownUp || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateDown){\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t}\n\n\t\t//randoms\n\t\tif (this._type === Tone.CtrlPattern.Type.RandomOnce){\n\t\t\tthis._shuffleValues();\n\t\t} else if (this._type === Tone.CtrlPattern.Type.Random){\n\t\t\tthis.index = Math.floor(Math.random() * this.values.length);\n\t\t}\n\t}\n});\n\n/**\n *  Return the next value given the current position\n *  and pattern.\n *  @return {*} The next value\n */\nTone.CtrlPattern.prototype.next = function(){\n\t\n\tvar type = this.type;\n\n\t//choose the next index\n\tif (type === Tone.CtrlPattern.Type.Up){\n\t\tthis.index++;\n\t\tif (this.index >= this.values.length){\n\t\t\tthis.index = 0;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.Down){\n\t\tthis.index--;\n\t\tif (this.index < 0){\n\t\t\tthis.index = this.values.length - 1;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.UpDown ||\n\t\t\t\ttype === Tone.CtrlPattern.Type.DownUp){\n\t\tif (this._direction === Tone.CtrlPattern.Type.Up){\n\t\t\tthis.index++;\n\t\t} else {\n\t\t\tthis.index--;\n\t\t}\n\t\tif (this.index < 0){\n\t\t\tthis.index = 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t} else if (this.index >= this.values.length){\n\t\t\tthis.index = this.values.length - 2;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.Random){\n\t\tthis.index = Math.floor(Math.random() * this.values.length);\n\t} else if (type === Tone.CtrlPattern.Type.RandomWalk){\n\t\tif (Math.random() < 0.5){\n\t\t\tthis.index--;\n\t\t\tthis.index = Math.max(this.index, 0);\n\t\t} else {\n\t\t\tthis.index++;\n\t\t\tthis.index = Math.min(this.index, this.values.length - 1);\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.RandomOnce){\n\t\tthis.index++;\n\t\tif (this.index >= this.values.length){\n\t\t\tthis.index = 0;\n\t\t\t//reshuffle the values for next time\n\t\t\tthis._shuffleValues();\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.AlternateUp){\n\t\tif (this._direction === Tone.CtrlPattern.Type.Up){\n\t\t\tthis.index += 2;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t} else {\n\t\t\tthis.index -= 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t}\n\t\tif (this.index >= this.values.length){\n\t\t\tthis.index = 0;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.AlternateDown){\n\t\tif (this._direction === Tone.CtrlPattern.Type.Up){\n\t\t\tthis.index += 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t} else {\n\t\t\tthis.index -= 2;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t}\n\t\tif (this.index < 0){\n\t\t\tthis.index = this.values.length - 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t}\n\t}\n\treturn this.value;\n};\n\n/**\n *  Shuffles the values and places the results into the _shuffled\n *  @private\n */\nTone.CtrlPattern.prototype._shuffleValues = function(){\n\tvar copy = [];\n\tthis._shuffled = [];\n\tfor (var i = 0; i < this.values.length; i++){\n\t\tcopy[i] = i;\n\t}\n\twhile (copy.length > 0){\n\t\tvar randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n\t\tthis._shuffled.push(randVal[0]);\n\t}\n};\n\n/**\n *  Clean up\n *  @returns {Tone.CtrlPattern} this\n */\nTone.CtrlPattern.prototype.dispose = function(){\n\tthis._shuffled = null;\n\tthis.values = null;\n};\n\nexport default Tone.CtrlPattern;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/TransportEvent\";\nimport \"../type/Ticks\";\n\n/**\n *  @class Tone.TransportRepeatEvent is an internal class used by Tone.Transport\n *         to schedule repeat events. This class should not be instantiated directly.\n *  @extends {Tone.TransportEvent}\n *  @param {Object} options\n */\nTone.TransportRepeatEvent = function(Transport, options){\n\n\tTone.TransportEvent.call(this, Transport, options);\n\toptions = Tone.defaultArg(options, Tone.TransportRepeatEvent.defaults);\n\n\t/**\n\t * When the event should stop repeating\n\t * @type {Ticks}\n\t * @private\n\t */\n\tthis.duration = Tone.Ticks(options.duration);\n\n\t/**\n\t * The interval of the repeated event\n\t * @type {Ticks}\n\t * @private\n\t */\n\tthis._interval = Tone.Ticks(options.interval);\n\n\t/**\n\t * The ID of the current timeline event\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._currentId = -1;\n\n\t/**\n\t * The ID of the next timeline event\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._nextId = -1;\n\n\t/**\n\t  * The time of the next event\n\t  * @type {Ticks}\n\t  * @private\n\t  */\n\tthis._nextTick = this.time;\n\n\t/**\n\t * a reference to the bound start method\n\t * @type {Function}\n\t * @private\n\t */\n\tthis._boundRestart = this._restart.bind(this);\n\tthis.Transport.on(\"start loopStart\", this._boundRestart);\n\tthis._restart();\n};\n\nTone.extend(Tone.TransportRepeatEvent, Tone.TransportEvent);\n\n/**\n * The defaults\n * @static\n * @type {Object}\n */\nTone.TransportRepeatEvent.defaults = {\n\t\"duration\" : Infinity,\n\t\"interval\" : 1\n};\n\n/**\n * Invoke the callback. Returns the tick time which\n * the next event should be scheduled at.\n * @param  {Number} time  The AudioContext time in seconds of the event\n */\nTone.TransportRepeatEvent.prototype.invoke = function(time){\n\t//create more events if necessary\n\tthis._createEvents(time);\n\t//call the super class\n\tTone.TransportEvent.prototype.invoke.call(this, time);\n};\n\n/**\n * Push more events onto the timeline to keep up with the position of the timeline\n * @private\n */\nTone.TransportRepeatEvent.prototype._createEvents = function(time){\n\t// schedule the next event\n\tvar ticks = this.Transport.getTicksAtTime(time);\n\tif (ticks >= this.time && ticks >= this._nextTick &&\n\tthis._nextTick + this._interval < this.time + this.duration){\n\t\tthis._nextTick += this._interval;\n\t\tthis._currentId = this._nextId;\n\t\tthis._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\t}\n};\n\n/**\n * Push more events onto the timeline to keep up with the position of the timeline\n * @private\n */\nTone.TransportRepeatEvent.prototype._restart = function(time){\n\tthis.Transport.clear(this._currentId);\n\tthis.Transport.clear(this._nextId);\n\tthis._nextTick = this.time;\n\tvar ticks = this.Transport.getTicksAtTime(time);\n\tif (ticks > this.time){\n\t\tthis._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n\t}\n\tthis._currentId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\tthis._nextTick += this._interval;\n\tthis._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n};\n\n/**\n * Clean up\n * @return {Tone.TransportRepeatEvent} this\n */\nTone.TransportRepeatEvent.prototype.dispose = function(){\n\tthis.Transport.clear(this._currentId);\n\tthis.Transport.clear(this._nextId);\n\tthis.Transport.off(\"start loopStart\", this._boundRestart);\n\tthis._boundCreateEvents = null;\n\tTone.TransportEvent.prototype.dispose.call(this);\n\tthis.duration = null;\n\tthis._interval = null;\n\treturn this;\n};\n\nexport default Tone.TransportRepeatEvent;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\n\n/**\n *  @class Similar to Tone.Timeline, but all events represent\n *         intervals with both \"time\" and \"duration\" times. The\n *         events are placed in a tree structure optimized\n *         for querying an intersection point with the timeline\n *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n *         to represent the data.\n *  @extends {Tone}\n */\nTone.IntervalTimeline = function(){\n\n\tTone.call(this);\n\n\t/**\n\t *  The root node of the inteval tree\n\t *  @type  {IntervalNode}\n\t *  @private\n\t */\n\tthis._root = null;\n\n\t/**\n\t *  Keep track of the length of the timeline.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._length = 0;\n};\n\nTone.extend(Tone.IntervalTimeline);\n\n/**\n *  The event to add to the timeline. All events must\n *  have a time and duration value\n *  @param  {Object}  event  The event to add to the timeline\n *  @return  {Tone.IntervalTimeline}  this\n */\nTone.IntervalTimeline.prototype.add = function(event){\n\tif (Tone.isUndef(event.time) || Tone.isUndef(event.duration)){\n\t\tthrow new Error(\"Tone.IntervalTimeline: events must have time and duration parameters\");\n\t}\n\tevent.time = event.time.valueOf();\n\tvar node = new IntervalNode(event.time, event.time + event.duration, event);\n\tif (this._root === null){\n\t\tthis._root = node;\n\t} else {\n\t\tthis._root.insert(node);\n\t}\n\tthis._length++;\n\t// Restructure tree to be balanced\n\twhile (node !== null){\n\t\tnode.updateHeight();\n\t\tnode.updateMax();\n\t\tthis._rebalance(node);\n\t\tnode = node.parent;\n\t}\n\treturn this;\n};\n\n/**\n *  Remove an event from the timeline.\n *  @param  {Object}  event  The event to remove from the timeline\n *  @return  {Tone.IntervalTimeline}  this\n */\nTone.IntervalTimeline.prototype.remove = function(event){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.search(event.time, results);\n\t\tfor (var i = 0; i < results.length; i++){\n\t\t\tvar node = results[i];\n\t\t\tif (node.event === event){\n\t\t\t\tthis._removeNode(node);\n\t\t\t\tthis._length--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  The number of items in the timeline.\n *  @type {Number}\n *  @memberOf Tone.IntervalTimeline#\n *  @name length\n *  @readOnly\n */\nObject.defineProperty(Tone.IntervalTimeline.prototype, \"length\", {\n\tget : function(){\n\t\treturn this._length;\n\t}\n});\n\n/**\n *  Remove events whose time time is after the given time\n *  @param  {Number}  time  The time to query.\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.cancel = function(after){\n\tthis.forEachFrom(after, function(event){\n\t\tthis.remove(event);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Set the root node as the given node\n *  @param {IntervalNode} node\n *  @private\n */\nTone.IntervalTimeline.prototype._setRoot = function(node){\n\tthis._root = node;\n\tif (this._root !== null){\n\t\tthis._root.parent = null;\n\t}\n};\n\n/**\n *  Replace the references to the node in the node's parent\n *  with the replacement node.\n *  @param  {IntervalNode}  node\n *  @param  {IntervalNode}  replacement\n *  @private\n */\nTone.IntervalTimeline.prototype._replaceNodeInParent = function(node, replacement){\n\tif (node.parent !== null){\n\t\tif (node.isLeftChild()){\n\t\t\tnode.parent.left = replacement;\n\t\t} else {\n\t\t\tnode.parent.right = replacement;\n\t\t}\n\t\tthis._rebalance(node.parent);\n\t} else {\n\t\tthis._setRoot(replacement);\n\t}\n};\n\n/**\n *  Remove the node from the tree and replace it with\n *  a successor which follows the schema.\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._removeNode = function(node){\n\tif (node.left === null && node.right === null){\n\t\tthis._replaceNodeInParent(node, null);\n\t} else if (node.right === null){\n\t\tthis._replaceNodeInParent(node, node.left);\n\t} else if (node.left === null){\n\t\tthis._replaceNodeInParent(node, node.right);\n\t} else {\n\t\tvar balance = node.getBalance();\n\t\tvar replacement, temp;\n\t\tif (balance > 0){\n\t\t\tif (node.left.right === null){\n\t\t\t\treplacement = node.left;\n\t\t\t\treplacement.right = node.right;\n\t\t\t\ttemp = replacement;\n\t\t\t} else {\n\t\t\t\treplacement = node.left.right;\n\t\t\t\twhile (replacement.right !== null){\n\t\t\t\t\treplacement = replacement.right;\n\t\t\t\t}\n\t\t\t\treplacement.parent.right = replacement.left;\n\t\t\t\ttemp = replacement.parent;\n\t\t\t\treplacement.left = node.left;\n\t\t\t\treplacement.right = node.right;\n\t\t\t}\n\t\t} else if (node.right.left === null){\n\t\t\treplacement = node.right;\n\t\t\treplacement.left = node.left;\n\t\t\ttemp = replacement;\n\t\t} else {\n\t\t\treplacement = node.right.left;\n\t\t\twhile (replacement.left !== null){\n\t\t\t\treplacement = replacement.left;\n\t\t\t}\n\t\t\treplacement.parent.left = replacement.right;\n\t\t\ttemp = replacement.parent;\n\t\t\treplacement.left = node.left;\n\t\t\treplacement.right = node.right;\n\t\t}\n\t\tif (node.parent !== null){\n\t\t\tif (node.isLeftChild()){\n\t\t\t\tnode.parent.left = replacement;\n\t\t\t} else {\n\t\t\t\tnode.parent.right = replacement;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(replacement);\n\t\t}\n\t\t// this._replaceNodeInParent(node, replacement);\n\t\tthis._rebalance(temp);\n\t}\n\tnode.dispose();\n};\n\n/**\n *  Rotate the tree to the left\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._rotateLeft = function(node){\n\tvar parent = node.parent;\n\tvar isLeftChild = node.isLeftChild();\n\n\t// Make node.right the new root of this sub tree (instead of node)\n\tvar pivotNode = node.right;\n\tnode.right = pivotNode.left;\n\tpivotNode.left = node;\n\n\tif (parent !== null){\n\t\tif (isLeftChild){\n\t\t\tparent.left = pivotNode;\n\t\t} else {\n\t\t\tparent.right = pivotNode;\n\t\t}\n\t} else {\n\t\tthis._setRoot(pivotNode);\n\t}\n};\n\n/**\n *  Rotate the tree to the right\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._rotateRight = function(node){\n\tvar parent = node.parent;\n\tvar isLeftChild = node.isLeftChild();\n\n\t// Make node.left the new root of this sub tree (instead of node)\n\tvar pivotNode = node.left;\n\tnode.left = pivotNode.right;\n\tpivotNode.right = node;\n\n\tif (parent !== null){\n\t\tif (isLeftChild){\n\t\t\tparent.left = pivotNode;\n\t\t} else {\n\t\t\tparent.right = pivotNode;\n\t\t}\n\t} else {\n\t\tthis._setRoot(pivotNode);\n\t}\n};\n\n/**\n *  Balance the BST\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._rebalance = function(node){\n\tvar balance = node.getBalance();\n\tif (balance > 1){\n\t\tif (node.left.getBalance() < 0){\n\t\t\tthis._rotateLeft(node.left);\n\t\t} else {\n\t\t\tthis._rotateRight(node);\n\t\t}\n\t} else if (balance < -1){\n\t\tif (node.right.getBalance() > 0){\n\t\t\tthis._rotateRight(node.right);\n\t\t} else {\n\t\t\tthis._rotateLeft(node);\n\t\t}\n\t}\n};\n\n/**\n *  Get an event whose time and duration span the give time. Will\n *  return the match whose \"time\" value is closest to the given time.\n *  @param  {Object}  event  The event to add to the timeline\n *  @return  {Object}  The event which spans the desired time\n */\nTone.IntervalTimeline.prototype.get = function(time){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.search(time, results);\n\t\tif (results.length > 0){\n\t\t\tvar max = results[0];\n\t\t\tfor (var i = 1; i < results.length; i++){\n\t\t\t\tif (results[i].low > max.low){\n\t\t\t\t\tmax = results[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn max.event;\n\t\t}\n\t}\n\treturn null;\n};\n\n/**\n *  Iterate over everything in the timeline.\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.forEach = function(callback){\n\tif (this._root !== null){\n\t\tvar allNodes = [];\n\t\tthis._root.traverse(function(node){\n\t\t\tallNodes.push(node);\n\t\t});\n\t\tfor (var i = 0; i < allNodes.length; i++){\n\t\t\tvar ev = allNodes[i].event;\n\t\t\tif (ev){\n\t\t\t\tcallback(ev);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array in which the given time\n *  overlaps with the time and duration time of the event.\n *  @param  {Number}  time The time to check if items are overlapping\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.forEachAtTime = function(time, callback){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.search(time, results);\n\t\tfor (var i = results.length - 1; i >= 0; i--){\n\t\t\tvar ev = results[i].event;\n\t\t\tif (ev){\n\t\t\t\tcallback(ev);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array in which the time is greater\n *  than or equal to the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.forEachFrom = function(time, callback){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.searchAfter(time, results);\n\t\tfor (var i = results.length - 1; i >= 0; i--){\n\t\t\tvar ev = results[i].event;\n\t\t\tcallback(ev);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up\n *  @return  {Tone.IntervalTimeline}  this\n */\nTone.IntervalTimeline.prototype.dispose = function(){\n\tvar allNodes = [];\n\tif (this._root !== null){\n\t\tthis._root.traverse(function(node){\n\t\t\tallNodes.push(node);\n\t\t});\n\t}\n\tfor (var i = 0; i < allNodes.length; i++){\n\t\tallNodes[i].dispose();\n\t}\n\tallNodes = null;\n\tthis._root = null;\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tINTERVAL NODE HELPER\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Represents a node in the binary search tree, with the addition\n *  of a \"high\" value which keeps track of the highest value of\n *  its children.\n *  References:\n *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n *  @param {Number} low\n *  @param {Number} high\n *  @private\n */\nvar IntervalNode = function(low, high, event){\n\t//the event container\n\tthis.event = event;\n\t//the low value\n\tthis.low = low;\n\t//the high value\n\tthis.high = high;\n\t//the high value for this and all child nodes\n\tthis.max = this.high;\n\t//the nodes to the left\n\tthis._left = null;\n\t//the nodes to the right\n\tthis._right = null;\n\t//the parent node\n\tthis.parent = null;\n\t//the number of child nodes\n\tthis.height = 0;\n};\n\n/**\n *  Insert a node into the correct spot in the tree\n *  @param  {IntervalNode}  node\n */\nIntervalNode.prototype.insert = function(node){\n\tif (node.low <= this.low){\n\t\tif (this.left === null){\n\t\t\tthis.left = node;\n\t\t} else {\n\t\t\tthis.left.insert(node);\n\t\t}\n\t} else if (this.right === null){\n\t\tthis.right = node;\n\t} else {\n\t\tthis.right.insert(node);\n\t}\n};\n\n/**\n *  Search the tree for nodes which overlap\n *  with the given point\n *  @param  {Number}  point  The point to query\n *  @param  {Array}  results  The array to put the results\n */\nIntervalNode.prototype.search = function(point, results){\n\t// If p is to the right of the rightmost point of any interval\n\t// in this node and all children, there won't be any matches.\n\tif (point > this.max){\n\t\treturn;\n\t}\n\t// Search left children\n\tif (this.left !== null){\n\t\tthis.left.search(point, results);\n\t}\n\t// Check this node\n\tif (this.low <= point && this.high > point){\n\t\tresults.push(this);\n\t}\n\t// If p is to the left of the time of this interval,\n\t// then it can't be in any child to the right.\n\tif (this.low > point){\n\t\treturn;\n\t}\n\t// Search right children\n\tif (this.right !== null){\n\t\tthis.right.search(point, results);\n\t}\n};\n\n/**\n *  Search the tree for nodes which are less\n *  than the given point\n *  @param  {Number}  point  The point to query\n *  @param  {Array}  results  The array to put the results\n */\nIntervalNode.prototype.searchAfter = function(point, results){\n\t// Check this node\n\tif (this.low >= point){\n\t\tresults.push(this);\n\t\tif (this.left !== null){\n\t\t\tthis.left.searchAfter(point, results);\n\t\t}\n\t}\n\t// search the right side\n\tif (this.right !== null){\n\t\tthis.right.searchAfter(point, results);\n\t}\n};\n\n/**\n *  Invoke the callback on this element and both it's branches\n *  @param  {Function}  callback\n */\nIntervalNode.prototype.traverse = function(callback){\n\tcallback(this);\n\tif (this.left !== null){\n\t\tthis.left.traverse(callback);\n\t}\n\tif (this.right !== null){\n\t\tthis.right.traverse(callback);\n\t}\n};\n\n/**\n *  Update the height of the node\n */\nIntervalNode.prototype.updateHeight = function(){\n\tif (this.left !== null && this.right !== null){\n\t\tthis.height = Math.max(this.left.height, this.right.height) + 1;\n\t} else if (this.right !== null){\n\t\tthis.height = this.right.height + 1;\n\t} else if (this.left !== null){\n\t\tthis.height = this.left.height + 1;\n\t} else {\n\t\tthis.height = 0;\n\t}\n};\n\n/**\n *  Update the height of the node\n */\nIntervalNode.prototype.updateMax = function(){\n\tthis.max = this.high;\n\tif (this.left !== null){\n\t\tthis.max = Math.max(this.max, this.left.max);\n\t}\n\tif (this.right !== null){\n\t\tthis.max = Math.max(this.max, this.right.max);\n\t}\n};\n\n/**\n *  The balance is how the leafs are distributed on the node\n *  @return  {Number}  Negative numbers are balanced to the right\n */\nIntervalNode.prototype.getBalance = function(){\n\tvar balance = 0;\n\tif (this.left !== null && this.right !== null){\n\t\tbalance = this.left.height - this.right.height;\n\t} else if (this.left !== null){\n\t\tbalance = this.left.height + 1;\n\t} else if (this.right !== null){\n\t\tbalance = -(this.right.height + 1);\n\t}\n\treturn balance;\n};\n\n/**\n *  @returns {Boolean} true if this node is the left child\n *  of its parent\n */\nIntervalNode.prototype.isLeftChild = function(){\n\treturn this.parent !== null && this.parent.left === this;\n};\n\n/**\n *  get/set the left node\n *  @type {IntervalNode}\n */\nObject.defineProperty(IntervalNode.prototype, \"left\", {\n\tget : function(){\n\t\treturn this._left;\n\t},\n\tset : function(node){\n\t\tthis._left = node;\n\t\tif (node !== null){\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n});\n\n/**\n *  get/set the right node\n *  @type {IntervalNode}\n */\nObject.defineProperty(IntervalNode.prototype, \"right\", {\n\tget : function(){\n\t\treturn this._right;\n\t},\n\tset : function(node){\n\t\tthis._right = node;\n\t\tif (node !== null){\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n});\n\n/**\n *  null out references.\n */\nIntervalNode.prototype.dispose = function(){\n\tthis.parent = null;\n\tthis._left = null;\n\tthis._right = null;\n\tthis.event = null;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tEND INTERVAL NODE HELPER\n///////////////////////////////////////////////////////////////////////////\n\nexport default Tone.IntervalTimeline;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\n\n/**\n * @class Tone.TickSignal extends Tone.Signal, but adds the capability\n *        to calculate the number of elapsed ticks. exponential and target curves\n *        are approximated with multiple linear ramps.\n *\n *        Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos, for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n *        describing integrating timing functions for tempo calculations.\n *\n * @param {Number} value The initial value of the signal\n * @extends {Tone.Signal}\n */\nTone.TickSignal = function(value){\n\n\tvalue = Tone.defaultArg(value, 1);\n\n\tTone.Signal.call(this, {\n\t\t\"units\" : Tone.Type.Ticks,\n\t\t\"value\" : value\n\t});\n\n\t//extend the memory\n\tthis._events.memory = Infinity;\n\n\t//clear the clock from the beginning\n\tthis.cancelScheduledValues(0);\n\t//set an initial event\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\"time\" : 0,\n\t\t\"value\" : value\n\t});\n};\n\nTone.extend(Tone.TickSignal, Tone.Signal);\n\n/**\n * Wraps Tone.Signal methods so that they also\n * record the ticks.\n * @param  {Function} method\n * @return {Function}\n * @private\n */\nfunction _wrapScheduleMethods(method){\n\treturn function(value, time){\n\t\ttime = this.toSeconds(time);\n\t\tmethod.apply(this, arguments);\n\t\tvar event = this._events.get(time);\n\t\tvar previousEvent = this._events.previousEvent(event);\n\t\tvar ticksUntilTime = this._getTicksUntilEvent(previousEvent, time);\n\t\tevent.ticks = Math.max(ticksUntilTime, 0);\n\t\treturn this;\n\t};\n}\n\nTone.TickSignal.prototype.setValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.setValueAtTime);\nTone.TickSignal.prototype.linearRampToValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.linearRampToValueAtTime);\n\n/**\n *  Start exponentially approaching the target value at the given time with\n *  a rate having the given time constant.\n *  @param {number} value\n *  @param {Time} startTime\n *  @param {number} timeConstant\n *  @returns {Tone.TickSignal} this\n */\nTone.TickSignal.prototype.setTargetAtTime = function(value, time, constant){\n\t//aproximate it with multiple linear ramps\n\ttime = this.toSeconds(time);\n\tthis.setRampPoint(time);\n\tvalue = this._fromUnits(value);\n\n\t//start from previously scheduled value\n\tvar prevEvent = this._events.get(time);\n\tvar segments = Math.round(Math.max(1 / constant, 1));\n\tfor (var i = 0; i <= segments; i++){\n\t\tvar segTime = constant * i + time;\n\t\tvar rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, value, constant, segTime);\n\t\tthis.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Schedules an exponential continuous change in parameter value from\n *  the previous scheduled parameter value to the given value.\n *  @param  {number} value\n *  @param  {Time} endTime\n *  @returns {Tone.TickSignal} this\n */\nTone.TickSignal.prototype.exponentialRampToValueAtTime = function(value, time){\n\t//aproximate it with multiple linear ramps\n\ttime = this.toSeconds(time);\n\tvalue = this._fromUnits(value);\n\n\t//start from previously scheduled value\n\tvar prevEvent = this._events.get(time);\n\t//approx 10 segments per second\n\tvar segments = Math.round(Math.max((time - prevEvent.time)*10, 1));\n\tvar segmentDur = ((time - prevEvent.time)/segments);\n\tfor (var i = 0; i <= segments; i++){\n\t\tvar segTime = segmentDur * i + prevEvent.time;\n\t\tvar rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, value, segTime);\n\t\tthis.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t}\n\treturn this;\n};\n\n/**\n * Returns the tick value at the time. Takes into account\n * any automation curves scheduled on the signal.\n * @private\n * @param  {Time} time The time to get the tick count at\n * @return {Ticks}      The number of ticks which have elapsed at the time\n *                          given any automations.\n */\nTone.TickSignal.prototype._getTicksUntilEvent = function(event, time){\n\tif (event === null){\n\t\tevent = {\n\t\t\t\"ticks\" : 0,\n\t\t\t\"time\" : 0\n\t\t};\n\t} else if (Tone.isUndef(event.ticks)){\n\t\tvar previousEvent = this._events.previousEvent(event);\n\t\tevent.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n\t}\n\tvar val0 = this.getValueAtTime(event.time);\n\tvar val1 = this.getValueAtTime(time);\n\t//if it's right on the line, take the previous value\n\tif (this._events.get(time).time === time && this._events.get(time).type === Tone.Param.AutomationType.SetValue){\n\t\tval1 = this.getValueAtTime(time - this.sampleTime);\n\t}\n\treturn 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n};\n\n/**\n * Returns the tick value at the time. Takes into account\n * any automation curves scheduled on the signal.\n * @param  {Time} time The time to get the tick count at\n * @return {Ticks}      The number of ticks which have elapsed at the time\n *                          given any automations.\n */\nTone.TickSignal.prototype.getTicksAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar event = this._events.get(time);\n\treturn Math.max(this._getTicksUntilEvent(event, time), 0);\n};\n\n/**\n * Return the elapsed time of the number of ticks from the given time\n * @param {Ticks} ticks The number of ticks to calculate\n * @param  {Time} time The time to get the next tick from\n * @return {Seconds} The duration of the number of ticks from the given time in seconds\n */\nTone.TickSignal.prototype.getDurationOfTicks = function(ticks, time){\n\ttime = this.toSeconds(time);\n\tvar currentTick = this.getTicksAtTime(time);\n\treturn this.getTimeOfTick(currentTick + ticks) - time;\n};\n\n/**\n * Given a tick, returns the time that tick occurs at.\n * @param  {Ticks} tick\n * @return {Time}      The time that the tick occurs.\n */\nTone.TickSignal.prototype.getTimeOfTick = function(tick){\n\tvar before = this._events.get(tick, \"ticks\");\n\tvar after = this._events.getAfter(tick, \"ticks\");\n\tif (before && before.ticks === tick){\n\t\treturn before.time;\n\t} else if (before && after &&\n\t\tafter.type === Tone.Param.AutomationType.Linear &&\n\t\tbefore.value !== after.value){\n\t\tvar val0 = this.getValueAtTime(before.time);\n\t\tvar val1 = this.getValueAtTime(after.time);\n\t\tvar delta = (val1 - val0) / (after.time - before.time);\n\t\tvar k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n\t\tvar sol1 = (-val0 + k) / delta;\n\t\tvar sol2 = (-val0 - k) / delta;\n\t\treturn (sol1 > 0 ? sol1 : sol2) + before.time;\n\t} else if (before){\n\t\tif (before.value === 0){\n\t\t\treturn Infinity;\n\t\t} else {\n\t\t\treturn before.time + (tick - before.ticks) / before.value;\n\t\t}\n\t} else {\n\t\treturn tick / this._initialValue;\n\t}\n};\n\n/**\n * Convert some number of ticks their the duration in seconds accounting\n * for any automation curves starting at the given time.\n * @param  {Ticks} ticks The number of ticks to convert to seconds.\n * @param  {Time} [when=now]  When along the automation timeline to convert the ticks.\n * @return {Tone.Time}       The duration in seconds of the ticks.\n */\nTone.TickSignal.prototype.ticksToTime = function(ticks, when){\n\twhen = this.toSeconds(when);\n\treturn new Tone.Time(this.getDurationOfTicks(ticks, when));\n};\n\n/**\n * The inverse of [ticksToTime](#tickstotime). Convert a duration in\n * seconds to the corresponding number of ticks accounting for any\n * automation curves starting at the given time.\n * @param  {Time} duration The time interval to convert to ticks.\n * @param  {Time} [when=now]     When along the automation timeline to convert the ticks.\n * @return {Tone.Ticks}          The duration in ticks.\n */\nTone.TickSignal.prototype.timeToTicks = function(duration, when){\n\twhen = this.toSeconds(when);\n\tduration = this.toSeconds(duration);\n\tvar startTicks = this.getTicksAtTime(when);\n\tvar endTicks = this.getTicksAtTime(when + duration);\n\treturn new Tone.Ticks(endTicks - startTicks);\n};\n\nexport default Tone.TickSignal;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/TickSource\";\nimport \"../core/TimelineState\";\nimport \"../core/Emitter\";\nimport \"../core/Context\";\n\n/**\n *  @class  A sample accurate clock which provides a callback at the given rate.\n *          While the callback is not sample-accurate (it is still susceptible to\n *          loose JS timing), the time passed in as the argument to the callback\n *          is precise. For most applications, it is better to use Tone.Transport\n *          instead of the Clock by itself since you can synchronize multiple callbacks.\n *\n * \t@constructor\n *  @extends {Tone.Emitter}\n * \t@param {function} callback The callback to be invoked with the time of the audio event\n * \t@param {Frequency} frequency The rate of the callback\n * \t@example\n * //the callback will be invoked approximately once a second\n * //and will print the time exactly once a second apart.\n * var clock = new Tone.Clock(function(time){\n * \tconsole.log(time);\n * }, 1);\n */\nTone.Clock = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"frequency\"], Tone.Clock);\n\tTone.Emitter.call(this);\n\n\t/**\n\t *  The callback function to invoke at the scheduled tick.\n\t *  @type  {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t/**\n\t *  The next time the callback is scheduled.\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._nextTick = 0;\n\n\t/**\n\t *  The tick counter\n\t *  @type  {Tone.TickSource}\n\t *  @private\n\t */\n\tthis._tickSource = new Tone.TickSource(options.frequency);\n\n\t/**\n\t *  The last time the loop callback was invoked\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._lastUpdate = 0;\n\n\t/**\n\t *  The rate the callback function should be invoked.\n\t *  @type  {BPM}\n\t *  @signal\n\t */\n\tthis.frequency = this._tickSource.frequency;\n\tthis._readOnly(\"frequency\");\n\n\t/**\n\t *  The state timeline\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\t//add an initial state\n\tthis._state.setStateAtTime(Tone.State.Stopped, 0);\n\n\t/**\n\t *  The loop function bound to its context.\n\t *  This is necessary to remove the event in the end.\n\t *  @type {Function}\n\t *  @private\n\t */\n\tthis._boundLoop = this._loop.bind(this);\n\n\t//bind a callback to the worker thread\n\tthis.context.on(\"tick\", this._boundLoop);\n};\n\nTone.extend(Tone.Clock, Tone.Emitter);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Clock.defaults = {\n\t\"callback\" : Tone.noOp,\n\t\"frequency\" : 1,\n};\n\n/**\n *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.Clock#\n *  @name state\n */\nObject.defineProperty(Tone.Clock.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._state.getValueAtTime(this.now());\n\t}\n});\n\n/**\n *  Start the clock at the given time. Optionally pass in an offset\n *  of where to start the tick counter from.\n *  @param  {Time=}  time    The time the clock should start\n *  @param  {Ticks=}  offset  Where the tick counter starts counting from.\n *  @return  {Tone.Clock}  this\n */\nTone.Clock.prototype.start = function(time, offset){\n\t//make sure the context is started\n\tthis.context.resume();\n\t//start the loop\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) !== Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tthis._tickSource.start(time, offset);\n\t\tif (time < this._lastUpdate){\n\t\t\tthis.emit(\"start\", time, offset);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the clock. Stopping the clock resets the tick counter to 0.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.Clock} this\n *  @example\n * clock.stop();\n */\nTone.Clock.prototype.stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._state.cancel(time);\n\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\tthis._tickSource.stop(time);\n\tif (time < this._lastUpdate){\n\t\tthis.emit(\"stop\", time);\n\t}\n\treturn this;\n};\n\n/**\n *  Pause the clock. Pausing does not reset the tick counter.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.Clock} this\n */\nTone.Clock.prototype.pause = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Paused, time);\n\t\tthis._tickSource.pause(time);\n\t\tif (time < this._lastUpdate){\n\t\t\tthis.emit(\"pause\", time);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  The number of times the callback was invoked. Starts counting at 0\n *  and increments after the callback was invoked.\n *  @type {Ticks}\n */\nObject.defineProperty(Tone.Clock.prototype, \"ticks\", {\n\tget : function(){\n\t\treturn Math.ceil(this.getTicksAtTime(this.now()));\n\t},\n\tset : function(t){\n\t\tthis._tickSource.ticks = t;\n\t}\n});\n\n/**\n *  The time since ticks=0 that the Clock has been running. Accounts\n *  for tempo curves\n *  @type {Seconds}\n */\nObject.defineProperty(Tone.Clock.prototype, \"seconds\", {\n\tget : function(){\n\t\treturn this._tickSource.seconds;\n\t},\n\tset : function(s){\n\t\tthis._tickSource.seconds = s;\n\t}\n});\n\n/**\n *  Return the elapsed seconds at the given time.\n *  @param  {Time}  time  When to get the elapsed seconds\n *  @return  {Seconds}  The number of elapsed seconds\n */\nTone.Clock.prototype.getSecondsAtTime = function(time){\n\treturn this._tickSource.getSecondsAtTime(time);\n};\n\n/**\n * Set the clock's ticks at the given time.\n * @param  {Ticks} ticks The tick value to set\n * @param  {Time} time  When to set the tick value\n * @return {Tone.Clock}       this\n */\nTone.Clock.prototype.setTicksAtTime = function(ticks, time){\n\tthis._tickSource.setTicksAtTime(ticks, time);\n\treturn this;\n};\n\n/**\n * Get the clock's ticks at the given time.\n * @param  {Time} time  When to get the tick value\n * @return {Ticks}       The tick value at the given time.\n */\nTone.Clock.prototype.getTicksAtTime = function(time){\n\treturn this._tickSource.getTicksAtTime(time);\n};\n\n/**\n * Get the time of the next tick\n * @param  {Ticks} ticks The tick number.\n * @param  {Time} before \n * @return {Tone.Clock}       this\n */\nTone.Clock.prototype.nextTickTime = function(offset, when){\n\twhen = this.toSeconds(when);\n\tvar currentTick = this.getTicksAtTime(when);\n\treturn this._tickSource.getTimeOfTick(currentTick+offset, when);\n};\n\n/**\n *  The scheduling loop.\n *  @private\n */\nTone.Clock.prototype._loop = function(){\n\n\tvar startTime = this._lastUpdate;\n\tvar endTime = this.now();\n\tthis._lastUpdate = endTime;\n\n\tif (startTime !== endTime){\n\t\t//the state change events\n\t\tthis._state.forEachBetween(startTime, endTime, function(e){\n\t\t\tswitch (e.state){\n\t\t\t\tcase Tone.State.Started : \n\t\t\t\t\tvar offset = this._tickSource.getTicksAtTime(e.time);\n\t\t\t\t\tthis.emit(\"start\", e.time, offset);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.State.Stopped : \n\t\t\t\t\tif (e.time !== 0){\n\t\t\t\t\t\tthis.emit(\"stop\", e.time);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.State.Paused :\n\t\t\t\t\tthis.emit(\"pause\", e.time); \n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}.bind(this));\n\t\t//the tick callbacks\n\t\tthis._tickSource.forEachTickBetween(startTime, endTime, function(time, ticks){\n\t\t\tthis.callback(time, ticks);\n\t\t}.bind(this));\n\t}\n};\n\n/**\n *  Returns the scheduled state at the given time.\n *  @param  {Time}  time  The time to query.\n *  @return  {String}  The name of the state input in setStateAtTime.\n *  @example\n * clock.start(\"+0.1\");\n * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n */\nTone.Clock.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\treturn this._state.getValueAtTime(time);\n};\n\n/**\n *  Clean up\n *  @returns {Tone.Clock} this\n */\nTone.Clock.prototype.dispose = function(){\n\tTone.Emitter.prototype.dispose.call(this);\n\tthis.context.off(\"tick\", this._boundLoop);\n\tthis._writable(\"frequency\");\n\tthis._tickSource.dispose();\n\tthis._tickSource = null;\n\tthis.frequency = null;\n\tthis._boundLoop = null;\n\tthis._nextTick = Infinity;\n\tthis.callback = null;\n\tthis._state.dispose();\n\tthis._state = null;\n};\n\nexport default Tone.Clock;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class  GreaterThanZero outputs 1 when the input is strictly greater than zero\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @example\n * var gt0 = new Tone.GreaterThanZero();\n * var sig = new Tone.Signal(0.01).connect(gt0);\n * //the output of gt0 is 1.\n * sig.value = 0;\n * //the output of gt0 is 0.\n */\nTone.GreaterThanZero = function(){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._thresh = this.output = new Tone.WaveShaper(function(val){\n\t\tif (val <= 0){\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}, 127);\n\n\t/**\n\t *  scale the first thresholded signal by a large value.\n\t *  this will help with values which are very close to 0\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = this.input = new Tone.Multiply(10000);\n\n\t//connections\n\tthis._scale.connect(this._thresh);\n};\n\nTone.extend(Tone.GreaterThanZero, Tone.SignalBase);\n\n/**\n *  dispose method\n *  @returns {Tone.GreaterThanZero} this\n */\nTone.GreaterThanZero.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._thresh.dispose();\n\tthis._thresh = null;\n\treturn this;\n};\n\nexport default Tone.GreaterThanZero;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/GreaterThanZero\";\nimport \"../signal/Subtract\";\nimport \"../signal/Signal\";\n\n/**\n *  @class  Output 1 if the signal is greater than the value, otherwise outputs 0.\n *          can compare two signals or a signal and a number.\n *\n *  @constructor\n *  @extends {Tone.Signal}\n *  @param {number} [value=0] the value to compare to the incoming signal\n *  @example\n * var gt = new Tone.GreaterThan(2);\n * var sig = new Tone.Signal(4).connect(gt);\n * //output of gt is equal 1.\n */\nTone.GreaterThan = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  subtract the amount from the incoming signal\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._param = this.input[0] = new Tone.Subtract(value);\n\tthis.input[1] = this._param.input[1];\n\n\t/**\n\t *  compare that amount to zero\n\t *  @type {Tone.GreaterThanZero}\n\t *  @private\n\t */\n\tthis._gtz = this.output = new Tone.GreaterThanZero();\n\n\t//connect\n\tthis._param.connect(this._gtz);\n};\n\nTone.extend(Tone.GreaterThan, Tone.Signal);\n\n/**\n *  dispose method\n *  @returns {Tone.GreaterThan} this\n */\nTone.GreaterThan.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._gtz.dispose();\n\tthis._gtz = null;\n\treturn this;\n};\n\nexport default Tone.GreaterThan;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Envelope\";\nimport \"../signal/Scale\";\n\n/**\n *  @class Tone.ScaledEnvelop is an envelope which can be scaled\n *         to any range. It's useful for applying an envelope\n *         to a frequency or any other non-NormalRange signal\n *         parameter.\n *\n *  @extends {Tone.Envelope}\n *  @constructor\n *  @param {Time|Object} [attack]\tthe attack time in seconds\n *  @param {Time} [decay]\tthe decay time in seconds\n *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n *  @param {Time} [release]\tthe release time in seconds\n *  @example\n *  var scaledEnv = new Tone.ScaledEnvelope({\n *  \t\"attack\" : 0.2,\n *  \t\"min\" : 200,\n *  \t\"max\" : 2000\n *  });\n *  scaledEnv.connect(oscillator.frequency);\n */\nTone.ScaledEnvelope = function(){\n\n\t//get all of the defaults\n\tvar options = Tone.defaults(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope);\n\tTone.Envelope.call(this, options);\n\toptions = Tone.defaultArg(options, Tone.ScaledEnvelope.defaults);\n\n\t/**\n\t *  scale the incoming signal by an exponent\n\t *  @type {Tone.Pow}\n\t *  @private\n\t */\n\tthis._exp = this.output = new Tone.Pow(options.exponent);\n\n\t/**\n\t *  scale the signal to the desired range\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = this.output = new Tone.Scale(options.min, options.max);\n\n\tthis._sig.chain(this._exp, this._scale);\n};\n\nTone.extend(Tone.ScaledEnvelope, Tone.Envelope);\n\n/**\n *  the default parameters\n *  @static\n */\nTone.ScaledEnvelope.defaults = {\n\t\"min\" : 0,\n\t\"max\" : 1,\n\t\"exponent\" : 1\n};\n\n/**\n * The envelope's min output value. This is the value which it\n * starts at.\n * @memberOf Tone.ScaledEnvelope#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.ScaledEnvelope.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._scale.min;\n\t},\n\tset : function(min){\n\t\tthis._scale.min = min;\n\t}\n});\n\n/**\n * The envelope's max output value. In other words, the value\n * at the peak of the attack portion of the envelope.\n * @memberOf Tone.ScaledEnvelope#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.ScaledEnvelope.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._scale.max;\n\t},\n\tset : function(max){\n\t\tthis._scale.max = max;\n\t}\n});\n\n/**\n * The envelope's exponent value.\n * @memberOf Tone.ScaledEnvelope#\n * @type {number}\n * @name exponent\n */\nObject.defineProperty(Tone.ScaledEnvelope.prototype, \"exponent\", {\n\tget : function(){\n\t\treturn this._exp.value;\n\t},\n\tset : function(exp){\n\t\tthis._exp.value = exp;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.ScaledEnvelope} this\n */\nTone.ScaledEnvelope.prototype.dispose = function(){\n\tTone.Envelope.prototype.dispose.call(this);\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._exp.dispose();\n\tthis._exp = null;\n\treturn this;\n};\n\nexport default Tone.ScaledEnvelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/SignalBase\";\n\n/**\n *  @class Return the absolute value of an incoming signal.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @example\n * var signal = new Tone.Signal(-1);\n * var abs = new Tone.Abs();\n * signal.connect(abs);\n * //the output of abs is 1.\n */\nTone.Abs = function(){\n\tTone.SignalBase.call(this);\n\t/**\n\t *  @type {Tone.LessThan}\n\t *  @private\n\t */\n\tthis._abs = this.input = this.output = new Tone.WaveShaper(function(val){\n\t\tif (Math.abs(val) < 0.001){\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn Math.abs(val);\n\t\t}\n\t}, 1024);\n};\n\nTone.extend(Tone.Abs, Tone.SignalBase);\n\n/**\n *  dispose method\n *  @returns {Tone.Abs} this\n */\nTone.Abs.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._abs.dispose();\n\tthis._abs = null;\n\treturn this;\n};\n\nexport default Tone.Abs;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Solo lets you isolate a specific audio stream. When\n *         an instance is set to `solo=true`, it will mute all other instances.\n *  @extends {Tone.AudioNode}\n *  @example\n * var soloA = new Tone.Solo()\n * var soloB = new Tone.Solo()\n * soloA.solo = true\n * //no audio will pass through soloB\n */\nTone.Solo = function(){\n\n\tvar options = Tone.defaults(arguments, [\"solo\"], Tone.Solo);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The input and output node\n\t *  @type  {Tone.Gain}\n\t */\n\tthis.input = this.output = new Tone.Gain();\n\n\t/**\n\t *  A bound _soloed method\n\t *  @type  {Function}\n\t *  @private\n\t */\n\tthis._soloBind = this._soloed.bind(this);\n\n\t//listen for solo events class-wide.\n\tthis.context.on(\"solo\", this._soloBind);\n\t//set initially\n\tthis.solo = options.solo;\n};\n\nTone.extend(Tone.Solo, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @static\n */\nTone.Solo.defaults = {\n\tsolo : false,\n};\n\n/**\n *  Isolates this instance and mutes all other instances of Tone.Solo.\n *  Only one instance can be soloed at a time. A soloed\n *  instance will report `solo=false` when another instance is soloed.\n *  @memberOf Tone.Solo#\n *  @type {Boolean}\n *  @name solo\n */\nObject.defineProperty(Tone.Solo.prototype, \"solo\", {\n\tget : function(){\n\t\treturn this._isSoloed();\n\t},\n\tset : function(solo){\n\t\tif (solo){\n\t\t\tthis._addSolo();\n\t\t} else {\n\t\t\tthis._removeSolo();\n\t\t}\n\t\tthis.context.emit(\"solo\", this);\n\t}\n});\n\n/**\n *  If the current instance is muted, i.e. another instance is soloed\n *  @memberOf Tone.Solo#\n *  @type {Boolean}\n *  @name muted\n *  @readOnly\n */\nObject.defineProperty(Tone.Solo.prototype, \"muted\", {\n\tget : function(){\n\t\treturn this.input.gain.value === 0;\n\t}\n});\n\n/**\n * Add this to the soloed array\n * @private\n */\nTone.Solo.prototype._addSolo = function(){\n\tif (!Tone.isArray(this.context._currentSolo)){\n\t\tthis.context._currentSolo = [];\n\t}\n\tif (!this._isSoloed()){\n\t\tthis.context._currentSolo.push(this);\n\t}\n};\n\n/**\n * Remove this from the soloed array\n * @private\n */\nTone.Solo.prototype._removeSolo = function(){\n\tif (this._isSoloed()){\n\t\tvar index = this.context._currentSolo.indexOf(this);\n\t\tthis.context._currentSolo.splice(index, 1);\n\t}\n};\n\n/**\n * @return {Boolean} Is this on the soloed array\n * @private\n */\nTone.Solo.prototype._isSoloed = function(){\n\tif (Tone.isArray(this.context._currentSolo)){\n\t\treturn this.context._currentSolo.length !== 0 && this.context._currentSolo.indexOf(this) !== -1;\n\t} else {\n\t\treturn false;\n\t}\n};\n\n/**\n * @return {Boolean} Returns true if no one is soloed\n * @private\n */\nTone.Solo.prototype._noSolos = function(){\n\treturn !Tone.isArray(this.context._currentSolo) || this.context._currentSolo.length === 0;\n};\n\n/**\n *  Solo the current instance and unsolo all other instances.\n *  @param  {Tone.Solo}  instance  The instance which is being soloed/unsoloed.\n *  @private\n */\nTone.Solo.prototype._soloed = function(){\n\tif (this._isSoloed()){\n\t\tthis.input.gain.value = 1;\n\t} else if (this._noSolos()){\n\t\t//no one is soloed\n\t\tthis.input.gain.value = 1;\n\t} else {\n\t\tthis.input.gain.value = 0;\n\t}\n};\n\n/**\n *  Clean up\n *  @return  {Tone.Solo}  this\n */\nTone.Solo.prototype.dispose = function(){\n\tthis.context.off(\"solo\", this._soloBind);\n\tthis._removeSolo();\n\tthis._soloBind = null;\n\tTone.AudioNode.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.Solo;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Convert an incoming signal between 0, 1 to an equal power gain scale.\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @example\n * var eqPowGain = new Tone.EqualPowerGain();\n */\nTone.EqualPowerGain = function(){\n\n\tTone.SignalBase.call(this);\n\t/**\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._eqPower = this.input = this.output = new Tone.WaveShaper(function(val){\n\t\tif (Math.abs(val) < 0.001){\n\t\t\t//should output 0 when input is 0\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn Tone.equalPowerScale(val);\n\t\t}\n\t}.bind(this), 4096);\n};\n\nTone.extend(Tone.EqualPowerGain, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.EqualPowerGain} this\n */\nTone.EqualPowerGain.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._eqPower.dispose();\n\tthis._eqPower = null;\n\treturn this;\n};\n\nexport default Tone.EqualPowerGain;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Multiply\";\nimport \"../signal/Signal\";\n\n/**\n *  @class Negate the incoming signal. i.e. an input signal of 10 will output -10\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @example\n * var neg = new Tone.Negate();\n * var sig = new Tone.Signal(-2).connect(neg);\n * //output of neg is positive 2. \n */\nTone.Negate = function(){\n\n\tTone.SignalBase.call(this);\n\t/**\n\t *  negation is done by multiplying by -1\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._multiply = this.input = this.output = new Tone.Multiply(-1);\n};\n\nTone.extend(Tone.Negate, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.Negate} this\n */\nTone.Negate.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._multiply.dispose();\n\tthis._multiply = null;\n\treturn this;\n}; \n\nexport default Tone.Negate;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Panner\";\nimport \"../component/Volume\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.PanVol is a Tone.Panner and Tone.Volume in one.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {AudioRange} pan the initial pan\n *  @param {number} volume The output volume.\n *  @example\n * //pan the incoming signal left and drop the volume\n * var panVol = new Tone.PanVol(-0.25, -12);\n */\nTone.PanVol = function(){\n\n\tvar options = Tone.defaults(arguments, [\"pan\", \"volume\"], Tone.PanVol);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The panning node\n\t *  @type {Tone.Panner}\n\t *  @private\n\t */\n\tthis._panner = this.input = new Tone.Panner(options.pan);\n\n\t/**\n\t *  The L/R panning control.\n\t *  @type {AudioRange}\n\t *  @signal\n\t */\n\tthis.pan = this._panner.pan;\n\n\t/**\n\t *  The volume node\n\t *  @type {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t *  The volume control in decibels.\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.volume = this._volume.volume;\n\n\t//connections\n\tthis._panner.connect(this._volume);\n\tthis.mute = options.mute;\n\n\tthis._readOnly([\"pan\", \"volume\"]);\n};\n\nTone.extend(Tone.PanVol, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.PanVol.defaults = {\n\t\"pan\" : 0,\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n * Mute/unmute the volume\n * @memberOf Tone.PanVol#\n * @name mute\n * @type {Boolean}\n */\nObject.defineProperty(Tone.PanVol.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.PanVol} this\n */\nTone.PanVol.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"pan\", \"volume\"]);\n\tthis._panner.dispose();\n\tthis._panner = null;\n\tthis.pan = null;\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n\treturn this;\n};\n\nexport default Tone.PanVol;\n\n","import Tone from \"../core/Tone\";\nif (Tone.supported){\n\n\tif (!Tone.global.hasOwnProperty(\"OfflineAudioContext\") && Tone.global.hasOwnProperty(\"webkitOfflineAudioContext\")){\n\t\tTone.global.OfflineAudioContext = Tone.global.webkitOfflineAudioContext;\n\t}\n\n\t//returns promise?\n\tvar context = new OfflineAudioContext(1, 1, 44100);\n\tvar ret = context.startRendering();\n\tif (!(ret && Tone.isFunction(ret.then))){\n\t\tOfflineAudioContext.prototype._native_startRendering = OfflineAudioContext.prototype.startRendering;\n\t\tOfflineAudioContext.prototype.startRendering = function(){\n\t\t\treturn new Promise(function(done){\n\t\t\t\tthis.oncomplete = function(e){\n\t\t\t\t\tdone(e.renderedBuffer);\n\t\t\t\t};\n\t\t\t\tthis._native_startRendering();\n\t\t\t}.bind(this));\n\t\t};\n\t}\n}\n\n","export default \"13.8.25\";\n","import Tone from \"../core/Tone\";\nimport \"../type/Frequency\";\n\n/**\n *  @class Tone.Midi is a primitive type for encoding Time values.\n *         Tone.Midi can be constructed with or without the `new` keyword. Tone.Midi can be passed\n *         into the parameter of any method which takes time as an argument.\n *  @constructor\n *  @extends {Tone.Frequency}\n *  @param  {String|Number}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * var t = Tone.Midi(\"4n\");//a quarter note\n */\nTone.Midi = function(val, units){\n\tif (this instanceof Tone.Midi){\n\n\t\tTone.Frequency.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Midi(val, units);\n\t}\n};\n\nTone.extend(Tone.Midi, Tone.Frequency);\n\n/**\n *  The default units if none are given.\n *  @type {String}\n *  @private\n */\nTone.Midi.prototype._defaultUnits = \"midi\";\n\n/**\n *  Returns the value of a frequency in the current units\n *  @param {Frequency} freq\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._frequencyToUnits = function(freq){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._frequencyToUnits.call(this, freq));\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._ticksToUnits = function(ticks){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._ticksToUnits.call(this, ticks));\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._beatsToUnits = function(beats){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._beatsToUnits.call(this, beats));\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._secondsToUnits = function(seconds){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._secondsToUnits.call(this, seconds));\n};\n\n/**\n *  Return the value of the frequency as a MIDI note\n *  @return  {MIDI}\n *  @example\n * Tone.Midi(60).toMidi(); //60\n */\nTone.Midi.prototype.toMidi = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the value of the frequency as a MIDI note\n *  @return  {MIDI}\n *  @example\n * Tone.Midi(60).toFrequency(); //261.6255653005986\n */\nTone.Midi.prototype.toFrequency = function(){\n\treturn Tone.Frequency.mtof(this.toMidi());\n};\n\n/**\n *  Transposes the frequency by the given number of semitones.\n *  @param  {Interval}  interval\n *  @return  {Tone.Frequency} A new transposed frequency\n *  @example\n * Tone.Midi(\"A4\").transpose(3); //\"C5\"\n */\nTone.Midi.prototype.transpose = function(interval){\n\treturn new this.constructor(this.toMidi() + interval);\n};\n\nexport default Tone.Midi;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Volume\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.UserMedia uses MediaDevices.getUserMedia to open up\n *          and external microphone or audio input. Check\n *          [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n *          to see which browsers are supported. Access to an external input\n *          is limited to secure (HTTPS) connections.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Decibels=} volume The level of the input\n *  @example\n * //list the inputs and open the third one\n * var motu = new Tone.UserMedia();\n *\n * //opening the input asks the user to activate their mic\n * motu.open().then(function(){\n * \t//promise resolves when input is available\n * });\n */\n\nTone.UserMedia = function(){\n\n\tvar options = Tone.defaults(arguments, [\"volume\"], Tone.UserMedia);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The MediaStreamNode\n\t *  @type {MediaStreamAudioSourceNode}\n\t *  @private\n\t */\n\tthis._mediaStream = null;\n\n\t/**\n\t *  The media stream created by getUserMedia.\n\t *  @type {LocalMediaStream}\n\t *  @private\n\t */\n\tthis._stream = null;\n\n\t/**\n\t *  The open device\n\t *  @type  {MediaDeviceInfo}\n\t *  @private\n\t */\n\tthis._device = null;\n\n\t/**\n\t *  The output volume node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * input.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\tthis.mute = options.mute;\n};\n\nTone.extend(Tone.UserMedia, Tone.AudioNode);\n\n/**\n * the default parameters\n * @type {Object}\n */\nTone.UserMedia.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n *  Open the media stream. If a string is passed in, it is assumed\n *  to be the label or id of the stream, if a number is passed in,\n *  it is the input number of the stream.\n *  @param  {String|Number} [labelOrId=\"default\"] The label or id of the audio input media device.\n *                                                With no argument, the default stream is opened.\n *  @return {Promise} The promise is resolved when the stream is open.\n */\nTone.UserMedia.prototype.open = function(labelOrId){\n\t//close the previous stream\n\tif (this.state === Tone.State.Started){\n\t\tthis.close();\n\t}\n\treturn Tone.UserMedia.enumerateDevices().then(function(devices){\n\t\tvar device;\n\t\tif (Tone.isNumber(labelOrId)){\n\t\t\tdevice = devices[labelOrId];\n\t\t} else {\n\t\t\tdevice = devices.find(function(device){\n\t\t\t\treturn device.label === labelOrId || device.deviceId === labelOrId;\n\t\t\t});\n\t\t\t//didn't find a matching device\n\t\t\tif (!device && devices.length > 0){\n\t\t\t\tdevice = devices[0];\n\t\t\t} else if (!device && Tone.isDefined(labelOrId)){\n\t\t\t\tthrow new Error(\"Tone.UserMedia: no matching device: \"+labelOrId);\n\t\t\t}\n\t\t}\n\t\tthis._device = device;\n\t\t//do getUserMedia\n\t\tvar constraints = {\n\t\t\taudio : {\n\t\t\t\t\"echoCancellation\" : false,\n\t\t\t\t\"sampleRate\" : this.context.sampleRate,\n\t\t\t\t\"noiseSuppression\" : false,\n\t\t\t\t\"mozNoiseSuppression\" : false,\n\t\t\t}\n\t\t};\n\t\tif (device){\n\t\t\tconstraints.audio.deviceId = device.deviceId;\t\t\t\t\n\t\t}\n\t\treturn navigator.mediaDevices.getUserMedia(constraints).then(function(stream){\n\t\t\t//start a new source only if the previous one is closed\n\t\t\tif (!this._stream){\n\t\t\t\tthis._stream = stream;\n\t\t\t\t//Wrap a MediaStreamSourceNode around the live input stream.\n\t\t\t\tthis._mediaStream = this.context.createMediaStreamSource(stream);\n\t\t\t\t//Connect the MediaStreamSourceNode to a gate gain node\n\t\t\t\tTone.connect(this._mediaStream, this.output);\n\t\t\t}\n\t\t\treturn this;\n\t\t}.bind(this));\n\t}.bind(this));\n};\n\n/**\n *  Close the media stream\n *  @return {Tone.UserMedia} this\n */\nTone.UserMedia.prototype.close = function(){\n\tif (this._stream){\n\t\tthis._stream.getAudioTracks().forEach(function(track){\n\t\t\ttrack.stop();\n\t\t});\n\t\tthis._stream = null;\n\t\t//remove the old media stream\n\t\tthis._mediaStream.disconnect();\n\t\tthis._mediaStream = null;\n\t}\n\tthis._device = null;\n\treturn this;\n};\n\n/**\n *  Returns a promise which resolves with the list of audio input devices available.\n *  @return {Promise} The promise that is resolved with the devices\n *  @static\n *  @example\n * Tone.UserMedia.enumerateDevices().then(function(devices){\n * \tconsole.log(devices)\n * })\n */\nTone.UserMedia.enumerateDevices = function(){\n\treturn navigator.mediaDevices.enumerateDevices().then(function(devices){\n\t\treturn devices.filter(function(device){\n\t\t\treturn device.kind === \"audioinput\";\n\t\t});\n\t});\n};\n\n/**\n *  Returns the playback state of the source, \"started\" when the microphone is open\n *  and \"stopped\" when the mic is closed.\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name state\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._stream && this._stream.active ? Tone.State.Started : Tone.State.Stopped;\n\t}\n});\n\n/**\n * \tReturns an identifier for the represented device that is\n * \tpersisted across sessions. It is un-guessable by other applications and\n * \tunique to the origin of the calling application. It is reset when the\n * \tuser clears cookies (for Private Browsing, a different identifier is\n * \tused that is not persisted across sessions). Returns undefined when the\n * \tdevice is not open.\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name deviceId\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"deviceId\", {\n\tget : function(){\n\t\tif (this._device){\n\t\t\treturn this._device.deviceId;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n});\n\n/**\n * \tReturns a group identifier. Two devices have the\n * \tsame group identifier if they belong to the same physical device.\n * \tReturns undefined when the device is not open.\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name groupId\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"groupId\", {\n\tget : function(){\n\t\tif (this._device){\n\t\t\treturn this._device.groupId;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n});\n\n/**\n * \tReturns a label describing this device (for example \"Built-in Microphone\").\n * \tReturns undefined when the device is not open or label is not available\n * \tbecause of permissions.\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name groupId\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"label\", {\n\tget : function(){\n\t\tif (this._device){\n\t\t\treturn this._device.label;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n});\n\n/**\n * Mute the output.\n * @memberOf Tone.UserMedia#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * userMedia.mute = true;\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n * Clean up.\n * @return {Tone.UserMedia} this\n */\nTone.UserMedia.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.close();\n\tthis._writable(\"volume\");\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n\treturn this;\n};\n\n/**\n *  If getUserMedia is supported by the browser.\n *  @type  {Boolean}\n *  @memberOf Tone.UserMedia#\n *  @name supported\n *  @static\n *  @readOnly\n */\nObject.defineProperty(Tone.UserMedia, \"supported\", {\n\tget : function(){\n\t\treturn Tone.isDefined(navigator.mediaDevices) && Tone.isFunction(navigator.mediaDevices.getUserMedia);\n\t}\n});\n\nexport default Tone.UserMedia;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Player\";\nimport \"../component/Volume\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Players combines multiple [Tone.Player](Player) objects.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Object} urls An object mapping a name to a url.\n *  @param {function=} onload The function to invoke when all buffers are loaded.\n */\nTone.Players = function(urls){\n\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.shift();\n\tvar options = Tone.defaults(args, [\"onload\"], Tone.Players);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The output volume node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * source.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\t//make the output explicitly stereo\n\tthis._volume.output.output.channelCount = 2;\n\tthis._volume.output.output.channelCountMode = \"explicit\";\n\t//mute initially\n\tthis.mute = options.mute;\n\n\t/**\n\t * The container of all of the players\n\t * @type {Object}\n\t * @private\n\t */\n\tthis._players = {};\n\n\t/**\n\t * The loading count\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._loadingCount = 0;\n\n\t/**\n\t * private holder of the fadeIn time\n\t * @type {Time}\n\t * @private\n\t */\n\tthis._fadeIn = options.fadeIn;\n\n\t/**\n\t * private holder of the fadeOut time\n\t * @type {Time}\n\t * @private\n\t */\n\tthis._fadeOut = options.fadeOut;\n\n\t//add all of the players\n\tfor (var name in urls){\n\t\tthis._loadingCount++;\n\t\tthis.add(name, urls[name], this._bufferLoaded.bind(this, options.onload));\n\t}\n};\n\nTone.extend(Tone.Players, Tone.AudioNode);\n\n/**\n * The default values\n * @type {Object}\n */\nTone.Players.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false,\n\t\"onload\" : Tone.noOp,\n\t\"fadeIn\" : 0,\n\t\"fadeOut\" : 0\n};\n\n/**\n *  A buffer was loaded. decrement the counter.\n *  @param  {Function}  callback\n *  @private\n */\nTone.Players.prototype._bufferLoaded = function(callback){\n\tthis._loadingCount--;\n\tif (this._loadingCount === 0 && callback){\n\t\tcallback(this);\n\t}\n};\n\n/**\n * Mute the output.\n * @memberOf Tone.Source#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * source.mute = true;\n */\nObject.defineProperty(Tone.Players.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n * The fadeIn time of the amplitude envelope.\n * @memberOf Tone.Source#\n * @type {Time}\n * @name fadeIn\n */\nObject.defineProperty(Tone.Players.prototype, \"fadeIn\", {\n\tget : function(){\n\t\treturn this._fadeIn;\n\t},\n\tset : function(fadeIn){\n\t\tthis._fadeIn = fadeIn;\n\t\tthis._forEach(function(player){\n\t\t\tplayer.fadeIn = fadeIn;\n\t\t});\n\t}\n});\n\n/**\n * The fadeOut time of the amplitude envelope.\n * @memberOf Tone.Source#\n * @type {Time}\n * @name fadeOut\n */\nObject.defineProperty(Tone.Players.prototype, \"fadeOut\", {\n\tget : function(){\n\t\treturn this._fadeOut;\n\t},\n\tset : function(fadeOut){\n\t\tthis._fadeOut = fadeOut;\n\t\tthis._forEach(function(player){\n\t\t\tplayer.fadeOut = fadeOut;\n\t\t});\n\t}\n});\n\n/**\n * The state of the players object. Returns \"started\" if any of the players are playing.\n * @memberOf Tone.Players#\n * @type {String}\n * @name state\n * @readOnly\n */\nObject.defineProperty(Tone.Players.prototype, \"state\", {\n\tget : function(){\n\t\tvar playing = false;\n\t\tthis._forEach(function(player){\n\t\t\tplaying = playing || player.state === Tone.State.Started;\n\t\t});\n\t\treturn playing ? Tone.State.Started : Tone.State.Stopped;\n\t}\n});\n\n/**\n *  True if the buffers object has a buffer by that name.\n *  @param  {String|Number}  name  The key or index of the\n *                                 buffer.\n *  @return  {Boolean}\n */\nTone.Players.prototype.has = function(name){\n\treturn this._players.hasOwnProperty(name);\n};\n\n/**\n *  Get a player by name.\n *  @param  {String}  name  The players name as defined in\n *                          the constructor object or `add` method.\n *  @return  {Tone.Player}\n */\nTone.Players.prototype.get = function(name){\n\tif (this.has(name)){\n\t\treturn this._players[name];\n\t} else {\n\t\tthrow new Error(\"Tone.Players: no player named \"+name);\n\t}\n};\n\n/**\n * Iterate over all of the players\n * @param  {Function} callback\n * @return {Tone.Players}            this\n * @private\n */\nTone.Players.prototype._forEach = function(callback){\n\tfor (var playerName in this._players){\n\t\tcallback(this._players[playerName], playerName);\n\t}\n\treturn this;\n};\n\n/**\n * If all the buffers are loaded or not\n * @memberOf Tone.Players#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Players.prototype, \"loaded\", {\n\tget : function(){\n\t\tvar isLoaded = true;\n\t\tthis._forEach(function(player){\n\t\t\tisLoaded = isLoaded && player.loaded;\n\t\t});\n\t\treturn isLoaded;\n\t}\n});\n\n/**\n *  Add a player by name and url to the Players\n *  @param  {String}    name      A unique name to give the player\n *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer,\n *                                                 or a buffer which will be added\n *                                                 with the given name.\n *  @param  {Function=}  callback  The callback to invoke\n *                                 when the url is loaded.\n */\nTone.Players.prototype.add = function(name, url, callback){\n\tthis._players[name] = new Tone.Player(url, callback).connect(this.output);\n\tthis._players[name].fadeIn = this._fadeIn;\n\tthis._players[name].fadeOut = this._fadeOut;\n\treturn this;\n};\n\n/**\n * Stop all of the players at the given time\n * @param {Time} time The time to stop all of the players.\n * @return {Tone.Players} this\n */\nTone.Players.prototype.stopAll = function(time){\n\tthis._forEach(function(player){\n\t\tplayer.stop(time);\n\t});\n};\n\n/**\n *  Dispose and disconnect.\n *  @return {Tone.Players} this\n */\nTone.Players.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis._writable(\"volume\");\n\tthis.volume = null;\n\tthis.output = null;\n\tthis._forEach(function(player){\n\t\tplayer.dispose();\n\t});\n\tthis._players = null;\n\treturn this;\n};\n\nexport default Tone.Players;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../core/Buffer\";\nimport \"../source/BufferSource\";\n\n/**\n * @class Tone.GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n *        Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the\n *        amount of time each small chunk of audio is played for and the overlap is the\n *        amount of crossfading transition time between successive grains.\n * @extends {Tone.Source}\n * @param {String|Tone.Buffer} url\tThe url to load, or the Tone.Buffer to play.\n * @param {Function=} callback The callback to invoke after the url is loaded.\n */\nTone.GrainPlayer = function(){\n\n\tvar options = Tone.defaults(arguments, [\"url\", \"onload\"], Tone.GrainPlayer);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The audio buffer belonging to the player.\n\t *  @type  {Tone.Buffer}\n\t */\n\tthis.buffer = new Tone.Buffer(options.url, options.onload.bind(undefined, this));\n\n\t/**\n\t *  Create a repeating tick to schedule\n\t *  the grains.\n\t *  @type  {Tone.Clock}\n\t *  @private\n\t */\n\tthis._clock = new Tone.Clock(this._tick.bind(this), options.grainSize);\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopStart = 0;\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopEnd = 0;\n\n\t/**\n\t * All of the currently playing BufferSources\n\t * @type {Array}\n\t * @private\n\t */\n\tthis._activeSources = [];\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._playbackRate = options.playbackRate;\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._grainSize = options.grainSize;\n\n\t/**\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._overlap = options.overlap;\n\n\t/**\n\t *  Adjust the pitch independently of the playbackRate.\n\t *  @type  {Cents}\n\t */\n\tthis.detune = options.detune;\n\n\t//setup\n\tthis.overlap = options.overlap;\n\tthis.loop = options.loop;\n\tthis.playbackRate = options.playbackRate;\n\tthis.grainSize = options.grainSize;\n\tthis.loopStart = options.loopStart;\n\tthis.loopEnd = options.loopEnd;\n\tthis.reverse = options.reverse;\n\n\tthis._clock.on(\"stop\", this._onstop.bind(this));\n};\n\nTone.extend(Tone.GrainPlayer, Tone.Source);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.GrainPlayer.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"overlap\" : 0.1,\n\t\"grainSize\" : 0.2,\n\t\"playbackRate\" : 1,\n\t\"detune\" : 0,\n\t\"loop\" : false,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : 0,\n\t\"reverse\" : false\n};\n\n/**\n *  Play the buffer at the given startTime. Optionally add an offset\n *  and/or duration which will play the buffer from a position\n *  within the buffer for the given duration.\n *\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @returns {Tone.GrainPlayer} this\n *  @memberOf Tone.GrainPlayer#\n *  @method start\n *  @name start\n */\n\n/**\n *  Internal start method\n *  @param {Time} time\n *  @param {Time} offset\n *  @private\n */\nTone.GrainPlayer.prototype._start = function(time, offset, duration){\n\toffset = Tone.defaultArg(offset, 0);\n\toffset = this.toSeconds(offset);\n\ttime = this.toSeconds(time);\n\n\tthis._offset = offset;\n\tthis._clock.start(time);\n\n\tif (duration){\n\t\tthis.stop(time + this.toSeconds(duration));\n\t}\n};\n\n/**\n *  Internal start method\n *  @param {Time} time\n *  @private\n */\nTone.GrainPlayer.prototype._stop = function(time){\n\tthis._clock.stop(time);\n};\n\n/**\n * Invoked when the clock is stopped\n * @param  {Number} time\n * @private\n */\nTone.GrainPlayer.prototype._onstop = function(time){\n\t//stop the players\n\tthis._activeSources.forEach(function(source){\n\t\tsource.fadeOut = 0;\n\t\tsource.stop(time);\n\t});\n};\n\n/**\n *  Invoked on each clock tick. scheduled a new\n *  grain at this time.\n *  @param  {Time}  time\n *  @private\n */\nTone.GrainPlayer.prototype._tick = function(time){\n\n\t//check if it should stop looping\n\tif (!this.loop && this._offset > this.buffer.duration){\n\t\tthis.stop(time);\n\t\treturn;\n\t}\n\n\t//at the beginning of the file, the fade in should be 0\n\tvar fadeIn = this._offset < this._overlap ? 0 : this._overlap;\n\n\t//create a buffer source\n\tvar source = new Tone.BufferSource({\n\t\t\"buffer\" : this.buffer,\n\t\t\"fadeIn\" : fadeIn,\n\t\t\"fadeOut\" : this._overlap,\n\t\t\"loop\" : this.loop,\n\t\t\"loopStart\" : this._loopStart,\n\t\t\"loopEnd\" : this._loopEnd,\n\t\t//compute the playbackRate based on the detune\n\t\t\"playbackRate\" : Tone.intervalToFrequencyRatio(this.detune / 100)\n\t}).connect(this.output);\n\n\tsource.start(time, this._offset);\n\tthis._offset += this.grainSize;\n\tsource.stop(time + this.grainSize / this.playbackRate);\n\n\t//add it to the active sources\n\tthis._activeSources.push(source);\n\t//remove it when it's done\n\tsource.onended = function(){\n\t\tvar index = this._activeSources.indexOf(source);\n\t\tif (index !== -1){\n\t\t\tthis._activeSources.splice(index, 1);\n\t\t}\n\t}.bind(this);\n};\n\n/**\n * The playback rate of the sample\n * @memberOf Tone.GrainPlayer#\n * @type {Positive}\n * @name playbackRate\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tthis.grainSize = this._grainSize;\n\t}\n});\n\n/**\n * The loop start time.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn this._loopStart;\n\t},\n\tset : function(time){\n\t\tthis._loopStart = this.toSeconds(time);\n\t}\n});\n\n/**\n * The loop end time.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn this._loopEnd;\n\t},\n\tset : function(time){\n\t\tthis._loopEnd = this.toSeconds(time);\n\t}\n});\n\n/**\n * The direction the buffer should play in\n * @memberOf Tone.GrainPlayer#\n * @type {boolean}\n * @name reverse\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"reverse\", {\n\tget : function(){\n\t\treturn this.buffer.reverse;\n\t},\n\tset : function(rev){\n\t\tthis.buffer.reverse = rev;\n\t}\n});\n\n/**\n * The size of each chunk of audio that the\n * buffer is chopped into and played back at.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name grainSize\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"grainSize\", {\n\tget : function(){\n\t\treturn this._grainSize;\n\t},\n\tset : function(size){\n\t\tthis._grainSize = this.toSeconds(size);\n\t\tthis._clock.frequency.value = this._playbackRate / this._grainSize;\n\t}\n});\n\n/**\n * This is the duration of the cross-fade between\n * sucessive grains.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name overlap\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"overlap\", {\n\tget : function(){\n\t\treturn this._overlap;\n\t},\n\tset : function(time){\n\t\tthis._overlap = this.toSeconds(time);\n\t}\n});\n\n/**\n * If all the buffer is loaded\n * @memberOf Tone.GrainPlayer#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"loaded\", {\n\tget : function(){\n\t\treturn this.buffer.loaded;\n\t}\n});\n\n/**\n * Clean up\n * @return {Tone.GrainPlayer} this\n */\nTone.GrainPlayer.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis.buffer.dispose();\n\tthis.buffer = null;\n\tthis._clock.dispose();\n\tthis._clock = null;\n\tthis._activeSources.forEach(function(source){\n\t\tsource.dispose();\n\t});\n\tthis._activeSources = null;\n\treturn this;\n};\n\nexport default Tone.GrainPlayer;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../signal/Signal\";\nimport \"../type/TransportTime\";\n\n/**\n * @class Tone.TransportTimelineSignal extends Tone.Signal, but adds the ability to synchronize the signal to the signal to the Tone.Transport\n * @extends {Tone.Signal}\n */\nTone.TransportTimelineSignal = function(){\n\tTone.Signal.apply(this, arguments);\n\n\t/**\n\t * The real signal output\n\t * @type {Tone.Signal}\n\t * @private\n\t */\n\tthis.output = this._outputSig = new Tone.Signal(this._initialValue);\n\n\t/**\n\t * Keep track of the last value. (small optimization)\n\t * @private\n\t * @type {Number}\n\t */\n\tthis._lastVal = this.value;\n\n\t/**\n\t * The event id of the tick update loop\n\t * @private\n\t * @type {Number}\n\t */\n\tthis._synced = Tone.Transport.scheduleRepeat(this._onTick.bind(this), \"1i\");\n\n\t/**\n\t * A bound version of the anchor value methods\n\t * @type {Function}\n\t * @private\n\t */\n\tthis._bindAnchorValue = this._anchorValue.bind(this);\n\tTone.Transport.on(\"start stop pause\", this._bindAnchorValue);\n\n\tthis._events.memory = Infinity;\n};\n\nTone.extend(Tone.TransportTimelineSignal, Tone.Signal);\n\n/**\n * Callback which is invoked every tick.\n * @private\n * @param  {Number} time\n * @return {Tone.TransportTimelineSignal}      this\n */\nTone.TransportTimelineSignal.prototype._onTick = function(time){\n\tvar val = this.getValueAtTime(Tone.Transport.seconds);\n\tif (this._lastVal !== val){\n\t\tthis._lastVal = val;\n\t\t//approximate ramp curves with linear ramps\n\t\tthis._outputSig.linearRampToValueAtTime(val, time);\n\t}\n};\n\n/**\n * Anchor the value at the start and stop of the Transport\n * @param  {Number} time The time of the event\n * @return {Tone.TransportTimelineSignal}      this\n * @private\n */\nTone.TransportTimelineSignal.prototype._anchorValue = function(time){\n\tvar val = this.getValueAtTime(Tone.Transport.seconds);\n\tthis._lastVal = val;\n\tthis._outputSig.cancelScheduledValues(time);\n\tthis._outputSig.setValueAtTime(val, time);\n\treturn this;\n};\n\n/**\n *  Get the scheduled value at the given time. This will\n *  return the unconverted (raw) value.\n *  @param  {TransportTime}  time  The time in seconds.\n *  @return  {Number}  The scheduled value at the given time.\n */\nTone.TransportTimelineSignal.prototype.getValueAtTime = function(time){\n\ttime = Tone.TransportTime(time);\n\treturn Tone.Signal.prototype.getValueAtTime.call(this, time);\n};\n\n/**\n * Set the output of the signal at the given time\n * @param  {Number} value The value to change to at the given time\n * @param  {TransportTime} time  The time to change the signal\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.setValueAtTime = function(value, time){\n\ttime = Tone.TransportTime(time);\n\tTone.Signal.prototype.setValueAtTime.call(this, value, time);\n\treturn this;\n};\n\n/**\n * Linear ramp to the given value from the previous scheduled point to the given value\n * @param  {Number} value The value to change to at the given time\n * @param  {TransportTime} time  The time to change the signal\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.linearRampToValueAtTime = function(value, time){\n\ttime = Tone.TransportTime(time);\n\tTone.Signal.prototype.linearRampToValueAtTime.call(this, value, time);\n\treturn this;\n};\n\n/**\n * Exponential ramp to the given value from the previous scheduled point to the given value\n * @param  {Number} value The value to change to at the given time\n * @param  {TransportTime} time  The time to change the signal\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.exponentialRampToValueAtTime = function(value, time){\n\ttime = Tone.TransportTime(time);\n\tTone.Signal.prototype.exponentialRampToValueAtTime.call(this, value, time);\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time with\n *  a rate having the given time constant.\n *  @param {number} value\n *  @param {TransportTime} startTime\n *  @param {number} timeConstant\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.setTargetAtTime = function(value, startTime, timeConstant){\n\tstartTime = Tone.TransportTime(startTime);\n\tTone.Signal.prototype.setTargetAtTime.call(this, value, startTime, timeConstant);\n\treturn this;\n};\n\n/**\n *  Cancels all scheduled parameter changes with times greater than or\n *  equal to startTime.\n *  @param  {TransportTime} startTime\n *  @returns {Tone.Param} this\n */\nTone.TransportTimelineSignal.prototype.cancelScheduledValues = function(startTime){\n\tstartTime = Tone.TransportTime(startTime);\n\tTone.Signal.prototype.cancelScheduledValues.call(this, startTime);\n\treturn this;\n};\n\n/**\n *  Set an array of arbitrary values starting at the given time for the given duration.\n *  @param {Float32Array} values\n *  @param {Time} startTime\n *  @param {Time} duration\n *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n *  @returns {Tone.Signal} this\n */\nTone.TransportTimelineSignal.prototype.setValueCurveAtTime = function(values, startTime, duration, scaling){\n\tstartTime = Tone.TransportTime(startTime);\n\tduration = Tone.TransportTime(duration);\n\tTone.Signal.prototype.setValueCurveAtTime.call(this, values, startTime, duration, scaling);\n\treturn this;\n};\n\n/**\n *  This is similar to [cancelScheduledValues](#cancelScheduledValues) except\n *  it holds the automated value at time until the next automated event.\n *  @param  {Time} time\n *  @returns {Tone.TransportTimelineSignal} this\n */\nTone.TransportTimelineSignal.prototype.cancelAndHoldAtTime = function(time){\n\treturn Tone.Signal.prototype.cancelAndHoldAtTime.call(this, Tone.TransportTime(time));\n};\n\n/**\n * Dispose and disconnect\n * @return {Tone.TransportTimelineSignal} this\n */\nTone.TransportTimelineSignal.prototype.dispose = function(){\n\tTone.Transport.clear(this._synced);\n\tTone.Transport.off(\"start stop pause\", this._syncedCallback);\n\tthis._events.cancel(0);\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._outputSig.dispose();\n\tthis._outputSig = null;\n};\n\nexport default Tone.TransportTimelineSignal;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Multiply\";\n\n/**\n *  @class Normalize takes an input min and max and maps it linearly to NormalRange [0,1]\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @param {number} inputMin the min input value\n *  @param {number} inputMax the max input value\n *  @example\n * var norm = new Tone.Normalize(2, 4);\n * var sig = new Tone.Signal(3).connect(norm);\n * //output of norm is 0.5. \n */\nTone.Normalize = function(inputMin, inputMax){\n\n\tTone.SignalBase.call(this);\n\t\n\t/**\n\t *  the min input value\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._inputMin = Tone.defaultArg(inputMin, 0);\n\n\t/**\n\t *  the max input value\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._inputMax = Tone.defaultArg(inputMax, 1);\n\n\t/**\n\t *  subtract the min from the input\n\t *  @type {Tone.Add}\n\t *  @private\n\t */\n\tthis._sub = this.input = new Tone.Add(0);\n\n\t/**\n\t *  divide by the difference between the input and output\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._div = this.output = new Tone.Multiply(1);\n\n\tthis._sub.connect(this._div);\n\tthis._setRange();\n};\n\nTone.extend(Tone.Normalize, Tone.SignalBase);\n\n/**\n * The minimum value the input signal will reach.\n * @memberOf Tone.Normalize#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.Normalize.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._inputMin;\n\t},\n\tset : function(min){\n\t\tthis._inputMin = min;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n * The maximum value the input signal will reach.\n * @memberOf Tone.Normalize#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.Normalize.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._inputMax;\n\t},\n\tset : function(max){\n\t\tthis._inputMax = max;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n *  set the values\n *  @private\n */\nTone.Normalize.prototype._setRange = function(){\n\tthis._sub.value = -this._inputMin;\n\tthis._div.value = 1 / (this._inputMax - this._inputMin);\n};\n\n/**\n *  clean up\n *  @returns {Tone.Normalize} this\n */\nTone.Normalize.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._sub.dispose();\n\tthis._sub = null;\n\tthis._div.dispose();\n\tthis._div = null;\n\treturn this;\n};\n\nexport default Tone.Normalize;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/Signal\";\n\n/**\n *  @class Maps a NormalRange [0, 1] to an AudioRange [-1, 1]. \n *         See also Tone.AudioToGain. \n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @example\n * var g2a = new Tone.GainToAudio();\n */\nTone.GainToAudio = function(){\n\n\tTone.SignalBase.call(this);\n\t\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._norm = this.input = this.output = new Tone.WaveShaper(function(x){\n\t\treturn Math.abs(x) * 2 - 1;\n\t});\n};\n\nTone.extend(Tone.GainToAudio, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.GainToAudio} this\n */\nTone.GainToAudio.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._norm.dispose();\n\tthis._norm = null;\n\treturn this;\n};\n\nexport default Tone.GainToAudio;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../core/Buffers\";\nimport \"../source/BufferSource\";\n\n/**\n * @class Automatically interpolates between a set of pitched samples. Pass in an object which maps the note's pitch or midi value to the url, then you can trigger the attack and release of that note like other instruments. By automatically repitching the samples, it is possible to play pitches which were not explicitly included which can save loading time.\n *        For sample or buffer playback where repitching is not necessary, use [Tone.Player](https://tonejs.github.io/docs/Player).\n * @param {Object} samples An object of samples mapping either Midi\n *                         Note Numbers or Scientific Pitch Notation\n *                         to the url of that sample.\n * @param {Function=} onload The callback to invoke when all of the samples are loaded.\n * @param {String=} baseUrl The root URL of all of the samples, which is prepended to all the URLs.\n * @example\n * var sampler = new Tone.Sampler({\n * \t\"C3\" : \"path/to/C3.mp3\",\n * \t\"D#3\" : \"path/to/Dsharp3.mp3\",\n * \t\"F#3\" : \"path/to/Fsharp3.mp3\",\n * \t\"A3\" : \"path/to/A3.mp3\",\n * }, function(){\n * \t//sampler will repitch the closest sample\n * \tsampler.triggerAttack(\"D3\")\n * })\n * @extends {Tone.Instrument}\n */\nTone.Sampler = function(urls){\n\n\t// shift arguments over one. Those are the remainder of the options\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.shift();\n\tvar options = Tone.defaults(args, [\"onload\", \"baseUrl\"], Tone.Sampler);\n\tTone.Instrument.call(this, options);\n\n\tvar urlMap = {};\n\tfor (var note in urls){\n\t\tif (Tone.isNote(note)){\n\t\t\t//convert the note name to MIDI\n\t\t\tvar mid = Tone.Frequency(note).toMidi();\n\t\t\turlMap[mid] = urls[note];\n\t\t} else if (!isNaN(parseFloat(note))){\n\t\t\t//otherwise if it's numbers assume it's midi\n\t\t\turlMap[note] = urls[note];\n\t\t} else {\n\t\t\tthrow new Error(\"Tone.Sampler: url keys must be the note's pitch\");\n\t\t}\n\t}\n\n\t/**\n\t * The stored and loaded buffers\n\t * @type {Tone.Buffers}\n\t * @private\n\t */\n\tthis._buffers = new Tone.Buffers(urlMap, options.onload, options.baseUrl);\n\n\t/**\n\t * The object of all currently playing BufferSources\n\t * @type {Object}\n\t * @private\n\t */\n\tthis._activeSources = {};\n\n\t/**\n\t * The envelope applied to the beginning of the sample.\n\t * @type {Time}\n\t */\n\tthis.attack = options.attack;\n\n\t/**\n\t * The envelope applied to the end of the envelope.\n\t * @type {Time}\n\t */\n\tthis.release = options.release;\n\n\t/**\n\t *  The shape of the attack/release curve.\n\t *  Either \"linear\" or \"exponential\"\n\t *  @type {String}\n\t */\n\tthis.curve = options.curve;\n};\n\nTone.extend(Tone.Sampler, Tone.Instrument);\n\n/**\n * The defaults\n * @const\n * @type {Object}\n */\nTone.Sampler.defaults = {\n\t\"attack\" : 0,\n\t\"release\" : 0.1,\n\t\"onload\" : Tone.noOp,\n\t\"baseUrl\" : \"\",\n\t\"curve\" : \"exponential\"\n};\n\n/**\n * Returns the difference in steps between the given midi note at the closets sample.\n * @param  {Midi} midi\n * @return {Interval}\n * @private\n */\nTone.Sampler.prototype._findClosest = function(midi){\n\t//searches within 8 octaves of the given midi note\n\tvar MAX_INTERVAL = 96; \n\tvar interval = 0;\n\twhile (interval < MAX_INTERVAL){\n\t\t// check above and below\n\t\tif (this._buffers.has(midi + interval)){\n\t\t\treturn -interval;\n\t\t} else if (this._buffers.has(midi - interval)){\n\t\t\treturn interval;\n\t\t}\n\t\tinterval++;\n\t}\n\tthrow new Error(\"No available buffers for note: \"+midi);\n};\n\n/**\n * @param  {(Frequency|Frequency[])} notes\tThe note to play, or an array of notes.\n * @param  {Time=} time     When to play the note\n * @param  {NormalRange=} velocity The velocity to play the sample back.\n * @return {Tone.Sampler}          this\n */\nTone.Sampler.prototype.triggerAttack = function(notes, time, velocity){\n\tthis.log(\"triggerAttack\", notes, time, velocity);\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\tfor (var i = 0; i < notes.length; i++){ \n\t\tvar midi = Tone.Frequency(notes[i]).toMidi();\n\t\t// find the closest note pitch\n\t\tvar difference = this._findClosest(midi);\n\t\tvar closestNote = midi - difference;\n\t\tvar buffer = this._buffers.get(closestNote);\n\t\tvar playbackRate = Tone.intervalToFrequencyRatio(difference);\n\t\t// play that note\n\t\tvar source = new Tone.BufferSource({\n\t\t\t\"buffer\" : buffer,\n\t\t\t\"playbackRate\" : playbackRate,\n\t\t\t\"fadeIn\" : this.attack,\n\t\t\t\"fadeOut\" : this.release,\n\t\t\t\"curve\" : this.curve,\n\t\t}).connect(this.output);\n\t\tsource.start(time, 0, buffer.duration / playbackRate, velocity);\n\t\t// add it to the active sources\n\t\tif (!Tone.isArray(this._activeSources[midi])){\n\t\t\tthis._activeSources[midi] = [];\n\t\t}\n\t\tthis._activeSources[midi].push(source);\n\n\t\t//remove it when it's done\n\t\tsource.onended = function(){\n\t\t\tif (this._activeSources && this._activeSources[midi]){\n\t\t\t\tvar index = this._activeSources[midi].indexOf(source);\n\t\t\t\tif (index !== -1){\n\t\t\t\t\tthis._activeSources[midi].splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this);\n\t}\n\treturn this;\n};\n\n/**\n * @param  {(Frequency|Frequency[])} notes\tThe note to release, or an array of notes.\n * @param  {Time=} time     \tWhen to release the note.\n * @return {Tone.Sampler}\tthis\n */\nTone.Sampler.prototype.triggerRelease = function(notes, time){\n\tthis.log(\"triggerRelease\", notes, time);\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\tfor (var i = 0; i < notes.length; i++){  \n\t\tvar midi = Tone.Frequency(notes[i]).toMidi();\n\t\t// find the note\n\t\tif (this._activeSources[midi] && this._activeSources[midi].length){\n\t\t\ttime = this.toSeconds(time);\n\t\t\t//stop all the sources on that midi note\n\t\t\tthis._activeSources[midi].forEach(function(source){\n\t\t\t\tsource.stop(time);\n\t\t\t});\n\t\t\tthis._activeSources[midi] = [];\n\t\t}\n\t}\n\n\treturn this;\n};\n\n/**\n * Release all currently active notes.\n * @param  {Time=} time     \tWhen to release the notes.\n * @return {Tone.Sampler}\tthis\n */\nTone.Sampler.prototype.releaseAll = function(time){\n\ttime = this.toSeconds(time);\n\tfor (var note in this._activeSources){\n\t\tvar sources = this._activeSources[note];\n\t\twhile (sources.length){\n\t\t\tvar source = sources.shift();\n\t\t\tsource.stop(time);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.Sampler.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 1);\n\tthis._syncMethod(\"triggerRelease\", 1);\n\treturn this;\n};\n\n/**\n * Invoke the attack phase, then after the duration, invoke the release.\n * @param  {(Frequency|Frequency[])} notes\tThe note to play and release, or an array of notes.\n * @param  {(Time|Time[])} duration The time the note should be held\n * @param  {Time=} time     When to start the attack\n * @param  {NormalRange} [velocity=1] The velocity of the attack\n * @return {Tone.Sampler}          this\n */\nTone.Sampler.prototype.triggerAttackRelease = function(notes, duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.triggerAttack(notes, time, velocity);\n\tif (Tone.isArray(duration) && Tone.isArray(notes)){\n\t\tfor (var i = 0; i < notes.length; i++){\n\t\t\tvar d = duration[Math.min(i, duration.length - 1)];\n\t\t\tthis.triggerRelease(notes[i], time + this.toSeconds(d));\n\t\t}\n\t} else {\n\t\tthis.triggerRelease(notes, time + this.toSeconds(duration));\n\t}\n\treturn this;\n};\n\n/**\n *  Add a note to the sampler.\n *  @param  {Note|Midi}   note      The buffer's pitch.\n *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer,\n *                                                 or a buffer which will be added\n *                                                 with the given name.\n *  @param  {Function=}  callback  The callback to invoke\n *                                 when the url is loaded.\n */\nTone.Sampler.prototype.add = function(note, url, callback){\n\tif (Tone.isNote(note)){\n\t\t//convert the note name to MIDI\n\t\tvar mid = Tone.Frequency(note).toMidi();\n\t\tthis._buffers.add(mid, url, callback);\n\t} else if (!isNaN(parseFloat(note))){\n\t\t//otherwise if it's numbers assume it's midi\n\t\tthis._buffers.add(note, url, callback);\n\t} else {\n\t\tthrow new Error(\"Tone.Sampler: note must be the note's pitch. Instead got \"+note);\n\t}\n};\n\n/**\n * If the buffers are loaded or not\n * @memberOf Tone.Sampler#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Sampler.prototype, \"loaded\", {\n\t\"get\" : function(){\n\t\treturn this._buffers.loaded;\n\t}\n});\n\n/**\n * Clean up\n * @return {Tone.Sampler} this\n */\nTone.Sampler.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._buffers.dispose();\n\tthis._buffers = null;\n\tfor (var midi in this._activeSources){\n\t\tthis._activeSources[midi].forEach(function(source){\n\t\t\tsource.dispose();\n\t\t});\n\t}\n\tthis._activeSources = null;\n\treturn this;\n};\n\nexport default Tone.Sampler;\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Synth\";\nimport \"../source/Source\";\n\n/**\n *  @class  Tone.PolySynth handles voice creation and allocation for any\n *          instruments passed in as the second paramter. PolySynth is\n *          not a synthesizer by itself, it merely manages voices of\n *          one of the other types of synths, allowing any of the\n *          monophonic synthesizers to be polyphonic.\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {number|Object} [polyphony=4] The number of voices to create\n *  @param {function} [voice=Tone.Synth] The constructor of the voices\n *                                            uses Tone.Synth by default.\n *  @param {...*}\tvoiceArgs\tAll additional arguments will be passed into the class constructor.\n *  @example\n * //a polysynth composed of 6 Voices of Synth\n * var synth = new Tone.PolySynth(6, Tone.Synth, {\n *   oscillator : {\n * \t\ttype : \"square\"\n * \t}\n * }).toMaster();\n * //set the attributes using the set interface\n * synth.set(\"detune\", -1200);\n * //play a chord\n * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], \"4n\");\n */\nTone.PolySynth = function(){\n\n\tvar options = Tone.defaults(arguments, [\"polyphony\", \"voice\"], Tone.PolySynth);\n\tTone.Instrument.call(this, options);\n\toptions = Tone.defaultArg(options, Tone.Instrument.defaults);\n\n\t//max polyphony\n\toptions.polyphony = Math.min(Tone.PolySynth.MAX_POLYPHONY, options.polyphony);\n\n\t/**\n\t *  the array of voices\n\t *  @type {Array}\n\t */\n\tthis.voices = new Array(options.polyphony);\n\tthis.assert(options.polyphony > 0, \"polyphony must be greater than 0\");\n\n\t/**\n\t *  The detune in cents\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\tthis._readOnly(\"detune\");\n\n\t//create the voices\n\tfor (var i = 0; i < options.polyphony; i++){\n\t\tvar v = new options.voice(arguments[2], arguments[3]);\n\t\tif (!(v instanceof Tone.Monophonic)){\n\t\t\tthrow new Error(\"Synth constructor must be instance of Tone.Monophonic\");\n\t\t}\n\t\tthis.voices[i] = v;\n\t\tv.index = i;\n\t\tv.connect(this.output);\n\t\tif (v.hasOwnProperty(\"detune\")){\n\t\t\tthis.detune.connect(v.detune);\n\t\t}\n\t}\n};\n\nTone.extend(Tone.PolySynth, Tone.Instrument);\n\n/**\n *  the defaults\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.PolySynth.defaults = {\n\t\"polyphony\" : 4,\n\t\"volume\" : 0,\n\t\"detune\" : 0,\n\t\"voice\" : Tone.Synth\n};\n\n/**\n *  Get the closest available voice, that is the\n *  one that is either the closest to the note,\n *  or has the lowest envelope value.\n *  @param {Time} time return the voice that has the lowest energy at this time.\n *  @param  {Note}  note  if there is a voice with this note, that should be returned\n *  @return  {Tone.Monophonic}  A synth voice.\n *  @private\n */\nTone.PolySynth.prototype._getClosestVoice = function(time, note){\n\t//play the note which has the same frequency, if that exists\n\tvar sameNote = this.voices.find(function(voice){\n\t\t//break if it's within a small epsion of the voice's frequency\n\t\tif (Math.abs(voice.frequency.getValueAtTime(time) - Tone.Frequency(note)) < 1e-4 && \n\t\t\t//and that note is currently active\n\t\t\tvoice.getLevelAtTime(time) > 1e-5){\n\t\t\treturn voice;\n\t\t} \n\t});\n\tif (sameNote){\n\t\treturn sameNote;\n\t}\n\n\tvar sortedVoices = this.voices.slice().sort(function(a, b){\n\t\t//check that it's not scheduled in the future\n\t\tvar aLevel = a.getLevelAtTime(time + this.blockTime);\n\t\tvar bLevel = b.getLevelAtTime(time + this.blockTime);\n\n\t\tvar silenceThresh = 1e-5;\n\t\tif (aLevel < silenceThresh){\n\t\t\taLevel = 0;\n\t\t}\n\t\tif (bLevel < silenceThresh){\n\t\t\tbLevel = 0;\n\t\t}\n\t\treturn aLevel - bLevel;\n\t}.bind(this));\n\n\treturn sortedVoices[0];\n};\n\n/**\n *  Trigger the attack portion of the note\n *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n *                                  Frequency or an array of frequencies.\n *  @param  {Time} [time=now]  The start time of the note.\n *  @param {number} [velocity=1] The velocity of the note.\n *  @returns {Tone.PolySynth} this\n *  @example\n * //trigger a chord immediately with a velocity of 0.2\n * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"], undefined, 0.2);\n */\nTone.PolySynth.prototype.triggerAttack = function(notes, time, velocity){\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\ttime = this.toSeconds(time);\n\tnotes.forEach(function(note){\n\t\tvar voice = this._getClosestVoice(time, note);\n\t\tvoice.triggerAttack(note, time, velocity);\n\t\tthis.log(\"triggerAttack\", voice.index, note);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Trigger the release of the note. Unlike monophonic instruments,\n *  a note (or array of notes) needs to be passed in as the first argument.\n *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n *                                  Frequency or an array of frequencies.\n *  @param  {Time} [time=now]  When the release will be triggered.\n *  @returns {Tone.PolySynth} this\n *  @example\n * poly.triggerRelease([\"Ab3\", \"C4\", \"F5\"], \"+2n\");\n */\nTone.PolySynth.prototype.triggerRelease = function(notes, time){\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\ttime = this.toSeconds(time);\n\tnotes.forEach(function(note){\n\t\tvar voice = this._getClosestVoice(time, note);\n\t\tthis.log(\"triggerRelease\", voice.index, note);\n\t\tvoice.triggerRelease(time);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Trigger the attack and release after the specified duration\n *\n *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n *                                  Frequency or an array of frequencies.\n *  @param  {Time} duration the duration of the note\n *  @param  {Time} [time=now]     if no time is given, defaults to now\n *  @param  {number} [velocity=1] the velocity of the attack (0-1)\n *  @returns {Tone.PolySynth} this\n *  @example\n * //trigger a chord for a duration of a half note\n * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], \"2n\");\n *  @example\n * //can pass in an array of durations as well\n * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], [\"2n\", \"4n\", \"4n\"]);\n */\nTone.PolySynth.prototype.triggerAttackRelease = function(notes, duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.triggerAttack(notes, time, velocity);\n\tif (Tone.isArray(duration) && Tone.isArray(notes)){\n\t\tfor (var i = 0; i < notes.length; i++){\n\t\t\tvar d = duration[Math.min(i, duration.length - 1)];\n\t\t\tthis.triggerRelease(notes[i], time + this.toSeconds(d));\n\t\t}\n\t} else {\n\t\tthis.triggerRelease(notes, time + this.toSeconds(duration));\n\t}\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.PolySynth.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 1);\n\tthis._syncMethod(\"triggerRelease\", 1);\n\treturn this;\n};\n\n/**\n *  Set a member/attribute of the voices.\n *  @param {Object|string} params\n *  @param {number=} value\n *  @param {Time=} rampTime\n *  @returns {Tone.PolySynth} this\n *  @example\n * poly.set({\n * \t\"filter\" : {\n * \t\t\"type\" : \"highpass\"\n * \t},\n * \t\"envelope\" : {\n * \t\t\"attack\" : 0.25\n * \t}\n * });\n */\nTone.PolySynth.prototype.set = function(params, value, rampTime){\n\tfor (var i = 0; i < this.voices.length; i++){\n\t\tthis.voices[i].set(params, value, rampTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Get the synth's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. Pass in a single attribute to retrieve or an array\n *  of attributes. The attribute strings can also include a \".\"\n *  to access deeper properties.\n *  @param {Array=} params the parameters to get, otherwise will return\n *  \t\t\t\t\t   all available.\n */\nTone.PolySynth.prototype.get = function(params){\n\treturn this.voices[0].get(params);\n};\n\n/**\n *  Trigger the release portion of all the currently active voices.\n *  @param {Time} [time=now] When the notes should be released.\n *  @return {Tone.PolySynth} this\n */\nTone.PolySynth.prototype.releaseAll = function(time){\n\ttime = this.toSeconds(time);\n\tthis.voices.forEach(function(voice){\n\t\tvoice.triggerRelease(time);\n\t});\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.PolySynth} this\n */\nTone.PolySynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis.voices.forEach(function(voice){\n\t\tvoice.dispose();\n\t});\n\tthis._writable(\"detune\");\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.voices = null;\n\treturn this;\n};\n\n/**\n *  The maximum number of notes that can be allocated\n *  to a polysynth.\n *  @type  {Number}\n *  @static\n */\nTone.PolySynth.MAX_POLYPHONY = 20;\n\nexport default Tone.PolySynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../source/Noise\";\nimport \"../component/LowpassCombFilter\";\n\n/**\n *  @class Karplus-String string synthesis. Often out of tune.\n *         Will change when the AudioWorkerNode is available across\n *         browsers.\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] see the defaults\n *  @example\n * var plucky = new Tone.PluckSynth().toMaster();\n * plucky.triggerAttack(\"C4\");\n */\nTone.PluckSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.PluckSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  @type {Tone.Noise}\n\t *  @private\n\t */\n\tthis._noise = new Tone.Noise(\"pink\");\n\n\t/**\n\t *  The amount of noise at the attack.\n\t *  Nominal range of [0.1, 20]\n\t *  @type {number}\n\t */\n\tthis.attackNoise = options.attackNoise;\n\n\t/**\n\t *  the LFCF\n\t *  @type {Tone.LowpassCombFilter}\n\t *  @private\n\t */\n\tthis._lfcf = new Tone.LowpassCombFilter({\n\t\t\"resonance\" : options.resonance,\n\t\t\"dampening\" : options.dampening\n\t});\n\n\t/**\n\t *  The resonance control.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.resonance = this._lfcf.resonance;\n\n\t/**\n\t *  The dampening control. i.e. the lowpass filter frequency of the comb filter\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.dampening = this._lfcf.dampening;\n\n\t//connections\n\tthis._noise.connect(this._lfcf);\n\tthis._lfcf.connect(this.output);\n\tthis._readOnly([\"resonance\", \"dampening\"]);\n};\n\nTone.extend(Tone.PluckSynth, Tone.Instrument);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.PluckSynth.defaults = {\n\t\"attackNoise\" : 1,\n\t\"dampening\" : 4000,\n\t\"resonance\" : 0.7\n};\n\n/**\n *  Trigger the note.\n *  @param {Frequency} note The note to trigger.\n *  @param {Time} [time=now] When the note should be triggered.\n *  @returns {Tone.PluckSynth} this\n */\nTone.PluckSynth.prototype.triggerAttack = function(note, time){\n\tnote = this.toFrequency(note);\n\ttime = this.toSeconds(time);\n\tvar delayAmount = 1 / note;\n\tthis._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\tthis._noise.start(time);\n\tthis._noise.stop(time + delayAmount * this.attackNoise);\n\treturn this;\n};\n\n/**\n *\tMake this method which belongs to the parent class private since\n *\tPluckSynth does not have any 'release' method.\n * \t@memberOf Tone.PluckSynth#\n *  @function\n *  @private\n *  @name triggerAttackRelease\n */\n\n/**\n *  Clean up.\n *  @returns {Tone.PluckSynth} this\n */\nTone.PluckSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._noise.dispose();\n\tthis._lfcf.dispose();\n\tthis._noise = null;\n\tthis._lfcf = null;\n\tthis._writable([\"resonance\", \"dampening\"]);\n\tthis.dampening = null;\n\tthis.resonance = null;\n\treturn this;\n};\n\nexport default Tone.PluckSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../component/FrequencyEnvelope\";\nimport \"../source/Noise\";\nimport \"../signal/Signal\";\nimport \"../component/Filter\";\nimport \"../instrument/Instrument\";\n\n/**\n *  @class  Tone.NoiseSynth is composed of a noise generator (Tone.Noise), one filter (Tone.Filter),\n *          and two envelopes (Tone.Envelop). One envelope controls the amplitude\n *          of the noise and the other is controls the cutoff frequency of the filter.\n *          <img src=\"https://docs.google.com/drawings/d/1rqzuX9rBlhT50MRvD2TKml9bnZhcZmzXF1rf_o7vdnE/pub?w=918&h=242\">\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n * @example\n * var noiseSynth = new Tone.NoiseSynth().toMaster();\n * noiseSynth.triggerAttackRelease(\"8n\");\n */\nTone.NoiseSynth = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.NoiseSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The noise source.\n\t *  @type {Tone.Noise}\n\t *  @example\n\t * noiseSynth.set(\"noise.type\", \"brown\");\n\t */\n\tthis.noise = new Tone.Noise(options.noise);\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t//connect the noise to the output\n\tthis.noise.chain(this.envelope, this.output);\n\tthis._readOnly([\"noise\", \"envelope\"]);\n};\n\nTone.extend(Tone.NoiseSynth, Tone.Instrument);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.NoiseSynth.defaults = {\n\t\"noise\" : {\n\t\t\"type\" : \"white\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.005,\n\t\t\"decay\" : 0.1,\n\t\t\"sustain\" : 0.0,\n\t}\n};\n\n/**\n *  Start the attack portion of the envelopes. Unlike other\n *  instruments, Tone.NoiseSynth doesn't have a note.\n *  @param {Time} [time=now] the time the attack should start\n *  @param {number} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.NoiseSynth} this\n *  @example\n * noiseSynth.triggerAttack();\n */\nTone.NoiseSynth.prototype.triggerAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis.envelope.triggerAttack(time, velocity);\n\t//start the noise\n\tthis.noise.start(time);\n\tif (this.envelope.sustain === 0){\n\t\tthis.noise.stop(time + this.envelope.attack + this.envelope.decay);\n\t}\n\treturn this;\n};\n\n/**\n *  Start the release portion of the envelopes.\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.NoiseSynth} this\n */\nTone.NoiseSynth.prototype.triggerRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis.noise.stop(time + this.envelope.release);\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.NoiseSynth.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 0);\n\tthis._syncMethod(\"triggerRelease\", 0);\n\treturn this;\n};\n\n/**\n *  Trigger the attack and then the release.\n *  @param  {Time} duration the duration of the note\n *  @param  {Time} [time=now]     the time of the attack\n *  @param  {number} [velocity=1] the velocity\n *  @returns {Tone.NoiseSynth} this\n */\nTone.NoiseSynth.prototype.triggerAttackRelease = function(duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tduration = this.toSeconds(duration);\n\tthis.triggerAttack(time, velocity);\n\tthis.triggerRelease(time + duration);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.NoiseSynth} this\n */\nTone.NoiseSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._writable([\"noise\", \"envelope\"]);\n\tthis.noise.dispose();\n\tthis.noise = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\treturn this;\n};\n\nexport default Tone.NoiseSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../source/FMOscillator\";\nimport \"../component/Filter\";\nimport \"../component/FrequencyEnvelope\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../core/Gain\";\nimport \"../signal/Scale\";\nimport \"../signal/Multiply\";\n\n/**\n *  Inharmonic ratio of frequencies based on the Roland TR-808\n *  Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n *  @private\n *  @static\n *  @type {Array}\n */\nvar inharmRatios = [1.0, 1.483, 1.932, 2.546, 2.630, 3.897];\n\n/**\n *  @class  A highly inharmonic and spectrally complex source with a highpass filter\n *          and amplitude envelope which is good for making metalophone sounds. Based\n *          on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n *          Inspiration from [Sound on Sound](https://web.archive.org/web/20160610143924/https://www.soundonsound.com/sos/jul02/articles/synthsecrets0702.asp).\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] The options availble for the synth\n *                             see defaults below\n */\nTone.MetalSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.MetalSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The frequency of the cymbal\n\t *  @type  {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The array of FMOscillators\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._oscillators = [];\n\n\t/**\n\t *  The frequency multipliers\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._freqMultipliers = [];\n\n\t/**\n\t *  The amplitude for the body\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._amplitue = new Tone.Gain(0).connect(this.output);\n\n\t/**\n\t *  highpass the output\n\t *  @type {Tone.Filter}\n\t *  @private\n\t */\n\tthis._highpass = new Tone.Filter({\n\t\t\"type\" : \"highpass\",\n\t\t\"Q\" : -3.0102999566398125\n\t}).connect(this._amplitue);\n\n\t/**\n\t *  The number of octaves the highpass\n\t *  filter frequency ramps\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t/**\n\t *  Scale the body envelope\n\t *  for the bandpass\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._filterFreqScaler = new Tone.Scale(options.resonance, 7000);\n\n\t/**\n\t *  The envelope which is connected both to the\n\t *  amplitude and highpass filter's cutoff frequency\n\t *  @type  {Tone.Envelope}\n\t */\n\tthis.envelope = new Tone.Envelope({\n\t\t\"attack\" : options.envelope.attack,\n\t\t\"attackCurve\" : \"linear\",\n\t\t\"decay\" : options.envelope.decay,\n\t\t\"sustain\" : 0,\n\t\t\"release\" : options.envelope.release,\n\t}).chain(this._filterFreqScaler, this._highpass.frequency);\n\tthis.envelope.connect(this._amplitue.gain);\n\n\tfor (var i = 0; i < inharmRatios.length; i++){\n\t\tvar osc = new Tone.FMOscillator({\n\t\t\t\"type\" : \"square\",\n\t\t\t\"modulationType\" : \"square\",\n\t\t\t\"harmonicity\" : options.harmonicity,\n\t\t\t\"modulationIndex\" : options.modulationIndex\n\t\t});\n\t\tosc.connect(this._highpass);\n\t\tthis._oscillators[i] = osc;\n\n\t\tvar mult = new Tone.Multiply(inharmRatios[i]);\n\t\tthis._freqMultipliers[i] = mult;\n\t\tthis.frequency.chain(mult, osc.frequency);\n\t}\n\n\t//set the octaves\n\tthis.octaves = options.octaves;\n\n};\n\nTone.extend(Tone.MetalSynth, Tone.Instrument);\n\n/**\n *  default values\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.MetalSynth.defaults = {\n\t\"frequency\" : 200,\n\t\"envelope\" : {\n\t\t\"attack\" : 0.001,\n\t\t\"decay\" : 1.4,\n\t\t\"release\" : 0.2\n\t},\n\t\"harmonicity\" : 5.1,\n\t\"modulationIndex\" : 32,\n\t\"resonance\" : 4000,\n\t\"octaves\" : 1.5\n};\n\n/**\n *  Trigger the attack.\n *  @param  {Time}  time      When the attack should be triggered.\n *  @param  {NormalRange}  [velocity=1]  The velocity that the envelope should be triggered at.\n *  @return  {Tone.MetalSynth}  this\n */\nTone.MetalSynth.prototype.triggerAttack = function(time, vel){\n\ttime = this.toSeconds(time);\n\tvel = Tone.defaultArg(vel, 1);\n\tthis.envelope.triggerAttack(time, vel);\n\tthis._oscillators.forEach(function(osc){\n\t\tosc.start(time);\n\t});\n\t//if the sustain is 0, stop the oscillator as well\n\tif (this.envelope.sustain === 0){\n\t\tthis._oscillators.forEach(function(osc){\n\t\t\tosc.stop(time + this.envelope.attack + this.envelope.decay);\n\t\t}.bind(this));\n\t}\n\treturn this;\n};\n\n/**\n *  Trigger the release of the envelope.\n *  @param  {Time}  time      When the release should be triggered.\n *  @return  {Tone.MetalSynth}  this\n */\nTone.MetalSynth.prototype.triggerRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis._oscillators.forEach(function(osc){\n\t\tosc.stop(time + this.envelope.release);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.MetalSynth.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 0);\n\tthis._syncMethod(\"triggerRelease\", 0);\n\treturn this;\n};\n\n/**\n *  Trigger the attack and release of the envelope after the given\n *  duration.\n *  @param  {Time}  duration  The duration before triggering the release\n *  @param  {Time}  time      When the attack should be triggered.\n *  @param  {NormalRange}  [velocity=1]  The velocity that the envelope should be triggered at.\n *  @return  {Tone.MetalSynth}  this\n */\nTone.MetalSynth.prototype.triggerAttackRelease = function(duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tduration = this.toSeconds(duration);\n\tthis.triggerAttack(time, velocity);\n\tthis.triggerRelease(time + duration);\n\treturn this;\n};\n\n/**\n *  The modulationIndex of the oscillators which make up the source.\n *  see Tone.FMOscillator.modulationIndex\n *  @memberOf Tone.MetalSynth#\n *  @type {Positive}\n *  @name  modulationIndex\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"modulationIndex\", {\n\tget : function(){\n\t\treturn this._oscillators[0].modulationIndex.value;\n\t},\n\tset : function(val){\n\t\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\t\tthis._oscillators[i].modulationIndex.value = val;\n\t\t}\n\t}\n});\n\n/**\n *  The harmonicity of the oscillators which make up the source.\n *  see Tone.FMOscillator.harmonicity\n *  @memberOf Tone.MetalSynth#\n *  @type {Positive}\n *  @name  harmonicity\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"harmonicity\", {\n\tget : function(){\n\t\treturn this._oscillators[0].harmonicity.value;\n\t},\n\tset : function(val){\n\t\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\t\tthis._oscillators[i].harmonicity.value = val;\n\t\t}\n\t}\n});\n\n/**\n *  The frequency of the highpass filter attached to the envelope\n *  @memberOf Tone.MetalSynth#\n *  @type {Frequency}\n *  @name  resonance\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"resonance\", {\n\tget : function(){\n\t\treturn this._filterFreqScaler.min;\n\t},\n\tset : function(val){\n\t\tthis._filterFreqScaler.min = val;\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n *  The number of octaves above the \"resonance\" frequency\n *  that the filter ramps during the attack/decay envelope\n *  @memberOf Tone.MetalSynth#\n *  @type {Number}\n *  @name  octaves\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octs){\n\t\tthis._octaves = octs;\n\t\tthis._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, octs);\n\t}\n});\n\n/**\n *  Clean up\n *  @returns {Tone.MetalSynth} this\n */\nTone.MetalSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\tthis._oscillators[i].dispose();\n\t\tthis._freqMultipliers[i].dispose();\n\t}\n\tthis._oscillators = null;\n\tthis._freqMultipliers = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis._filterFreqScaler.dispose();\n\tthis._filterFreqScaler = null;\n\tthis._amplitue.dispose();\n\tthis._amplitue = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\tthis._highpass.dispose();\n\tthis._highpass = null;\n};\n\nexport default Tone.MetalSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/OmniOscillator\";\nimport \"../instrument/Instrument\";\nimport \"../component/AmplitudeEnvelope\";\n\n/**\n *  @class  Tone.MembraneSynth makes kick and tom sounds using a single oscillator\n *          with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n *          is routed through a Tone.AmplitudeEnvelope to the output. The drum\n *          quality of the sound comes from the frequency envelope applied\n *          during Tone.MembraneSynth.triggerAttack(note). The frequency envelope\n *          starts at <code>note * .octaves</code> and ramps to <code>note</code>\n *          over the duration of <code>.pitchDecay</code>.\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var synth = new Tone.MembraneSynth().toMaster();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n */\nTone.MembraneSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.MembraneSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.OmniOscillator}\n\t */\n\tthis.oscillator = new Tone.OmniOscillator(options.oscillator);\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t/**\n\t *  The number of octaves the pitch envelope ramps.\n\t *  @type {Positive}\n\t */\n\tthis.octaves = options.octaves;\n\n\t/**\n\t *  The amount of time the frequency envelope takes.\n\t *  @type {Time}\n\t */\n\tthis.pitchDecay = options.pitchDecay;\n\n\tthis.oscillator.chain(this.envelope, this.output);\n\tthis._readOnly([\"oscillator\", \"envelope\"]);\n};\n\nTone.extend(Tone.MembraneSynth, Tone.Instrument);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.MembraneSynth.defaults = {\n\t\"pitchDecay\" : 0.05,\n\t\"octaves\" : 10,\n\t\"oscillator\" : {\n\t\t\"type\" : \"sine\",\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.001,\n\t\t\"decay\" : 0.4,\n\t\t\"sustain\" : 0.01,\n\t\t\"release\" : 1.4,\n\t\t\"attackCurve\" : \"exponential\"\n\t}\n};\n\n/**\n *  Trigger the note at the given time with the given velocity.\n *\n *  @param  {Frequency} note     the note\n *  @param  {Time} [time=now]     the time, if not given is now\n *  @param  {number} [velocity=1] velocity defaults to 1\n *  @returns {Tone.MembraneSynth} this\n *  @example\n *  kick.triggerAttack(60);\n */\nTone.MembraneSynth.prototype.triggerAttack = function(note, time, velocity){\n\ttime = this.toSeconds(time);\n\tnote = this.toFrequency(note);\n\tvar maxNote = note * this.octaves;\n\tthis.oscillator.frequency.setValueAtTime(maxNote, time);\n\tthis.oscillator.frequency.exponentialRampToValueAtTime(note, time + this.toSeconds(this.pitchDecay));\n\tthis.envelope.triggerAttack(time, velocity);\n\tthis.oscillator.start(time);\n\tif (this.envelope.sustain === 0){\n\t\tthis.oscillator.stop(time + this.envelope.attack + this.envelope.decay);\n\t}\n\treturn this;\n};\n\n/**\n *  Trigger the release portion of the note.\n *\n *  @param  {Time} [time=now] the time the note will release\n *  @returns {Tone.MembraneSynth} this\n */\nTone.MembraneSynth.prototype.triggerRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis.oscillator.stop(time + this.envelope.release);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.MembraneSynth} this\n */\nTone.MembraneSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._writable([\"oscillator\", \"envelope\"]);\n\tthis.oscillator.dispose();\n\tthis.oscillator = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\treturn this;\n};\n\nexport default Tone.MembraneSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Synth\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../instrument/Monophonic\";\n\n/**\n *  @class  FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n *          the frequency of a second Tone.Synth. A lot of spectral content\n *          can be explored using the modulationIndex parameter. Read more about\n *          frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).\n *          <img src=\"https://docs.google.com/drawings/d/1h0PUDZXPgi4Ikx6bVT6oncrYPLluFKy7lj53puxj-DM/pub?w=902&h=462\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var fmSynth = new Tone.FMSynth().toMaster();\n * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n */\nTone.FMSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.FMSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The carrier voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Synth(options.carrier);\n\tthis._carrier.volume.value = -10;\n\n\t/**\n\t *  The carrier's oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.oscillator = this._carrier.oscillator;\n\n\t/**\n\t *  The carrier's envelope\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.envelope = this._carrier.envelope.set(options.envelope);\n\n\t/**\n\t *  The modulator voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Synth(options.modulator);\n\tthis._modulator.volume.value = -10;\n\n\t/**\n\t *  The modulator's oscillator which is applied\n\t *  to the amplitude of the oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.modulation = this._modulator.oscillator.set(options.modulation);\n\n\t/**\n\t *  The modulator's envelope\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune in cents\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch voice1 an octave below voice0\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  The modulation index which essentially the depth or amount of the modulation. It is the\n\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t *  modulating signal (ma) -- as in ma/mf.\n\t *\t@type {Positive}\n\t *\t@signal\n\t */\n\tthis.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\tthis.modulationIndex.units = Tone.Type.Positive;\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain(0);\n\n\t//control the two voices frequency\n\tthis.frequency.connect(this._carrier.frequency);\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\tthis.detune.fan(this._carrier.detune, this._modulator.detune);\n\tthis._modulator.connect(this._modulationNode.gain);\n\tthis._modulationNode.connect(this._carrier.frequency);\n\tthis._carrier.connect(this.output);\n\tthis._readOnly([\"frequency\", \"harmonicity\", \"modulationIndex\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n};\n\nTone.extend(Tone.FMSynth, Tone.Monophonic);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.FMSynth.defaults = {\n\t\"harmonicity\" : 3,\n\t\"modulationIndex\" : 10,\n\t\"detune\" : 0,\n\t\"oscillator\" : {\n\t\t\"type\" : \"sine\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.01,\n\t\t\"decay\" : 0.01,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t},\n\t\"modulation\" : {\n\t\t\"type\" : \"square\"\n\t},\n\t\"modulationEnvelope\" : {\n\t\t\"attack\" : 0.5,\n\t\t\"decay\" : 0.0,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t}\n};\n\n/**\n * \ttrigger the attack portion of the note\n *\n *  @param  {Time} [time=now] the time the note will occur\n *  @param {number} [velocity=1] the velocity of the note\n *  @returns {Tone.FMSynth} this\n *  @private\n */\nTone.FMSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis._carrier._triggerEnvelopeAttack(time, velocity);\n\tthis._modulator._triggerEnvelopeAttack(time);\n\treturn this;\n};\n\n/**\n *  trigger the release portion of the note\n *\n *  @param  {Time} [time=now] the time the note will release\n *  @returns {Tone.FMSynth} this\n *  @private\n */\nTone.FMSynth.prototype._triggerEnvelopeRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis._carrier._triggerEnvelopeRelease(time);\n\tthis._modulator._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.FMSynth} this\n */\nTone.FMSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"harmonicity\", \"modulationIndex\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.modulationIndex.dispose();\n\tthis.modulationIndex = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis.oscillator = null;\n\tthis.envelope = null;\n\tthis.modulationEnvelope = null;\n\tthis.modulation = null;\n\treturn this;\n};\n\nexport default Tone.FMSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/MonoSynth\";\nimport \"../component/LFO\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../instrument/Monophonic\";\nimport \"../core/Param\";\n\n/**\n *  @class  Tone.DuoSynth is a monophonic synth composed of two\n *          MonoSynths run in parallel with control over the\n *          frequency ratio between the two voices and vibrato effect.\n *          <img src=\"https://docs.google.com/drawings/d/1bL4GXvfRMMlqS7XyBm9CjL9KJPSUKbcdBNpqOlkFLxk/pub?w=1012&h=448\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var duoSynth = new Tone.DuoSynth().toMaster();\n * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n */\nTone.DuoSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.DuoSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  the first voice\n\t *  @type {Tone.MonoSynth}\n\t */\n\tthis.voice0 = new Tone.MonoSynth(options.voice0);\n\tthis.voice0.volume.value = -10;\n\n\t/**\n\t *  the second voice\n\t *  @type {Tone.MonoSynth}\n\t */\n\tthis.voice1 = new Tone.MonoSynth(options.voice1);\n\tthis.voice1.volume.value = -10;\n\n\t/**\n\t *  The vibrato LFO.\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._vibrato = new Tone.LFO(options.vibratoRate, -50, 50);\n\tthis._vibrato.start();\n\n\t/**\n\t * the vibrato frequency\n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.vibratoRate = this._vibrato.frequency;\n\n\t/**\n\t *  the vibrato gain\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._vibratoGain = new Tone.Gain(options.vibratoAmount, Tone.Type.Positive);\n\n\t/**\n\t * The amount of vibrato\n\t * @type {Positive}\n\t * @signal\n\t */\n\tthis.vibratoAmount = this._vibratoGain.gain;\n\n\t/**\n\t *  the frequency control\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\n\t/**\n\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch voice1 an octave below voice0\n\t * duoSynth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t//control the two voices frequency\n\tthis.frequency.connect(this.voice0.frequency);\n\tthis.frequency.chain(this.harmonicity, this.voice1.frequency);\n\tthis._vibrato.connect(this._vibratoGain);\n\tthis._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n\tthis.voice0.connect(this.output);\n\tthis.voice1.connect(this.output);\n\tthis._readOnly([\"voice0\", \"voice1\", \"frequency\", \"vibratoAmount\", \"vibratoRate\"]);\n};\n\nTone.extend(Tone.DuoSynth, Tone.Monophonic);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.DuoSynth.defaults = {\n\t\"vibratoAmount\" : 0.5,\n\t\"vibratoRate\" : 5,\n\t\"harmonicity\" : 1.5,\n\t\"voice0\" : {\n\t\t\"volume\" : -10,\n\t\t\"portamento\" : 0,\n\t\t\"oscillator\" : {\n\t\t\t\"type\" : \"sine\"\n\t\t},\n\t\t\"filterEnvelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t},\n\t\t\"envelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t}\n\t},\n\t\"voice1\" : {\n\t\t\"volume\" : -10,\n\t\t\"portamento\" : 0,\n\t\t\"oscillator\" : {\n\t\t\t\"type\" : \"sine\"\n\t\t},\n\t\t\"filterEnvelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t},\n\t\t\"envelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t}\n\t}\n};\n\n/**\n *  start the attack portion of the envelopes\n *\n *  @param {Time} [time=now] the time the attack should start\n *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.DuoSynth} this\n *  @private\n */\nTone.DuoSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.voice0._triggerEnvelopeAttack(time, velocity);\n\tthis.voice1._triggerEnvelopeAttack(time, velocity);\n\treturn this;\n};\n\n/**\n *  start the release portion of the envelopes\n *\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.DuoSynth} this\n *  @private\n */\nTone.DuoSynth.prototype._triggerEnvelopeRelease = function(time){\n\tthis.voice0._triggerEnvelopeRelease(time);\n\tthis.voice1._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  Get the level of the output at the given time. Measures\n *  the envelope(s) value at the time. \n *  @param {Time} time The time to query the envelope value\n *  @return {NormalRange} The output level between 0-1\n */\nTone.DuoSynth.prototype.getLevelAtTime = function(time){\n\treturn (this.voice0.getLevelAtTime(time) + this.voice1.getLevelAtTime(time))/2;\n};\n\n/**\n *  clean up\n *  @returns {Tone.DuoSynth} this\n */\nTone.DuoSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"voice0\", \"voice1\", \"frequency\", \"vibratoAmount\", \"vibratoRate\"]);\n\tthis.voice0.dispose();\n\tthis.voice0 = null;\n\tthis.voice1.dispose();\n\tthis.voice1 = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis._vibratoGain.dispose();\n\tthis._vibratoGain = null;\n\tthis._vibrato = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis.vibratoAmount.dispose();\n\tthis.vibratoAmount = null;\n\tthis.vibratoRate = null;\n\treturn this;\n};\n\nexport default Tone.DuoSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Synth\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../instrument/Monophonic\";\nimport \"../signal/AudioToGain\";\nimport \"../core/Gain\";\n\n/**\n *  @class  AMSynth uses the output of one Tone.Synth to modulate the\n *          amplitude of another Tone.Synth. The harmonicity (the ratio between\n *          the two signals) affects the timbre of the output signal greatly.\n *          Read more about Amplitude Modulation Synthesis on\n *          [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).\n *          <img src=\"https://docs.google.com/drawings/d/1TQu8Ed4iFr1YTLKpB3U1_hur-UwBrh5gdBXc8BxfGKw/pub?w=1009&h=457\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                            see defaults below\n *  @example\n * var synth = new Tone.AMSynth().toMaster();\n * synth.triggerAttackRelease(\"C4\", \"4n\");\n */\nTone.AMSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.AMSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The carrier voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Synth();\n\tthis._carrier.volume.value = -10;\n\n\t/**\n\t *  The carrier's oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.oscillator = this._carrier.oscillator.set(options.oscillator);\n\n\t/**\n\t *  The carrier's envelope\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = this._carrier.envelope.set(options.envelope);\n\n\t/**\n\t *  The modulator voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Synth();\n\tthis._modulator.volume.value = -10;\n\n\t/**\n\t *  The modulator's oscillator which is applied\n\t *  to the amplitude of the oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.modulation = this._modulator.oscillator.set(options.modulation);\n\n\t/**\n\t *  The modulator's envelope\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\n\t/**\n\t *  The frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune in cents\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch voice1 an octave below voice0\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  convert the -1,1 output to 0,1\n\t *  @type {Tone.AudioToGain}\n\t *  @private\n\t */\n\tthis._modulationScale = new Tone.AudioToGain();\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain();\n\n\t//control the two voices frequency\n\tthis.frequency.connect(this._carrier.frequency);\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.detune.fan(this._carrier.detune, this._modulator.detune);\n\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\tthis._carrier.chain(this._modulationNode, this.output);\n\tthis._readOnly([\"frequency\", \"harmonicity\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n};\n\nTone.extend(Tone.AMSynth, Tone.Monophonic);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.AMSynth.defaults = {\n\t\"harmonicity\" : 3,\n\t\"detune\" : 0,\n\t\"oscillator\" : {\n\t\t\"type\" : \"sine\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.01,\n\t\t\"decay\" : 0.01,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t},\n\t\"modulation\" : {\n\t\t\"type\" : \"square\"\n\t},\n\t\"modulationEnvelope\" : {\n\t\t\"attack\" : 0.5,\n\t\t\"decay\" : 0.0,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t}\n};\n\n/**\n *  trigger the attack portion of the note\n *\n *  @param  {Time} [time=now] the time the note will occur\n *  @param {NormalRange} [velocity=1] the velocity of the note\n *  @private\n *  @returns {Tone.AMSynth} this\n */\nTone.AMSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\t//the port glide\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis._carrier._triggerEnvelopeAttack(time, velocity);\n\tthis._modulator._triggerEnvelopeAttack(time);\n\treturn this;\n};\n\n/**\n *  trigger the release portion of the note\n *\n *  @param  {Time} [time=now] the time the note will release\n *  @private\n *  @returns {Tone.AMSynth} this\n */\nTone.AMSynth.prototype._triggerEnvelopeRelease = function(time){\n\tthis._carrier._triggerEnvelopeRelease(time);\n\tthis._modulator._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.AMSynth} this\n */\nTone.AMSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"harmonicity\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._modulationScale.dispose();\n\tthis._modulationScale = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis.oscillator = null;\n\tthis.envelope = null;\n\tthis.modulationEnvelope = null;\n\tthis.modulation = null;\n\treturn this;\n};\n\nexport default Tone.AMSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Part\";\nimport \"../core/Transport\";\n\n/**\n *  @class A sequence is an alternate notation of a part. Instead\n *         of passing in an array of [time, event] pairs, pass\n *         in an array of events which will be spaced at the\n *         given subdivision. Sub-arrays will subdivide that beat\n *         by the number of items are in the array.\n *         Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n *  @param  {Function}  callback  The callback to invoke with every note\n *  @param  {Array}    events  The sequence\n *  @param  {Time} subdivision  The subdivision between which events are placed.\n *  @extends {Tone.Part}\n *  @example\n * var seq = new Tone.Sequence(function(time, note){\n * \tconsole.log(note);\n * //straight quater notes\n * }, [\"C4\", \"E4\", \"G4\", \"A4\"], \"4n\");\n *  @example\n * var seq = new Tone.Sequence(function(time, note){\n * \tconsole.log(note);\n * //subdivisions are given as subarrays\n * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]);\n */\nTone.Sequence = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"events\", \"subdivision\"], Tone.Sequence);\n\n\t//remove the events\n\tvar events = options.events;\n\tdelete options.events;\n\n\tTone.Part.call(this, options);\n\n\t/**\n\t *  The subdivison of each note\n\t *  @type  {Ticks}\n\t *  @private\n\t */\n\tthis._subdivision = this.toTicks(options.subdivision);\n\n\t//if no time was passed in, the loop end is the end of the cycle\n\tif (Tone.isUndef(options.loopEnd) && Tone.isDefined(events)){\n\t\tthis._loopEnd = (events.length * this._subdivision);\n\t}\n\t//defaults to looping\n\tthis._loop = true;\n\n\t//add all of the events\n\tif (Tone.isDefined(events)){\n\t\tfor (var i = 0; i < events.length; i++){\n\t\t\tthis.add(i, events[i]);\n\t\t}\n\t}\n};\n\nTone.extend(Tone.Sequence, Tone.Part);\n\n/**\n *  The default values.\n *  @type  {Object}\n */\nTone.Sequence.defaults = {\n\t\"subdivision\" : \"4n\",\n};\n\n/**\n *  The subdivision of the sequence. This can only be\n *  set in the constructor. The subdivision is the\n *  interval between successive steps.\n *  @type {Time}\n *  @memberOf Tone.Sequence#\n *  @name subdivision\n *  @readOnly\n */\nObject.defineProperty(Tone.Sequence.prototype, \"subdivision\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._subdivision).toSeconds();\n\t}\n});\n\n/**\n *  Get/Set an index of the sequence. If the index contains a subarray,\n *  a Tone.Sequence representing that sub-array will be returned.\n *  @example\n * var sequence = new Tone.Sequence(playNote, [\"E4\", \"C4\", \"F#4\", [\"A4\", \"Bb3\"]])\n * sequence.at(0)// => returns \"E4\"\n * //set a value\n * sequence.at(0, \"G3\");\n * //get a nested sequence\n * sequence.at(3).at(1)// => returns \"Bb3\"\n * @param {Positive} index The index to get or set\n * @param {*} value Optionally pass in the value to set at the given index.\n */\nTone.Sequence.prototype.at = function(index, value){\n\t//if the value is an array,\n\tif (Tone.isArray(value)){\n\t\t//remove the current event at that index\n\t\tthis.remove(index);\n\t}\n\t//call the parent's method\n\treturn Tone.Part.prototype.at.call(this, this._indexTime(index), value);\n};\n\n/**\n *  Add an event at an index, if there's already something\n *  at that index, overwrite it. If `value` is an array,\n *  it will be parsed as a subsequence.\n *  @param {Number} index The index to add the event to\n *  @param {*} value The value to add at that index\n *  @returns {Tone.Sequence} this\n */\nTone.Sequence.prototype.add = function(index, value){\n\tif (value === null){\n\t\treturn this;\n\t}\n\tif (Tone.isArray(value)){\n\t\t//make a subsequence and add that to the sequence\n\t\tvar subSubdivision = Math.round(this._subdivision / value.length);\n\t\tvalue = new Tone.Sequence(this._tick.bind(this), value, Tone.Ticks(subSubdivision));\n\t}\n\tTone.Part.prototype.add.call(this, this._indexTime(index), value);\n\treturn this;\n};\n\n/**\n *  Remove a value from the sequence by index\n *  @param {Number} index The index of the event to remove\n *  @returns {Tone.Sequence} this\n */\nTone.Sequence.prototype.remove = function(index, value){\n\tTone.Part.prototype.remove.call(this, this._indexTime(index), value);\n\treturn this;\n};\n\n/**\n *  Get the time of the index given the Sequence's subdivision\n *  @param  {Number}  index\n *  @return  {Time}  The time of that index\n *  @private\n */\nTone.Sequence.prototype._indexTime = function(index){\n\tif (index instanceof Tone.TransportTime){\n\t\treturn index;\n\t} else {\n\t\treturn Tone.Ticks(index * this._subdivision + this.startOffset).toSeconds();\n\t}\n};\n\n/**\n *  Clean up.\n *  @return {Tone.Sequence} this\n */\nTone.Sequence.prototype.dispose = function(){\n\tTone.Part.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.Sequence;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Loop\";\nimport \"../control/CtrlPattern\";\n\n/**\n *  @class Tone.Pattern arpeggiates between the given notes\n *         in a number of patterns. See Tone.CtrlPattern for\n *         a full list of patterns.\n *  @example\n * var pattern = new Tone.Pattern(function(time, note){\n *   //the order of the notes passed in depends on the pattern\n * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n *  @extends {Tone.Loop}\n *  @param {Function} callback The callback to invoke with the event.\n *  @param {Array} values The values to arpeggiate over.\n */\nTone.Pattern = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"values\", \"pattern\"], Tone.Pattern);\n\tTone.Loop.call(this, options);\n\n\t/**\n\t *  The pattern manager\n\t *  @type {Tone.CtrlPattern}\n\t *  @private\n\t */\n\tthis._pattern = new Tone.CtrlPattern({\n\t\t\"values\" : options.values, \n\t\t\"type\" : options.pattern,\n\t\t\"index\" : options.index\n\t});\n};\n\nTone.extend(Tone.Pattern, Tone.Loop);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Pattern.defaults = {\n\t\"pattern\" : Tone.CtrlPattern.Type.Up,\n\t\"callback\" : Tone.noOp,\n\t\"values\" : [],\n};\n\n/**\n *  Internal function called when the notes should be called\n *  @param  {Number}  time  The time the event occurs\n *  @private\n */\nTone.Pattern.prototype._tick = function(time){\n\tthis.callback(time, this._pattern.value);\n\tthis._pattern.next();\n};\n\n/**\n *  The current index in the values array.\n *  @memberOf Tone.Pattern#\n *  @type {Positive}\n *  @name index\n */\nObject.defineProperty(Tone.Pattern.prototype, \"index\", {\n\tget : function(){\n\t\treturn this._pattern.index;\n\t},\n\tset : function(i){\n\t\tthis._pattern.index = i;\n\t}\n});\n\n/**\n *  The array of events.\n *  @memberOf Tone.Pattern#\n *  @type {Array}\n *  @name values\n */\nObject.defineProperty(Tone.Pattern.prototype, \"values\", {\n\tget : function(){\n\t\treturn this._pattern.values;\n\t},\n\tset : function(vals){\n\t\tthis._pattern.values = vals;\n\t}\n});\n\n/**\n *  The current value of the pattern.\n *  @memberOf Tone.Pattern#\n *  @type {*}\n *  @name value\n *  @readOnly\n */\nObject.defineProperty(Tone.Pattern.prototype, \"value\", {\n\tget : function(){\n\t\treturn this._pattern.value;\n\t}\n});\n\n/**\n *  The pattern type. See Tone.CtrlPattern for the full list of patterns.\n *  @memberOf Tone.Pattern#\n *  @type {String}\n *  @name pattern\n */\nObject.defineProperty(Tone.Pattern.prototype, \"pattern\", {\n\tget : function(){\n\t\treturn this._pattern.type;\n\t},\n\tset : function(pattern){\n\t\tthis._pattern.type = pattern;\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Pattern}  this\n */\nTone.Pattern.prototype.dispose = function(){\n\tTone.Loop.prototype.dispose.call(this);\n\tthis._pattern.dispose();\n\tthis._pattern = null;\n};\n\nexport default Tone.Pattern;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../core/Delay\";\nimport \"../component/LFO\";\n\n/**\n *  @class A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n *         modulates the delayTime of the delay, causing the pitch to rise\n *         and fall. \n *  @extends {Tone.Effect}\n *  @param {Frequency} frequency The frequency of the vibrato.\n *  @param {NormalRange} depth The amount the pitch is modulated.\n */\nTone.Vibrato = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"depth\"], Tone.Vibrato);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  The delay node used for the vibrato effect\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNode = new Tone.Delay(0, options.maxDelay);\n\n\t/**\n\t *  The LFO used to control the vibrato\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfo = new Tone.LFO({\n\t\t\"type\" : options.type,\n\t\t\"min\" : 0,\n\t\t\"max\" : options.maxDelay, \n\t\t\"frequency\" : options.frequency,\n\t\t\"phase\" : -90 //offse the phase so the resting position is in the center\n\t}).start().connect(this._delayNode.delayTime);\n\n\t/**\n\t *  The frequency of the vibrato\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._lfo.frequency;\n\n\t/**\n\t *  The depth of the vibrato. \n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.depth = this._lfo.amplitude;\n\n\tthis.depth.value = options.depth;\n\tthis._readOnly([\"frequency\", \"depth\"]);\n\tthis.effectSend.chain(this._delayNode, this.effectReturn);\n};\n\nTone.extend(Tone.Vibrato, Tone.Effect);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @const\n */\nTone.Vibrato.defaults = {\n\t\"maxDelay\" : 0.005,\n\t\"frequency\" : 5,\n\t\"depth\" : 0.1,\n\t\"type\" : \"sine\"\n};\n\n/**\n * Type of oscillator attached to the Vibrato.\n * @memberOf Tone.Vibrato#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Vibrato.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfo.type;\n\t},\n\tset : function(type){\n\t\tthis._lfo.type = type;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Vibrato} this\n */\nTone.Vibrato.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._delayNode.dispose();\n\tthis._delayNode = null;\n\tthis._lfo.dispose();\n\tthis._lfo = null;\n\tthis._writable([\"frequency\", \"depth\"]);\n\tthis.frequency = null;\n\tthis.depth = null;\n};\n\nexport default Tone.Vibrato;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../effect/StereoEffect\";\n\n/**\n *  @class Tone.Tremolo modulates the amplitude of an incoming signal using a Tone.LFO.\n *         The type, frequency, and depth of the LFO is controllable.\n *\n *  @extends {Tone.StereoEffect}\n *  @constructor\n *  @param {Frequency} [frequency] The rate of the effect.\n *  @param {NormalRange} [depth] The depth of the effect.\n *  @example\n * //create a tremolo and start it's LFO\n * var tremolo = new Tone.Tremolo(9, 0.75).toMaster().start();\n * //route an oscillator through the tremolo and start it\n * var oscillator = new Tone.Oscillator().connect(tremolo).start();\n */\nTone.Tremolo = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"depth\"], Tone.Tremolo);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  The tremelo LFO in the left channel\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoL = new Tone.LFO({\n\t\t\"phase\" : options.spread,\n\t\t\"min\" : 1,\n\t\t\"max\" : 0,\n\t});\n\n\t/**\n\t *  The tremelo LFO in the left channel\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoR = new Tone.LFO({\n\t\t\"phase\" : options.spread,\n\t\t\"min\" : 1,\n\t\t\"max\" : 0,\n\t});\n\n\t/**\n\t *  Where the gain is multiplied\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._amplitudeL = new Tone.Gain();\n\n\t/**\n\t *  Where the gain is multiplied\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._amplitudeR = new Tone.Gain();\n\n\t/**\n\t *  The frequency of the tremolo.\n\t *  @type  {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The depth of the effect. A depth of 0, has no effect\n\t *  on the amplitude, and a depth of 1 makes the amplitude\n\t *  modulate fully between 0 and 1.\n\t *  @type  {NormalRange}\n\t *  @signal\n\t */\n\tthis.depth = new Tone.Signal(options.depth, Tone.Type.NormalRange);\n\n\tthis._readOnly([\"frequency\", \"depth\"]);\n\tthis.effectSendL.chain(this._amplitudeL, this.effectReturnL);\n\tthis.effectSendR.chain(this._amplitudeR, this.effectReturnR);\n\tthis._lfoL.connect(this._amplitudeL.gain);\n\tthis._lfoR.connect(this._amplitudeR.gain);\n\tthis.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n\tthis.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n\tthis.type = options.type;\n\tthis.spread = options.spread;\n};\n\nTone.extend(Tone.Tremolo, Tone.StereoEffect);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Tremolo.defaults = {\n\t\"frequency\" : 10,\n\t\"type\" : \"sine\",\n\t\"depth\" : 0.5,\n\t\"spread\" : 180,\n};\n\n/**\n * Start the tremolo.\n * @param {Time} [time=now] When the tremolo begins.\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.start = function(time){\n\tthis._lfoL.start(time);\n\tthis._lfoR.start(time);\n\treturn this;\n};\n\n/**\n * Stop the tremolo.\n * @param {Time} [time=now] When the tremolo stops.\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.stop = function(time){\n\tthis._lfoL.stop(time);\n\tthis._lfoR.stop(time);\n\treturn this;\n};\n\n/**\n * Sync the effect to the transport.\n * @param {Time} [delay=0] Delay time before starting the effect after the\n *                              Transport has started.\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.sync = function(delay){\n\tthis._lfoL.sync(delay);\n\tthis._lfoR.sync(delay);\n\tTone.Transport.syncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n * Unsync the filter from the transport\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.unsync = function(){\n\tthis._lfoL.unsync();\n\tthis._lfoR.unsync();\n\tTone.Transport.unsyncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n * The Tremolo's oscillator type.\n * @memberOf Tone.Tremolo#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Tremolo.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfoL.type;\n\t},\n\tset : function(type){\n\t\tthis._lfoL.type = type;\n\t\tthis._lfoR.type = type;\n\t}\n});\n\n/**\n * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n * When set to 180, LFO's will be panned hard left and right respectively.\n * @memberOf Tone.Tremolo#\n * @type {Degrees}\n * @name spread\n */\nObject.defineProperty(Tone.Tremolo.prototype, \"spread\", {\n\tget : function(){\n\t\treturn this._lfoR.phase - this._lfoL.phase; //180\n\t},\n\tset : function(spread){\n\t\tthis._lfoL.phase = 90 - (spread/2);\n\t\tthis._lfoR.phase = (spread/2) + 90;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"depth\"]);\n\tthis._lfoL.dispose();\n\tthis._lfoL = null;\n\tthis._lfoR.dispose();\n\tthis._lfoR = null;\n\tthis._amplitudeL.dispose();\n\tthis._amplitudeL = null;\n\tthis._amplitudeR.dispose();\n\tthis._amplitudeR = null;\n\tthis.frequency = null;\n\tthis.depth = null;\n\treturn this;\n};\n\nexport default Tone.Tremolo;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/MidSideEffect\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../signal/Subtract\";\n\n/**\n *  @class Applies a width factor to the mid/side seperation.\n *         0 is all mid and 1 is all side.\n *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n *         <br><br>\n *         <code>\n *         Mid *= 2*(1-width)<br>\n *         Side *= 2*width\n *         </code>\n *\n *  @extends {Tone.MidSideEffect}\n *  @constructor\n *  @param {NormalRange|Object} [width] The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n */\nTone.StereoWidener = function(){\n\n\tvar options = Tone.defaults(arguments, [\"width\"], Tone.StereoWidener);\n\tTone.MidSideEffect.call(this, options);\n\n\t/**\n\t *  The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\tthis._readOnly([\"width\"]);\n\n\t/**\n\t * Two times the (1-width) for the mid channel\n\t * @type {Tone.Multiply}\n\t * @private\n\t */\n\tthis._twoTimesWidthMid = new Tone.Multiply(2);\n\n\t/**\n\t * Two times the width for the side channel\n\t * @type {Tone.Multiply}\n\t * @private\n\t */\n\tthis._twoTimesWidthSide = new Tone.Multiply(2);\n\n\t/**\n\t *  Mid multiplier\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._midMult = new Tone.Multiply();\n\tthis._twoTimesWidthMid.connect(this._midMult, 0, 1);\n\tthis.midSend.chain(this._midMult, this.midReturn);\n\n\t/**\n\t * 1 - width\n\t * @type {Tone.Subtract}\n\t * @private\n\t */\n\tthis._oneMinusWidth = new Tone.Subtract();\n\tthis._oneMinusWidth.connect(this._twoTimesWidthMid);\n\tTone.connect(this.context.getConstant(1), this._oneMinusWidth, 0, 0);\n\tthis.width.connect(this._oneMinusWidth, 0, 1);\n\n\t/**\n\t *  Side multiplier\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._sideMult = new Tone.Multiply();\n\tthis.width.connect(this._twoTimesWidthSide);\n\tthis._twoTimesWidthSide.connect(this._sideMult, 0, 1);\n\tthis.sideSend.chain(this._sideMult, this.sideReturn);\n};\n\nTone.extend(Tone.StereoWidener, Tone.MidSideEffect);\n\n/**\n *  the default values\n *  @static\n *  @type {Object}\n */\nTone.StereoWidener.defaults = {\n\t\"width\" : 0.5\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.StereoWidener} this\n */\nTone.StereoWidener.prototype.dispose = function(){\n\tTone.MidSideEffect.prototype.dispose.call(this);\n\tthis._writable([\"width\"]);\n\tthis.width.dispose();\n\tthis.width = null;\n\tthis._midMult.dispose();\n\tthis._midMult = null;\n\tthis._sideMult.dispose();\n\tthis._sideMult = null;\n\tthis._twoTimesWidthMid.dispose();\n\tthis._twoTimesWidthMid = null;\n\tthis._twoTimesWidthSide.dispose();\n\tthis._twoTimesWidthSide = null;\n\tthis._oneMinusWidth.dispose();\n\tthis._oneMinusWidth = null;\n\treturn this;\n};\n\nexport default Tone.StereoWidener;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/StereoEffect\";\nimport \"../effect/FeedbackEffect\";\nimport \"../core/Gain\";\n\n/**\n *  @class Base class for stereo feedback effects where the effectReturn\n *         is fed back into the same channel.\n *\n *\t@constructor\n *\t@extends {Tone.StereoEffect}\n */\nTone.StereoFeedbackEffect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"feedback\"], Tone.FeedbackEffect);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  controls the amount of feedback\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\n\t/**\n\t *  the left side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackL = new Tone.Gain();\n\n\t/**\n\t *  the right side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackR = new Tone.Gain();\n\n\t//connect it up\n\tthis.effectReturnL.chain(this._feedbackL, this.effectSendL);\n\tthis.effectReturnR.chain(this._feedbackR, this.effectSendR);\n\tthis.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\tthis._readOnly([\"feedback\"]);\n};\n\nTone.extend(Tone.StereoFeedbackEffect, Tone.StereoEffect);\n\n/**\n *  clean up\n *  @returns {Tone.StereoFeedbackEffect} this\n */\nTone.StereoFeedbackEffect.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"feedback\"]);\n\tthis.feedback.dispose();\n\tthis.feedback = null;\n\tthis._feedbackL.dispose();\n\tthis._feedbackL = null;\n\tthis._feedbackR.dispose();\n\tthis._feedbackR = null;\n\treturn this;\n};\n\nexport default Tone.StereoFeedbackEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Offline\";\nimport \"../component/Filter\";\nimport \"../component/Merge\";\nimport \"../source/Noise\";\nimport \"../core/Gain\";\nimport \"../effect/Convolver\";\n\n/**\n *  @class Simple convolution created with decaying noise.\n *  \t\tGenerates an Impulse Response Buffer\n * \t\t\twith Tone.Offline then feeds the IR into ConvolverNode.\n * \t\t\tNote: the Reverb will not make any sound until [generate](#generate)\n * \t\t\thas been invoked and resolved.\n *\n * \t\t\tInspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).\n * \t\t\tCopyright (c) 2014 Alan deLespinasse Apache 2.0 License.\n *\n *  @extends {Tone.Convolver}\n *  @param {Time=} decay The amount of time it will reverberate for.\n */\nTone.Reverb = function(){\n\n\tvar options = Tone.defaults(arguments, [\"decay\"], Tone.Reverb);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  Convolver node\n\t *  @type {ConvolverNode}\n\t *  @private\n\t */\n\tthis._convolver = this.context.createConvolver();\n\n\t/**\n\t * The duration of the reverb\n\t * @type {Time}\n\t */\n\tthis.decay = options.decay;\n\n\t/**\n\t * The amount of time before the reverb is fully\n\t * ramped in.\n\t * @type {Time}\n\t */\n\tthis.preDelay = options.preDelay;\n\n\tthis.connectEffect(this._convolver);\n};\n\nTone.extend(Tone.Reverb, Tone.Effect);\n\n/**\n * The defaults\n * @type {Object}\n * @static\n */\nTone.Reverb.defaults = {\n\t\"decay\" : 1.5,\n\t\"preDelay\" : 0.01,\n};\n\n/**\n * Generate the Impulse Response. Returns a promise while the IR is being\n * generated.\n * @return {Promise<Tone.Reverb>} Promise which returns this object.\n */\nTone.Reverb.prototype.generate = function(){\n\treturn Tone.Offline(function(){\n\t\t//create a noise burst which decays over the duration\n\t\tvar noiseL = new Tone.Noise();\n\t\tvar noiseR = new Tone.Noise();\n\t\tvar merge = new Tone.Merge();\n\t\tnoiseL.connect(merge.left);\n\t\tnoiseR.connect(merge.right);\n\t\tvar gainNode = new Tone.Gain().toMaster();\n\t\tmerge.connect(gainNode);\n\t\tnoiseL.start(0);\n\t\tnoiseR.start(0);\n\t\t//predelay\n\t\tgainNode.gain.setValueAtTime(0, 0);\n\t\tgainNode.gain.setValueAtTime(1, this.preDelay);\n\t\t//decay\n\t\tgainNode.gain.exponentialApproachValueAtTime(0, this.preDelay, this.decay + this.preDelay);\n\t}.bind(this), this.decay + this.preDelay).then(function(buffer){\n\t\tthis._convolver.buffer = buffer.get();\n\t\treturn this;\n\t}.bind(this));\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Reverb}  this\n */\nTone.Reverb.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._convolver.disconnect();\n\tthis._convolver = null;\n\treturn this;\n};\n\nexport default Tone.Reverb;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../component/CrossFade\";\nimport \"../signal/Signal\";\nimport \"../effect/FeedbackEffect\";\nimport \"../core/Delay\";\n\n/**\n *  @class Tone.PitchShift does near-realtime pitch shifting to the incoming signal.\n *         The effect is achieved by speeding up or slowing down the delayTime\n *         of a DelayNode using a sawtooth wave.\n *         Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n *         Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n *\n *  @extends {Tone.FeedbackEffect}\n *  @param {Interval=} pitch The interval to transpose the incoming signal by.\n */\nTone.PitchShift = function(){\n\n\tvar options = Tone.defaults(arguments, [\"pitch\"], Tone.PitchShift);\n\tTone.FeedbackEffect.call(this, options);\n\n\t/**\n\t *  The pitch signal\n\t *  @type  {Tone.Signal}\n\t *  @private\n\t */\n\tthis._frequency = new Tone.Signal(0);\n\n\t/**\n\t *  Uses two DelayNodes to cover up the jump in\n\t *  the sawtooth wave.\n\t *  @type  {DelayNode}\n\t *  @private\n\t */\n\tthis._delayA = new Tone.Delay(0, 1);\n\n\t/**\n\t *  The first LFO.\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoA = new Tone.LFO({\n\t\t\"min\" : 0,\n\t\t\"max\" : 0.1,\n\t\t\"type\" : \"sawtooth\"\n\t}).connect(this._delayA.delayTime);\n\n\t/**\n\t *  The second DelayNode\n\t *  @type  {DelayNode}\n\t *  @private\n\t */\n\tthis._delayB = new Tone.Delay(0, 1);\n\n\t/**\n\t *  The first LFO.\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoB = new Tone.LFO({\n\t\t\"min\" : 0,\n\t\t\"max\" : 0.1,\n\t\t\"type\" : \"sawtooth\",\n\t\t\"phase\" : 180\n\t}).connect(this._delayB.delayTime);\n\n\t/**\n\t *  Crossfade quickly between the two delay lines\n\t *  to cover up the jump in the sawtooth wave\n\t *  @type  {Tone.CrossFade}\n\t *  @private\n\t */\n\tthis._crossFade = new Tone.CrossFade();\n\n\t/**\n\t *  LFO which alternates between the two\n\t *  delay lines to cover up the disparity in the\n\t *  sawtooth wave.\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._crossFadeLFO = new Tone.LFO({\n\t\t\"min\" : 0,\n\t\t\"max\" : 1,\n\t\t\"type\" : \"triangle\",\n\t\t\"phase\" : 90\n\t}).connect(this._crossFade.fade);\n\n\t/**\n\t *  The delay node\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._feedbackDelay = new Tone.Delay(options.delayTime);\n\n\t/**\n\t *  The amount of delay on the input signal\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._feedbackDelay.delayTime;\n\tthis._readOnly(\"delayTime\");\n\n\t/**\n\t *  Hold the current pitch\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._pitch = options.pitch;\n\n\t/**\n\t *  Hold the current windowSize\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._windowSize = options.windowSize;\n\n\t//connect the two delay lines up\n\tthis._delayA.connect(this._crossFade.a);\n\tthis._delayB.connect(this._crossFade.b);\n\t//connect the frequency\n\tthis._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n\t//route the input\n\tthis.effectSend.fan(this._delayA, this._delayB);\n\tthis._crossFade.chain(this._feedbackDelay, this.effectReturn);\n\t//start the LFOs at the same time\n\tvar now = this.now();\n\tthis._lfoA.start(now);\n\tthis._lfoB.start(now);\n\tthis._crossFadeLFO.start(now);\n\t//set the initial value\n\tthis.windowSize = this._windowSize;\n};\n\nTone.extend(Tone.PitchShift, Tone.FeedbackEffect);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.PitchShift.defaults = {\n\t\"pitch\" : 0,\n\t\"windowSize\" : 0.1,\n\t\"delayTime\" : 0,\n\t\"feedback\" : 0\n};\n\n/**\n * Repitch the incoming signal by some interval (measured\n * in semi-tones).\n * @memberOf Tone.PitchShift#\n * @type {Interval}\n * @name pitch\n * @example\n * pitchShift.pitch = -12; //down one octave\n * pitchShift.pitch = 7; //up a fifth\n */\nObject.defineProperty(Tone.PitchShift.prototype, \"pitch\", {\n\tget : function(){\n\t\treturn this._pitch;\n\t},\n\tset : function(interval){\n\t\tthis._pitch = interval;\n\t\tvar factor = 0;\n\t\tif (interval < 0){\n\t\t\tthis._lfoA.min = 0;\n\t\t\tthis._lfoA.max = this._windowSize;\n\t\t\tthis._lfoB.min = 0;\n\t\t\tthis._lfoB.max = this._windowSize;\n\t\t\tfactor = Tone.intervalToFrequencyRatio(interval - 1) + 1;\n\t\t} else {\n\t\t\tthis._lfoA.min = this._windowSize;\n\t\t\tthis._lfoA.max = 0;\n\t\t\tthis._lfoB.min = this._windowSize;\n\t\t\tthis._lfoB.max = 0;\n\t\t\tfactor = Tone.intervalToFrequencyRatio(interval) - 1;\n\t\t}\n\t\tthis._frequency.value = factor * (1.2 / this._windowSize);\n\t}\n});\n\n/**\n * The window size corresponds roughly to the sample length in a looping sampler.\n * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n * signal, but larger values will result in smoother pitch shifting for larger intervals.\n * A nominal range of 0.03 to 0.1 is recommended.\n * @memberOf Tone.PitchShift#\n * @type {Time}\n * @name windowSize\n * @example\n * pitchShift.windowSize = 0.1;\n */\nObject.defineProperty(Tone.PitchShift.prototype, \"windowSize\", {\n\tget : function(){\n\t\treturn this._windowSize;\n\t},\n\tset : function(size){\n\t\tthis._windowSize = this.toSeconds(size);\n\t\tthis.pitch = this._pitch;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.PitchShift}  this\n */\nTone.PitchShift.prototype.dispose = function(){\n\tTone.FeedbackEffect.prototype.dispose.call(this);\n\tthis._frequency.dispose();\n\tthis._frequency = null;\n\tthis._delayA.disconnect();\n\tthis._delayA = null;\n\tthis._delayB.disconnect();\n\tthis._delayB = null;\n\tthis._lfoA.dispose();\n\tthis._lfoA = null;\n\tthis._lfoB.dispose();\n\tthis._lfoB = null;\n\tthis._crossFade.dispose();\n\tthis._crossFade = null;\n\tthis._crossFadeLFO.dispose();\n\tthis._crossFadeLFO = null;\n\tthis._writable(\"delayTime\");\n\tthis._feedbackDelay.dispose();\n\tthis._feedbackDelay = null;\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.PitchShift;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/StereoXFeedbackEffect\";\nimport \"../signal/Signal\";\nimport \"../core/Delay\";\n\n/**\n *  @class  Tone.PingPongDelay is a feedback delay effect where the echo is heard\n *          first in one channel and next in the opposite channel. In a stereo\n *          system these are the right and left channels.\n *          PingPongDelay in more simplified terms is two Tone.FeedbackDelays\n *          with independent delay values. Each delay is routed to one channel\n *          (left or right), and the channel triggered second will always\n *          trigger at the same interval after the first.\n *\n * \t@constructor\n * \t@extends {Tone.StereoXFeedbackEffect}\n *  @param {Time|Object} [delayTime] The delayTime between consecutive echos.\n *  @param {NormalRange=} feedback The amount of the effected signal which\n *                                 is fed back through the delay.\n *  @example\n * var pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toMaster();\n * var drum = new Tone.MembraneSynth().connect(pingPong);\n * drum.triggerAttackRelease(\"C4\", \"32n\");\n */\nTone.PingPongDelay = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"feedback\"], Tone.PingPongDelay);\n\tTone.StereoXFeedbackEffect.call(this, options);\n\n\t/**\n\t *  the delay node on the left side\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._leftDelay = new Tone.Delay(0, options.maxDelayTime);\n\n\t/**\n\t *  the delay node on the right side\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._rightDelay = new Tone.Delay(0, options.maxDelayTime);\n\n\t/**\n\t *  the predelay on the right side\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._rightPreDelay = new Tone.Delay(0, options.maxDelayTime);\n\n\t/**\n\t *  the delay time signal\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = new Tone.Signal(options.delayTime, Tone.Type.Time);\n\n\t//connect it up\n\tthis.effectSendL.chain(this._leftDelay, this.effectReturnL);\n\tthis.effectSendR.chain(this._rightPreDelay, this._rightDelay, this.effectReturnR);\n\tthis.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n\t//rearranged the feedback to be after the rightPreDelay\n\tthis._feedbackLR.disconnect();\n\tthis._feedbackLR.connect(this._rightDelay);\n\tthis._readOnly([\"delayTime\"]);\n};\n\nTone.extend(Tone.PingPongDelay, Tone.StereoXFeedbackEffect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.PingPongDelay.defaults = {\n\t\"delayTime\" : 0.25,\n\t\"maxDelayTime\" : 1\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.PingPongDelay} this\n */\nTone.PingPongDelay.prototype.dispose = function(){\n\tTone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\tthis._leftDelay.dispose();\n\tthis._leftDelay = null;\n\tthis._rightDelay.dispose();\n\tthis._rightDelay = null;\n\tthis._rightPreDelay.dispose();\n\tthis._rightPreDelay = null;\n\tthis._writable([\"delayTime\"]);\n\tthis.delayTime.dispose();\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.PingPongDelay;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../component/Filter\";\nimport \"../effect/StereoEffect\";\n\n/**\n *  @class Tone.Phaser is a phaser effect. Phasers work by changing the phase\n *         of different frequency components of an incoming signal. Read more on\n *         [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).\n *         Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n *\n *\t@extends {Tone.StereoEffect}\n *\t@constructor\n *\t@param {Frequency|Object} [frequency] The speed of the phasing.\n *\t@param {number} [octaves] The octaves of the effect.\n *\t@param {Frequency} [baseFrequency] The base frequency of the filters.\n *\t@example\n * var phaser = new Tone.Phaser({\n * \t\"frequency\" : 15,\n * \t\"octaves\" : 5,\n * \t\"baseFrequency\" : 1000\n * }).toMaster();\n * var synth = new Tone.FMSynth().connect(phaser);\n * synth.triggerAttackRelease(\"E3\", \"2n\");\n */\nTone.Phaser = function(){\n\n\t//set the defaults\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"octaves\", \"baseFrequency\"], Tone.Phaser);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  the lfo which controls the frequency on the left side\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoL = new Tone.LFO(options.frequency, 0, 1);\n\n\t/**\n\t *  the lfo which controls the frequency on the right side\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoR = new Tone.LFO(options.frequency, 0, 1);\n\tthis._lfoR.phase = 180;\n\n\t/**\n\t *  the base modulation frequency\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._baseFrequency = options.baseFrequency;\n\n\t/**\n\t *  the octaves of the phasing\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t/**\n\t *  The quality factor of the filters\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.Q = new Tone.Signal(options.Q, Tone.Type.Positive);\n\n\t/**\n\t *  the array of filters for the left side\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._filtersL = this._makeFilters(options.stages, this._lfoL, this.Q);\n\n\t/**\n\t *  the array of filters for the left side\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._filtersR = this._makeFilters(options.stages, this._lfoR, this.Q);\n\n\t/**\n\t * the frequency of the effect\n\t * @type {Tone.Signal}\n\t */\n\tthis.frequency = this._lfoL.frequency;\n\tthis.frequency.value = options.frequency;\n\n\t//connect them up\n\tthis.effectSendL.connect(this._filtersL[0]);\n\tthis.effectSendR.connect(this._filtersR[0]);\n\tTone.connect(this._filtersL[options.stages - 1], this.effectReturnL);\n\tTone.connect(this._filtersR[options.stages - 1], this.effectReturnR);\n\t//control the frequency with one LFO\n\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\t//set the options\n\tthis.baseFrequency = options.baseFrequency;\n\tthis.octaves = options.octaves;\n\t//start the lfo\n\tthis._lfoL.start();\n\tthis._lfoR.start();\n\tthis._readOnly([\"frequency\", \"Q\"]);\n};\n\nTone.extend(Tone.Phaser, Tone.StereoEffect);\n\n/**\n *  defaults\n *  @static\n *  @type {object}\n */\nTone.Phaser.defaults = {\n\t\"frequency\" : 0.5,\n\t\"octaves\" : 3,\n\t\"stages\" : 10,\n\t\"Q\" : 10,\n\t\"baseFrequency\" : 350,\n};\n\n/**\n *  @param {number} stages\n *  @returns {Array} the number of filters all connected together\n *  @private\n */\nTone.Phaser.prototype._makeFilters = function(stages, connectToFreq, Q){\n\tvar filters = new Array(stages);\n\t//make all the filters\n\tfor (var i = 0; i < stages; i++){\n\t\tvar filter = this.context.createBiquadFilter();\n\t\tfilter.type = \"allpass\";\n\t\tQ.connect(filter.Q);\n\t\tconnectToFreq.connect(filter.frequency);\n\t\tfilters[i] = filter;\n\t}\n\tTone.connectSeries.apply(Tone, filters);\n\treturn filters;\n};\n\n/**\n * The number of octaves the phase goes above\n * the baseFrequency\n * @memberOf Tone.Phaser#\n * @type {Positive}\n * @name octaves\n */\nObject.defineProperty(Tone.Phaser.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octaves){\n\t\tthis._octaves = octaves;\n\t\tvar max = this._baseFrequency * Math.pow(2, octaves);\n\t\tthis._lfoL.max = max;\n\t\tthis._lfoR.max = max;\n\t}\n});\n\n/**\n * The the base frequency of the filters.\n * @memberOf Tone.Phaser#\n * @type {number}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.Phaser.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._baseFrequency;\n\t},\n\tset : function(freq){\n\t\tthis._baseFrequency = freq;\n\t\tthis._lfoL.min = freq;\n\t\tthis._lfoR.min = freq;\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Phaser} this\n */\nTone.Phaser.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"Q\"]);\n\tthis.Q.dispose();\n\tthis.Q = null;\n\tthis._lfoL.dispose();\n\tthis._lfoL = null;\n\tthis._lfoR.dispose();\n\tthis._lfoR = null;\n\tfor (var i = 0; i < this._filtersL.length; i++){\n\t\tthis._filtersL[i].disconnect();\n\t\tthis._filtersL[i] = null;\n\t}\n\tthis._filtersL = null;\n\tfor (var j = 0; j < this._filtersR.length; j++){\n\t\tthis._filtersR[j].disconnect();\n\t\tthis._filtersR[j] = null;\n\t}\n\tthis._filtersR = null;\n\tthis.frequency = null;\n\treturn this;\n};\n\nexport default Tone.Phaser;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/FeedbackCombFilter\";\nimport \"../effect/StereoEffect\";\nimport \"../signal/Scale\";\n\n/**\n *  an array of the comb filter delay time values\n *  @private\n *  @static\n *  @type {Array}\n */\nvar combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];\n\n/**\n *  the resonances of each of the comb filters\n *  @private\n *  @static\n *  @type {Array}\n */\nvar combFilterResonances = [0.773, 0.802, 0.753, 0.733];\n\n/**\n *  the allpass filter frequencies\n *  @private\n *  @static\n *  @type {Array}\n */\nvar allpassFilterFreqs = [347, 113, 37];\n\n/**\n *  @class Tone.JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n *         tuned by John Chowning in 1970.\n *         It is made up of three allpass filters and four Tone.FeedbackCombFilter.\n *\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {NormalRange|Object} [roomSize] Coorelates to the decay time.\n *  @example\n * var reverb = new Tone.JCReverb(0.4).connect(Tone.Master);\n * var delay = new Tone.FeedbackDelay(0.5);\n * //connecting the synth to reverb through delay\n * var synth = new Tone.DuoSynth().chain(delay, reverb);\n * synth.triggerAttackRelease(\"A4\",\"8n\");\n */\nTone.JCReverb = function(){\n\n\tvar options = Tone.defaults(arguments, [\"roomSize\"], Tone.JCReverb);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  room size control values between [0,1]\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\n\t/**\n\t *  scale the room size\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._scaleRoomSize = new Tone.Scale(-0.733, 0.197);\n\n\t/**\n\t *  a series of allpass filters\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._allpassFilters = [];\n\n\t/**\n\t *  parallel feedback comb filters\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._feedbackCombFilters = [];\n\n\t//make the allpass filters\n\tfor (var af = 0; af < allpassFilterFreqs.length; af++){\n\t\tvar allpass = this.context.createBiquadFilter();\n\t\tallpass.type = \"allpass\";\n\t\tallpass.frequency.value = allpassFilterFreqs[af];\n\t\tthis._allpassFilters.push(allpass);\n\t}\n\n\t//and the comb filters\n\tfor (var cf = 0; cf < combFilterDelayTimes.length; cf++){\n\t\tvar fbcf = new Tone.FeedbackCombFilter(combFilterDelayTimes[cf], 0.1);\n\t\tthis._scaleRoomSize.connect(fbcf.resonance);\n\t\tfbcf.resonance.value = combFilterResonances[cf];\n\t\tTone.connect(this._allpassFilters[this._allpassFilters.length - 1], fbcf);\n\t\tif (cf < combFilterDelayTimes.length / 2){\n\t\t\tfbcf.connect(this.effectReturnL);\n\t\t} else {\n\t\t\tfbcf.connect(this.effectReturnR);\n\t\t}\n\t\tthis._feedbackCombFilters.push(fbcf);\n\t}\n\n\t//chain the allpass filters together\n\tthis.roomSize.connect(this._scaleRoomSize);\n\tTone.connectSeries.apply(Tone, this._allpassFilters);\n\tthis.effectSendL.connect(this._allpassFilters[0]);\n\tthis.effectSendR.connect(this._allpassFilters[0]);\n\tthis._readOnly([\"roomSize\"]);\n};\n\nTone.extend(Tone.JCReverb, Tone.StereoEffect);\n\n/**\n *  the default values\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.JCReverb.defaults = {\n\t\"roomSize\" : 0.5\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.JCReverb} this\n */\nTone.JCReverb.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tfor (var apf = 0; apf < this._allpassFilters.length; apf++){\n\t\tthis._allpassFilters[apf].disconnect();\n\t\tthis._allpassFilters[apf] = null;\n\t}\n\tthis._allpassFilters = null;\n\tfor (var fbcf = 0; fbcf < this._feedbackCombFilters.length; fbcf++){\n\t\tthis._feedbackCombFilters[fbcf].dispose();\n\t\tthis._feedbackCombFilters[fbcf] = null;\n\t}\n\tthis._feedbackCombFilters = null;\n\tthis._writable([\"roomSize\"]);\n\tthis.roomSize.dispose();\n\tthis.roomSize = null;\n\tthis._scaleRoomSize.dispose();\n\tthis._scaleRoomSize = null;\n\treturn this;\n};\n\nexport default Tone.JCReverb;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LowpassCombFilter\";\nimport \"../effect/StereoEffect\";\nimport \"../signal/Signal\";\nimport \"../component/Split\";\nimport \"../component/Merge\";\nimport \"../signal/ScaleExp\";\n\n/**\n *  an array of comb filter delay values from Freeverb implementation\n *  @static\n *  @private\n *  @type {Array}\n */\nvar combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];\n\n/**\n *  an array of allpass filter frequency values from Freeverb implementation\n *  @private\n *  @static\n *  @type {Array}\n */\nvar allpassFilterFrequencies = [225, 556, 441, 341];\n\n/**\n *  @class Tone.Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n *         Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {NormalRange|Object} [roomSize] Correlated to the decay time.\n *  @param {Frequency} [dampening] The cutoff frequency of a lowpass filter as part\n *                                 of the reverb.\n *  @example\n * var freeverb = new Tone.Freeverb().toMaster();\n * freeverb.dampening.value = 1000;\n * //routing synth through the reverb\n * var synth = new Tone.AMSynth().connect(freeverb);\n */\nTone.Freeverb = function(){\n\n\tvar options = Tone.defaults(arguments, [\"roomSize\", \"dampening\"], Tone.Freeverb);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  The roomSize value between. A larger roomSize\n\t *  will result in a longer decay.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\n\t/**\n\t *  The amount of dampening of the reverberant signal.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.dampening = new Tone.Signal(options.dampening, Tone.Type.Frequency);\n\n\t/**\n\t *  the comb filters\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._combFilters = [];\n\n\t/**\n\t *  the allpass filters on the left\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._allpassFiltersL = [];\n\n\t/**\n\t *  the allpass filters on the right\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._allpassFiltersR = [];\n\n\t//make the allpass filters on the right\n\tfor (var l = 0; l < allpassFilterFrequencies.length; l++){\n\t\tvar allpassL = this.context.createBiquadFilter();\n\t\tallpassL.type = \"allpass\";\n\t\tallpassL.frequency.value = allpassFilterFrequencies[l];\n\t\tthis._allpassFiltersL.push(allpassL);\n\t}\n\n\t//make the allpass filters on the left\n\tfor (var r = 0; r < allpassFilterFrequencies.length; r++){\n\t\tvar allpassR = this.context.createBiquadFilter();\n\t\tallpassR.type = \"allpass\";\n\t\tallpassR.frequency.value = allpassFilterFrequencies[r];\n\t\tthis._allpassFiltersR.push(allpassR);\n\t}\n\n\t//make the comb filters\n\tfor (var c = 0; c < combFilterTunings.length; c++){\n\t\tvar lfpf = new Tone.LowpassCombFilter(combFilterTunings[c]);\n\t\tif (c < combFilterTunings.length / 2){\n\t\t\tthis.effectSendL.chain(lfpf, this._allpassFiltersL[0]);\n\t\t} else {\n\t\t\tthis.effectSendR.chain(lfpf, this._allpassFiltersR[0]);\n\t\t}\n\t\tthis.roomSize.connect(lfpf.resonance);\n\t\tthis.dampening.connect(lfpf.dampening);\n\t\tthis._combFilters.push(lfpf);\n\t}\n\n\t//chain the allpass filters togetehr\n\tTone.connectSeries.apply(Tone, this._allpassFiltersL);\n\tTone.connectSeries.apply(Tone, this._allpassFiltersR);\n\tTone.connect(this._allpassFiltersL[this._allpassFiltersL.length - 1], this.effectReturnL);\n\tTone.connect(this._allpassFiltersR[this._allpassFiltersR.length - 1], this.effectReturnR);\n\tthis._readOnly([\"roomSize\", \"dampening\"]);\n};\n\nTone.extend(Tone.Freeverb, Tone.StereoEffect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Freeverb.defaults = {\n\t\"roomSize\" : 0.7,\n\t\"dampening\" : 3000\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Freeverb} this\n */\nTone.Freeverb.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tfor (var al = 0; al < this._allpassFiltersL.length; al++){\n\t\tthis._allpassFiltersL[al].disconnect();\n\t\tthis._allpassFiltersL[al] = null;\n\t}\n\tthis._allpassFiltersL = null;\n\tfor (var ar = 0; ar < this._allpassFiltersR.length; ar++){\n\t\tthis._allpassFiltersR[ar].disconnect();\n\t\tthis._allpassFiltersR[ar] = null;\n\t}\n\tthis._allpassFiltersR = null;\n\tfor (var cf = 0; cf < this._combFilters.length; cf++){\n\t\tthis._combFilters[cf].dispose();\n\t\tthis._combFilters[cf] = null;\n\t}\n\tthis._combFilters = null;\n\tthis._writable([\"roomSize\", \"dampening\"]);\n\tthis.roomSize.dispose();\n\tthis.roomSize = null;\n\tthis.dampening.dispose();\n\tthis.dampening = null;\n\treturn this;\n};\n\nexport default Tone.Freeverb;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/FeedbackEffect\";\nimport \"../signal/Signal\";\nimport \"../core/Delay\";\n\n/**\n *  @class  Tone.FeedbackDelay is a DelayNode in which part of output\n *          signal is fed back into the delay.\n *\n *  @constructor\n *  @extends {Tone.FeedbackEffect}\n *  @param {Time|Object} [delayTime] The delay applied to the incoming signal.\n *  @param {NormalRange=} feedback The amount of the effected signal which\n *                            is fed back through the delay.\n *  @example\n * var feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toMaster();\n * var tom = new Tone.MembraneSynth({\n * \t\"octaves\" : 4,\n * \t\"pitchDecay\" : 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\",\"32n\");\n */\nTone.FeedbackDelay = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"feedback\"], Tone.FeedbackDelay);\n\tTone.FeedbackEffect.call(this, options);\n\n\t/**\n\t *  the delay node\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNode = new Tone.Delay(options.delayTime, options.maxDelay);\n\n\t/**\n\t *  The delayTime of the DelayNode.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._delayNode.delayTime;\n\n\t// connect it up\n\tthis.connectEffect(this._delayNode);\n\tthis._readOnly([\"delayTime\"]);\n};\n\nTone.extend(Tone.FeedbackDelay, Tone.FeedbackEffect);\n\n/**\n *  The default values.\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.FeedbackDelay.defaults = {\n\t\"delayTime\" : 0.25,\n\t\"maxDelay\" : 1\n};\n\n/**\n *  clean up\n *  @returns {Tone.FeedbackDelay} this\n */\nTone.FeedbackDelay.prototype.dispose = function(){\n\tTone.FeedbackEffect.prototype.dispose.call(this);\n\tthis._delayNode.dispose();\n\tthis._delayNode = null;\n\tthis._writable([\"delayTime\"]);\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.FeedbackDelay;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Tone.Distortion is a simple distortion effect using Tone.WaveShaper.\n *         Algorithm from [a stackoverflow answer](http://stackoverflow.com/a/22313408).\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {Number|Object} [distortion] The amount of distortion (nominal range of 0-1)\n *  @example\n * var dist = new Tone.Distortion(0.8).toMaster();\n * var fm = new Tone.SimpleFM().connect(dist);\n * //this sounds good on bass notes\n * fm.triggerAttackRelease(\"A1\", \"8n\");\n */\nTone.Distortion = function(){\n\n\tvar options = Tone.defaults(arguments, [\"distortion\"], Tone.Distortion);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._shaper = new Tone.WaveShaper(4096);\n\n\t/**\n\t * holds the distortion amount\n\t * @type {number}\n\t * @private\n\t */\n\tthis._distortion = options.distortion;\n\n\tthis.connectEffect(this._shaper);\n\tthis.distortion = options.distortion;\n\tthis.oversample = options.oversample;\n};\n\nTone.extend(Tone.Distortion, Tone.Effect);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Distortion.defaults = {\n\t\"distortion\" : 0.4,\n\t\"oversample\" : \"none\"\n};\n\n/**\n * The amount of distortion.\n * @memberOf Tone.Distortion#\n * @type {NormalRange}\n * @name distortion\n */\nObject.defineProperty(Tone.Distortion.prototype, \"distortion\", {\n\tget : function(){\n\t\treturn this._distortion;\n\t},\n\tset : function(amount){\n\t\tthis._distortion = amount;\n\t\tvar k = amount * 100;\n\t\tvar deg = Math.PI / 180;\n\t\tthis._shaper.setMap(function(x){\n\t\t\tif (Math.abs(x) < 0.001){\n\t\t\t\t//should output 0 when input is 0\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n\t\t\t}\n\t\t});\n\t} \n});\n\n/**\n * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n * @memberOf Tone.Distortion#\n * @type {string}\n * @name oversample\n */\nObject.defineProperty(Tone.Distortion.prototype, \"oversample\", {\n\tget : function(){\n\t\treturn this._shaper.oversample;\n\t},\n\tset : function(oversampling){\n\t\tthis._shaper.oversample = oversampling;\n\t} \n});\n\n/**\n *  Clean up. \n *  @returns {Tone.Distortion} this\n */\nTone.Distortion.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._shaper.dispose();\n\tthis._shaper = null;\n\treturn this;\n};\n\nexport default Tone.Distortion;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../effect/StereoEffect\";\nimport \"../core/Delay\";\n\n/**\n *  @class Tone.Chorus is a stereo chorus effect composed of\n *         a left and right delay with a Tone.LFO applied to the delayTime of each channel.\n *         Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n *         Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n *\n *\t@constructor\n *\t@extends {Tone.StereoEffect}\n *\t@param {Frequency|Object} [frequency] The frequency of the LFO.\n *\t@param {Milliseconds} [delayTime] The delay of the chorus effect in ms.\n *\t@param {NormalRange} [depth] The depth of the chorus.\n *\t@example\n * var chorus = new Tone.Chorus(4, 2.5, 0.5);\n * var synth = new Tone.PolySynth(4, Tone.MonoSynth).connect(chorus);\n * synth.triggerAttackRelease([\"C3\",\"E3\",\"G3\"], \"8n\");\n */\nTone.Chorus = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"delayTime\", \"depth\"], Tone.Chorus);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  the depth of the chorus\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._depth = options.depth;\n\n\t/**\n\t *  the delayTime\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._delayTime = options.delayTime / 1000;\n\n\t/**\n\t *  the lfo which controls the delayTime\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoL = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"min\" : 0,\n\t\t\"max\" : 1,\n\t});\n\n\t/**\n\t *  another LFO for the right side with a 180 degree phase diff\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoR = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"min\" : 0,\n\t\t\"max\" : 1,\n\t\t\"phase\" : 180\n\t});\n\n\t/**\n\t *  delay for left\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNodeL = new Tone.Delay();\n\n\t/**\n\t *  delay for right\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNodeR = new Tone.Delay();\n\n\t/**\n\t * The frequency of the LFO which modulates the delayTime.\n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.frequency = this._lfoL.frequency;\n\n\t//connections\n\tthis.effectSendL.chain(this._delayNodeL, this.effectReturnL);\n\tthis.effectSendR.chain(this._delayNodeR, this.effectReturnR);\n\t//and pass through to make the detune apparent\n\tthis.effectSendL.connect(this.effectReturnL);\n\tthis.effectSendR.connect(this.effectReturnR);\n\t//lfo setup\n\tthis._lfoL.connect(this._delayNodeL.delayTime);\n\tthis._lfoR.connect(this._delayNodeR.delayTime);\n\t//start the lfo\n\tthis._lfoL.start();\n\tthis._lfoR.start();\n\t//have one LFO frequency control the other\n\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\t//set the initial values\n\tthis.depth = this._depth;\n\tthis.frequency.value = options.frequency;\n\tthis.type = options.type;\n\tthis._readOnly([\"frequency\"]);\n\tthis.spread = options.spread;\n};\n\nTone.extend(Tone.Chorus, Tone.StereoEffect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Chorus.defaults = {\n\t\"frequency\" : 1.5,\n\t\"delayTime\" : 3.5,\n\t\"depth\" : 0.7,\n\t\"type\" : \"sine\",\n\t\"spread\" : 180\n};\n\n/**\n * The depth of the effect. A depth of 1 makes the delayTime\n * modulate between 0 and 2*delayTime (centered around the delayTime).\n * @memberOf Tone.Chorus#\n * @type {NormalRange}\n * @name depth\n */\nObject.defineProperty(Tone.Chorus.prototype, \"depth\", {\n\tget : function(){\n\t\treturn this._depth;\n\t},\n\tset : function(depth){\n\t\tthis._depth = depth;\n\t\tvar deviation = this._delayTime * depth;\n\t\tthis._lfoL.min = Math.max(this._delayTime - deviation, 0);\n\t\tthis._lfoL.max = this._delayTime + deviation;\n\t\tthis._lfoR.min = Math.max(this._delayTime - deviation, 0);\n\t\tthis._lfoR.max = this._delayTime + deviation;\n\t}\n});\n\n/**\n * The delayTime in milliseconds of the chorus. A larger delayTime\n * will give a more pronounced effect. Nominal range a delayTime\n * is between 2 and 20ms.\n * @memberOf Tone.Chorus#\n * @type {Milliseconds}\n * @name delayTime\n */\nObject.defineProperty(Tone.Chorus.prototype, \"delayTime\", {\n\tget : function(){\n\t\treturn this._delayTime * 1000;\n\t},\n\tset : function(delayTime){\n\t\tthis._delayTime = delayTime / 1000;\n\t\tthis.depth = this._depth;\n\t}\n});\n\n/**\n * The oscillator type of the LFO.\n * @memberOf Tone.Chorus#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Chorus.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfoL.type;\n\t},\n\tset : function(type){\n\t\tthis._lfoL.type = type;\n\t\tthis._lfoR.type = type;\n\t}\n});\n\n/**\n * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n * When set to 180, LFO's will be panned hard left and right respectively.\n * @memberOf Tone.Chorus#\n * @type {Degrees}\n * @name spread\n */\nObject.defineProperty(Tone.Chorus.prototype, \"spread\", {\n\tget : function(){\n\t\treturn this._lfoR.phase - this._lfoL.phase;\n\t},\n\tset : function(spread){\n\t\tthis._lfoL.phase = 90 - (spread/2);\n\t\tthis._lfoR.phase = (spread/2) + 90;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Chorus} this\n */\nTone.Chorus.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._lfoL.dispose();\n\tthis._lfoL = null;\n\tthis._lfoR.dispose();\n\tthis._lfoR = null;\n\tthis._delayNodeL.dispose();\n\tthis._delayNodeL = null;\n\tthis._delayNodeR.dispose();\n\tthis._delayNodeR = null;\n\tthis._writable(\"frequency\");\n\tthis.frequency = null;\n\treturn this;\n};\n\nexport default Tone.Chorus;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Tone.ChebyShev is a Chebyshev waveshaper, an effect which is good \n *         for making different types of distortion sounds.\n *         Note that odd orders sound very different from even ones, \n *         and order = 1 is no change. \n *         Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {Positive|Object} [order] The order of the chebyshev polynomial. Normal range between 1-100. \n *  @example\n * //create a new cheby\n * var cheby = new Tone.Chebyshev(50);\n * //create a monosynth connected to our cheby\n * synth = new Tone.MonoSynth().connect(cheby);\n */\nTone.Chebyshev = function(){\n\n\tvar options = Tone.defaults(arguments, [\"order\"], Tone.Chebyshev);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._shaper = new Tone.WaveShaper(4096);\n\n\t/**\n\t * holds onto the order of the filter\n\t * @type {number}\n\t * @private\n\t */\n\tthis._order = options.order;\n\n\tthis.connectEffect(this._shaper);\n\tthis.order = options.order;\n\tthis.oversample = options.oversample;\n};\n\nTone.extend(Tone.Chebyshev, Tone.Effect);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Chebyshev.defaults = {\n\t\"order\" : 1,\n\t\"oversample\" : \"none\"\n};\n\n/**\n *  get the coefficient for that degree\n *  @param {number} x the x value\n *  @param   {number} degree \n *  @param {Object} memo memoize the computed value. \n *                       this speeds up computation greatly. \n *  @return  {number}       the coefficient \n *  @private\n */\nTone.Chebyshev.prototype._getCoefficient = function(x, degree, memo){\n\tif (memo.hasOwnProperty(degree)){\n\t\treturn memo[degree];\n\t} else if (degree === 0){\n\t\tmemo[degree] = 0;\n\t} else if (degree === 1){\n\t\tmemo[degree] = x;\n\t} else {\n\t\tmemo[degree] = 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo);\n\t}\n\treturn memo[degree];\n};\n\n/**\n * The order of the Chebyshev polynomial which creates\n * the equation which is applied to the incoming \n * signal through a Tone.WaveShaper. The equations\n * are in the form:<br>\n * order 2: 2x^2 + 1<br>\n * order 3: 4x^3 + 3x <br>\n * @memberOf Tone.Chebyshev#\n * @type {Positive}\n * @name order\n */\nObject.defineProperty(Tone.Chebyshev.prototype, \"order\", {\n\tget : function(){\n\t\treturn this._order;\n\t},\n\tset : function(order){\n\t\tthis._order = order;\n\t\tvar curve = new Array(4096);\n\t\tvar len = curve.length;\n\t\tfor (var i = 0; i < len; ++i){\n\t\t\tvar x = i * 2 / len - 1;\n\t\t\tif (x === 0){\n\t\t\t\t//should output 0 when input is 0\n\t\t\t\tcurve[i] = 0;\n\t\t\t} else {\n\t\t\t\tcurve[i] = this._getCoefficient(x, order, {});\n\t\t\t}\n\t\t}\n\t\tthis._shaper.curve = curve;\n\t} \n});\n\n/**\n * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n * @memberOf Tone.Chebyshev#\n * @type {string}\n * @name oversample\n */\nObject.defineProperty(Tone.Chebyshev.prototype, \"oversample\", {\n\tget : function(){\n\t\treturn this._shaper.oversample;\n\t},\n\tset : function(oversampling){\n\t\tthis._shaper.oversample = oversampling;\n\t} \n});\n\n/**\n *  Clean up. \n *  @returns {Tone.Chebyshev} this\n */\nTone.Chebyshev.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._shaper.dispose();\n\tthis._shaper = null;\n\treturn this;\n};\n\nexport default Tone.Chebyshev;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/Subtract\";\nimport \"../signal/Modulo\";\n\n/**\n *  @class Tone.Bitcrusher downsamples the incoming signal to a different bitdepth.\n *         Lowering the bitdepth of the signal creates distortion. Read more about Bitcrushing\n *         on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Number} bits The number of bits to downsample the signal. Nominal range\n *                       of 1 to 8.\n *  @example\n * //initialize crusher and route a synth through it\n * var crusher = new Tone.BitCrusher(4).toMaster();\n * var synth = new Tone.MonoSynth().connect(crusher);\n */\nTone.BitCrusher = function(){\n\n\tvar options = Tone.defaults(arguments, [\"bits\"], Tone.BitCrusher);\n\tTone.Effect.call(this, options);\n\n\tvar invStepSize = 1 / Math.pow(2, options.bits - 1);\n\n\t/**\n\t *  Subtract the input signal and the modulus of the input signal\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._subtract = new Tone.Subtract();\n\n\t/**\n\t *  The mod function\n\t *  @type  {Tone.Modulo}\n\t *  @private\n\t */\n\tthis._modulo = new Tone.Modulo(invStepSize);\n\n\t/**\n\t *  keeps track of the bits\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._bits = options.bits;\n\n\t//connect it up\n\tthis.effectSend.fan(this._subtract, this._modulo);\n\tthis._modulo.connect(this._subtract, 0, 1);\n\tthis._subtract.connect(this.effectReturn);\n};\n\nTone.extend(Tone.BitCrusher, Tone.Effect);\n\n/**\n *  the default values\n *  @static\n *  @type {Object}\n */\nTone.BitCrusher.defaults = {\n\t\"bits\" : 4\n};\n\n/**\n * The bit depth of the effect. Nominal range of 1-8.\n * @memberOf Tone.BitCrusher#\n * @type {number}\n * @name bits\n */\nObject.defineProperty(Tone.BitCrusher.prototype, \"bits\", {\n\tget : function(){\n\t\treturn this._bits;\n\t},\n\tset : function(bits){\n\t\tthis._bits = bits;\n\t\tvar invStepSize = 1 / Math.pow(2, bits - 1);\n\t\tthis._modulo.value = invStepSize;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.BitCrusher} this\n */\nTone.BitCrusher.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._subtract.dispose();\n\tthis._subtract = null;\n\tthis._modulo.dispose();\n\tthis._modulo = null;\n\treturn this;\n};\n\nexport default Tone.BitCrusher;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Follower\";\nimport \"../signal/ScaleExp\";\nimport \"../effect/Effect\";\nimport \"../component/Filter\";\n\n/**\n *  @class  Tone.AutoWah connects a Tone.Follower to a bandpass filter (Tone.Filter).\n *          The frequency of the filter is adjusted proportionally to the\n *          incoming signal's amplitude. Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Frequency|Object} [baseFrequency] The frequency the filter is set\n *                                            to at the low point of the wah\n *  @param {Positive} [octaves] The number of octaves above the baseFrequency\n *                                the filter will sweep to when fully open\n *  @param {Decibels} [sensitivity] The decibel threshold sensitivity for\n *                                   the incoming signal. Normal range of -40 to 0.\n *  @example\n * var autoWah = new Tone.AutoWah(50, 6, -30).toMaster();\n * //initialize the synth and connect to autowah\n * var synth = new Synth.connect(autoWah);\n * //Q value influences the effect of the wah - default is 2\n * autoWah.Q.value = 6;\n * //more audible on higher notes\n * synth.triggerAttackRelease(\"C4\", \"8n\")\n */\nTone.AutoWah = function(){\n\n\tvar options = Tone.defaults(arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"], Tone.AutoWah);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  The envelope follower. Set the attack/release\n\t *  timing to adjust how the envelope is followed.\n\t *  @type {Tone.Follower}\n\t *  @private\n\t */\n\tthis.follower = new Tone.Follower(options.follower);\n\n\t/**\n\t *  scales the follower value to the frequency domain\n\t *  @type {Tone}\n\t *  @private\n\t */\n\tthis._sweepRange = new Tone.ScaleExp(0, 1, 0.5);\n\n\t/**\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._baseFrequency = options.baseFrequency;\n\n\t/**\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t/**\n\t *  the input gain to adjust the sensitivity\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._inputBoost = new Tone.Gain();\n\n\t/**\n\t *  @type {BiquadFilterNode}\n\t *  @private\n\t */\n\tthis._bandpass = new Tone.Filter({\n\t\t\"rolloff\" : -48,\n\t\t\"frequency\" : 0,\n\t\t\"Q\" : options.Q,\n\t});\n\n\t/**\n\t *  @type {Tone.Filter}\n\t *  @private\n\t */\n\tthis._peaking = new Tone.Filter(0, \"peaking\");\n\tthis._peaking.gain.value = options.gain;\n\n\t/**\n\t * The gain of the filter.\n\t * @type {Number}\n\t * @signal\n\t */\n\tthis.gain = this._peaking.gain;\n\n\t/**\n\t * The quality of the filter.\n\t * @type {Positive}\n\t * @signal\n\t */\n\tthis.Q = this._bandpass.Q;\n\n\t//the control signal path\n\tthis.effectSend.chain(this._inputBoost, this.follower, this._sweepRange);\n\tthis._sweepRange.connect(this._bandpass.frequency);\n\tthis._sweepRange.connect(this._peaking.frequency);\n\t//the filtered path\n\tthis.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n\t//set the initial value\n\tthis._setSweepRange();\n\tthis.sensitivity = options.sensitivity;\n\n\tthis._readOnly([\"gain\", \"Q\"]);\n};\n\nTone.extend(Tone.AutoWah, Tone.Effect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.AutoWah.defaults = {\n\t\"baseFrequency\" : 100,\n\t\"octaves\" : 6,\n\t\"sensitivity\" : 0,\n\t\"Q\" : 2,\n\t\"gain\" : 2,\n\t\"follower\" : {\n\t\t\"attack\" : 0.3,\n\t\t\"release\" : 0.5\n\t}\n};\n\n/**\n * The number of octaves that the filter will sweep above the\n * baseFrequency.\n * @memberOf Tone.AutoWah#\n * @type {Number}\n * @name octaves\n */\nObject.defineProperty(Tone.AutoWah.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octaves){\n\t\tthis._octaves = octaves;\n\t\tthis._setSweepRange();\n\t}\n});\n\n/**\n * The base frequency from which the sweep will start from.\n * @memberOf Tone.AutoWah#\n * @type {Frequency}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.AutoWah.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._baseFrequency;\n\t},\n\tset : function(baseFreq){\n\t\tthis._baseFrequency = baseFreq;\n\t\tthis._setSweepRange();\n\t}\n});\n\n/**\n * The sensitivity to control how responsive to the input signal the filter is.\n * @memberOf Tone.AutoWah#\n * @type {Decibels}\n * @name sensitivity\n */\nObject.defineProperty(Tone.AutoWah.prototype, \"sensitivity\", {\n\tget : function(){\n\t\treturn Tone.gainToDb(1 / this._inputBoost.gain.value);\n\t},\n\tset : function(sensitivy){\n\t\tthis._inputBoost.gain.value = 1 / Tone.dbToGain(sensitivy);\n\t}\n});\n\n/**\n *  sets the sweep range of the scaler\n *  @private\n */\nTone.AutoWah.prototype._setSweepRange = function(){\n\tthis._sweepRange.min = this._baseFrequency;\n\tthis._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.AutoWah} this\n */\nTone.AutoWah.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis.follower.dispose();\n\tthis.follower = null;\n\tthis._sweepRange.dispose();\n\tthis._sweepRange = null;\n\tthis._bandpass.dispose();\n\tthis._bandpass = null;\n\tthis._peaking.dispose();\n\tthis._peaking = null;\n\tthis._inputBoost.dispose();\n\tthis._inputBoost = null;\n\tthis._writable([\"gain\", \"Q\"]);\n\tthis.gain = null;\n\tthis.Q = null;\n\treturn this;\n};\n\nexport default Tone.AutoWah;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/LFO\";\nimport \"../component/Panner\";\n\n/**\n *  @class Tone.AutoPanner is a Tone.Panner with an LFO connected to the pan amount. \n *         More on using autopanners [here](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Frequency|Object} [frequency] Rate of left-right oscillation. \n *  @example\n * //create an autopanner and start it's LFO\n * var autoPanner = new Tone.AutoPanner(\"4n\").toMaster().start();\n * //route an oscillator through the panner and start it\n * var oscillator = new Tone.Oscillator().connect(autoPanner).start();\n */\nTone.AutoPanner = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\"], Tone.AutoPanner);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  the lfo which drives the panning\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfo = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"amplitude\" : options.depth,\n\t\t\"min\" : -1,\n\t\t\"max\" : 1,\n\t});\n\n\t/**\n\t * The amount of panning between left and right. \n\t * 0 = always center. 1 = full range between left and right. \n\t * @type {NormalRange}\n\t * @signal\n\t */\n\tthis.depth = this._lfo.amplitude;\n\n\t/**\n\t *  the panner node which does the panning\n\t *  @type {Tone.Panner}\n\t *  @private\n\t */\n\tthis._panner = new Tone.Panner();\n\n\t/**\n\t * How fast the panner modulates between left and right. \n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.frequency = this._lfo.frequency;\n\n\t//connections\n\tthis.connectEffect(this._panner);\n\tthis._lfo.connect(this._panner.pan);\n\tthis.type = options.type;\n\tthis._readOnly([\"depth\", \"frequency\"]);\n};\n\n//extend Effect\nTone.extend(Tone.AutoPanner, Tone.Effect);\n\n/**\n *  defaults\n *  @static\n *  @type {Object}\n */\nTone.AutoPanner.defaults = {\n\t\"frequency\" : 1,\n\t\"type\" : \"sine\",\n\t\"depth\" : 1\n};\n\n/**\n * Start the effect.\n * @param {Time} [time=now] When the LFO will start. \n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.start = function(time){\n\tthis._lfo.start(time);\n\treturn this;\n};\n\n/**\n * Stop the effect.\n * @param {Time} [time=now] When the LFO will stop. \n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.stop = function(time){\n\tthis._lfo.stop(time);\n\treturn this;\n};\n\n/**\n * Sync the panner to the transport.\n * @param {Time} [delay=0] Delay time before starting the effect after the\n *                               Transport has started. \n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.sync = function(delay){\n\tthis._lfo.sync(delay);\n\treturn this;\n};\n\n/**\n * Unsync the panner from the transport\n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.unsync = function(){\n\tthis._lfo.unsync();\n\treturn this;\n};\n\n/**\n * Type of oscillator attached to the AutoFilter. \n * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n * @memberOf Tone.AutoFilter#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.AutoPanner.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfo.type;\n\t},\n\tset : function(type){\n\t\tthis._lfo.type = type;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._lfo.dispose();\n\tthis._lfo = null;\n\tthis._panner.dispose();\n\tthis._panner = null;\n\tthis._writable([\"depth\", \"frequency\"]);\n\tthis.frequency = null;\n\tthis.depth = null;\n\treturn this;\n};\n\nexport default Tone.AutoPanner;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/LFO\";\nimport \"../component/Filter\";\n\n/**\n *  @class Tone.AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n *         Setting the LFO rate and depth allows for control over the filter modulation rate \n *         and depth.\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Time|Object} [frequency] The rate of the LFO.\n *  @param {Frequency=} baseFrequency The lower value of the LFOs oscillation\n \t *  @param {Frequency=} octaves The number of octaves above the baseFrequency\n *  @example\n * //create an autofilter and start it's LFO\n * var autoFilter = new Tone.AutoFilter(\"4n\").toMaster().start();\n * //route an oscillator through the filter and start it\n * var oscillator = new Tone.Oscillator().connect(autoFilter).start();\n */\nTone.AutoFilter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"baseFrequency\", \"octaves\"], Tone.AutoFilter);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  the lfo which drives the filter cutoff\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfo = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"amplitude\" : options.depth,\n\t});\n\n\t/**\n\t * The range of the filter modulating between the min and max frequency. \n\t * 0 = no modulation. 1 = full modulation.\n\t * @type {NormalRange}\n\t * @signal\n\t */\n\tthis.depth = this._lfo.amplitude;\n\n\t/**\n\t * How fast the filter modulates between min and max. \n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.frequency = this._lfo.frequency;\n\n\t/**\n\t *  The filter node\n\t *  @type {Tone.Filter}\n\t */\n\tthis.filter = new Tone.Filter(options.filter);\n\n\t/**\n\t *  The octaves placeholder\n\t *  @type {Positive}\n\t *  @private\n\t */\n\tthis._octaves = 0;\n\n\t//connections\n\tthis.connectEffect(this.filter);\n\tthis._lfo.connect(this.filter.frequency);\n\tthis.type = options.type;\n\tthis._readOnly([\"frequency\", \"depth\"]);\n\tthis.octaves = options.octaves;\n\tthis.baseFrequency = options.baseFrequency;\n};\n\n//extend Effect\nTone.extend(Tone.AutoFilter, Tone.Effect);\n\n/**\n *  defaults\n *  @static\n *  @type {Object}\n */\nTone.AutoFilter.defaults = {\n\t\"frequency\" : 1,\n\t\"type\" : \"sine\",\n\t\"depth\" : 1,\n\t\"baseFrequency\" : 200,\n\t\"octaves\" : 2.6,\n\t\"filter\" : {\n\t\t\"type\" : \"lowpass\",\n\t\t\"rolloff\" : -12,\n\t\t\"Q\" : 1,\n\t}\n};\n\n/**\n * Start the effect.\n * @param {Time} [time=now] When the LFO will start. \n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.start = function(time){\n\tthis._lfo.start(time);\n\treturn this;\n};\n\n/**\n * Stop the effect.\n * @param {Time} [time=now] When the LFO will stop. \n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.stop = function(time){\n\tthis._lfo.stop(time);\n\treturn this;\n};\n\n/**\n * Sync the filter to the transport.\n * @param {Time} [delay=0] Delay time before starting the effect after the\n *                               Transport has started. \n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.sync = function(delay){\n\tthis._lfo.sync(delay);\n\treturn this;\n};\n\n/**\n * Unsync the filter from the transport.\n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.unsync = function(){\n\tthis._lfo.unsync();\n\treturn this;\n};\n\n/**\n * Type of oscillator attached to the AutoFilter. \n * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n * @memberOf Tone.AutoFilter#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.AutoFilter.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfo.type;\n\t},\n\tset : function(type){\n\t\tthis._lfo.type = type;\n\t}\n});\n\n/**\n * The minimum value of the filter's cutoff frequency.\n * @memberOf Tone.AutoFilter#\n * @type {Frequency}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.AutoFilter.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._lfo.min;\n\t},\n\tset : function(freq){\n\t\tthis._lfo.min = this.toFrequency(freq);\n\t\t//and set the max\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n * The maximum value of the filter's cutoff frequency. \n * @memberOf Tone.AutoFilter#\n * @type {Positive}\n * @name octaves\n */\nObject.defineProperty(Tone.AutoFilter.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(oct){\n\t\tthis._octaves = oct;\n\t\tthis._lfo.max = this.baseFrequency * Math.pow(2, oct);\n\t}\n});\n\n/**\n *  Clean up. \n *  @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._lfo.dispose();\n\tthis._lfo = null;\n\tthis.filter.dispose();\n\tthis.filter = null;\n\tthis._writable([\"frequency\", \"depth\"]);\n\tthis.frequency = null;\n\tthis.depth = null;\n\treturn this;\n};\n\nexport default Tone.AutoFilter;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../component/Merge\";\nimport \"../component/Split\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../signal/Zero\";\n\n/**\n *  @class  Both Tone.Panner3D and Tone.Listener have a position in 3D space\n *          using a right-handed cartesian coordinate system.\n *          The units used in the coordinate system are not defined;\n *          these coordinates are independent/invariant of any particular\n *          units such as meters or feet. Tone.Panner3D objects have an forward\n *          vector representing the direction the sound is projecting. Additionally,\n *          they have a sound cone representing how directional the sound is.\n *          For example, the sound could be omnidirectional, in which case it would\n *          be heard anywhere regardless of its forward, or it can be more directional\n *          and heard only if it is facing the listener. Tone.Listener objects\n *          (representing a person's ears) have an forward and up vector\n *          representing in which direction the person is facing. Because both the\n *          source stream and the listener can be moving, they both have a velocity\n *          vector representing both the speed and direction of movement. Taken together,\n *          these two velocities can be used to generate a doppler shift effect which changes the pitch.\n *          <br><br>\n *          Note: the position of the Listener will have no effect on nodes not connected to a Tone.Panner3D\n *\n *  @constructor\n *  @extends {Tone}\n *  @singleton\n */\nTone.Listener = function(){\n\n\tTone.call(this);\n\n\t/**\n\t *  Holds the current forward orientation\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._orientation = [0, 0, 0, 0, 0, 0];\n\n\t/**\n\t *  Holds the current position\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._position = [0, 0, 0];\n\n\tTone.getContext(function(){\n\t\t// set the default position/forward\n\t\tthis.set(ListenerConstructor.defaults);\n\n\t\t//listener is a singleton so it adds itself to the context\n\t\t// this.context.listener = this;\n\t}.bind(this));\n\n};\n\nTone.extend(Tone.Listener);\n\n/**\n *  Defaults according to the specification\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Listener.defaults = {\n\t\"positionX\" : 0,\n\t\"positionY\" : 0,\n\t\"positionZ\" : 0,\n\t\"forwardX\" : 0,\n\t\"forwardY\" : 0,\n\t\"forwardZ\" : 1,\n\t\"upX\" : 0,\n\t\"upY\" : 1,\n\t\"upZ\" : 0\n};\n\n/**\n * Is an instanceof Tone.Listener\n * @type {Boolean}\n */\nTone.Listener.prototype.isListener = true;\n\n/**\n * The ramp time which is applied to the setTargetAtTime\n * @type {Number}\n * @private\n */\nTone.Listener.prototype._rampTimeConstant = 0.01;\n\n/**\n *  Sets the position of the listener in 3d space.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @return {Tone.Listener} this\n */\nTone.Listener.prototype.setPosition = function(x, y, z){\n\tif (this.context.rawContext.listener.positionX){\n\t\tvar now = this.now();\n\t\tthis.context.rawContext.listener.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t} else {\n\t\tthis.context.rawContext.listener.setPosition(x, y, z);\n\t}\n\tthis._position = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  Sets the orientation of the listener using two vectors, the forward\n *  vector (which direction the listener is facing) and the up vector\n *  (which the up direction of the listener). An up vector\n *  of 0, 0, 1 is equivalent to the listener standing up in the Z direction.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @param  {Number}  upX\n *  @param  {Number}  upY\n *  @param  {Number}  upZ\n *  @return {Tone.Listener} this\n */\nTone.Listener.prototype.setOrientation = function(x, y, z, upX, upY, upZ){\n\tif (this.context.rawContext.listener.forwardX){\n\t\tvar now = this.now();\n\t\tthis.context.rawContext.listener.forwardX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.forwardY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.forwardZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.upX.setTargetAtTime(upX, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.upY.setTargetAtTime(upY, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.upZ.setTargetAtTime(upZ, now, this._rampTimeConstant);\n\t} else {\n\t\tthis.context.rawContext.listener.setOrientation(x, y, z, upX, upY, upZ);\n\t}\n\tthis._orientation = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  The x position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name positionX\n */\nObject.defineProperty(Tone.Listener.prototype, \"positionX\", {\n\tset : function(pos){\n\t\tthis._position[0] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[0];\n\t}\n});\n\n/**\n *  The y position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name positionY\n */\nObject.defineProperty(Tone.Listener.prototype, \"positionY\", {\n\tset : function(pos){\n\t\tthis._position[1] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[1];\n\t}\n});\n\n/**\n *  The z position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name positionZ\n */\nObject.defineProperty(Tone.Listener.prototype, \"positionZ\", {\n\tset : function(pos){\n\t\tthis._position[2] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[2];\n\t}\n});\n\n/**\n *  The x coordinate of the listeners front direction. i.e.\n *  which way they are facing.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name forwardX\n */\nObject.defineProperty(Tone.Listener.prototype, \"forwardX\", {\n\tset : function(pos){\n\t\tthis._orientation[0] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[0];\n\t}\n});\n\n/**\n *  The y coordinate of the listeners front direction. i.e.\n *  which way they are facing.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name forwardY\n */\nObject.defineProperty(Tone.Listener.prototype, \"forwardY\", {\n\tset : function(pos){\n\t\tthis._orientation[1] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[1];\n\t}\n});\n\n/**\n *  The z coordinate of the listeners front direction. i.e.\n *  which way they are facing.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name forwardZ\n */\nObject.defineProperty(Tone.Listener.prototype, \"forwardZ\", {\n\tset : function(pos){\n\t\tthis._orientation[2] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[2];\n\t}\n});\n\n/**\n *  The x coordinate of the listener's up direction. i.e.\n *  the direction the listener is standing in.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name upX\n */\nObject.defineProperty(Tone.Listener.prototype, \"upX\", {\n\tset : function(pos){\n\t\tthis._orientation[3] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[3];\n\t}\n});\n\n/**\n *  The y coordinate of the listener's up direction. i.e.\n *  the direction the listener is standing in.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name upY\n */\nObject.defineProperty(Tone.Listener.prototype, \"upY\", {\n\tset : function(pos){\n\t\tthis._orientation[4] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[4];\n\t}\n});\n\n/**\n *  The z coordinate of the listener's up direction. i.e.\n *  the direction the listener is standing in.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name upZ\n */\nObject.defineProperty(Tone.Listener.prototype, \"upZ\", {\n\tset : function(pos){\n\t\tthis._orientation[5] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[5];\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Listener} this\n */\nTone.Listener.prototype.dispose = function(){\n\tthis._orientation = null;\n\tthis._position = null;\n\treturn this;\n};\n\n//SINGLETON SETUP\nvar ListenerConstructor = Tone.Listener;\nTone.Listener = new ListenerConstructor();\n\nTone.Context.on(\"init\", function(context){\n\tif (context.listener && context.listener.isListener){\n\t\t//a single listener object\n\t\tTone.Listener = context.listener;\n\t} else {\n\t\t//make new Listener insides\n\t\tTone.Listener = new ListenerConstructor();\n\t}\n});\n//END SINGLETON SETUP\n\nexport default Tone.Listener;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Timeline\";\n\n/**\n *  @class Tone.Draw is useful for synchronizing visuals and audio events.\n *         Callbacks from Tone.Transport or any of the Tone.Event classes\n *         always happen _before_ the scheduled time and are not synchronized\n *         to the animation frame so they are not good for triggering tightly\n *         synchronized visuals and sound. Tone.Draw makes it easy to schedule\n *         callbacks using the AudioContext time and uses requestAnimationFrame.\n *         \n *  @singleton\n *  @extends {Tone}\n *  @example\n * Tone.Transport.schedule(function(time){\n * \t//use the time argument to schedule a callback with Tone.Draw\n * \tTone.Draw.schedule(function(){\n * \t\t//do drawing or DOM manipulation here\n * \t}, time)\n * }, \"+0.5\")\n */\nTone.Draw = function(){\n\n\tTone.call(this);\n\t\n\t/**\n\t *  All of the events.\n\t *  @type  {Tone.Timeline}\n\t *  @private\n\t */\n\tthis._events = new Tone.Timeline();\n\n\t/**\n\t *  The duration after which events are not invoked.\n\t *  @type  {Number}\n\t *  @default 0.25\n\t */\n\tthis.expiration = 0.25;\n\n\t/**\n\t *  The amount of time before the scheduled time \n\t *  that the callback can be invoked. Default is\n\t *  half the time of an animation frame (0.008 seconds).\n\t *  @type  {Number}\n\t *  @default 0.008\n\t */\n\tthis.anticipation = 0.008;\n\n\t/**\n\t *  The draw loop\n\t *  @type  {Function}\n\t *  @private\n\t */\n\tthis._boundDrawLoop = this._drawLoop.bind(this);\n};\n\nTone.extend(Tone.Draw);\n\n/**\n *  Schedule a function at the given time to be invoked\n *  on the nearest animation frame.\n *  @param  {Function}  callback  Callback is invoked at the given time.\n *  @param  {Time}    time      The time relative to the AudioContext time\n *                              to invoke the callback.\n *  @return  {Tone.Draw}    this\n */\nTone.Draw.prototype.schedule = function(callback, time){\n\tthis._events.add({\n\t\tcallback : callback,\n\t\ttime : this.toSeconds(time)\n\t});\n\t//start the draw loop on the first event\n\tif (this._events.length === 1){\n\t\trequestAnimationFrame(this._boundDrawLoop);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel events scheduled after the given time\n *  @param  {Time=}  after  Time after which scheduled events will \n *                          be removed from the scheduling timeline.\n *  @return  {Tone.Draw}  this\n */\nTone.Draw.prototype.cancel = function(after){\n\tthis._events.cancel(this.toSeconds(after));\n\treturn this;\n};\n\n/**\n *  The draw loop\n *  @private\n */\nTone.Draw.prototype._drawLoop = function(){\n\tvar now = Tone.context.currentTime;\n\twhile (this._events.length && this._events.peek().time - this.anticipation <= now){\n\t\tvar event = this._events.shift();\n\t\tif (now - event.time <= this.expiration){\n\t\t\tevent.callback();\n\t\t}\n\t}\n\tif (this._events.length > 0){\n\t\trequestAnimationFrame(this._boundDrawLoop);\n\t}\n};\n\n//make a singleton\nTone.Draw = new Tone.Draw();\n\nexport default Tone.Draw;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\n\n/**\n *  buses are another way of routing audio\n *\n *  augments Tone.prototype to include send and receive\n */\n\n/**\n *  All of the routes\n *\n *  @type {Object}\n *  @static\n *  @private\n */\nvar Buses = {};\n\n/**\n *  Send this signal to the channel name.\n *  @param  {String} channelName A named channel to send the signal to.\n *  @param  {Decibels} amount The amount of the source to send to the bus.\n *  @return {GainNode} The gain node which connects this node to the desired channel.\n *                     Can be used to adjust the levels of the send.\n *  @example\n * source.send(\"reverb\", -12);\n */\nTone.prototype.send = function(channelName, amount){\n\tif (!Buses.hasOwnProperty(channelName)){\n\t\tBuses[channelName] = this.context.createGain();\n\t}\n\tamount = Tone.defaultArg(amount, 0);\n\tvar sendKnob = new Tone.Gain(amount, Tone.Type.Decibels);\n\tthis.connect(sendKnob);\n\tsendKnob.connect(Buses[channelName]);\n\treturn sendKnob;\n};\n\n/**\n *  Receive the input from the desired channelName to the input\n *\n *  @param  {String} channelName A named channel to send the signal to.\n *  @param  {Number=} channelNumber The channel to connect to\n *  @returns {Tone} this\n *  @example\n * reverbEffect.receive(\"reverb\");\n */\nTone.prototype.receive = function(channelName, inputNum){\n\tif (!Buses.hasOwnProperty(channelName)){\n\t\tBuses[channelName] = this.context.createGain();\n\t}\n\tTone.connect(Buses[channelName], this, 0, inputNum);\n\treturn this;\n};\n\n//remove all the send/receives when a new audio context is passed in\nTone.Context.on(\"init\", function(context){\n\tif (context.buses){\n\t\tBuses = context.buses;\n\t} else {\n\t\tBuses = {};\n\t\tcontext.buses = Buses;\n\t}\n});\n\nexport default Tone;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\n\n/**\n *  @class  Choose a random value.\n *  @extends {Tone}\n *  @example\n * var randomWalk = new Tone.CtrlRandom({\n * \t\"min\" : 0,\n * \t\"max\" : 10,\n * \t\"integer\" : true\n * });\n * randomWalk.eval();\n *\n *  @param {Number|Time=} min The minimum return value.\n *  @param {Number|Time=} max The maximum return value.\n */\nTone.CtrlRandom = function(){\n\n\tvar options = Tone.defaults(arguments, [\"min\", \"max\"], Tone.CtrlRandom);\n\tTone.call(this);\n\n\t/**\n\t *  The minimum return value\n\t *  @type  {Number|Time}\n\t */\n\tthis.min = options.min;\n\n\t/**\n\t *  The maximum return value\n\t *  @type  {Number|Time}\n\t */\n\tthis.max = options.max;\n\n\t/**\n\t *  If the return value should be an integer\n\t *  @type  {Boolean}\n\t */\n\tthis.integer = options.integer;\n};\n\nTone.extend(Tone.CtrlRandom);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.CtrlRandom.defaults = {\n\t\"min\" : 0,\n\t\"max\" : 1,\n\t\"integer\" : false\n};\n\n/**\n *  Return a random value between min and max. \n *  @readOnly\n *  @memberOf Tone.CtrlRandom#\n *  @type {*}\n *  @name value\n */\nObject.defineProperty(Tone.CtrlRandom.prototype, \"value\", {\n\tget : function(){\n\t\tvar min = this.toSeconds(this.min);\n\t\tvar max = this.toSeconds(this.max);\n\t\tvar rand = Math.random(); \n\t\tvar val = rand * min + (1 - rand) * max;\n\t\tif (this.integer){\n\t\t\tval = Math.floor(val);\n\t\t}\n\t\treturn val;\n\t}\n});\n\nexport default Tone.CtrlRandom;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Tone.CtrlMarkov represents a Markov Chain where each call\n *         to Tone.CtrlMarkov.next will move to the next state. If the next\n *         state choice is an array, the next state is chosen randomly with\n *         even probability for all of the choices. For a weighted probability\n *         of the next choices, pass in an object with \"state\" and \"probability\" attributes. \n *         The probabilities will be normalized and then chosen. If no next options\n *         are given for the current state, the state will stay there. \n *  @extends {Tone}\n *  @example\n * var chain = new Tone.CtrlMarkov({\n * \t\"beginning\" : [\"end\", \"middle\"],\n * \t\"middle\" : \"end\"\n * });\n * chain.value = \"beginning\";\n * chain.next(); //returns \"end\" or \"middle\" with 50% probability\n *\n *  @example\n * var chain = new Tone.CtrlMarkov({\n * \t\"beginning\" : [{\"value\" : \"end\", \"probability\" : 0.8}, \n * \t\t\t\t\t{\"value\" : \"middle\", \"probability\" : 0.2}],\n * \t\"middle\" : \"end\"\n * });\n * chain.value = \"beginning\";\n * chain.next(); //returns \"end\" with 80% probability or \"middle\" with 20%.\n *  @param {Object} values An object with the state names as the keys\n *                         and the next state(s) as the values. \n */\nTone.CtrlMarkov = function(values, initial){\n\n\tTone.call(this);\n\n\t/**\n\t *  The Markov values with states as the keys\n\t *  and next state(s) as the values. \n\t *  @type {Object}\n\t */\n\tthis.values = Tone.defaultArg(values, {});\n\t\n\t/**\n\t *  The current state of the Markov values. The next\n\t *  state will be evaluated and returned when Tone.CtrlMarkov.next\n\t *  is invoked.\n\t *  @type {String}\n\t */\n\tthis.value = Tone.defaultArg(initial, Object.keys(this.values)[0]);\n};\n\nTone.extend(Tone.CtrlMarkov);\n\n/**\n *  Returns the next state of the Markov values. \n *  @return  {String}\n */\nTone.CtrlMarkov.prototype.next = function(){\n\tif (this.values.hasOwnProperty(this.value)){\n\t\tvar next = this.values[this.value];\n\t\tif (Tone.isArray(next)){\n\t\t\tvar distribution = this._getProbDistribution(next);\n\t\t\tvar rand = Math.random();\n\t\t\tvar total = 0;\n\t\t\tfor (var i = 0; i < distribution.length; i++){\n\t\t\t\tvar dist = distribution[i];\n\t\t\t\tif (rand > total && rand < total + dist){\n\t\t\t\t\tvar chosen = next[i];\n\t\t\t\t\tif (Tone.isObject(chosen)){\n\t\t\t\t\t\tthis.value = chosen.value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.value = chosen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttotal += dist;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.value = next;\n\t\t}\n\t} \n\treturn this.value;\n};\n\n/**\n *  Choose randomly from an array weighted options in the form \n *  {\"state\" : string, \"probability\" : number} or an array of values\n *  @param  {Array}  options \n *  @return  {Array}  The randomly selected choice\n *  @private\n */\nTone.CtrlMarkov.prototype._getProbDistribution = function(options){\n\tvar distribution = [];\n\tvar total = 0;\n\tvar needsNormalizing = false;\n\tfor (var i = 0; i < options.length; i++){\n\t\tvar option = options[i];\n\t\tif (Tone.isObject(option)){\n\t\t\tneedsNormalizing = true;\n\t\t\tdistribution[i] = option.probability;\n\t\t} else {\n\t\t\tdistribution[i] = 1 / options.length;\n\t\t}\n\t\ttotal += distribution[i];\n\t}\n\tif (needsNormalizing){\n\t\t//normalize the values\n\t\tfor (var j = 0; j < distribution.length; j++){\n\t\t\tdistribution[j] = distribution[j] / total;\n\t\t}\n\t}\n\treturn distribution;\n};\n\n/**\n *  Clean up\n *  @return  {Tone.CtrlMarkov}  this\n */\nTone.CtrlMarkov.prototype.dispose = function(){\n\tthis.values = null;\n};\n\nexport default Tone.CtrlMarkov;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\n\n/**\n *  @class Tone.CtrlInterpolate will interpolate between given values based\n *         on the \"index\" property. Passing in an array or object literal\n *         will interpolate each of the parameters. Note (i.e. \"C3\")\n *         and Time (i.e. \"4n + 2\") can be interpolated. All other values are\n *         assumed to be numbers. \n *  @example\n * var interp = new Tone.CtrlInterpolate([0, 2, 9, 4]);\n * interp.index = 0.75;\n * interp.value; //returns 1.5\n *\n *  @example\n * var interp = new Tone.CtrlInterpolate([\n * \t[2, 4, 5],\n * \t[9, 3, 2],\n * ]);\n * @param {Array} values The array of values to interpolate over\n * @param {Positive} index The initial interpolation index.\n * @extends {Tone}\n */\nTone.CtrlInterpolate = function(){\n\n\tvar options = Tone.defaults(arguments, [\"values\", \"index\"], Tone.CtrlInterpolate);\n\tTone.call(this);\n\n\t/**\n\t *  The values to interpolate between\n\t *  @type  {Array}\n\t */\n\tthis.values = options.values;\n\n\t/**\n\t *  The interpolated index between values. For example: a value of 1.5\n\t *  would interpolate equally between the value at index 1\n\t *  and the value at index 2. \n\t *  @example\n\t * interp.index = 0; \n\t * interp.value; //returns the value at 0\n\t * interp.index = 0.5;\n\t * interp.value; //returns the value between indices 0 and 1. \n\t *  @type  {Positive}\n\t */\n\tthis.index = options.index;\n};\n\nTone.extend(Tone.CtrlInterpolate);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.CtrlInterpolate.defaults = {\n\t\"index\" : 0,\n\t\"values\" : []\n};\n\n/**\n *  The current interpolated value based on the index\n *  @readOnly\n *  @memberOf Tone.CtrlInterpolate#\n *  @type {*}\n *  @name value\n */\nObject.defineProperty(Tone.CtrlInterpolate.prototype, \"value\", {\n\tget : function(){\n\t\tvar index = this.index;\n\t\tindex = Math.min(index, this.values.length - 1);\n\t\tvar lowerPosition = Math.floor(index);\n\t\tvar lower = this.values[lowerPosition];\n\t\tvar upper = this.values[Math.ceil(index)];\n\t\treturn this._interpolate(index - lowerPosition, lower, upper);\n\t}\n});\n\n/**\n *  Internal interpolation routine\n *  @param  {NormalRange}  index  The index between the lower and upper\n *  @param  {*}  lower \n *  @param  {*}  upper \n *  @return  {*}  The interpolated value\n *  @private\n */\nTone.CtrlInterpolate.prototype._interpolate = function(index, lower, upper){\n\tif (Tone.isArray(lower)){\n\t\tvar retArray = [];\n\t\tfor (var i = 0; i < lower.length; i++){\n\t\t\tretArray[i] = this._interpolate(index, lower[i], upper[i]);\n\t\t}\n\t\treturn retArray;\n\t} else if (Tone.isObject(lower)){\n\t\tvar retObj = {};\n\t\tfor (var attr in lower){\n\t\t\tretObj[attr] = this._interpolate(index, lower[attr], upper[attr]);\n\t\t}\n\t\treturn retObj;\n\t} else {\n\t\tlower = this._toNumber(lower);\n\t\tupper = this._toNumber(upper);\n\t\treturn (1 - index) * lower + index * upper;\n\t}\n};\n\n/**\n *  Convert from the given type into a number\n *  @param  {Number|String}  value\n *  @return  {Number}\n *  @private\n */\nTone.CtrlInterpolate.prototype._toNumber = function(val){\n\tif (Tone.isNumber(val)){\n\t\treturn val;\n\t} else {\n\t\t//otherwise assume that it's Time...\n\t\treturn this.toSeconds(val);\n\t}\n};\n\n/**\n *  Clean up\n *  @return  {Tone.CtrlInterpolate}  this\n */\nTone.CtrlInterpolate.prototype.dispose = function(){\n\tthis.values = null;\n};\n\nexport default Tone.CtrlInterpolate;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Analyser\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Get the current waveform data of the connected audio source.\n *  @extends {Tone.AudioNode}\n *  @param {Number=} size The size of the FFT. Value must be a power of\n *                       two in the range 32 to 32768.\n */\nTone.Waveform = function(){\n\n\tvar options = Tone.defaults(arguments, [\"size\"], Tone.Waveform);\n\toptions.type = Tone.Analyser.Type.Waveform;\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The analyser node.\n\t *  @private\n\t *  @type {Tone.Analyser}\n\t */\n\tthis._analyser = this.input = this.output = new Tone.Analyser(options);\n};\n\nTone.extend(Tone.Waveform, Tone.AudioNode);\n\n/**\n *  The default values.\n *  @type {Object}\n *  @const\n */\nTone.Waveform.defaults = {\n\t\"size\" : 1024\n};\n\n/**\n *  Gets the waveform of the audio source. Returns the waveform data\n *  of length [size](#size) as a Float32Array with values between -1 and 1.\n *  @returns {TypedArray}\n */\nTone.Waveform.prototype.getValue = function(){\n\treturn this._analyser.getValue();\n};\n\n/**\n *  The size of analysis. This must be a power of two in the range 32 to 32768.\n *  @memberOf Tone.Waveform#\n *  @type {Number}\n *  @name size\n */\nObject.defineProperty(Tone.Waveform.prototype, \"size\", {\n\tget : function(){\n\t\treturn this._analyser.size;\n\t},\n\tset : function(size){\n\t\tthis._analyser.size = size;\n\t}\n});\n/**\n *  Clean up.\n *  @return  {Tone.Waveform}  this\n */\nTone.Waveform.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.dispose();\n\tthis._analyser = null;\n};\n\nexport default Tone.Waveform;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../component/Merge\";\nimport \"../component/Split\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../signal/Zero\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  A spatialized panner node which supports equalpower or HRTF panning.\n *          Tries to normalize the API across various browsers. See Tone.Listener\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Number} positionX The initial x position.\n *  @param {Number} positionY The initial y position.\n *  @param {Number} positionZ The initial z position.\n */\nTone.Panner3D = function(){\n\n\tvar options = Tone.defaults(arguments, [\"positionX\", \"positionY\", \"positionZ\"], Tone.Panner3D);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The panner node\n\t *  @type {PannerNode}\n\t *  @private\n\t */\n\tthis._panner = this.input = this.output = this.context.createPanner();\n\t//set some values\n\tthis._panner.panningModel = options.panningModel;\n\tthis._panner.maxDistance = options.maxDistance;\n\tthis._panner.distanceModel = options.distanceModel;\n\tthis._panner.coneOuterGain = options.coneOuterGain;\n\tthis._panner.coneOuterAngle = options.coneOuterAngle;\n\tthis._panner.coneInnerAngle = options.coneInnerAngle;\n\tthis._panner.refDistance = options.refDistance;\n\tthis._panner.rolloffFactor = options.rolloffFactor;\n\n\t/**\n\t *  Holds the current orientation\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._orientation = [options.orientationX, options.orientationY, options.orientationZ];\n\n\t/**\n\t *  Holds the current position\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._position = [options.positionX, options.positionY, options.positionZ];\n\n\t// set the default position/orientation\n\tthis.orientationX = options.orientationX;\n\tthis.orientationY = options.orientationY;\n\tthis.orientationZ = options.orientationZ;\n\tthis.positionX = options.positionX;\n\tthis.positionY = options.positionY;\n\tthis.positionZ = options.positionZ;\n};\n\nTone.extend(Tone.Panner3D, Tone.AudioNode);\n\n/**\n *  Defaults according to the specification\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Panner3D.defaults = {\n\t\"positionX\" : 0,\n\t\"positionY\" : 0,\n\t\"positionZ\" : 0,\n\t\"orientationX\" : 0,\n\t\"orientationY\" : 0,\n\t\"orientationZ\" : 0,\n\t\"panningModel\" : \"equalpower\",\n\t\"maxDistance\" : 10000,\n\t\"distanceModel\" : \"inverse\",\n\t\"coneOuterGain\" : 0,\n\t\"coneOuterAngle\" : 360,\n\t\"coneInnerAngle\" : 360,\n\t\"refDistance\" : 1,\n\t\"rolloffFactor\" : 1\n};\n\n/**\n * The ramp time which is applied to the setTargetAtTime\n * @type {Number}\n * @private\n */\nTone.Panner3D.prototype._rampTimeConstant = 0.01;\n\n/**\n *  Sets the position of the source in 3d space.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @return {Tone.Panner3D} this\n */\nTone.Panner3D.prototype.setPosition = function(x, y, z){\n\tif (this._panner.positionX){\n\t\tvar now = this.now();\n\t\tthis._panner.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis._panner.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis._panner.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t} else {\n\t\tthis._panner.setPosition(x, y, z);\n\t}\n\tthis._position = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  Sets the orientation of the source in 3d space.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @return {Tone.Panner3D} this\n */\nTone.Panner3D.prototype.setOrientation = function(x, y, z){\n\tif (this._panner.orientationX){\n\t\tvar now = this.now();\n\t\tthis._panner.orientationX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis._panner.orientationY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis._panner.orientationZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t} else {\n\t\tthis._panner.setOrientation(x, y, z);\n\t}\n\tthis._orientation = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  The x position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name positionX\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"positionX\", {\n\tset : function(pos){\n\t\tthis._position[0] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[0];\n\t}\n});\n\n/**\n *  The y position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name positionY\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"positionY\", {\n\tset : function(pos){\n\t\tthis._position[1] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[1];\n\t}\n});\n\n/**\n *  The z position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name positionZ\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"positionZ\", {\n\tset : function(pos){\n\t\tthis._position[2] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[2];\n\t}\n});\n\n/**\n *  The x orientation of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name orientationX\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"orientationX\", {\n\tset : function(pos){\n\t\tthis._orientation[0] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[0];\n\t}\n});\n\n/**\n *  The y orientation of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name orientationY\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"orientationY\", {\n\tset : function(pos){\n\t\tthis._orientation[1] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[1];\n\t}\n});\n\n/**\n *  The z orientation of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name orientationZ\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"orientationZ\", {\n\tset : function(pos){\n\t\tthis._orientation[2] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[2];\n\t}\n});\n\n/**\n *  Proxy a property on the panner to an exposed public propery\n *  @param  {String}  prop\n *  @private\n */\nTone.Panner3D._aliasProperty = function(prop){\n\tObject.defineProperty(Tone.Panner3D.prototype, prop, {\n\t\tset : function(val){\n\t\t\tthis._panner[prop] = val;\n\t\t},\n\t\tget : function(){\n\t\t\treturn this._panner[prop];\n\t\t}\n\t});\n};\n\n/**\n *  The panning model. Either \"equalpower\" or \"HRTF\".\n *  @type {String}\n *  @memberOf Tone.Panner3D#\n *  @name panningModel\n */\nTone.Panner3D._aliasProperty(\"panningModel\");\n\n/**\n *  A reference distance for reducing volume as source move further from the listener\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name refDistance\n */\nTone.Panner3D._aliasProperty(\"refDistance\");\n\n/**\n *  Describes how quickly the volume is reduced as source moves away from listener.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name rolloffFactor\n */\nTone.Panner3D._aliasProperty(\"rolloffFactor\");\n\n/**\n *  The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n *  @type {String}\n *  @memberOf Tone.Panner3D#\n *  @name distanceModel\n */\nTone.Panner3D._aliasProperty(\"distanceModel\");\n\n/**\n *  The angle, in degrees, inside of which there will be no volume reduction\n *  @type {Degrees}\n *  @memberOf Tone.Panner3D#\n *  @name coneInnerAngle\n */\nTone.Panner3D._aliasProperty(\"coneInnerAngle\");\n\n/**\n *  The angle, in degrees, outside of which the volume will be reduced\n *  to a constant value of coneOuterGain\n *  @type {Degrees}\n *  @memberOf Tone.Panner3D#\n *  @name coneOuterAngle\n */\nTone.Panner3D._aliasProperty(\"coneOuterAngle\");\n\n/**\n *  The gain outside of the coneOuterAngle\n *  @type {Gain}\n *  @memberOf Tone.Panner3D#\n *  @name coneOuterGain\n */\nTone.Panner3D._aliasProperty(\"coneOuterGain\");\n\n/**\n *  The maximum distance between source and listener,\n *  after which the volume will not be reduced any further.\n *  @type {Positive}\n *  @memberOf Tone.Panner3D#\n *  @name maxDistance\n */\nTone.Panner3D._aliasProperty(\"maxDistance\");\n\n/**\n *  Clean up.\n *  @returns {Tone.Panner3D} this\n */\nTone.Panner3D.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._panner.disconnect();\n\tthis._panner = null;\n\tthis._orientation = null;\n\tthis._position = null;\n\treturn this;\n};\n\nexport default Tone.Panner3D;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/MultibandSplit\";\nimport \"../component/Compressor\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class A compressor with seperate controls over low/mid/high dynamics\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Object} options The low/mid/high compressor settings.\n *  @example\n *  var multiband = new Tone.MultibandCompressor({\n *  \t\"lowFrequency\" : 200,\n *  \t\"highFrequency\" : 1300\n *  \t\"low\" : {\n *  \t\t\"threshold\" : -12\n *  \t}\n *  })\n */\nTone.MultibandCompressor = function(options){\n\n\tTone.AudioNode.call(this);\n\toptions = Tone.defaultArg(arguments, Tone.MultibandCompressor.defaults);\n\n\t/**\n\t *  split the incoming signal into high/mid/low\n\t *  @type {Tone.MultibandSplit}\n\t *  @private\n\t */\n\tthis._splitter = this.input = new Tone.MultibandSplit({\n\t\t\"lowFrequency\" : options.lowFrequency,\n\t\t\"highFrequency\" : options.highFrequency\n\t});\n\n\t/**\n\t *  low/mid crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.lowFrequency = this._splitter.lowFrequency;\n\n\t/**\n\t *  mid/high crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.highFrequency = this._splitter.highFrequency;\n\n\t/**\n\t *  the output\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.output = new Tone.Gain();\n\n\t/**\n\t *  The compressor applied to the low frequencies.\n\t *  @type {Tone.Compressor}\n\t */\n\tthis.low = new Tone.Compressor(options.low);\n\n\t/**\n\t *  The compressor applied to the mid frequencies.\n\t *  @type {Tone.Compressor}\n\t */\n\tthis.mid = new Tone.Compressor(options.mid);\n\n\t/**\n\t *  The compressor applied to the high frequencies.\n\t *  @type {Tone.Compressor}\n\t */\n\tthis.high = new Tone.Compressor(options.high);\n\n\t//connect the compressor\n\tthis._splitter.low.chain(this.low, this.output);\n\tthis._splitter.mid.chain(this.mid, this.output);\n\tthis._splitter.high.chain(this.high, this.output);\n\n\tthis._readOnly([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n};\n\nTone.extend(Tone.MultibandCompressor, Tone.AudioNode);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.MultibandCompressor.defaults = {\n\t\"low\" : Tone.Compressor.defaults,\n\t\"mid\" : Tone.Compressor.defaults,\n\t\"high\" : Tone.Compressor.defaults,\n\t\"lowFrequency\" : 250,\n\t\"highFrequency\" : 2000\n};\n\n/**\n *  clean up\n *  @returns {Tone.MultibandCompressor} this\n */\nTone.MultibandCompressor.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._splitter.dispose();\n\tthis._writable([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n\tthis.low.dispose();\n\tthis.mid.dispose();\n\tthis.high.dispose();\n\tthis._splitter = null;\n\tthis.low = null;\n\tthis.mid = null;\n\tthis.high = null;\n\tthis.lowFrequency = null;\n\tthis.highFrequency = null;\n\treturn this;\n};\n\nexport default Tone.MultibandCompressor;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Merge\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Mono coerces the incoming mono or stereo signal into a mono signal\n *         where both left and right channels have the same value. This can be useful\n *         for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n */\nTone.Mono = function(){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 0);\n\n\t/**\n\t *  merge the signal\n\t *  @type {Tone.Merge}\n\t *  @private\n\t */\n\tthis._merge = this.output = new Tone.Merge();\n\n\tTone.connect(this.input, this._merge, 0, 0);\n\tTone.connect(this.input, this._merge, 0, 1);\n};\n\nTone.extend(Tone.Mono, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.Mono} this\n */\nTone.Mono.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._merge.dispose();\n\tthis._merge = null;\n\treturn this;\n};\n\nexport default Tone.Mono;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/MidSideSplit\";\nimport \"../component/MidSideMerge\";\nimport \"../component/Compressor\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.MidSideCompressor applies two different compressors to the mid\n *         and side signal components. See Tone.MidSideSplit.\n *\n *  @extends {Tone.AudioNode}\n *  @param {Object} options The options that are passed to the mid and side\n *                          compressors.\n *  @constructor\n */\nTone.MidSideCompressor = function(options){\n\n\tTone.AudioNode.call(this);\n\toptions = Tone.defaultArg(options, Tone.MidSideCompressor.defaults);\n\n\t/**\n\t *  the mid/side split\n\t *  @type  {Tone.MidSideSplit}\n\t *  @private\n\t */\n\tthis._midSideSplit = this.input = new Tone.MidSideSplit();\n\n\t/**\n\t *  the mid/side recombination\n\t *  @type  {Tone.MidSideMerge}\n\t *  @private\n\t */\n\tthis._midSideMerge = this.output = new Tone.MidSideMerge();\n\n\t/**\n\t *  The compressor applied to the mid signal\n\t *  @type  {Tone.Compressor}\n\t */\n\tthis.mid = new Tone.Compressor(options.mid);\n\n\t/**\n\t *  The compressor applied to the side signal\n\t *  @type  {Tone.Compressor}\n\t */\n\tthis.side = new Tone.Compressor(options.side);\n\n\tthis._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n\tthis._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n\tthis._readOnly([\"mid\", \"side\"]);\n};\n\nTone.extend(Tone.MidSideCompressor, Tone.AudioNode);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.MidSideCompressor.defaults = {\n\t\"mid\" : {\n\t\t\"ratio\" : 3,\n\t\t\"threshold\" : -24,\n\t\t\"release\" : 0.03,\n\t\t\"attack\" : 0.02,\n\t\t\"knee\" : 16\n\t},\n\t\"side\" : {\n\t\t\"ratio\" : 6,\n\t\t\"threshold\" : -30,\n\t\t\"release\" : 0.25,\n\t\t\"attack\" : 0.03,\n\t\t\"knee\" : 10\n\t}\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.MidSideCompressor} this\n */\nTone.MidSideCompressor.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"mid\", \"side\"]);\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.side.dispose();\n\tthis.side = null;\n\tthis._midSideSplit.dispose();\n\tthis._midSideSplit = null;\n\tthis._midSideMerge.dispose();\n\tthis._midSideMerge = null;\n\treturn this;\n};\n\nexport default Tone.MidSideCompressor;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Analyser\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n *          of an input signal. It can also get the raw\n *          value of the input signal.\n *\n *  @constructor\n *  @param {Number} smoothing The amount of smoothing applied between frames.\n *  @extends {Tone.AudioNode}\n *  @example\n * var meter = new Tone.Meter();\n * var mic = new Tone.UserMedia().open();\n * //connect mic to the meter\n * mic.connect(meter);\n * //the current level of the mic input in decibels\n * var level = meter.getLevel();\n */\nTone.Meter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"smoothing\"], Tone.Meter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t * A value from 0 -> 1 where 0 represents no time averaging with the last analysis frame.\n\t * @type {Number}\n\t */\n\tthis.smoothing = options.smoothing;\n\n\t/**\n\t * The previous frame's value\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._rms = 0;\n\n\t/**\n\t *  The analyser node which computes the levels.\n\t *  @private\n\t *  @type  {Tone.Analyser}\n\t */\n\tthis.input = this.output = this._analyser = new Tone.Analyser(\"waveform\", 256);\n};\n\nTone.extend(Tone.Meter, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type {Object}\n *  @static\n *  @const\n */\nTone.Meter.defaults = {\n\t\"smoothing\" : 0.8,\n};\n\n/**\n *  Get the current decibel value of the incoming signal\n *  @returns {Decibels}\n */\nTone.Meter.prototype.getLevel = function(){\n\tvar values = this._analyser.getValue();\n\tvar totalSquared = 0;\n\tfor (var i = 0; i < values.length; i++){\n\t\tvar value = values[i];\n\t\ttotalSquared += value * value;\n\t}\n\tvar rms = Math.sqrt(totalSquared / values.length);\n\n\t//the rms can only fall at the rate of the smoothing\n\t//but can jump up instantly\n\tthis._rms = Math.max(rms, this._rms * this.smoothing);\n\n\treturn Tone.gainToDb(this._rms);\n};\n\n/**\n *  Get the signal value of the incoming signal\n *  @returns {Number}\n */\nTone.Meter.prototype.getValue = function(){\n\tvar value = this._analyser.getValue();\n\treturn value[0];\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Meter} this\n */\nTone.Meter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.dispose();\n\tthis._analyser = null;\n\treturn this;\n};\n\nexport default Tone.Meter;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Compressor\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Limiter will limit the loudness of an incoming signal.\n *         It is composed of a Tone.Compressor with a fast attack\n *         and release. Limiters are commonly used to safeguard against\n *         signal clipping. Unlike a compressor, limiters do not provide\n *         smooth gain reduction and almost completely prevent\n *         additional gain above the threshold.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {number} threshold The theshold above which the limiting is applied.\n *  @example\n *  var limiter = new Tone.Limiter(-6);\n */\nTone.Limiter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"threshold\"], Tone.Limiter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the compressor\n\t *  @private\n\t *  @type {Tone.Compressor}\n\t */\n\tthis._compressor = this.input = this.output = new Tone.Compressor({\n\t\t\"attack\" : 0.001,\n\t\t\"decay\" : 0.001,\n\t\t\"threshold\" : options.threshold\n\t});\n\n\t/**\n\t * The threshold of of the limiter\n\t * @type {Decibel}\n\t * @signal\n\t */\n\tthis.threshold = this._compressor.threshold;\n\n\tthis._readOnly(\"threshold\");\n};\n\nTone.extend(Tone.Limiter, Tone.AudioNode);\n\n/**\n *  The default value\n *  @type {Object}\n *  @const\n *  @static\n */\nTone.Limiter.defaults = {\n\t\"threshold\" : -12\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Limiter} this\n */\nTone.Limiter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._compressor.dispose();\n\tthis._compressor = null;\n\tthis._writable(\"threshold\");\n\tthis.threshold = null;\n\treturn this;\n};\n\nexport default Tone.Limiter;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Follower\";\nimport \"../signal/GreaterThan\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Gate only passes a signal through when the incoming\n *          signal exceeds a specified threshold. To do this, Gate uses\n *          a Tone.Follower to follow the amplitude of the incoming signal.\n *          A common implementation of this class is a [Noise Gate](https://en.wikipedia.org/wiki/Noise_gate).\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Decibels|Object} [threshold] The threshold above which the gate will open.\n *  @param {Time=} smoothing The follower's smoothing time\n *  @example\n * var gate = new Tone.Gate(-30, 0.2, 0.3).toMaster();\n * var mic = new Tone.UserMedia().connect(gate);\n * //the gate will only pass through the incoming\n * //signal when it's louder than -30db\n */\nTone.Gate = function(){\n\n\tvar options = Tone.defaults(arguments, [\"threshold\", \"smoothing\"], Tone.Gate);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  @type {Tone.Follower}\n\t *  @private\n\t */\n\tthis._follower = new Tone.Follower(options.smoothing);\n\n\t/**\n\t *  @type {Tone.GreaterThan}\n\t *  @private\n\t */\n\tthis._gt = new Tone.GreaterThan(Tone.dbToGain(options.threshold));\n\n\t//the connections\n\tTone.connect(this.input, this.output);\n\t//the control signal\n\tTone.connectSeries(this.input, this._follower, this._gt, this.output.gain);\n};\n\nTone.extend(Tone.Gate, Tone.AudioNode);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.Gate.defaults = {\n\t\"smoothing\" : 0.1,\n\t\"threshold\" : -40\n};\n\n/**\n * The threshold of the gate in decibels\n * @memberOf Tone.Gate#\n * @type {Decibels}\n * @name threshold\n */\nObject.defineProperty(Tone.Gate.prototype, \"threshold\", {\n\tget : function(){\n\t\treturn Tone.gainToDb(this._gt.value);\n\t},\n\tset : function(thresh){\n\t\tthis._gt.value = Tone.dbToGain(thresh);\n\t}\n});\n\n/**\n * The attack/decay speed of the gate\n * @memberOf Tone.Gate#\n * @type {Time}\n * @name smoothing\n */\nObject.defineProperty(Tone.Gate.prototype, \"smoothing\", {\n\tget : function(){\n\t\treturn this._follower.smoothing;\n\t},\n\tset : function(smoothingTime){\n\t\tthis._follower.smoothing = smoothingTime;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Gate} this\n */\nTone.Gate.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._follower.dispose();\n\tthis._gt.dispose();\n\tthis._follower = null;\n\tthis._gt = null;\n\treturn this;\n};\n\nexport default Tone.Gate;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Analyser\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Get the current frequency data of the connected audio source\n *          using a fast Fourier transform.\n *  @extends {Tone.AudioNode}\n *  @param {Number=} size The size of the FFT. Value must be a power of\n *                       two in the range 16 to 16384.\n */\nTone.FFT = function(){\n\n\tvar options = Tone.defaults(arguments, [\"size\"], Tone.FFT);\n\toptions.type = Tone.Analyser.Type.FFT;\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The analyser node.\n\t *  @private\n\t *  @type {Tone.Analyser}\n\t */\n\tthis._analyser = this.input = this.output = new Tone.Analyser(options);\n};\n\nTone.extend(Tone.FFT, Tone.AudioNode);\n\n/**\n *  The default values.\n *  @type {Object}\n *  @const\n */\nTone.FFT.defaults = {\n\t\"size\" : 1024\n};\n\n/**\n *  Gets the current frequency data from the connected audio source. \n *  Returns the frequency data of length [size](#size) as a Float32Array of decibel values. \n *  @returns {TypedArray}\n */\nTone.FFT.prototype.getValue = function(){\n\treturn this._analyser.getValue();\n};\n\n/**\n *  The size of analysis. This must be a power of two in the range 16 to 16384.\n *  Determines the size of the array returned by [getValue](#getvalue) (i.e. the number of\n *  frequency bins). Large FFT sizes may be costly to compute.\n *  @memberOf Tone.FFT#\n *  @type {Number}\n *  @name size\n */\nObject.defineProperty(Tone.FFT.prototype, \"size\", {\n\tget : function(){\n\t\treturn this._analyser.size;\n\t},\n\tset : function(size){\n\t\tthis._analyser.size = size;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.FFT}  this\n */\nTone.FFT.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.dispose();\n\tthis._analyser = null;\n};\n\nexport default Tone.FFT;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/MultibandSplit\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.EQ3 is a three band EQ with control over low, mid, and high gain as\n *         well as the low and high crossover frequencies.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *\n *  @param {Decibels|Object} [lowLevel] The gain applied to the lows.\n *  @param {Decibels} [midLevel] The gain applied to the mid.\n *  @param {Decibels} [highLevel] The gain applied to the high.\n *  @example\n * var eq = new Tone.EQ3(-10, 3, -20);\n */\nTone.EQ3 = function(){\n\n\tvar options = Tone.defaults(arguments, [\"low\", \"mid\", \"high\"], Tone.EQ3);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the output node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.output = new Tone.Gain();\n\n\t/**\n\t *  the multiband split\n\t *  @type {Tone.MultibandSplit}\n\t *  @private\n\t */\n\tthis._multibandSplit = this.input = new Tone.MultibandSplit({\n\t\t\"lowFrequency\" : options.lowFrequency,\n\t\t\"highFrequency\" : options.highFrequency\n\t});\n\n\t/**\n\t *  The gain for the lower signals\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._lowGain = new Tone.Gain(options.low, Tone.Type.Decibels);\n\n\t/**\n\t *  The gain for the mid signals\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._midGain = new Tone.Gain(options.mid, Tone.Type.Decibels);\n\n\t/**\n\t * The gain in decibels of the high part\n\t * @type {Tone.Gain}\n\t * @private\n\t */\n\tthis._highGain = new Tone.Gain(options.high, Tone.Type.Decibels);\n\n\t/**\n\t * The gain in decibels of the low part\n\t * @type {Decibels}\n\t * @signal\n\t */\n\tthis.low = this._lowGain.gain;\n\n\t/**\n\t * The gain in decibels of the mid part\n\t * @type {Decibels}\n\t * @signal\n\t */\n\tthis.mid = this._midGain.gain;\n\n\t/**\n\t * The gain in decibels of the high part\n\t * @type {Decibels}\n\t * @signal\n\t */\n\tthis.high = this._highGain.gain;\n\n\t/**\n\t *  The Q value for all of the filters.\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.Q = this._multibandSplit.Q;\n\n\t/**\n\t *  The low/mid crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.lowFrequency = this._multibandSplit.lowFrequency;\n\n\t/**\n\t *  The mid/high crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.highFrequency = this._multibandSplit.highFrequency;\n\n\t//the frequency bands\n\tthis._multibandSplit.low.chain(this._lowGain, this.output);\n\tthis._multibandSplit.mid.chain(this._midGain, this.output);\n\tthis._multibandSplit.high.chain(this._highGain, this.output);\n\tthis._readOnly([\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n};\n\nTone.extend(Tone.EQ3, Tone.AudioNode);\n\n/**\n *  the default values\n */\nTone.EQ3.defaults = {\n\t\"low\" : 0,\n\t\"mid\" : 0,\n\t\"high\" : 0,\n\t\"lowFrequency\" : 400,\n\t\"highFrequency\" : 2500\n};\n\n/**\n *  clean up\n *  @returns {Tone.EQ3} this\n */\nTone.EQ3.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n\tthis._multibandSplit.dispose();\n\tthis._multibandSplit = null;\n\tthis.lowFrequency = null;\n\tthis.highFrequency = null;\n\tthis._lowGain.dispose();\n\tthis._lowGain = null;\n\tthis._midGain.dispose();\n\tthis._midGain = null;\n\tthis._highGain.dispose();\n\tthis._highGain = null;\n\tthis.low = null;\n\tthis.mid = null;\n\tthis.high = null;\n\tthis.Q = null;\n\treturn this;\n};\n\nexport default Tone.EQ3;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/PanVol\";\nimport \"../component/Solo\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Channel provides a channel strip interface with \n *  volume, pan, solo and mute controls. \n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Decibels} volume The output volume.\n *  @param {AudioRange} pan the initial pan\n *  @example\n * //pan the incoming signal left and drop the volume\n * var channel = new Tone.Channel(-0.25, -12);\n */\nTone.Channel = function(){\n\n\tvar options = Tone.defaults(arguments, [\"volume\", \"pan\"], Tone.PanVol);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The soloing interface\n\t *  @type {Tone.Solo}\n\t *  @private\n\t */\n\tthis._solo = this.input = new Tone.Solo(options.solo);\n\n\t/**\n\t *  The panning and volume node\n\t *  @type {Tone.PanVol}\n\t *  @private\n\t */\n\tthis._panVol = this.output = new Tone.PanVol({\n\t\t\"pan\" : options.pan, \n\t\t\"volume\" : options.volume,\n\t\t\"mute\" : options.mute\n\t});\n\n\t/**\n\t *  The L/R panning control.\n\t *  @type {AudioRange}\n\t *  @signal\n\t */\n\tthis.pan = this._panVol.pan;\n\n\t/**\n\t *  The volume control in decibels.\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.volume = this._panVol.volume;\n\n\tthis._solo.connect(this._panVol);\n\tthis._readOnly([\"pan\", \"volume\"]);\n};\n\nTone.extend(Tone.Channel, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.Channel.defaults = {\n\t\"pan\" : 0,\n\t\"volume\" : 0,\n\t\"mute\" : false,\n\t\"solo\" : false\n};\n\n/**\n * Solo/unsolo the channel. Soloing is only relative to other\n * Tone.Channels and Tone.Solos. \n * @memberOf Tone.Channel#\n * @name solo\n * @type {Boolean}\n */\nObject.defineProperty(Tone.Channel.prototype, \"solo\", {\n\tget : function(){\n\t\treturn this._solo.solo;\n\t},\n\tset : function(solo){\n\t\tthis._solo.solo = solo;\n\t}\n});\n\n/**\n *  If the current instance is muted, i.e. another instance is soloed,\n *  or the channel is muted\n *  @memberOf Tone.Channel#\n *  @type {Boolean}\n *  @name muted\n *  @readOnly\n */\nObject.defineProperty(Tone.Channel.prototype, \"muted\", {\n\tget : function(){\n\t\treturn this._solo.muted || this.mute;\n\t}\n});\n\n/**\n * Mute/unmute the volume\n * @memberOf Tone.Channel#\n * @name mute\n * @type {Boolean}\n */\nObject.defineProperty(Tone.Channel.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._panVol.mute;\n\t},\n\tset : function(mute){\n\t\tthis._panVol.mute = mute;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Channel} this\n */\nTone.Channel.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"pan\", \"volume\"]);\n\tthis._panVol.dispose();\n\tthis._panVol = null;\n\tthis.pan = null;\n\tthis.volume = null;\n\tthis._solo.dispose();\n\tthis._solo = null;\n\treturn this;\n};\n\nexport default Tone.Channel;\n\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","import {note} from \"@tonaljs/tonal\";\n\n\nexport class Note {\n    static readonly chromas = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n    /**\n     * Gets the id number of a note given its string representation.\n     * @param noteName\n     */\n    static toKeyNum(noteName: string): number {\n        const octave = note(noteName).oct as number;\n        const chroma = note(noteName).chroma as number;\n        return octave * 12 + chroma;\n    }\n\n    /**\n     * Returns the name of a note given its id number representation.\n     * @param keyNum\n     */\n    static toNoteName(keyNum: number): string {\n        if (keyNum < 0) {\n            throw new Error(\"The key number is less than 0\");\n        }\n        const octave = Math.floor(keyNum / 12);\n        const chroma = Note.chromas[keyNum % 12];\n        return `${chroma}${octave}`\n    }\n\n    /**\n     * Get the pitch of the key number\n     * @param keyNum\n     */\n    static toChroma(keyNum: number): string {\n        if (keyNum < 0) {\n            throw new Error(\"The key number is less than 0\");\n        }\n        return Note.chromas[keyNum % 12];\n    }\n}\n","import {Note} from \"../music-theory/Note\";\n\nconst offsets = [0, 0.5, 1, 1.5, 2, 3, 3.5, 4, 4.5, 5, 5.5, 6]; // The offset of a key from the left of the octave\n\nclass Keyboard {\n    _container: HTMLElement;\n    _keys: Array<HTMLElement>;\n    _prevKeys: Array<HTMLElement>;\n    _chords: Array<Array<string>>;\n    onKeyDown: any;\n    onKeyUp: any;\n\n    constructor(container: Element) {\n        this._container = document.createElement('div');\n        this._container.id = 'keyboard';\n        container.setAttribute('touch-action', 'none');\n        container.appendChild(this._container);\n\n        this._keys = [];\n        this._prevKeys = [];\n\n        this._chords = [];\n\n        // Callback events\n        this.onKeyDown = function () {\n        };\n        this.onKeyUp = function () {\n        };\n    }\n\n    /**\n     * Resize the keyboard according to the window's width\n     * @param lowestKeyNum\n     * @param octaves\n     */\n    public resize(lowestKeyNum = 0, octaves: number) {\n        this._container.innerHTML = ''; // Clear the previous ones\n        const keyWidth = (1 / 7) / octaves;\n        for (let keyNum = lowestKeyNum; keyNum < lowestKeyNum + octaves * 12; keyNum++) {\n            let key = document.createElement('div');    // Add a div for a key\n            key.classList.add('key');\n            let isSharp = ([1, 3, 6, 8, 10].indexOf(keyNum % 12) !== -1);    // A key is sharp if the note it represents is a sharp note\n            if (isSharp) {\n                key.classList.add('black', \"shadow\");\n            } else {\n                key.classList.add('white');\n            }\n\n            // Add the note on the key if it is C\n            const noteName = Note.toNoteName(keyNum);\n            const isC = keyNum % 12 === 0;\n            if (isC) {  // Starts with C, not C#\n                const noteP = document.createElement(\"p\");\n                noteP.classList.add('note-name');\n                noteP.dataset.noteName = noteName;\n                noteP.dataset.keyNum = keyNum.toString();\n                noteP.innerText = noteName;\n                key.appendChild(noteP);\n            }\n\n            // Calculate the position of the div\n            let lowestOctave = Math.floor(lowestKeyNum / 12);\n            let lowestOffset = offsets[lowestKeyNum % 12] + lowestOctave * 7;\n\n            let noteOctave = Math.floor(keyNum / 12);\n            let offset = offsets[keyNum % 12] + noteOctave * 7 - lowestOffset;\n\n            if (Number.isInteger(offset) === true) {  // Is white key\n                key.style.width = `${keyWidth * 100}%`;\n                key.style.left = `${offset * keyWidth * 100}%`;\n            } else {    // is black key\n                key.style.width = `${keyWidth * 100 / 2}%`; // half width\n                key.style.left = `${offset * keyWidth * 100 + keyWidth * 100 / 4}%`;    // + 1/4 width\n            }\n\n            // Assign the html property to the div\n            key.dataset.keyNum = keyNum.toString();\n            key.dataset.noteName = noteName;\n            key.setAttribute('touch-action', 'none');\n\n            this._container.appendChild(key);   // Add each key as the child of 'keyboard' class\n            this._bindKeyEvents(key);   // Bind event listeners\n            this._keys[keyNum] = key;    // Add key to the keys list\n        }\n    }\n\n    /**\n     * Bind the key events to the key\n     * @param key\n     * @private\n     */\n    private _bindKeyEvents(key: HTMLDivElement) {\n        key.addEventListener('pointerdown', (e) => {\n            const target = e.target as HTMLDivElement;\n            const keyNum = parseInt(target.getAttribute(\"data-key-num\") as string);\n            this.onKeyDown(keyNum);\n        });\n\n        key.addEventListener(\"pointerout\", (e) => { // Release the key if the pointer moves out of the key div\n            const target = e.target as HTMLDivElement;\n            const keyNum = parseInt(target.getAttribute(\"data-key-num\") as string);\n            this.onKeyUp(keyNum);\n        });\n\n        key.addEventListener(\"pointerup\", (e) => {\n            const target = e.target as HTMLDivElement;\n            const keyNum = parseInt(target.getAttribute(\"data-key-num\") as string);\n            this.onKeyUp(keyNum);\n        });\n    }\n\n    /**\n     * Unhighlight keys\n     * @param keys an array of key element\n     */\n    private _unhighlight(keys: Array<HTMLElement>) {\n        keys.forEach(function (key) {\n            key.classList.remove(\"highlight\");\n            key.classList.remove(\"highlight-root\")\n        })\n    }\n\n    /**\n     * Show the chord by displaying the chord string and highlight the keys in the chord\n     * Highlight the root note in a gray color if the inversion is not None\n     * @public\n     * @param chord\n     * @param rootNote\n     */\n    public highlight(chord: Array<string>, rootNote: null|string) {\n        // Change the previous keys' color back to the original color\n        this._unhighlight(this._prevKeys);  // Unhighlight previous keys\n\n        this._prevKeys = [];    // Reset the prev keys\n\n        if (!chord) { // Chord does not exist\n            console.warn(\"Notes not specified. Cannot play the chord\");\n            return false;\n        }\n\n        for (const note of chord as Array<string>) { // Loop through the notes in the chord\n            const selectorNote = note.replace(\"#\", \"\\\\#\");  // # is encoded as \\\\#\n            const key = document.querySelector(`.key[data-note-name=${selectorNote}]`);\n            // Get the key of the note. Return null if there are no matches\n            if (key !== null) {  // Only highlight the key if it is in the boundary\n                key.classList.add(\"highlight\"); // Highlight the key\n                this._prevKeys.push(key as HTMLElement);    // Save the keys as prevKeys\n            }\n        }\n\n        this._chords.push(chord);\n\n        // Highlight the root note in a gray color if the inversion is not None\n        if (rootNote){\n            this._highlightRootNote(rootNote);\n        }\n\n        return true;\n    }\n\n\n    /**\n     * Highlight the root note in a gray color\n     * @param note\n     * @private\n     */\n    private _highlightRootNote(note: string){\n        const selectorNote = note.replace(\"#\", \"\\\\#\");  // # is encoded as \\\\#\n        const key = document.querySelector(`.key[data-note-name=${selectorNote}]`);\n        if (key !== null) {  // Only highlight the key if it is in the boundary\n            key.classList.add(\"highlight-root\"); // Highlight the key\n            this._prevKeys.push(key as HTMLElement);    // Save the keys as prevKeys\n        }\n    }\n}\n\nexport {Keyboard};\n","import {Note} from \"./Note\"\n\nexport class Chord {\n    static readonly chordTypeSymbols: any = {\n        //Triads\n        \"Major Triad\": \"\",\n        \"Minor Triad\": \"m\",\n        \"Augmented Triad\": \"+\",\n        \"Diminished Triad\": \"<sup>o</sup>\",\n        //Sevenths\n        \"Dominant Seventh\": \"<sup>7</sup>\",\n        \"Major Seventh\": \"maj<sup>7</sup>\",\n        \"Minor Seventh\": \"min<sup>7</sup>\",\n        \"Diminished Seventh\": \"<sup>o7</sup>\",\n        \"Half Diminished Seventh\": \"<sup>ø7</sup>\",\n        \"Augmented Seventh\": \"+<sup>7</sup>\",\n        \"Augmented Major Seventh\": \"+<sup>M7</sup>\",\n        //Extended\n        \"Dominant Ninth\": \"<sup>9</sup>\",\n        \"Dominant Thirteenth\": \"<sup>13</sup>\",\n        //Altered\n        \"Seventh Augmented Fifth\": \"<sup>7♯5</sup>\",\n        \"Seventh Minor Ninth\": \"<sup>7♭9</sup>\",\n        \"Seventh Sharp Ninth\": \"<sup>7♯9</sup>\"\n    };\n\n    static readonly chordFamilies: any = {\n        \"Triads\": {  // chord with 3 notes\n            \"Major Triad\": [0, 4, 7],\n            \"Minor Triad\": [0, 3, 7],\n            \"Augmented Triad\": [0, 4, 8],\n            \"Diminished Triad\": [0, 3, 6]\n        },\n        \"Sevenths\": {   // triads with a 7th added on\n            \"Dominant Seventh\": [0, 4, 7, 10],\n            \"Major Seventh\": [0, 4, 7, 11], // C E G B\n            \"Minor Seventh\": [0, 3, 7, 10],\n            \"Diminished Seventh\": [0, 3, 6, 9], // C E♭ G♭ B♭♭\n            \"Half Diminished Seventh\": [0, 3, 6, 10],\n            \"Augmented Seventh\": [0, 4, 8, 10], // C E G♯ B♭\n            \"Augmented Major Seventh\": [0, 4, 8, 11] // C E G♯ B\n        },\n        \"Extended\": {\n            \"Dominant Ninth\": [0, 4, 7, 10, 14],    // C E G B♭ D\n            \"Dominant Eleventh\": [0, 4, 7, 10, 14, 16],  // C E G B♭ D F\n            \"Dominant Thirteenth\": [0, 4, 7, 10, 14, 16, 20] // C E G B♭ D F A\n        },\n        \"Altered\": {\n            \"Seventh Augmented Fifth\": [0, 4, 8, 10],   // C E G♯ B♭\n            \"Seventh Minor Ninth\": [0, 4, 7, 10, 13],   // C E G B♭ D♭\n            \"Seventh Sharp Ninth\": [0, 4, 7, 10, 15]  // C E G B♭ D♯\n        }\n    };\n\n    static readonly letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"];\n\n    public type: string; // Must have a type\n    public family: string;    // Family is nullable if it is a  single note\n    public inversionNum: number;\n    public rootKeyNum: number;\n\n    constructor(rootKeyNum = 48, type = \"Major Triad\", family = \"Triads\", inversionNum = 0) {\n        this.type = type;\n        this.rootKeyNum = rootKeyNum;   // Root is C4 initially\n        this.family = family;\n        this.inversionNum = inversionNum;\n    }\n\n    /**\n     * Get an array of string of the note in the chord\n     */\n    public getNotes(): Array<string> {\n        const halfSteps = Chord.chordFamilies[this.family][this.type].slice(0);\n        if (halfSteps == null) {\n            throw new Error(\"Cannot get the half steps\");\n        }\n        for (let i = 0; i < this.inversionNum; i++) {    // Inverse half steps\n            halfSteps[i] += 12;\n        }\n\n        let notes = [];\n        for (let halfStep of halfSteps) {\n            const curKeyNum = this.rootKeyNum + halfStep;\n            const curNote = Note.toNoteName(curKeyNum);\n            notes.push(curNote);\n        }\n\n        return notes;\n    }\n\n    /**\n     * Get the half steps of the chord type\n     * @param family\n     * @param type\n     */\n    static getLen(family: string, type: string) {\n        const halfSteps = Chord.chordFamilies[family][type].slice(0);\n        if (halfSteps == []) {\n            throw new Error(\"Cannot get the half steps\");\n        } else {\n            return halfSteps.length;\n        }\n    }\n\n    /**\n     * Overwrite toString method\n     */\n    public toString() {\n        const notes = this.getNotes();\n        return notes.toString();\n    }\n\n    /**\n     * Get the chord name to place in the chord inversion symbol\n     */\n    public getChordName() {\n        const typeSymbol = Chord.chordTypeSymbols[this.type];\n        let chroma = Note.toChroma(this.rootKeyNum);\n        const inversionSymbol = this._getInversionSymbol();\n\n        if (chroma.indexOf(\"#\") > -1) {\n            chroma = chroma.replace(\"#\", \"♯\"); // Changes the sharp sign to a fancy sharp.\n        }\n\n        return `${chroma}${typeSymbol}${inversionSymbol}`;\n    }\n\n    /**\n     * Returns the array of halfsteps of the current Chord.\n     * @private\n     */\n    private _getHalfSteps(): Array<number> {\n        const halfSteps = Chord.chordFamilies[this.family][this.type].slice(0);\n        if (halfSteps == null) {\n            throw new Error(\"Cannot get the half steps\");\n        }\n        return halfSteps\n    }\n\n\n    /**\n     * Gets the note if there is an inversion. (IE: C/E) in first inversion.\n     * @private\n     */\n    private _getInversionSymbol(): string {\n        if (this.inversionNum == 0) {\n            return \"\";\n        }\n        const halfSteps = this._getHalfSteps();\n        const rootKeyNum = this.rootKeyNum;\n        const rootKeyName = Note.toNoteName(rootKeyNum); // Gets name of root key\n        const inversionKeyNum = rootKeyNum + halfSteps[this.inversionNum]; // Key or ID number of lowest note in chord.\n        let inversionNote = Note.toChroma(inversionKeyNum); // Name of inversion (lowest) note in chord.\n\n        console.log(\"rootKeyName:\" + rootKeyName);\n\n        const rootNoteLetter = rootKeyName[0];\n        let rootNoteLetterIndex = Chord.letters.indexOf(rootNoteLetter);    // Get the index of root note letter\n\n        console.log(\"rootKeyLettersIndex:\" + rootNoteLetterIndex);\n        console.log(\"indexOfInversionLetterNoMod: \" + (rootNoteLetterIndex + 2 * this.inversionNum));\n        console.log(\"indexOfInversionLetter: \" + (rootNoteLetterIndex + 2 * this.inversionNum) % 7);\n\n        let inversionLetter = Chord.letters[(rootNoteLetterIndex + 2 * this.inversionNum) % 7];\n\n        let chromaIDOfLetter = Note.chromas.indexOf(inversionLetter); // This starts on C and includes half steps\n        console.log(\"chromaIDOfLetter: \" + chromaIDOfLetter);\n\n        let idOfPlayed = rootKeyNum + halfSteps[this.inversionNum]; // The actual ID of the note being played\n\n        let nameOfPlayed = Note.toNoteName(idOfPlayed);\n        let shortNameOfPlayed = nameOfPlayed.substring(0, nameOfPlayed.length - 1);\n        console.log(shortNameOfPlayed);\n\n        let chromaIDOfPlayed = Note.chromas.indexOf(shortNameOfPlayed);\n\n        console.log(\"Difference: \" + (chromaIDOfLetter - chromaIDOfPlayed));\n\n        let inversionSymbol = inversionLetter;\n\n        switch ((chromaIDOfLetter - chromaIDOfPlayed) % Note.chromas.length) {\n            case -2:\n                inversionSymbol = inversionLetter + \"♯♯\";\n                break;\n            case -1:\n                inversionSymbol = inversionLetter + \"♯\";\n                break;\n            case 0:\n                inversionSymbol = inversionLetter;\n                break;\n            case 1:\n                inversionSymbol = inversionLetter + \"♭\";\n                break;\n            case 2:\n                inversionSymbol = inversionLetter + \"♭♭\";\n                break;\n        }\n\n        if (inversionNote.indexOf(\"#\") > -1) {\n            inversionNote = inversionNote.replace(\"#\", \"♯\"); // Changes the sharp sign to a fancy sharp.\n        }\n        if (inversionNote == undefined) {\n            console.warn(\"Inversion note is undefined\");\n            return \"\";\n        }\n        return `/${inversionSymbol}`;\n    }\n}\n","import {Keyboard} from \"./Keyboard\";\nimport {Chord} from \"../music-theory/Chord\";\nimport {Note} from \"../music-theory/Note\";\n\nclass Piano {\n    private _keyboardInterface: Keyboard;\n    public onKeyDown: Function;\n    public onKeyUp: Function;\n    public onSetChord: Function;\n    public currChord: Chord;\n    private _container: Element;\n\n    constructor(container: Element) {\n        this.currChord = new Chord();\n        this._container = container;\n\n        // The piano keyboard interface\n        this._keyboardInterface = new Keyboard(container);\n        this._keyboardInterface.onKeyDown = this.keyDown.bind(this);    // Trigger the callback event after clicking a key\n        this._keyboardInterface.onKeyUp = this.keyUp.bind(this);\n\n        // Callback events\n        this.onKeyDown = function () {\n        };\n        this.onKeyUp = function () {\n        };\n        this.onSetChord = function () {\n        };\n\n        this.setChord(new Chord()); // Highlight the C major chord initially\n\n        window.addEventListener('resize', this._resize.bind(this)); // Resize the keyboard according to the width of the window\n        this._resize();\n    };\n\n    /**\n     * Resize the keyboard according to the window's width\n     * @private\n     */\n    _resize() {\n        const keyWidth = 27;\n        let octaves = Math.round((window.innerWidth / keyWidth) / 12);\n        octaves = Math.max(octaves, 1); // Octave not less than 2\n        octaves = Math.min(octaves, 4); // Octave not greater than 7\n        this._keyboardInterface.resize(36, octaves);  // Populate keys from G2\n        const notes = this.currChord.getNotes();\n\n        // Set the highlight of the current note\n        let rootNote = null;\n        if (this.currChord.inversionNum > 0){\n            const rootKeyNum = this.currChord.rootKeyNum;\n            rootNote = Note.toNoteName(rootKeyNum);\n        }\n        this._keyboardInterface.highlight(notes, rootNote)\n    }\n\n    /**\n     * Set the chord after a key is down\n     * @param keyNum\n     */\n    public keyDown(keyNum: number) {\n        if (this._container.classList.contains(\"disabled\")){\n            return;\n        }\n        this.setRootKeyNum(keyNum);\n        this.onKeyDown(this.currChord);\n    }\n\n    /**\n     * Key the root note, set the inversion to 0, and setChord the chord type and family\n     * @param type\n     * @param family\n     */\n    public setChordType(family: string, type: string) {\n        this.currChord.type = type;\n        this.currChord.family = family;\n        this.currChord.inversionNum = 0;    // Reset inversion number to 0\n        this.setChord(this.currChord);\n    }\n\n    /**\n     * Set the inversion of the chord, setChord the highlight and play the sound\n     * @param inversionNum\n     */\n    public setInversion(inversionNum: number) {\n        this.currChord.inversionNum = inversionNum; // Update inversion number\n        this.setChord(this.currChord);\n    }\n\n    /**\n     * Get the chord based on the root note, highlight the keys in the chord and the root note on the keyboard. and play the sound\n     * @public\n     * @param chord\n     */\n    public setChord(chord: Chord) {\n        this.currChord = chord;  // Update current chord\n        const notes = this.currChord.getNotes();\n\n        // Highlight the chord\n        console.log(`Set the chord to ${notes}`);\n\n        // Highlight the root note if the inversion is not None\n        let rootNote = null;\n        if (this.currChord.inversionNum > 0){\n            const rootKeyNum = this.currChord.rootKeyNum;\n            rootNote = Note.toNoteName(rootKeyNum);\n        }\n\n        this._keyboardInterface.highlight(notes, rootNote);\n\n        this.onSetChord(chord);\n    }\n\n    setRootKeyNum(keyNum: number) {\n        this.currChord.rootKeyNum = keyNum;\n        const notes = this.currChord.getNotes();\n\n        // Highlight the root note if the inversion is not None\n        let rootNote = null;\n        if (this.currChord.inversionNum > 0){\n            const rootKeyNum = this.currChord.rootKeyNum;\n            rootNote = Note.toNoteName(rootKeyNum);\n        }\n\n        this._keyboardInterface.highlight(notes, rootNote);\n        console.log(`Set the root key num to ${this.currChord.rootKeyNum}`);\n    }\n\n    /**\n     * Release the sound\n     */\n    keyUp() {\n        if (this._container.classList.contains(\"disabled\")){\n            return;\n        }\n        const chord = this.currChord.getNotes();\n        this.onKeyUp(chord);\n    }\n\n    /**\n     * Disable changing the root note on the piano\n     */\n    public disable(){\n        this._container.classList.add(\"disabled\");\n    }\n\n    /**\n     * Enable changing the root note on the piano\n     */\n    public enable(){\n        this._container.classList.remove(\"disabled\");\n    }\n}\n\nexport {Piano}\n","export default \"13.8.25\";\n","/**\n *  Tone.js\n *  @author Yotam Mann\n *  @license http://opensource.org/licenses/MIT MIT License\n *  @copyright 2014-2019 Yotam Mann\n */\nimport version from \"../version\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tTONE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  @class  Tone is the base class of all other classes.\n *  @constructor\n */\nvar Tone = function(){\n\tif (!(this instanceof Tone)){\n\t\tthrow new Error(\"constructor needs to be called with the 'new' keyword\");\n\t}\n};\n\n/**\n *  @memberOf Tone#\n *  @returns {String} returns the name of the class as a string\n */\nTone.prototype.toString = function(){\n\tfor (var className in Tone){\n\t\tvar isLetter = className[0].match(/^[A-Z]$/);\n\t\tvar sameConstructor = Tone[className] === this.constructor;\n\t\tif (Tone.isFunction(Tone[className]) && isLetter && sameConstructor){\n\t\t\treturn className;\n\t\t}\n\t}\n\treturn \"Tone\";\n};\n\n/**\n *  @memberOf Tone#\n *  disconnect and dispose\n *  @returns {Tone} this\n */\nTone.prototype.dispose = function(){\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tGET/SET\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Set the parameters at once. Either pass in an\n *  object mapping parameters to values, or to set a\n *  single parameter, by passing in a string and value.\n *  The last argument is an optional ramp time which\n *  will ramp any signal values to their destination value\n *  over the duration of the rampTime.\n *  @param {Object|String} params\n *  @param {Number=} value\n *  @returns {Tone} this\n *  @memberOf Tone#\n *  @example\n * //set values using an object\n * filter.set({\n * \t\"frequency\" : 300,\n * \t\"type\" : highpass\n * });\n *  @example\n * filter.set(\"type\", \"highpass\");\n *  @example\n * //ramp to the value 220 over 3 seconds.\n * oscillator.set({\n * \t\"frequency\" : 220\n * }, 3);\n */\nTone.prototype.set = function(params, value){\n\tif (Tone.isString(params)){\n\t\tvar tmpObj = {};\n\t\ttmpObj[params] = value;\n\t\tparams = tmpObj;\n\t}\n\n\tparamLoop:\n\tfor (var attr in params){\n\t\tvalue = params[attr];\n\t\tvar parent = this;\n\t\tif (attr.indexOf(\".\") !== -1){\n\t\t\tvar attrSplit = attr.split(\".\");\n\t\t\tfor (var i = 0; i < attrSplit.length - 1; i++){\n\t\t\t\tparent = parent[attrSplit[i]];\n\t\t\t\tif (parent instanceof Tone){\n\t\t\t\t\tattrSplit.splice(0, i+1);\n\t\t\t\t\tvar innerParam = attrSplit.join(\".\");\n\t\t\t\t\tparent.set(innerParam, value);\n\t\t\t\t\tcontinue paramLoop;\n\t\t\t\t}\n\t\t\t}\n\t\t\tattr = attrSplit[attrSplit.length - 1];\n\t\t}\n\t\tvar param = parent[attr];\n\t\tif (Tone.isUndef(param)){\n\t\t\tcontinue;\n\t\t}\n\t\tif ((Tone.Signal && param instanceof Tone.Signal) ||\n\t\t\t(Tone.Param && param instanceof Tone.Param)){\n\t\t\tif (param.value !== value){\n\t\t\t\tparam.value = value;\n\t\t\t}\n\t\t} else if (param instanceof AudioParam){\n\t\t\tif (param.value !== value){\n\t\t\t\tparam.value = value;\n\t\t\t}\n\t\t} else if (Tone.TimeBase && param instanceof Tone.TimeBase){\n\t\t\tparent[attr] = value;\n\t\t} else if (param instanceof Tone){\n\t\t\tparam.set(value);\n\t\t} else if (param !== value){\n\t\t\tparent[attr] = value;\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Get the object's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. Pass in a single attribute to retrieve or an array\n *  of attributes. The attribute strings can also include a \".\"\n *  to access deeper properties.\n *  @memberOf Tone#\n *  @example\n * osc.get();\n * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n *  @example\n * osc.get(\"type\");\n * //returns { \"type\" : \"sine\"}\n * @example\n * //use dot notation to access deep properties\n * synth.get([\"envelope.attack\", \"envelope.release\"]);\n * //returns {\"envelope\" : {\"attack\" : 0.2, \"release\" : 0.4}}\n *  @param {Array=|string|undefined} params the parameters to get, otherwise will return\n *  \t\t\t\t\t                  all available.\n *  @returns {Object}\n */\nTone.prototype.get = function(params){\n\tif (Tone.isUndef(params)){\n\t\tparams = this._collectDefaults(this.constructor);\n\t} else if (Tone.isString(params)){\n\t\tparams = [params];\n\t}\n\tvar ret = {};\n\tfor (var i = 0; i < params.length; i++){\n\t\tvar attr = params[i];\n\t\tvar parent = this;\n\t\tvar subRet = ret;\n\t\tif (attr.indexOf(\".\") !== -1){\n\t\t\tvar attrSplit = attr.split(\".\");\n\t\t\tfor (var j = 0; j < attrSplit.length - 1; j++){\n\t\t\t\tvar subAttr = attrSplit[j];\n\t\t\t\tsubRet[subAttr] = subRet[subAttr] || {};\n\t\t\t\tsubRet = subRet[subAttr];\n\t\t\t\tparent = parent[subAttr];\n\t\t\t}\n\t\t\tattr = attrSplit[attrSplit.length - 1];\n\t\t}\n\t\tvar param = parent[attr];\n\t\tif (Tone.isObject(params[attr])){\n\t\t\tsubRet[attr] = param.get();\n\t\t} else if (Tone.Signal && param instanceof Tone.Signal){\n\t\t\tsubRet[attr] = param.value;\n\t\t} else if (Tone.Param && param instanceof Tone.Param){\n\t\t\tsubRet[attr] = param.value;\n\t\t} else if (param instanceof AudioParam){\n\t\t\tsubRet[attr] = param.value;\n\t\t} else if (param instanceof Tone){\n\t\t\tsubRet[attr] = param.get();\n\t\t} else if (!Tone.isFunction(param) && Tone.isDefined(param)){\n\t\t\tsubRet[attr] = param;\n\t\t}\n\t}\n\treturn ret;\n};\n\n/**\n *  collect all of the default attributes in one\n *  @private\n *  @param {Function} constr the constructor to find the defaults from\n *  @return {Array} all of the attributes which belong to the class\n */\nTone.prototype._collectDefaults = function(constr){\n\tvar ret = [];\n\tif (Tone.isDefined(constr.defaults)){\n\t\tret = Object.keys(constr.defaults);\n\t}\n\tif (Tone.isDefined(constr._super)){\n\t\tvar superDefs = this._collectDefaults(constr._super);\n\t\t//filter out repeats\n\t\tfor (var i = 0; i < superDefs.length; i++){\n\t\t\tif (ret.indexOf(superDefs[i]) === -1){\n\t\t\t\tret.push(superDefs[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tDEFAULTS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  @memberOf Tone\n *  @param  {Array}  values  The arguments array\n *  @param  {Array}  keys    The names of the arguments\n *  @param {Function|Object} constr The class constructor\n *  @return  {Object}  An object composed of the  defaults between the class' defaults\n *                        and the passed in arguments.\n */\nTone.defaults = function(values, keys, constr){\n\tvar options = {};\n\tif (values.length === 1 && Tone.isObject(values[0])){\n\t\toptions = values[0];\n\t} else {\n\t\tfor (var i = 0; i < keys.length; i++){\n\t\t\toptions[keys[i]] = values[i];\n\t\t}\n\t}\n\tif (Tone.isDefined(constr.defaults)){\n\t\treturn Tone.defaultArg(options, constr.defaults);\n\t} else if (Tone.isObject(constr)){\n\t\treturn Tone.defaultArg(options, constr);\n\t} else {\n\t\treturn options;\n\t}\n};\n\n/**\n *  If the `given` parameter is undefined, use the `fallback`.\n *  If both `given` and `fallback` are object literals, it will\n *  return a deep copy which includes all of the parameters from both\n *  objects. If a parameter is undefined in given, it will return\n *  the fallback property.\n *  <br><br>\n *  WARNING: if object is self referential, it will go into an an\n *  infinite recursive loop.\n *  @memberOf Tone\n *  @param  {*} given\n *  @param  {*} fallback\n *  @return {*}\n */\nTone.defaultArg = function(given, fallback){\n\tif (Tone.isObject(given) && Tone.isObject(fallback)){\n\t\tvar ret = {};\n\t\t//make a deep copy of the given object\n\t\tfor (var givenProp in given){\n\t\t\tret[givenProp] = Tone.defaultArg(fallback[givenProp], given[givenProp]);\n\t\t}\n\t\tfor (var fallbackProp in fallback){\n\t\t\tret[fallbackProp] = Tone.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n\t\t}\n\t\treturn ret;\n\t} else {\n\t\treturn Tone.isUndef(given) ? fallback : given;\n\t}\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tDEBUGGING\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Print the outputs to the console log for debugging purposes. \n *  Prints the contents only if either the object has a property\n *  called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n *  is set to the name of the class. \n *  @example\n * //prints all logs originating from Tone.OscillatorNode\n * Tone.global.TONE_DEBUG_CLASS = \"OscillatorNode\"\n *  @param {*} args Any arguments to print to the console.\n *  @private\n */\nTone.prototype.log = function(){\n\t//if the object is either set to debug = true\n\t//or if there is a string on the Tone.global.with the class name\n\tif (this.debug || this.toString() === Tone.global.TONE_DEBUG_CLASS){\n\t\tvar args = Array.from(arguments);\n\t\targs.unshift(this.toString()+\":\");\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log.apply(undefined, args);\n\t}\n};\n\n/**\n *  Assert that the statement is true, otherwise invoke the error. \n *  @param {Boolean} statement\n *  @param {String} error The message which is passed into an Error\n *  @private\n */\nTone.prototype.assert = function(statement, error){\n\tif (!statement){\n\t\tthrow new Error(error);\n\t}\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tCONNECTIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  connect together all of the arguments in series\n *  @param {...(AudioParam|Tone|AudioNode)} nodes\n *  @returns {Tone}\n *  @memberOf Tone\n *  @static\n */\nTone.connectSeries = function(){\n\tvar currentUnit = arguments[0];\n\tfor (var i = 1; i < arguments.length; i++){\n\t\tvar toUnit = arguments[i];\n\t\tTone.connect(currentUnit, toUnit);\n\t\tcurrentUnit = toUnit;\n\t}\n\treturn Tone;\n};\n\n/**\n * Connect two nodes together so that signal flows from the \n * first node to the second. The second node can be an AudioParam. \n * Optionally specific the input and output channels. \n * @param {(AudioNode|Tone.AudioNode)} srcNode The source node\n * @param {(AudioNode|Tone.AudioNode|AudioParam|Tone.AudioParam)} dstNode The destination node\n * @param {number} [outputNumber=0] The output channel of the srcNode\n * @param {number} [inputNumber=0] The input channel of the dstNode\n */\nTone.connect = function(srcNode, dstNode, outputNumber, inputNumber){\n\t\n\t//resolve the input of the dstNode\n\twhile (Tone.isDefined(dstNode.input)){\n\t\tif (Tone.isArray(dstNode.input)){\n\t\t\tinputNumber = Tone.defaultArg(inputNumber, 0);\n\t\t\tdstNode = dstNode.input[inputNumber];\n\t\t\tinputNumber = 0;\n\t\t} else if (dstNode.input){\n\t\t\tdstNode = dstNode.input;\n\t\t}\n\t}\n\n\t//make the connection\n\tif (dstNode instanceof AudioParam){\n\t\tsrcNode.connect(dstNode, outputNumber);\n\t} else if (dstNode instanceof AudioNode){\n\t\tsrcNode.connect(dstNode, outputNumber, inputNumber);\n\t}\n\n\treturn Tone;\n};\n\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param {(AudioNode|Tone.AudioNode)} srcNode The source node\n * @param {?(AudioNode|Tone.AudioNode|AudioParam|Tone.AudioParam)} dstNode The destination node\n * @param {?number} [outputNumber=0] The output channel of the srcNode\n * @param {?number} [inputNumber=0] The input channel of the dstNode\n */\nTone.disconnect = function(srcNode, dstNode, outputNumber, inputNumber){\n\tif (dstNode){\n\t\t//resolve the input of the dstNode\n\t\tvar bDone = false;\n\t\twhile (!bDone){\n\t\t\tif (Tone.isArray(dstNode.input)){\n\t\t\t\tif (Tone.isDefined(inputNumber)){\n\t\t\t\t\tTone.disconnect(srcNode, dstNode.input[inputNumber], outputNumber);\n\t\t\t\t} else {\n\t\t\t\t\tdstNode.input.forEach(function(dstNode){\n\t\t\t\t\t\t//ignore errors from connections that aren't there\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tTone.disconnect(srcNode, dstNode, outputNumber);\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbDone = true;\n\t\t\t} else if (dstNode.input){\n\t\t\t\tdstNode = dstNode.input;\n\t\t\t} else {\n\t\t\t\tbDone = true;\n\t\t\t}\n\t\t}\n\t\n\t\t//make the connection\n\t\tif (dstNode instanceof AudioParam){\n\t\t\tsrcNode.disconnect(dstNode, outputNumber);\n\t\t} else if (dstNode instanceof AudioNode){\n\t\t\tsrcNode.disconnect(dstNode, outputNumber, inputNumber);\n\t\t}\n\t} else {\n\t\tsrcNode.disconnect();\n\t}\n\n\treturn Tone;\n};\n\n///////////////////////////////////////////////////////////////////////////\n// TYPE CHECKING\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Test if the arg is undefined\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is undefined\n *  @static\n *  @memberOf Tone\n */\nTone.isUndef = function(val){\n\treturn typeof val === \"undefined\";\n};\n\n/**\n *  Test if the arg is not undefined\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is undefined\n *  @static\n *  @memberOf Tone\n */\nTone.isDefined = function(val){\n\treturn !Tone.isUndef(val);\n};\n\n/**\n *  Test if the arg is a function\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a function\n *  @static\n *  @memberOf Tone\n */\nTone.isFunction = function(val){\n\treturn typeof val === \"function\";\n};\n\n/**\n *  Test if the argument is a number.\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a number\n *  @static\n *  @memberOf Tone\n */\nTone.isNumber = function(arg){\n\treturn (typeof arg === \"number\");\n};\n\n/**\n *  Test if the given argument is an object literal (i.e. `{}`);\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is an object literal.\n *  @static\n *  @memberOf Tone\n */\nTone.isObject = function(arg){\n\treturn (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n};\n\n/**\n *  Test if the argument is a boolean.\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a boolean\n *  @static\n *  @memberOf Tone\n */\nTone.isBoolean = function(arg){\n\treturn (typeof arg === \"boolean\");\n};\n\n/**\n *  Test if the argument is an Array\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is an array\n *  @static\n *  @memberOf Tone\n */\nTone.isArray = function(arg){\n\treturn (Array.isArray(arg));\n};\n\n/**\n *  Test if the argument is a string.\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a string\n *  @static\n *  @memberOf Tone\n */\nTone.isString = function(arg){\n\treturn (typeof arg === \"string\");\n};\n\n/**\n *  Test if the argument is in the form of a note in scientific pitch notation.\n *  e.g. \"C4\"\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a string\n *  @static\n *  @memberOf Tone\n */\nTone.isNote = function(arg){\n\treturn Tone.isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n};\n\n/**\n *  An empty function.\n *  @static\n */\nTone.noOp = function(){};\n\n/**\n *  Make the property not writable. Internal use only.\n *  @private\n *  @param  {String}  property  the property to make not writable\n */\nTone.prototype._readOnly = function(property){\n\tif (Array.isArray(property)){\n\t\tfor (var i = 0; i < property.length; i++){\n\t\t\tthis._readOnly(property[i]);\n\t\t}\n\t} else {\n\t\tObject.defineProperty(this, property, {\n\t\t\t\"writable\" : false,\n\t\t\t\"enumerable\" : true,\n\t\t});\n\t}\n};\n\n/**\n *  Make an attribute writeable. Interal use only.\n *  @private\n *  @param  {String}  property  the property to make writable\n */\nTone.prototype._writable = function(property){\n\tif (Array.isArray(property)){\n\t\tfor (var i = 0; i < property.length; i++){\n\t\t\tthis._writable(property[i]);\n\t\t}\n\t} else {\n\t\tObject.defineProperty(this, property, {\n\t\t\t\"writable\" : true,\n\t\t});\n\t}\n};\n\n/**\n * Possible play states.\n * @enum {String}\n */\nTone.State = {\n\t\"Started\" : \"started\",\n\t\"Stopped\" : \"stopped\",\n\t\"Paused\" : \"paused\",\n};\n\n/**\n * A reference to the global context, `global` or `Tone.global.\n */\nTone.global = Tone.isUndef(global) ? window : global;\n\n///////////////////////////////////////////////////////////////////////////\n// CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Equal power gain scale. Good for cross-fading.\n *  @param  {NormalRange} percent (0-1)\n *  @return {Number}         output gain (0-1)\n *  @static\n *  @memberOf Tone\n */\nTone.equalPowerScale = function(percent){\n\tvar piFactor = 0.5 * Math.PI;\n\treturn Math.sin(percent * piFactor);\n};\n\n/**\n *  Convert decibels into gain.\n *  @param  {Decibels} db\n *  @return {Number}\n *  @static\n *  @memberOf Tone\n */\nTone.dbToGain = function(db){\n\treturn Math.pow(10, db / 20);\n};\n\n/**\n *  Convert gain to decibels.\n *  @param  {Number} gain (0-1)\n *  @return {Decibels}\n *  @static\n *  @memberOf Tone\n */\nTone.gainToDb = function(gain){\n\treturn 20 * (Math.log(gain) / Math.LN10);\n};\n\n/**\n *  Convert an interval (in semitones) to a frequency ratio.\n *  @param  {Interval} interval the number of semitones above the base note\n *  @return {Number}          the frequency ratio\n *  @static\n *  @memberOf Tone\n *  @example\n * tone.intervalToFrequencyRatio(0); // 1\n * tone.intervalToFrequencyRatio(12); // 2\n * tone.intervalToFrequencyRatio(-12); // 0.5\n */\nTone.intervalToFrequencyRatio = function(interval){\n\treturn Math.pow(2, (interval/12));\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tTIMING\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Return the current time of the AudioContext clock plus\n *  the lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @memberOf Tone#\n */\nTone.prototype.now = function(){\n\treturn Tone.context.now();\n};\n\n/**\n *  Return the current time of the AudioContext clock plus\n *  the lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @static\n *  @memberOf Tone\n */\nTone.now = function(){\n\treturn Tone.context.now();\n};\n\n/**\n *  Return the current time of the AudioContext clock without\n *  any lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @memberOf Tone#\n */\nTone.prototype.immediate = function(){\n\treturn Tone.context.currentTime;\n};\n\n/**\n *  Return the current time of the AudioContext clock without\n *  any lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @memberOf Tone\n */\nTone.immediate = function(){\n\treturn Tone.context.currentTime;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tINHERITANCE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  have a child inherit all of Tone's (or a parent's) prototype\n *  to inherit the parent's properties, make sure to call\n *  Parent.call(this) in the child's constructor\n *\n *  based on closure library's inherit function\n *\n *  @memberOf Tone\n *  @static\n *  @param  {Function} \tchild\n *  @param  {Function=} parent (optional) parent to inherit from\n *                             if no parent is supplied, the child\n *                             will inherit from Tone\n */\nTone.extend = function(child, parent){\n\tif (Tone.isUndef(parent)){\n\t\tparent = Tone;\n\t}\n\tfunction TempConstructor(){}\n\tTempConstructor.prototype = parent.prototype;\n\tchild.prototype = new TempConstructor();\n\t/** @override */\n\tchild.prototype.constructor = child;\n\tchild._super = parent;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tCONTEXT\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * The shared AudioContext\n * @type {Tone.Context}\n * @private\n */\nTone._audioContext = null;\n\n/**\n * \tMost browsers will not play _any_ audio until a user \n * \tclicks something (like a play button). Invoke this method\n * \ton a click or keypress event handler to start the audio context. \n * \tMore about the Autoplay policy [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n *  @memberOf Tone\n *  @static\n *  @return {Promise} This promise is resolved when the audio context is started. \n *  @example\n * document.querySelector('#playbutton').addEventListener('click', () => Tone.start())\n */\nTone.start = function(){\n\treturn Tone.context.resume();\n};\n\n/**\n *  A static pointer to the audio context accessible as Tone.context.\n *  @type {Tone.Context}\n *  @name context\n *  @memberOf Tone\n */\nObject.defineProperty(Tone, \"context\", {\n\t\"get\" : function(){\n\t\treturn Tone._audioContext;\n\t},\n\t\"set\" : function(context){\n\t\tif (context.isContext){\n\t\t\tTone._audioContext = context;\n\t\t} else {\n\t\t\tTone._audioContext = new Tone.Context(context);\n\t\t}\n\t\t//initialize the new audio context\n\t\tTone.Context.emit(\"init\", Tone._audioContext);\n\t}\n});\n\n/**\n *  The AudioContext\n *  @type {Tone.Context}\n *  @name context\n *  @memberOf Tone#\n *  @readOnly\n */\nObject.defineProperty(Tone.prototype, \"context\", {\n\t\"get\" : function(){\n\t\treturn Tone.context;\n\t}\n});\n\n/**\n *  Tone automatically creates a context on init, but if you are working\n *  with other libraries which also create an AudioContext, it can be\n *  useful to set your own. If you are going to set your own context,\n *  be sure to do it at the start of your code, before creating any objects.\n *  @static\n *  @param {AudioContext} ctx The new audio context to set\n */\nTone.setContext = function(ctx){\n\tTone.context = ctx;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tATTRIBUTES\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  The number of seconds of 1 processing block (128 samples)\n *  @type {Number}\n *  @name blockTime\n *  @memberOf Tone\n *  @static\n *  @readOnly\n */\nObject.defineProperty(Tone.prototype, \"blockTime\", {\n\t\"get\" : function(){\n\t\treturn 128 / this.context.sampleRate;\n\t}\n});\n\n/**\n *  The duration in seconds of one sample.\n *  @type {Number}\n *  @name sampleTime\n *  @memberOf Tone\n *  @static\n *  @readOnly\n */\nObject.defineProperty(Tone.prototype, \"sampleTime\", {\n\t\"get\" : function(){\n\t\treturn 1 / this.context.sampleRate;\n\t}\n});\n\n/**\n *  Whether or not all the technologies that Tone.js relies on are supported by the current browser.\n *  @type {Boolean}\n *  @name supported\n *  @memberOf Tone\n *  @readOnly\n *  @static\n */\nObject.defineProperty(Tone, \"supported\", {\n\t\"get\" : function(){\n\t\tvar hasAudioContext = Tone.global.hasOwnProperty(\"AudioContext\") || Tone.global.hasOwnProperty(\"webkitAudioContext\");\n\t\tvar hasPromises = Tone.global.hasOwnProperty(\"Promise\");\n\t\treturn hasAudioContext && hasPromises;\n\t}\n});\n\n/**\n *  Boolean value if the audio context has been initialized.\n *  @type {Boolean}\n *  @memberOf Tone\n *  @static\n *  @name initialized\n *  @readOnly\n */\nObject.defineProperty(Tone, \"initialized\", {\n\t\"get\" : function(){\n\t\treturn Boolean(Tone.context);\n\t}\n});\n\n/**\n *  Get the context when it becomes available\n *  @param  {Function}  resolve  Callback when the context is initialized\n *  @return  {Tone}\n */\nTone.getContext = function(resolve){\n\tif (Tone.initialized){\n\t\tresolve(Tone.context);\n\t} else {\n\t\tvar resCallback = function(){\n\t\t\tresolve(Tone.context);\n\t\t\tTone.Context.off(\"init\", resCallback);\n\t\t};\n\t\tTone.Context.on(\"init\", resCallback);\n\t}\n\treturn Tone;\n};\n\n/**\n * The version number\n * @type {String}\n * @static\n */\nTone.version = version;\n\nexport default Tone;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Tone.TimeBase is a flexible encoding of time\n *         which can be evaluated to and from a string.\n *  @extends {Tone}\n *  @param  {Time}  val    The time value as a number, string or object\n *  @param  {String=}  units  Unit values\n *  @example\n * Tone.TimeBase(4, \"n\")\n * Tone.TimeBase(2, \"t\")\n * Tone.TimeBase(\"2t\")\n * Tone.TimeBase({\"2t\" : 2})\n * Tone.TimeBase(\"2t\") + Tone.TimeBase(\"4n\");\n */\nTone.TimeBase = function(val, units){\n\n\t//allows it to be constructed with or without 'new'\n\tif (this instanceof Tone.TimeBase){\n\n\t\t/**\n\t\t *  The value\n\t\t *  @type  {Number|String|Tone.TimeBase}\n\t\t *  @private\n\t\t */\n\t\tthis._val = val;\n\n\t\t/**\n\t\t * The units\n\t\t * @type {String?}\n\t\t * @private\n\t\t */\n\t\tthis._units = units;\n\n\t\t//test if the value is a string representation of a number\n\t\tif (Tone.isUndef(this._units) && Tone.isString(this._val) &&\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tparseFloat(this._val) == this._val && this._val.charAt(0) !== \"+\"){\n\t\t\tthis._val = parseFloat(this._val);\n\t\t\tthis._units = this._defaultUnits;\n\t\t} else if (val && val.constructor === this.constructor){\n\t\t\t//if they're the same type, just copy values over\n\t\t\tthis._val = val._val;\n\t\t\tthis._units = val._units;\n\t\t} else if (val instanceof Tone.TimeBase){\n\t\t\tswitch (this._defaultUnits){\n\t\t\t\tcase \"s\" :\n\t\t\t\t\tthis._val = val.toSeconds();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"i\" :\n\t\t\t\t\tthis._val = val.toTicks();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"hz\" :\n\t\t\t\t\tthis._val = val.toFrequency();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"midi\" :\n\t\t\t\t\tthis._val = val.toMidi();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault :\n\t\t\t\t\tthrow new Error(\"Unrecognized default units \"+this._defaultUnits);\n\t\t\t}\n\t\t}\n\n\t} else {\n\n\t\treturn new Tone.TimeBase(val, units);\n\t}\n};\n\nTone.extend(Tone.TimeBase);\n\n///////////////////////////////////////////////////////////////////////////\n//\tABSTRACT SYNTAX TREE PARSER\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  All the primary expressions.\n *  @private\n *  @type  {Object}\n */\nTone.TimeBase.prototype._expressions = {\n\t\"n\" : {\n\t\tregexp : /^(\\d+)n(\\.?)$/i,\n\t\tmethod : function(value, dot){\n\t\t\tvalue = parseInt(value);\n\t\t\tvar scalar = dot === \".\" ? 1.5 : 1;\n\t\t\tif (value === 1){\n\t\t\t\treturn this._beatsToUnits(this._getTimeSignature())*scalar;\n\t\t\t} else {\n\t\t\t\treturn this._beatsToUnits(4 / value)*scalar;\n\t\t\t}\n\t\t}\n\t},\n\t\"t\" : {\n\t\tregexp : /^(\\d+)t$/i,\n\t\tmethod : function(value){\n\t\t\tvalue = parseInt(value);\n\t\t\treturn this._beatsToUnits(8 / (parseInt(value) * 3));\n\t\t}\n\t},\n\t\"m\" : {\n\t\tregexp : /^(\\d+)m$/i,\n\t\tmethod : function(value){\n\t\t\treturn this._beatsToUnits(parseInt(value) * this._getTimeSignature());\n\t\t}\n\t},\n\t\"i\" : {\n\t\tregexp : /^(\\d+)i$/i,\n\t\tmethod : function(value){\n\t\t\treturn this._ticksToUnits(parseInt(value));\n\t\t}\n\t},\n\t\"hz\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?)hz$/i,\n\t\tmethod : function(value){\n\t\t\treturn this._frequencyToUnits(parseFloat(value));\n\t\t}\n\t},\n\t\"tr\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n\t\tmethod : function(m, q, s){\n\t\t\tvar total = 0;\n\t\t\tif (m && m !== \"0\"){\n\t\t\t\ttotal += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t}\n\t\t\tif (q && q !== \"0\"){\n\t\t\t\ttotal += this._beatsToUnits(parseFloat(q));\n\t\t\t}\n\t\t\tif (s && s !== \"0\"){\n\t\t\t\ttotal += this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t}\n\t\t\treturn total;\n\t\t}\n\t},\n\t\"s\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?)s$/,\n\t\tmethod : function(value){\n\t\t\treturn this._secondsToUnits(parseFloat(value));\n\t\t}\n\t},\n\t\"samples\" : {\n\t\tregexp : /^(\\d+)samples$/,\n\t\tmethod : function(value){\n\t\t\treturn parseInt(value) / this.context.sampleRate;\n\t\t}\n\t},\n\t\"default\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?)$/,\n\t\tmethod : function(value){\n\t\t\treturn this._expressions[this._defaultUnits].method.call(this, value);\n\t\t}\n\t}\n};\n\n/**\n *  The default units if none are given.\n *  @type {String}\n *  @private\n */\nTone.TimeBase.prototype._defaultUnits = \"s\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tTRANSPORT FALLBACKS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * Return the bpm, or 120 if Transport is not available\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._getBpm = function(){\n\tif (Tone.Transport){\n\t\treturn Tone.Transport.bpm.value;\n\t} else {\n\t\treturn 120;\n\t}\n};\n\n/**\n * Return the timeSignature or 4 if Transport is not available\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._getTimeSignature = function(){\n\tif (Tone.Transport){\n\t\treturn Tone.Transport.timeSignature;\n\t} else {\n\t\treturn 4;\n\t}\n};\n\n/**\n * Return the PPQ or 192 if Transport is not available\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._getPPQ = function(){\n\tif (Tone.Transport){\n\t\treturn Tone.Transport.PPQ;\n\t} else {\n\t\treturn 192;\n\t}\n};\n\n/**\n * Return the current time in whichever context is relevant\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._now = function(){\n\treturn this.now();\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tUNIT CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Returns the value of a frequency in the current units\n *  @param {Frequency} freq\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._frequencyToUnits = function(freq){\n\treturn 1/freq;\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._beatsToUnits = function(beats){\n\treturn (60 / this._getBpm()) * beats;\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._secondsToUnits = function(seconds){\n\treturn seconds;\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._ticksToUnits = function(ticks){\n\treturn ticks * (this._beatsToUnits(1) / this._getPPQ());\n};\n\n/**\n * With no arguments, return 'now'\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._noArg = function(){\n\treturn this._now();\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tEXPRESSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Evaluate the time value. Returns the time\n *  in seconds.\n *  @return  {Seconds}\n */\nTone.TimeBase.prototype.valueOf = function(){\n\tif (Tone.isUndef(this._val)){\n\t\treturn this._noArg();\n\t} else if (Tone.isString(this._val) && Tone.isUndef(this._units)){\n\t\tfor (var units in this._expressions){\n\t\t\tif (this._expressions[units].regexp.test(this._val.trim())){\n\t\t\t\tthis._units = units;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else if (Tone.isObject(this._val)){\n\t\tvar total = 0;\n\t\tfor (var typeName in this._val){\n\t\t\tvar quantity = this._val[typeName];\n\t\t\tvar time = (new this.constructor(typeName)).valueOf() * quantity;\n\t\t\ttotal += time;\n\t\t}\n\t\treturn total;\n\t}\n\tif (Tone.isDefined(this._units)){\n\t\tvar expr = this._expressions[this._units];\n\t\tvar matching = this._val.toString().trim().match(expr.regexp);\n\t\tif (matching){\n\t\t\treturn expr.method.apply(this, matching.slice(1));\n\t\t} else {\n\t\t\treturn expr.method.call(this, parseFloat(this._val));\n\t\t}\n\t} else {\n\t\treturn this._val;\n\t}\n};\n\n/**\n *  Return the value in seconds\n *  @return {Seconds}\n */\nTone.TimeBase.prototype.toSeconds = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the value in hertz\n *  @return {Frequency}\n */\nTone.TimeBase.prototype.toFrequency = function(){\n\treturn 1 / this.toSeconds();\n};\n\n/**\n *  Return the time in samples\n *  @return  {Samples}\n */\nTone.TimeBase.prototype.toSamples = function(){\n\treturn this.toSeconds() * this.context.sampleRate;\n};\n\n/**\n *  Return the time in milliseconds.\n *  @return  {Milliseconds}\n */\nTone.TimeBase.prototype.toMilliseconds = function(){\n\treturn this.toSeconds() * 1000;\n};\n\n/**\n *  Clean up\n *  @return {Tone.TimeBase} this\n */\nTone.TimeBase.prototype.dispose = function(){\n\tthis._val = null;\n\tthis._units = null;\n};\n\nexport default Tone.TimeBase;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/TimeBase\";\n\n/**\n *  @class Tone.Frequency is a primitive type for encoding Frequency values.\n *         Eventually all time values are evaluated to hertz\n *         using the `eval` method.\n *  @constructor\n *  @extends {Tone.TimeBase}\n *  @param  {String|Number}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * Tone.Frequency(\"C3\") // 261\n * Tone.Frequency(38, \"midi\") //\n * Tone.Frequency(\"C3\").transpose(4);\n */\nTone.Frequency = function(val, units){\n\tif (this instanceof Tone.Frequency){\n\n\t\tTone.TimeBase.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Frequency(val, units);\n\t}\n};\n\nTone.extend(Tone.Frequency, Tone.TimeBase);\n\n///////////////////////////////////////////////////////////////////////////\n//\tAUGMENT BASE EXPRESSIONS\n///////////////////////////////////////////////////////////////////////////\n\nTone.Frequency.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {\n\t\"midi\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?midi)/,\n\t\tmethod : function(value){\n\t\t\tif (this._defaultUnits === \"midi\"){\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn Tone.Frequency.mtof(value);\n\t\t\t}\n\t\t}\n\t},\n\t\"note\" : {\n\t\tregexp : /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t\tmethod : function(pitch, octave){\n\t\t\tvar index = noteToScaleIndex[pitch.toLowerCase()];\n\t\t\tvar noteNumber = index + (parseInt(octave) + 1) * 12;\n\t\t\tif (this._defaultUnits === \"midi\"){\n\t\t\t\treturn noteNumber;\n\t\t\t} else {\n\t\t\t\treturn Tone.Frequency.mtof(noteNumber);\n\t\t\t}\n\t\t}\n\t},\n\t\"tr\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\tmethod : function(m, q, s){\n\t\t\tvar total = 1;\n\t\t\tif (m && m !== \"0\"){\n\t\t\t\ttotal *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t}\n\t\t\tif (q && q !== \"0\"){\n\t\t\t\ttotal *= this._beatsToUnits(parseFloat(q));\n\t\t\t}\n\t\t\tif (s && s !== \"0\"){\n\t\t\t\ttotal *= this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t}\n\t\t\treturn total;\n\t\t}\n\t}\n});\n\n///////////////////////////////////////////////////////////////////////////\n//\tEXPRESSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Transposes the frequency by the given number of semitones.\n *  @param  {Interval}  interval\n *  @return  {Tone.Frequency} A new transposed frequency\n *  @example\n * Tone.Frequency(\"A4\").transpose(3); //\"C5\"\n */\nTone.Frequency.prototype.transpose = function(interval){\n\treturn new this.constructor(this.valueOf() * Tone.intervalToFrequencyRatio(interval));\n};\n\n/**\n *  Takes an array of semitone intervals and returns\n *  an array of frequencies transposed by those intervals.\n *  @param  {Array}  intervals\n *  @return  {Array<Tone.Frequency>} Returns an array of Frequencies\n *  @example\n * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n */\nTone.Frequency.prototype.harmonize = function(intervals){\n\treturn intervals.map(function(interval){\n\t\treturn this.transpose(interval);\n\t}.bind(this));\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tUNIT CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Return the value of the frequency as a MIDI note\n *  @return  {MIDI}\n *  @example\n * Tone.Frequency(\"C4\").toMidi(); //60\n */\nTone.Frequency.prototype.toMidi = function(){\n\treturn Tone.Frequency.ftom(this.valueOf());\n};\n\n/**\n *  Return the value of the frequency in Scientific Pitch Notation\n *  @return  {Note}\n *  @example\n * Tone.Frequency(69, \"midi\").toNote(); //\"A4\"\n */\nTone.Frequency.prototype.toNote = function(){\n\tvar freq = this.toFrequency();\n\tvar log = Math.log2(freq / Tone.Frequency.A4);\n\tvar noteNumber = Math.round(12 * log) + 57;\n\tvar octave = Math.floor(noteNumber/12);\n\tif (octave < 0){\n\t\tnoteNumber += -12 * octave;\n\t}\n\tvar noteName = scaleIndexToNote[noteNumber % 12];\n\treturn noteName + octave.toString();\n};\n\n/**\n *  Return the duration of one cycle in seconds.\n *  @return  {Seconds}\n */\nTone.Frequency.prototype.toSeconds = function(){\n\treturn 1 / Tone.TimeBase.prototype.toSeconds.call(this);\n};\n\n/**\n *  Return the value in Hertz\n *  @return  {Frequency}\n */\nTone.Frequency.prototype.toFrequency = function(){\n\treturn Tone.TimeBase.prototype.toFrequency.call(this);\n};\n\n/**\n *  Return the duration of one cycle in ticks\n *  @return  {Ticks}\n */\nTone.Frequency.prototype.toTicks = function(){\n\tvar quarterTime = this._beatsToUnits(1);\n\tvar quarters = this.valueOf() / quarterTime;\n\treturn Math.floor(quarters * Tone.Transport.PPQ);\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tUNIT CONVERSIONS HELPERS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  With no arguments, return 0\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._noArg = function(){\n\treturn 0;\n};\n\n/**\n *  Returns the value of a frequency in the current units\n *  @param {Frequency} freq\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._frequencyToUnits = function(freq){\n\treturn freq;\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._ticksToUnits = function(ticks){\n\treturn 1 / ((ticks * 60) / (Tone.Transport.bpm.value * Tone.Transport.PPQ));\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._beatsToUnits = function(beats){\n\treturn 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._secondsToUnits = function(seconds){\n\treturn 1 / seconds;\n};\n\n/**\n *  The default units if none are given.\n *  @private\n */\nTone.Frequency.prototype._defaultUnits = \"hz\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tFREQUENCY CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Note to scale index\n *  @type  {Object}\n *  @private\n */\nvar noteToScaleIndex = {\n\t\"cbb\" : -2, \"cb\" : -1, \"c\" : 0, \"c#\" : 1, \"cx\" : 2,\n\t\"dbb\" : 0, \"db\" : 1, \"d\" : 2, \"d#\" : 3, \"dx\" : 4,\n\t\"ebb\" : 2, \"eb\" : 3, \"e\" : 4, \"e#\" : 5, \"ex\" : 6,\n\t\"fbb\" : 3, \"fb\" : 4, \"f\" : 5, \"f#\" : 6, \"fx\" : 7,\n\t\"gbb\" : 5, \"gb\" : 6, \"g\" : 7, \"g#\" : 8, \"gx\" : 9,\n\t\"abb\" : 7, \"ab\" : 8, \"a\" : 9, \"a#\" : 10, \"ax\" : 11,\n\t\"bbb\" : 9, \"bb\" : 10, \"b\" : 11, \"b#\" : 12, \"bx\" : 13,\n};\n\n/**\n *  scale index to note (sharps)\n *  @type  {Array}\n *  @private\n */\nvar scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n/**\n *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)\n *  A4's values in Hertz.\n *  @type {Frequency}\n *  @static\n */\nTone.Frequency.A4 = 440;\n\n/**\n *  Convert a MIDI note to frequency value.\n *  @param  {MIDI} midi The midi number to convert.\n *  @return {Frequency} the corresponding frequency value\n *  @static\n *  @example\n * Tone.Frequency.mtof(69); // returns 440\n */\nTone.Frequency.mtof = function(midi){\n\treturn Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);\n};\n\n/**\n *  Convert a frequency value to a MIDI note.\n *  @param {Frequency} frequency The value to frequency value to convert.\n *  @returns  {MIDI}\n *  @static\n *  @example\n * Tone.Frequency.ftom(440); // returns 69\n */\nTone.Frequency.ftom = function(frequency){\n\treturn 69 + Math.round(12 * Math.log2(frequency / Tone.Frequency.A4));\n};\n\nexport default Tone.Frequency;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/TimeBase\";\nimport \"../type/Frequency\";\n\n/**\n *  @class Tone.Time is a primitive type for encoding Time values.\n *         Tone.Time can be constructed with or without the `new` keyword. Tone.Time can be passed\n *         into the parameter of any method which takes time as an argument.\n *  @constructor\n *  @extends {Tone.TimeBase}\n *  @param  {String|Number|Object}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * var t = Tone.Time(\"4n\");//a quarter note\n */\nTone.Time = function(val, units){\n\tif (this instanceof Tone.Time){\n\n\t\tTone.TimeBase.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Time(val, units);\n\t}\n};\n\nTone.extend(Tone.Time, Tone.TimeBase);\n\n/**\n * Extend the base expressions\n */\nTone.Time.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {\n\t\"quantize\" : {\n\t\tregexp : /^@(.+)/,\n\t\tmethod : function(capture){\n\t\t\tif (Tone.Transport){\n\t\t\t\tvar quantTo = new this.constructor(capture);\n\t\t\t\treturn this._secondsToUnits(Tone.Transport.nextSubdivision(quantTo));\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t},\n\t\"now\" : {\n\t\tregexp : /^\\+(.+)/,\n\t\tmethod : function(capture){\n\t\t\treturn this._now() + (new this.constructor(capture));\n\t\t}\n\t}\n});\n\n/**\n *  Quantize the time by the given subdivision. Optionally add a\n *  percentage which will move the time value towards the ideal\n *  quantized value by that percentage.\n *  @param  {Number|Time}  val    The subdivision to quantize to\n *  @param  {NormalRange}  [percent=1]  Move the time value\n *                                   towards the quantized value by\n *                                   a percentage.\n *  @return  {Number}  this\n *  @example\n * Tone.Time(21).quantize(2) //returns 22\n * Tone.Time(0.6).quantize(\"4n\", 0.5) //returns 0.55\n */\nTone.Time.prototype.quantize = function(subdiv, percent){\n\tpercent = Tone.defaultArg(percent, 1);\n\tvar subdivision = new this.constructor(subdiv);\n\tvar value = this.valueOf();\n\tvar multiple = Math.round(value / subdivision);\n\tvar ideal = multiple * subdivision;\n\tvar diff = ideal - value;\n\treturn value + diff * percent;\n};\n\n///////////////////////////////////////////////////////////////////////////\n// CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Convert a Time to Notation. The notation values are will be the\n *  closest representation between 1m to 128th note.\n *  @return {Notation}\n *  @example\n * //if the Transport is at 120bpm:\n * Tone.Time(2).toNotation();//returns \"1m\"\n */\nTone.Time.prototype.toNotation = function(){\n\tvar time = this.toSeconds();\n\tvar testNotations = [\"1m\"];\n\tfor (var power = 1; power < 8; power++){\n\t\tvar subdiv = Math.pow(2, power);\n\t\ttestNotations.push(subdiv + \"n.\");\n\t\ttestNotations.push(subdiv + \"n\");\n\t\ttestNotations.push(subdiv + \"t\");\n\t}\n\ttestNotations.push(\"0\");\n\t//find the closets notation representation\n\tvar closest = testNotations[0];\n\tvar closestSeconds = Tone.Time(testNotations[0]).toSeconds();\n\ttestNotations.forEach(function(notation){\n\t\tvar notationSeconds = Tone.Time(notation).toSeconds();\n\t\tif (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)){\n\t\t\tclosest = notation;\n\t\t\tclosestSeconds = notationSeconds;\n\t\t}\n\t});\n\treturn closest;\n};\n\n/**\n *  Return the time encoded as Bars:Beats:Sixteenths.\n *  @return  {BarsBeatsSixteenths}\n */\nTone.Time.prototype.toBarsBeatsSixteenths = function(){\n\tvar quarterTime = this._beatsToUnits(1);\n\tvar quarters = this.valueOf() / quarterTime;\n\tquarters = parseFloat(quarters.toFixed(4));\n\tvar measures = Math.floor(quarters / this._getTimeSignature());\n\tvar sixteenths = (quarters % 1) * 4;\n\tquarters = Math.floor(quarters) % this._getTimeSignature();\n\tsixteenths = sixteenths.toString();\n\tif (sixteenths.length > 3){\n\t\t// the additional parseFloat removes insignificant trailing zeroes\n\t\tsixteenths = parseFloat(parseFloat(sixteenths).toFixed(3));\n\t}\n\tvar progress = [measures, quarters, sixteenths];\n\treturn progress.join(\":\");\n};\n\n/**\n *  Return the time in ticks.\n *  @return  {Ticks}\n */\nTone.Time.prototype.toTicks = function(){\n\tvar quarterTime = this._beatsToUnits(1);\n\tvar quarters = this.valueOf() / quarterTime;\n\treturn Math.round(quarters * this._getPPQ());\n};\n\n/**\n *  Return the time in seconds.\n *  @return  {Seconds}\n */\nTone.Time.prototype.toSeconds = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the value as a midi note.\n *  @return  {Midi}\n */\nTone.Time.prototype.toMidi = function(){\n\treturn Tone.Frequency.ftom(this.toFrequency());\n};\n\nexport default Tone.Time;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Time\";\n\n/**\n *  @class Tone.TransportTime is a the time along the Transport's\n *         timeline. It is similar to Tone.Time, but instead of evaluating\n *         against the AudioContext's clock, it is evaluated against\n *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n *  @constructor\n *  @param  {Time}  val    The time value as a number or string\n *  @param  {String=}  units  Unit values\n *  @extends {Tone.Time}\n */\nTone.TransportTime = function(val, units){\n\tif (this instanceof Tone.TransportTime){\n\n\t\tTone.Time.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.TransportTime(val, units);\n\t}\n};\n\nTone.extend(Tone.TransportTime, Tone.Time);\n\n/**\n * Return the current time in whichever context is relevant\n * @type {Number}\n * @private\n */\nTone.TransportTime.prototype._now = function(){\n\treturn Tone.Transport.seconds;\n};\n\nexport default Tone.TransportTime;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Tone.Emitter gives classes which extend it\n *         the ability to listen for and emit events.\n *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n *         MIT (c) 2011 Jerome Etienne.\n *\n *  @extends {Tone}\n */\nTone.Emitter = function(){\n\tTone.call(this);\n\t/**\n\t *  Contains all of the events.\n\t *  @private\n\t *  @type  {Object}\n\t */\n\tthis._events = {};\n};\n\nTone.extend(Tone.Emitter);\n\n/**\n *  Bind a callback to a specific event.\n *  @param  {String}    event     The name of the event to listen for.\n *  @param  {Function}  callback  The callback to invoke when the\n *                                event is emitted\n *  @return  {Tone.Emitter}    this\n */\nTone.Emitter.prototype.on = function(event, callback){\n\t//split the event\n\tvar events = event.split(/\\W+/);\n\tfor (var i = 0; i < events.length; i++){\n\t\tvar eventName = events[i];\n\t\tif (!this._events.hasOwnProperty(eventName)){\n\t\t\tthis._events[eventName] = [];\n\t\t}\n\t\tthis._events[eventName].push(callback);\n\t}\n\treturn this;\n};\n\n/**\n *  Bind a callback which is only invoked once\n *  @param  {String}    event     The name of the event to listen for.\n *  @param  {Function}  callback  The callback to invoke when the\n *                                event is emitted\n *  @return  {Tone.Emitter}    this\n */\nTone.Emitter.prototype.once = function(event, callback){\n\tvar boundCallback = function(){\n\t\t//invoke the callback\n\t\tcallback.apply(this, arguments);\n\t\tthis.off(event, boundCallback);\n\t}.bind(this);\n\tthis.on(event, boundCallback);\n\treturn this;\n};\n\n/**\n *  Remove the event listener.\n *  @param  {String}    event     The event to stop listening to.\n *  @param  {Function=}  callback  The callback which was bound to\n *                                the event with Tone.Emitter.on.\n *                                If no callback is given, all callbacks\n *                                events are removed.\n *  @return  {Tone.Emitter}    this\n */\nTone.Emitter.prototype.off = function(event, callback){\n\tvar events = event.split(/\\W+/);\n\tfor (var ev = 0; ev < events.length; ev++){\n\t\tevent = events[ev];\n\t\tif (this._events.hasOwnProperty(event)){\n\t\t\tif (Tone.isUndef(callback)){\n\t\t\t\tthis._events[event] = [];\n\t\t\t} else {\n\t\t\t\tvar eventList = this._events[event];\n\t\t\t\tfor (var i = 0; i < eventList.length; i++){\n\t\t\t\t\tif (eventList[i] === callback){\n\t\t\t\t\t\teventList.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Invoke all of the callbacks bound to the event\n *  with any arguments passed in.\n *  @param  {String}  event  The name of the event.\n *  @param {...*} args The arguments to pass to the functions listening.\n *  @return  {Tone.Emitter}  this\n */\nTone.Emitter.prototype.emit = function(event){\n\tif (this._events){\n\t\tvar args = Array.apply(null, arguments).slice(1);\n\t\tif (this._events.hasOwnProperty(event)){\n\t\t\tvar eventList = this._events[event].slice(0);\n\t\t\tfor (var i = 0, len = eventList.length; i < len; i++){\n\t\t\t\teventList[i].apply(this, args);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Add Emitter functions (on/off/emit) to the object\n *  @param  {Object|Function}  object  The object or class to extend.\n *  @returns {Tone.Emitter}\n */\nTone.Emitter.mixin = function(object){\n\tvar functions = [\"on\", \"once\", \"off\", \"emit\"];\n\tobject._events = {};\n\tfor (var i = 0; i < functions.length; i++){\n\t\tvar func = functions[i];\n\t\tvar emitterFunc = Tone.Emitter.prototype[func];\n\t\tobject[func] = emitterFunc;\n\t}\n\treturn Tone.Emitter;\n};\n\n/**\n *  Clean up\n *  @return  {Tone.Emitter}  this\n */\nTone.Emitter.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis._events = null;\n\treturn this;\n};\n\nexport default Tone.Emitter;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class A Timeline class for scheduling and maintaining state\n *         along a timeline. All events must have a \"time\" property.\n *         Internally, events are stored in time order for fast\n *         retrieval.\n *  @extends {Tone}\n *  @param {Positive} [memory=Infinity] The number of previous events that are retained.\n */\nTone.Timeline = function(){\n\n\tvar options = Tone.defaults(arguments, [\"memory\"], Tone.Timeline);\n\tTone.call(this);\n\n\t/**\n\t *  The array of scheduled timeline events\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._timeline = [];\n\n\t/**\n\t *  The memory of the timeline, i.e.\n\t *  how many events in the past it will retain\n\t *  @type {Positive}\n\t */\n\tthis.memory = options.memory;\n};\n\nTone.extend(Tone.Timeline);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n */\nTone.Timeline.defaults = {\n\t\"memory\" : Infinity\n};\n\n/**\n *  The number of items in the timeline.\n *  @type {Number}\n *  @memberOf Tone.Timeline#\n *  @name length\n *  @readOnly\n */\nObject.defineProperty(Tone.Timeline.prototype, \"length\", {\n\tget : function(){\n\t\treturn this._timeline.length;\n\t}\n});\n\n/**\n *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n *  @param  {Object}  event  The event object to insert into the\n *                           timeline.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.add = function(event){\n\t//the event needs to have a time attribute\n\tif (Tone.isUndef(event.time)){\n\t\tthrow new Error(\"Tone.Timeline: events must have a time attribute\");\n\t}\n\tevent.time = event.time.valueOf();\n\tvar index = this._search(event.time);\n\tthis._timeline.splice(index + 1, 0, event);\n\t//if the length is more than the memory, remove the previous ones\n\tif (this.length > this.memory){\n\t\tvar diff = this.length - this.memory;\n\t\tthis._timeline.splice(0, diff);\n\t}\n\treturn this;\n};\n\n/**\n *  Remove an event from the timeline.\n *  @param  {Object}  event  The event object to remove from the list.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.remove = function(event){\n\tvar index = this._timeline.indexOf(event);\n\tif (index !== -1){\n\t\tthis._timeline.splice(index, 1);\n\t}\n\treturn this;\n};\n\n/**\n *  Get the nearest event whose time is less than or equal to the given time.\n *  @param  {Number}  time  The time to query.\n *  @param  {String}  comparator Which value in the object to compare\n *  @returns {Object} The event object set after that time.\n */\nTone.Timeline.prototype.get = function(time, comparator){\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar index = this._search(time, comparator);\n\tif (index !== -1){\n\t\treturn this._timeline[index];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Return the first event in the timeline without removing it\n *  @returns {Object} The first event object\n */\nTone.Timeline.prototype.peek = function(){\n\treturn this._timeline[0];\n};\n\n/**\n *  Return the first event in the timeline and remove it\n *  @returns {Object} The first event object\n */\nTone.Timeline.prototype.shift = function(){\n\treturn this._timeline.shift();\n};\n\n/**\n *  Get the event which is scheduled after the given time.\n *  @param  {Number}  time  The time to query.\n *  @param  {String}  comparator Which value in the object to compare\n *  @returns {Object} The event object after the given time\n */\nTone.Timeline.prototype.getAfter = function(time, comparator){\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar index = this._search(time, comparator);\n\tif (index + 1 < this._timeline.length){\n\t\treturn this._timeline[index + 1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Get the event before the event at the given time.\n *  @param  {Number}  time  The time to query.\n *  @param  {String}  comparator Which value in the object to compare\n *  @returns {Object} The event object before the given time\n */\nTone.Timeline.prototype.getBefore = function(time, comparator){\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar len = this._timeline.length;\n\t//if it's after the last item, return the last item\n\tif (len > 0 && this._timeline[len - 1][comparator] < time){\n\t\treturn this._timeline[len - 1];\n\t}\n\tvar index = this._search(time, comparator);\n\tif (index - 1 >= 0){\n\t\treturn this._timeline[index - 1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Cancel events after the given time\n *  @param  {Number}  time  The time to query.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.cancel = function(after){\n\tif (this._timeline.length > 1){\n\t\tvar index = this._search(after);\n\t\tif (index >= 0){\n\t\t\tif (this._timeline[index].time === after){\n\t\t\t\t//get the first item with that time\n\t\t\t\tfor (var i = index; i >= 0; i--){\n\t\t\t\t\tif (this._timeline[i].time === after){\n\t\t\t\t\t\tindex = i;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._timeline = this._timeline.slice(0, index);\n\t\t\t} else {\n\t\t\t\tthis._timeline = this._timeline.slice(0, index + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._timeline = [];\n\t\t}\n\t} else if (this._timeline.length === 1){\n\t\t//the first item's time\n\t\tif (this._timeline[0].time >= after){\n\t\t\tthis._timeline = [];\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel events before or equal to the given time.\n *  @param  {Number}  time  The time to cancel before.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.cancelBefore = function(time){\n\tvar index = this._search(time);\n\tif (index >= 0){\n\t\tthis._timeline = this._timeline.slice(index + 1);\n\t}\n\treturn this;\n};\n\n/**\n * Returns the previous event if there is one. null otherwise\n * @param  {Object} event The event to find the previous one of\n * @return {Object}       The event right before the given event\n */\nTone.Timeline.prototype.previousEvent = function(event){\n\tvar index = this._timeline.indexOf(event);\n\tif (index > 0){\n\t\treturn this._timeline[index-1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Does a binary search on the timeline array and returns the\n *  nearest event index whose time is after or equal to the given time.\n *  If a time is searched before the first index in the timeline, -1 is returned.\n *  If the time is after the end, the index of the last item is returned.\n *  @param  {Number}  time\n *  @param  {String}  comparator Which value in the object to compare\n *  @return  {Number} the index in the timeline array\n *  @private\n */\nTone.Timeline.prototype._search = function(time, comparator){\n\tif (this._timeline.length === 0){\n\t\treturn -1;\n\t}\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar beginning = 0;\n\tvar len = this._timeline.length;\n\tvar end = len;\n\tif (len > 0 && this._timeline[len - 1][comparator] <= time){\n\t\treturn len - 1;\n\t}\n\twhile (beginning < end){\n\t\t// calculate the midpoint for roughly equal partition\n\t\tvar midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t\tvar event = this._timeline[midPoint];\n\t\tvar nextEvent = this._timeline[midPoint + 1];\n\t\tif (event[comparator] === time){\n\t\t\t//choose the last one that has the same time\n\t\t\tfor (var i = midPoint; i < this._timeline.length; i++){\n\t\t\t\tvar testEvent = this._timeline[i];\n\t\t\t\tif (testEvent[comparator] === time){\n\t\t\t\t\tmidPoint = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn midPoint;\n\t\t} else if (event[comparator] < time && nextEvent[comparator] > time){\n\t\t\treturn midPoint;\n\t\t} else if (event[comparator] > time){\n\t\t\t//search lower\n\t\t\tend = midPoint;\n\t\t} else {\n\t\t\t//search upper\n\t\t\tbeginning = midPoint + 1;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/**\n *  Internal iterator. Applies extra safety checks for\n *  removing items from the array.\n *  @param  {Function}  callback\n *  @param  {Number=}    lowerBound\n *  @param  {Number=}    upperBound\n *  @private\n */\nTone.Timeline.prototype._iterate = function(callback, lowerBound, upperBound){\n\tlowerBound = Tone.defaultArg(lowerBound, 0);\n\tupperBound = Tone.defaultArg(upperBound, this._timeline.length-1);\n\tthis._timeline.slice(lowerBound, upperBound+1).forEach(function(event){\n\t\tcallback.call(this, event);\n\t}.bind(this));\n};\n\n/**\n *  Iterate over everything in the array\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEach = function(callback){\n\tthis._iterate(callback);\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array at or before the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachBefore = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar upperBound = this._search(time);\n\tif (upperBound !== -1){\n\t\tthis._iterate(callback, 0, upperBound);\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array after the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachAfter = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar lowerBound = this._search(time);\n\tthis._iterate(callback, lowerBound + 1);\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array between the startTime and endTime. \n *  The timerange is inclusive of the startTime, but exclusive of the endTime. \n *  range = [startTime, endTime). \n *  @param  {Number}  startTime The time to check if items are before\n *  @param  {Number}  endTime The end of the test interval. \n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachBetween = function(startTime, endTime, callback){\n\tvar lowerBound = this._search(startTime);\n\tvar upperBound = this._search(endTime);\n\tif (lowerBound !== -1 && upperBound !== -1){\n\t\tif (this._timeline[lowerBound].time !== startTime){\n\t\t\tlowerBound += 1;\n\t\t}\n\t\t//exclusive of the end time\n\t\tif (this._timeline[upperBound].time === endTime){\n\t\t\tupperBound -= 1;\n\t\t}\n\t\tthis._iterate(callback, lowerBound, upperBound);\n\t} else if (lowerBound === -1){\n\t\tthis._iterate(callback, 0, upperBound);\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array at or after the given time. Similar to\n *  forEachAfter, but includes the item(s) at the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachFrom = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar lowerBound = this._search(time);\n\t//work backwards until the event time is less than time\n\twhile (lowerBound >= 0 && this._timeline[lowerBound].time >= time){\n\t\tlowerBound--;\n\t}\n\tthis._iterate(callback, lowerBound + 1);\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array at the given time\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachAtTime = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar upperBound = this._search(time);\n\tif (upperBound !== -1){\n\t\tthis._iterate(function(event){\n\t\t\tif (event.time === time){\n\t\t\t\tcallback.call(this, event);\n\t\t\t}\n\t\t}, 0, upperBound);\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Timeline}  this\n */\nTone.Timeline.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis._timeline = null;\n\treturn this;\n};\n\nexport default Tone.Timeline;\n\n","import Tone from \"../core/Tone\";\nif (Tone.supported){\n\n\tif (!Tone.global.hasOwnProperty(\"OfflineAudioContext\") && Tone.global.hasOwnProperty(\"webkitOfflineAudioContext\")){\n\t\tTone.global.OfflineAudioContext = Tone.global.webkitOfflineAudioContext;\n\t}\n\n\t//returns promise?\n\tvar context = new OfflineAudioContext(1, 1, 44100);\n\tvar ret = context.startRendering();\n\tif (!(ret && Tone.isFunction(ret.then))){\n\t\tOfflineAudioContext.prototype._native_startRendering = OfflineAudioContext.prototype.startRendering;\n\t\tOfflineAudioContext.prototype.startRendering = function(){\n\t\t\treturn new Promise(function(done){\n\t\t\t\tthis.oncomplete = function(e){\n\t\t\t\t\tdone(e.renderedBuffer);\n\t\t\t\t};\n\t\t\t\tthis._native_startRendering();\n\t\t\t}.bind(this));\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/OfflineAudioContext\";\n\nif (Tone.supported){\n\tif (!Tone.global.hasOwnProperty(\"AudioContext\") && Tone.global.hasOwnProperty(\"webkitAudioContext\")){\n\t\tTone.global.AudioContext = Tone.global.webkitAudioContext;\n\t}\n\n\t//not functionally equivalent, but only an API placeholder\n\tif (!AudioContext.prototype.close){\n\t\tAudioContext.prototype.close = function(){\n\t\t\tif (Tone.isFunction(this.suspend)){\n\t\t\t\tthis.suspend();\n\t\t\t}\n\t\t\treturn Promise.resolve();\n\t\t};\n\t}\n\n\t//not functionally equivalent\n\tif (!AudioContext.prototype.resume){\n\t\tAudioContext.prototype.resume = function(){\n\t\t\t//play some silent audio to jumpstart the context\n\t\t\tvar buffer = this.createBuffer(1, 1, this.sampleRate);\n\t\t\tvar source = this.createBufferSource();\n\t\t\tsource.buffer = buffer;\n\t\t\tsource.connect(this.destination);\n\t\t\tsource.start(0);\n\t\t\treturn Promise.resolve();\n\t\t};\n\t}\n\n\t//createGain\n\tif (!AudioContext.prototype.createGain && AudioContext.prototype.createGainNode){\n\t\tAudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t}\n\n\t//createDelay\n\tif (!AudioContext.prototype.createDelay && AudioContext.prototype.createDelayNode){\n\t\tAudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t}\n\n\t//test decodeAudioData returns a promise\n\t// https://github.com/mohayonao/web-audio-api-shim/blob/master/src/AudioContext.js\n\t// MIT License (c) 2015 @mohayonao\n\tvar decodeAudioDataPromise = false;\n\tvar offlineContext = new OfflineAudioContext(1, 1, 44100);\n\tvar audioData = new Uint32Array([1179011410, 48, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 8, 0, 0, 0, 0]).buffer;\n\ttry {\n\t\tvar ret = offlineContext.decodeAudioData(audioData);\n\t\tif (ret && Tone.isFunction(ret.then)){\n\t\t\tdecodeAudioDataPromise = true;\n\t\t}\n\t} catch (e){\n\t\tdecodeAudioDataPromise = false;\n\t}\n\n\tif (!decodeAudioDataPromise){\n\t\tAudioContext.prototype._native_decodeAudioData = AudioContext.prototype.decodeAudioData;\n\t\tAudioContext.prototype.decodeAudioData = function(audioData){\n\t\t\treturn new Promise(function(success, error){\n\t\t\t\tthis._native_decodeAudioData(audioData, success, error);\n\t\t\t}.bind(this));\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Emitter\";\nimport \"../core/Timeline\";\nimport \"../shim/AudioContext\";\n\nvar AudioContextProperties = [\"baseLatency\", \"destination\", \"currentTime\", \"sampleRate\", \"listener\", \"state\"];\nvar AudioContextMethods = [\"suspend\", \"close\", \"resume\", \"getOutputTimestamp\", \"createMediaElementSource\", \"createMediaStreamSource\", \"createMediaStreamDestination\", \"createBuffer\", \"decodeAudioData\", \"createBufferSource\", \"createConstantSource\", \"createGain\", \"createDelay\", \"createBiquadFilter\", \"createIIRFilter\", \"createWaveShaper\", \"createPanner\", \"createConvolver\", \"createDynamicsCompressor\", \"createAnalyser\", \"createScriptProcessor\", \"createStereoPanner\", \"createOscillator\", \"createPeriodicWave\", \"createChannelSplitter\", \"createChannelMerger\", \"audioWorklet\"];\n\n/**\n *  @class Wrapper around the native AudioContext.\n *  @extends {Tone.Emitter}\n *  @param {AudioContext=} context optionally pass in a context\n */\nTone.Context = function(){\n\n\tTone.Emitter.call(this);\n\n\tvar options = Tone.defaults(arguments, [\"context\"], Tone.Context);\n\n\tif (!options.context){\n\t\toptions.context = new Tone.global.AudioContext();\n\t\tif (!options.context){\n\t\t\tthrow new Error(\"could not create AudioContext. Possibly too many AudioContexts running already.\");\n\t\t}\n\t}\n\tthis._context = options.context;\n\t//make sure it's not an AudioContext wrapper\n\twhile (this._context.rawContext){\n\t\tthis._context = this._context.rawContext;\n\t}\n\n\t// extend all of the properties\n\tAudioContextProperties.forEach(function(prop){\n\t\tthis._defineProperty(this._context, prop);\n\t}.bind(this));\n\t// extend all of the methods\n\tAudioContextMethods.forEach(function(method){\n\t\tthis._defineMethod(this._context, method);\n\t}.bind(this));\n\n\t/**\n\t *  The default latency hint\n\t *  @type  {String}\n\t *  @private\n\t */\n\tthis._latencyHint = options.latencyHint;\n\n\t/**\n\t *  An object containing all of the constants AudioBufferSourceNodes\n\t *  @type  {Object}\n\t *  @private\n\t */\n\tthis._constants = {};\n\n\t///////////////////////////////////////////////////////////////////////\n\t// WORKER\n\t///////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  The amount of time events are scheduled\n\t *  into the future\n\t *  @type  {Number}\n\t */\n\tthis.lookAhead = options.lookAhead;\n\n\t/**\n\t *  A reference to the actual computed update interval\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._computedUpdateInterval = 0;\n\n\t/**\n\t *  A reliable callback method\n\t *  @private\n\t *  @type  {Ticker}\n\t */\n\tthis._ticker = new Ticker(this.emit.bind(this, \"tick\"), options.clockSource, options.updateInterval);\n\n\t///////////////////////////////////////////////////////////////////////\n\t// TIMEOUTS\n\t///////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  All of the setTimeout events.\n\t *  @type  {Tone.Timeline}\n\t *  @private\n\t */\n\tthis._timeouts = new Tone.Timeline();\n\n\t/**\n\t *  The timeout id counter\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._timeoutIds = 0;\n\n\tthis.on(\"tick\", this._timeoutLoop.bind(this));\n\n\t//forward state change events\n\tthis._context.onstatechange = function(e){\n\t\tthis.emit(\"statechange\", e);\n\t}.bind(this);\n};\n\nTone.extend(Tone.Context, Tone.Emitter);\nTone.Emitter.mixin(Tone.Context);\n\n/**\n * defaults\n * @static\n * @type {Object}\n */\nTone.Context.defaults = {\n\t\"clockSource\" : \"worker\",\n\t\"latencyHint\" : \"interactive\",\n\t\"lookAhead\" : 0.1,\n\t\"updateInterval\" : 0.03\n};\n\n/**\n * Is an instanceof Tone.Context\n * @type {Boolean}\n */\nTone.Context.prototype.isContext = true;\n\n/**\n *  Define a property on this Tone.Context.\n *  This is used to extend the native AudioContext\n *  @param  {AudioContext}  context\n *  @param  {String}  prop\n *  @private\n */\nTone.Context.prototype._defineProperty = function(context, prop){\n\tif (Tone.isUndef(this[prop])){\n\t\tObject.defineProperty(this, prop, {\n\t\t\t\"get\" : function(){\n\t\t\t\treturn context[prop];\n\t\t\t},\n\t\t\t\"set\" : function(val){\n\t\t\t\tcontext[prop] = val;\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n *  Define a method on this Tone.Context.\n *  This is used to extend the native AudioContext\n *  @param  {AudioContext}  context\n *  @param  {String}  prop\n *  @private\n */\nTone.Context.prototype._defineMethod = function(context, prop){\n\tif (Tone.isUndef(this[prop])){\n\t\tObject.defineProperty(this, prop, {\n\t\t\t\"get\" : function(){\n\t\t\t\treturn context[prop].bind(context);\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n *  The current audio context time\n *  @return  {Number}\n */\nTone.Context.prototype.now = function(){\n\treturn this._context.currentTime + this.lookAhead;\n};\n\n/**\n *  The audio output destination. Alias for Tone.Master\n *  @readyOnly\n *  @type  {Tone.Master}\n */\nObject.defineProperty(Tone.Context.prototype, \"destination\", {\n\t\"get\" : function(){\n\t\tif (!this.master){\n\t\t\treturn this._context.destination;\n\t\t} else {\n\t\t\treturn this.master;\n\t\t}\n\t}\n});\n\n/**\n *  Starts the audio context from a suspended state. This is required\n *  to initially start the AudioContext.\n *  @return  {Promise}\n */\nTone.Context.prototype.resume = function(){\n\tif (this._context.state === \"suspended\" && this._context instanceof AudioContext){\n\t\treturn this._context.resume();\n\t} else {\n\t\treturn Promise.resolve();\n\t}\n};\n\n/**\n *  Promise which is invoked when the context is running.\n *  Tries to resume the context if it's not started.\n *  @return  {Promise}\n */\nTone.Context.prototype.close = function(){\n\tvar closePromise = Promise.resolve();\n\t//never close the global Tone.Context\n\tif (this !== Tone.global.TONE_AUDIO_CONTEXT){\n\t\tclosePromise = this.rawContext.close();\n\t}\n\treturn closePromise.then(function(){\n\t\tTone.Context.emit(\"close\", this);\n\t}.bind(this));\n};\n\n/**\n *  Generate a looped buffer at some constant value.\n *  @param  {Number}  val\n *  @return  {BufferSourceNode}\n */\nTone.Context.prototype.getConstant = function(val){\n\tif (this._constants[val]){\n\t\treturn this._constants[val];\n\t} else {\n\t\tvar buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n\t\tvar arr = buffer.getChannelData(0);\n\t\tfor (var i = 0; i < arr.length; i++){\n\t\t\tarr[i] = val;\n\t\t}\n\t\tvar constant = this._context.createBufferSource();\n\t\tconstant.channelCount = 1;\n\t\tconstant.channelCountMode = \"explicit\";\n\t\tconstant.buffer = buffer;\n\t\tconstant.loop = true;\n\t\tconstant.start(0);\n\t\tthis._constants[val] = constant;\n\t\treturn constant;\n\t}\n};\n\n/**\n *  The private loop which keeps track of the context scheduled timeouts\n *  Is invoked from the clock source\n *  @private\n */\nTone.Context.prototype._timeoutLoop = function(){\n\tvar now = this.now();\n\twhile (this._timeouts && this._timeouts.length && this._timeouts.peek().time <= now){\n\t\tthis._timeouts.shift().callback();\n\t}\n};\n\n/**\n *  A setTimeout which is gaurenteed by the clock source.\n *  Also runs in the offline context.\n *  @param  {Function}  fn       The callback to invoke\n *  @param  {Seconds}    timeout  The timeout in seconds\n *  @returns {Number} ID to use when invoking Tone.Context.clearTimeout\n */\nTone.Context.prototype.setTimeout = function(fn, timeout){\n\tthis._timeoutIds++;\n\tvar now = this.now();\n\tthis._timeouts.add({\n\t\t\"callback\" : fn,\n\t\t\"time\" : now + timeout,\n\t\t\"id\" : this._timeoutIds\n\t});\n\treturn this._timeoutIds;\n};\n\n/**\n *  Clears a previously scheduled timeout with Tone.context.setTimeout\n *  @param  {Number}  id  The ID returned from setTimeout\n *  @return  {Tone.Context}  this\n */\nTone.Context.prototype.clearTimeout = function(id){\n\tthis._timeouts.forEach(function(event){\n\t\tif (event.id === id){\n\t\t\tthis.remove(event);\n\t\t}\n\t});\n\treturn this;\n};\n\n/**\n *  How often the Web Worker callback is invoked.\n *  This number corresponds to how responsive the scheduling\n *  can be. Context.updateInterval + Context.lookAhead gives you the\n *  total latency between scheduling an event and hearing it.\n *  @type {Number}\n *  @memberOf Tone.Context#\n *  @name updateInterval\n */\nObject.defineProperty(Tone.Context.prototype, \"updateInterval\", {\n\t\"get\" : function(){\n\t\treturn this._ticker.updateInterval;\n\t},\n\t\"set\" : function(interval){\n\t\tthis._ticker.updateInterval = interval;\n\t}\n});\n\n/**\n *  The unwrapped AudioContext.\n *  @type {AudioContext}\n *  @memberOf Tone.Context#\n *  @name rawContext\n *  @readOnly\n */\nObject.defineProperty(Tone.Context.prototype, \"rawContext\", {\n\t\"get\" : function(){\n\t\treturn this._context;\n\t}\n});\n\n/**\n *  What the source of the clock is, either \"worker\" (Web Worker [default]),\n *  \"timeout\" (setTimeout), or \"offline\" (none).\n *  @type {String}\n *  @memberOf Tone.Context#\n *  @name clockSource\n */\nObject.defineProperty(Tone.Context.prototype, \"clockSource\", {\n\t\"get\" : function(){\n\t\treturn this._ticker.type;\n\t},\n\t\"set\" : function(type){\n\t\tthis._ticker.type = type;\n\t}\n});\n\n/**\n *  The type of playback, which affects tradeoffs between audio\n *  output latency and responsiveness.\n *\n *  In addition to setting the value in seconds, the latencyHint also\n *  accepts the strings \"interactive\" (prioritizes low latency),\n *  \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n *  latency and performance), and \"fastest\" (lowest latency, might glitch more often).\n *  @type {String|Seconds}\n *  @memberOf Tone.Context#\n *  @name latencyHint\n *  @example\n * //set the lookAhead to 0.3 seconds\n * Tone.context.latencyHint = 0.3;\n */\nObject.defineProperty(Tone.Context.prototype, \"latencyHint\", {\n\t\"get\" : function(){\n\t\treturn this._latencyHint;\n\t},\n\t\"set\" : function(hint){\n\t\tvar lookAhead = hint;\n\t\tthis._latencyHint = hint;\n\t\tif (Tone.isString(hint)){\n\t\t\tswitch (hint){\n\t\t\t\tcase \"interactive\" :\n\t\t\t\t\tlookAhead = 0.1;\n\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"playback\" :\n\t\t\t\t\tlookAhead = 0.8;\n\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"balanced\" :\n\t\t\t\t\tlookAhead = 0.25;\n\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"fastest\" :\n\t\t\t\t\tthis._context.latencyHint = \"interactive\";\n\t\t\t\t\tlookAhead = 0.01;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.lookAhead = lookAhead;\n\t\tthis.updateInterval = lookAhead/3;\n\t}\n});\n\n/**\n *  Unlike other dispose methods, this returns a Promise\n *  which executes when the context is closed and disposed\n *  @returns {Promise} this\n */\nTone.Context.prototype.dispose = function(){\n\treturn this.close().then(function(){\n\t\tTone.Emitter.prototype.dispose.call(this);\n\t\tthis._ticker.dispose();\n\t\tthis._ticker = null;\n\t\tthis._timeouts.dispose();\n\t\tthis._timeouts = null;\n\t\tfor (var con in this._constants){\n\t\t\tthis._constants[con].disconnect();\n\t\t}\n\t\tthis._constants = null;\n\t}.bind(this));\n};\n\n/**\n * @class A class which provides a reliable callback using either\n *        a Web Worker, or if that isn't supported, falls back to setTimeout.\n * @private\n */\nvar Ticker = function(callback, type, updateInterval){\n\n\t/**\n\t * Either \"worker\" or \"timeout\"\n\t * @type {String}\n\t * @private\n\t */\n\tthis._type = type;\n\n\t/**\n\t * The update interval of the worker\n\t * @private\n\t * @type {Number}\n\t */\n\tthis._updateInterval = updateInterval;\n\n\t/**\n\t * The callback to invoke at regular intervals\n\t * @type {Function}\n\t * @private\n\t */\n\tthis._callback = Tone.defaultArg(callback, Tone.noOp);\n\n\t//create the clock source for the first time\n\tthis._createClock();\n};\n\n/**\n * The possible ticker types\n * @private\n * @type {Object}\n */\nTicker.Type = {\n\t\"Worker\" : \"worker\",\n\t\"Timeout\" : \"timeout\",\n\t\"Offline\" : \"offline\"\n};\n\n/**\n *  Generate a web worker\n *  @return  {WebWorker}\n *  @private\n */\nTicker.prototype._createWorker = function(){\n\n\t//URL Shim\n\tTone.global.URL = Tone.global.URL || Tone.global.webkitURL;\n\n\tvar blob = new Blob([\n\t\t//the initial timeout time\n\t\t\"var timeoutTime = \"+(this._updateInterval * 1000).toFixed(1)+\";\" +\n\t\t//onmessage callback\n\t\t\"self.onmessage = function(msg){\" +\n\t\t\"\ttimeoutTime = parseInt(msg.data);\" +\n\t\t\"};\" +\n\t\t//the tick function which posts a message\n\t\t//and schedules a new tick\n\t\t\"function tick(){\" +\n\t\t\"\tsetTimeout(tick, timeoutTime);\" +\n\t\t\"\tself.postMessage('tick');\" +\n\t\t\"}\" +\n\t\t//call tick initially\n\t\t\"tick();\"\n\t]);\n\tvar blobUrl = URL.createObjectURL(blob);\n\tvar worker = new Worker(blobUrl);\n\n\tworker.onmessage = this._callback.bind(this);\n\n\tthis._worker = worker;\n};\n\n/**\n * Create a timeout loop\n * @private\n */\nTicker.prototype._createTimeout = function(){\n\tthis._timeout = setTimeout(function(){\n\t\tthis._createTimeout();\n\t\tthis._callback();\n\t}.bind(this), this._updateInterval * 1000);\n};\n\n/**\n * Create the clock source.\n * @private\n */\nTicker.prototype._createClock = function(){\n\tif (this._type === Ticker.Type.Worker){\n\t\ttry {\n\t\t\tthis._createWorker();\n\t\t} catch (e){\n\t\t\t// workers not supported, fallback to timeout\n\t\t\tthis._type = Ticker.Type.Timeout;\n\t\t\tthis._createClock();\n\t\t}\n\t} else if (this._type === Ticker.Type.Timeout){\n\t\tthis._createTimeout();\n\t}\n};\n\n/**\n * @memberOf Ticker#\n * @type {Number}\n * @name updateInterval\n * @private\n */\nObject.defineProperty(Ticker.prototype, \"updateInterval\", {\n\t\"get\" : function(){\n\t\treturn this._updateInterval;\n\t},\n\t\"set\" : function(interval){\n\t\tthis._updateInterval = Math.max(interval, 128/44100);\n\t\tif (this._type === Ticker.Type.Worker){\n\t\t\tthis._worker.postMessage(Math.max(interval * 1000, 1));\n\t\t}\n\t}\n});\n\n/**\n * The type of the ticker, either a worker or a timeout\n * @memberOf Ticker#\n * @type {Number}\n * @name type\n * @private\n */\nObject.defineProperty(Ticker.prototype, \"type\", {\n\t\"get\" : function(){\n\t\treturn this._type;\n\t},\n\t\"set\" : function(type){\n\t\tthis._disposeClock();\n\t\tthis._type = type;\n\t\tthis._createClock();\n\t}\n});\n\n/**\n * Clean up the current clock source\n * @private\n */\nTicker.prototype._disposeClock = function(){\n\tif (this._timeout){\n\t\tclearTimeout(this._timeout);\n\t\tthis._timeout = null;\n\t}\n\tif (this._worker){\n\t\tthis._worker.terminate();\n\t\tthis._worker.onmessage = null;\n\t\tthis._worker = null;\n\t}\n};\n\n/**\n * Clean up\n * @private\n */\nTicker.prototype.dispose = function(){\n\tthis._disposeClock();\n\tthis._callback = null;\n};\n\n// set the audio context initially, and if one is not already created\nif (Tone.supported && !Tone.initialized){\t\t\t\n\tif (!Tone.global.TONE_AUDIO_CONTEXT){\n\t\tTone.global.TONE_AUDIO_CONTEXT = new Tone.Context();\n\t}\n\tTone.context = Tone.global.TONE_AUDIO_CONTEXT;\n\n\t// log on first initialization\n\t// allow optional silencing of this log\n\tif (!Tone.global.TONE_SILENCE_LOGGING){\n\t\tvar prefix = \"v\";\n\t\tif (Tone.version === \"dev\"){\n\t\t\tprefix = \"\";\n\t\t}\n\t\tvar printString = \" * Tone.js \" + prefix + Tone.version + \" * \"; \n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(\"%c\" + printString, \"background: #000; color: #fff\");\n\t}\n} else if (!Tone.supported && !Tone.global.TONE_SILENCE_LOGGING){\n\t// eslint-disable-next-line no-console\n\tconsole.warn(\"This browser does not support Tone.js\");\n}\n\nexport default Tone.Context;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Time\";\nimport \"../type/Frequency\";\nimport \"../type/TransportTime\";\nimport \"../core/Context\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tTYPES\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * Units which a value can take on.\n * @enum {String}\n */\nTone.Type = {\n\t/**\n\t *  Default units\n\t *  @typedef {Default}\n\t */\n\tDefault : \"number\",\n\t/**\n\t *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n\t *\n\t *  * Numbers, which will be taken literally as the time (in seconds).\n\t *  * Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.\n\t *  * TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times\n\t *  in the form BARS:QUARTERS:SIXTEENTHS.\n\t *  * Frequency, (\"8hz\") is converted to the length of the cycle in seconds.\n\t *  * Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as\n\t *  \"the current time plus whatever expression follows\".\n\t *  * Object, ({\"4n\" : 3, \"8t\" : -1}). The resulting time is equal to the sum of all of the keys multiplied by the values in the object. \n\t *  * No Argument, for methods which accept time, no argument will be interpreted as\n\t *  \"now\" (i.e. the currentTime).\n\t *\n\t *  @typedef {Time}\n\t */\n\tTime : \"time\",\n\t/**\n\t *  Frequency can be described similar to time, except ultimately the\n\t *  values are converted to frequency instead of seconds. A number\n\t *  is taken literally as the value in hertz. Additionally any of the\n\t *  Time encodings can be used. Note names in the form\n\t *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n\t *  frequency value.\n\t *  @typedef {Frequency}\n\t */\n\tFrequency : \"frequency\",\n\t/**\n\t *  TransportTime describes a position along the Transport's timeline. It is\n\t *  similar to Time in that it uses all the same encodings, but TransportTime specifically\n\t *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable.\n\t *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n\t *  @typedef {TransportTime}\n\t */\n\tTransportTime : \"transportTime\",\n\t/**\n\t *  Ticks are the basic subunit of the Transport. They are\n\t *  the smallest unit of time that the Transport supports.\n\t *  @typedef {Ticks}\n\t */\n\tTicks : \"ticks\",\n\t/**\n\t *  Normal values are within the range [0, 1].\n\t *  @typedef {NormalRange}\n\t */\n\tNormalRange : \"normalRange\",\n\t/**\n\t *  AudioRange values are between [-1, 1].\n\t *  @typedef {AudioRange}\n\t */\n\tAudioRange : \"audioRange\",\n\t/**\n\t *  Decibels are a logarithmic unit of measurement which is useful for volume\n\t *  because of the logarithmic way that we perceive loudness. 0 decibels\n\t *  means no change in volume. -10db is approximately half as loud and 10db\n\t *  is twice is loud.\n\t *  @typedef {Decibels}\n\t */\n\tDecibels : \"db\",\n\t/**\n\t *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n\t *  @typedef {Interval}\n\t */\n\tInterval : \"interval\",\n\t/**\n\t *  Beats per minute.\n\t *  @typedef {BPM}\n\t */\n\tBPM : \"bpm\",\n\t/**\n\t *  The value must be greater than or equal to 0.\n\t *  @typedef {Positive}\n\t */\n\tPositive : \"positive\",\n\t/**\n\t *  Gain is the ratio between input and output of a signal.\n\t *  A gain of 0 is the same as silencing the signal. A gain of\n\t *  1, causes no change to the incoming signal.\n\t *  @typedef {Gain}\n\t */\n\tGain : \"gain\",\n\t/**\n\t *  A cent is a hundredth of a semitone.\n\t *  @typedef {Cents}\n\t */\n\tCents : \"cents\",\n\t/**\n\t *  Angle between 0 and 360.\n\t *  @typedef {Degrees}\n\t */\n\tDegrees : \"degrees\",\n\t/**\n\t *  A number representing a midi note.\n\t *  @typedef {MIDI}\n\t */\n\tMIDI : \"midi\",\n\t/**\n\t *  A colon-separated representation of time in the form of\n\t *  Bars:Beats:Sixteenths.\n\t *  @typedef {BarsBeatsSixteenths}\n\t */\n\tBarsBeatsSixteenths : \"barsBeatsSixteenths\",\n\t/**\n\t *  Sampling is the reduction of a continuous signal to a discrete signal.\n\t *  Audio is typically sampled 44100 times per second.\n\t *  @typedef {Samples}\n\t */\n\tSamples : \"samples\",\n\t/**\n\t *  Hertz are a frequency representation defined as one cycle per second.\n\t *  @typedef {Hertz}\n\t */\n\tHertz : \"hertz\",\n\t/**\n\t *  A frequency represented by a letter name,\n\t *  accidental and octave. This system is known as\n\t *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\n\t *  @typedef {Note}\n\t */\n\tNote : \"note\",\n\t/**\n\t *  One millisecond is a thousandth of a second.\n\t *  @typedef {Milliseconds}\n\t */\n\tMilliseconds : \"milliseconds\",\n\t/**\n\t *  Seconds are the time unit of the AudioContext. In the end,\n\t *  all values need to be evaluated to seconds.\n\t *  @typedef {Seconds}\n\t */\n\tSeconds : \"seconds\",\n\t/**\n\t *  A string representing a duration relative to a measure.\n\t *  * \"4n\" = quarter note\n\t *  * \"2m\" = two measures\n\t *  * \"8t\" = eighth-note triplet\n\t *  @typedef {Notation}\n\t */\n\tNotation : \"notation\",\n};\n\n///////////////////////////////////////////////////////////////////////////\n// AUGMENT TONE's PROTOTYPE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Convert Time into seconds.\n *\n *  Unlike the method which it overrides, this takes into account\n *  transporttime and musical notation.\n *\n *  Time : 1.40\n *  Notation: 4n or 1m or 2t\n *  Now Relative: +3n\n *\n *  @param  {Time} time\n *  @return {Seconds}\n */\nTone.prototype.toSeconds = function(time){\n\tif (Tone.isNumber(time)){\n\t\treturn time;\n\t} else if (Tone.isUndef(time)){\n\t\treturn this.now();\n\t} else if (Tone.isString(time) || Tone.isObject(time)){\n\t\treturn (new Tone.Time(time)).toSeconds();\n\t} else if (time instanceof Tone.TimeBase){\n\t\treturn time.toSeconds();\n\t}\n};\n\n/**\n *  Convert a frequency representation into a number.\n *  @param  {Frequency} freq\n *  @return {Hertz}      the frequency in hertz\n */\nTone.prototype.toFrequency = function(freq){\n\tif (Tone.isNumber(freq)){\n\t\treturn freq;\n\t} else if (Tone.isString(freq) || Tone.isUndef(freq) || Tone.isObject(freq)){\n\t\treturn (new Tone.Frequency(freq)).valueOf();\n\t} else if (freq instanceof Tone.TimeBase){\n\t\treturn freq.toFrequency();\n\t}\n};\n\n/**\n *  Convert a time representation into ticks.\n *  @param  {Time} time\n *  @return {Ticks}  the time in ticks\n */\nTone.prototype.toTicks = function(time){\n\tif (Tone.isNumber(time) || Tone.isString(time) || Tone.isObject(time)){\n\t\treturn (new Tone.TransportTime(time)).toTicks();\n\t} else if (Tone.isUndef(time)){\n\t\treturn Tone.Transport.ticks;\n\t} else if (time instanceof Tone.TimeBase){\n\t\treturn time.toTicks();\n\t}\n};\n\nexport default Tone;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  Makes sure that connect returns the dst node\n *  @private\n */\nif (Tone.supported){\n\tvar testContext = new OfflineAudioContext(2, 1, 44100);\n\tvar testSrcNode = testContext.createGain();\n\tvar testDstNode = testContext.createGain();\n\tif (testSrcNode.connect(testDstNode) !== testDstNode){\n\t\tvar nativeConnect = AudioNode.prototype.connect;\n\t\tAudioNode.prototype.connect = function(){\n\t\t\tnativeConnect.apply(this, arguments);\n\t\t\treturn arguments[0];\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Context\";\nimport \"../shim/AudioNode\";\n\n/**\n *  @class Tone.AudioNode is the base class for classes which process audio.\n *         AudioNodes have inputs and outputs.\n *  @param\t{AudioContext=} context\tThe audio context to use with the class\n *  @extends {Tone}\n */\nTone.AudioNode = function(){\n\tTone.call(this);\n\n\t//use the default context if one is not passed in\n\tvar options = Tone.defaults(arguments, [\"context\"], {\n\t\t\"context\" : Tone.context\n\t});\n\n\t/**\n\t * The AudioContext of this instance\n\t * @private\n\t * @type {AudioContext}\n\t */\n\tthis._context = options.context;\n};\n\nTone.extend(Tone.AudioNode);\n\n/**\n * Get the audio context belonging to this instance.\n * @type {Tone.Context}\n * @memberOf Tone.AudioNode#\n * @name context\n * @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"context\", {\n\tget : function(){\n\t\treturn this._context;\n\t}\n});\n\n/**\n *  Create input and outputs for this object.\n *  @param  {Number}  [input=0]   The number of inputs\n *  @param  {Number}  [outputs=0]  The number of outputs\n *  @return  {Tone.AudioNode}  this\n *  @private\n */\nTone.AudioNode.prototype.createInsOuts = function(inputs, outputs){\n\n\tif (inputs === 1){\n\t\tthis.input = this.context.createGain();\n\t} else if (inputs > 1){\n\t\tthis.input = new Array(inputs);\n\t}\n\n\tif (outputs === 1){\n\t\tthis.output = this.context.createGain();\n\t} else if (outputs > 1){\n\t\tthis.output = new Array(outputs);\n\t}\n};\n\n/**\n *  channelCount is the number of channels used when up-mixing and down-mixing\n *  connections to any inputs to the node. The default value is 2 except for\n *  specific nodes where its value is specially determined.\n *\n *  @memberof Tone.AudioNode#\n *  @type {Number}\n *  @name channelCount\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"channelCount\", {\n\tget : function(){\n\t\treturn this.output.channelCount;\n\t},\n\tset : function(c){\n\t\treturn this.output.channelCount = c;\n\t}\n});\n\n/**\n *  channelCountMode determines how channels will be counted when up-mixing and\n *  down-mixing connections to any inputs to the node.\n *  The default value is \"max\". This attribute has no effect for nodes with no inputs.\n *  @memberof Tone.AudioNode#\n *  @type {String}\n *  @name channelCountMode\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"channelCountMode\", {\n\tget : function(){\n\t\treturn this.output.channelCountMode;\n\t},\n\tset : function(m){\n\t\treturn this.output.channelCountMode = m;\n\t}\n});\n\n/**\n *  channelInterpretation determines how individual channels will be treated\n *  when up-mixing and down-mixing connections to any inputs to the node.\n *  The default value is \"speakers\".\n *  @memberof Tone.AudioNode#\n *  @type {String}\n *  @name channelInterpretation\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"channelInterpretation\", {\n\tget : function(){\n\t\treturn this.output.channelInterpretation;\n\t},\n\tset : function(i){\n\t\treturn this.output.channelInterpretation = i;\n\t}\n});\n\n/**\n *  The number of inputs feeding into the AudioNode.\n *  For source nodes, this will be 0.\n *  @type {Number}\n *  @name numberOfInputs\n *  @memberof Tone.AudioNode#\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"numberOfInputs\", {\n\tget : function(){\n\t\tif (this.input){\n\t\t\tif (Tone.isArray(this.input)){\n\t\t\t\treturn this.input.length;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  The number of outputs coming out of the AudioNode.\n *  @type {Number}\n *  @name numberOfOutputs\n *  @memberof Tone.AudioNode#\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"numberOfOutputs\", {\n\tget : function(){\n\t\tif (this.output){\n\t\t\tif (Tone.isArray(this.output)){\n\t\t\t\treturn this.output.length;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n *  @param  {Tone | AudioParam | AudioNode} unit\n *  @param {number} [outputNum=0] optionally which output to connect from\n *  @param {number} [inputNum=0] optionally which input to connect to\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.connect = function(unit, outputNum, inputNum){\n\tif (Tone.isArray(this.output)){\n\t\toutputNum = Tone.defaultArg(outputNum, 0);\n\t\tthis.output[outputNum].connect(unit, 0, inputNum);\n\t} else {\n\t\tTone.connect(this.output, unit, outputNum, inputNum);\n\t}\n\treturn this;\n};\n\n/**\n *  disconnect the output\n *  @param {Number|AudioNode} output Either the output index to disconnect\n *                                   if the output is an array, or the\n *                                   node to disconnect from.\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.disconnect = function(destination, outputNum, inputNum){\n\tif (Tone.isArray(this.output)){\n\t\toutputNum = Tone.defaultArg(outputNum, 0);\n\t\tthis.output[outputNum].disconnect(destination, 0, inputNum);\n\t} else {\n\t\tTone.disconnect(this.output, destination, outputNum, inputNum);\n\t}\n\treturn this;\n};\n\n/**\n *  Connect the output of this node to the rest of the nodes in series.\n *  @example\n *  //connect a node to an effect, panVol and then to the master output\n *  node.chain(effect, panVol, Tone.Master);\n *  @param {...(AudioParam|Tone|AudioNode)} nodes\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.chain = function(){\n\tvar args = Array.from(arguments);\n\targs.unshift(this);\n\tTone.connectSeries.apply(undefined, args);\n\treturn this;\n};\n\n/**\n *  connect the output of this node to the rest of the nodes in parallel.\n *  @param {...(AudioParam|Tone|AudioNode)} nodes\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.fan = function(){\n\tfor (var i = 0; i < arguments.length; i++){\n\t\tthis.connect(arguments[i]);\n\t}\n\treturn this;\n};\n\n/**\n * Dispose and disconnect\n * @return {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.dispose = function(){\n\tif (Tone.isDefined(this.input)){\n\t\tif (this.input instanceof AudioNode){\n\t\t\tthis.input.disconnect();\n\t\t}\n\t\tthis.input = null;\n\t}\n\tif (Tone.isDefined(this.output)){\n\t\tif (this.output instanceof AudioNode){\n\t\t\tthis.output.disconnect();\n\t\t}\n\t\tthis.output = null;\n\t}\n\tthis._context = null;\n\treturn this;\n};\n\nexport default Tone.AudioNode;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\nimport \"../core/AudioNode\";\nimport \"../core/Timeline\";\n\n/**\n *  @class Tone.Param wraps the native Web Audio's AudioParam to provide\n *         additional unit conversion functionality. It also\n *         serves as a base-class for classes which have a single,\n *         automatable parameter.\n *  @extends {Tone.AudioNode}\n *  @param  {AudioParam}  param  The parameter to wrap.\n *  @param  {Tone.Type} units The units of the audio param.\n *  @param  {Boolean} convert If the param should be converted.\n */\nTone.Param = function(){\n\n\tvar options = Tone.defaults(arguments, [\"param\", \"units\", \"convert\"], Tone.Param);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The native parameter to control\n\t *  @type  {AudioParam}\n\t *  @private\n\t */\n\tthis._param = this.input = options.param;\n\n\t/**\n\t *  The units of the parameter\n\t *  @type {Tone.Type}\n\t */\n\tthis.units = options.units;\n\n\t/**\n\t *  If the value should be converted or not\n\t *  @type {Boolean}\n\t */\n\tthis.convert = options.convert;\n\n\t/**\n\t *  True if the signal value is being overridden by\n\t *  a connected signal.\n\t *  @readOnly\n\t *  @type  {boolean}\n\t *  @private\n\t */\n\tthis.overridden = false;\n\n\t/**\n\t * The timeline which tracks all of the automations.\n\t * @type {Tone.Timeline}\n\t * @private\n\t */\n\tthis._events = new Tone.Timeline(1000);\n\n\tif (Tone.isDefined(options.value) && this._param){\n\t\tthis.setValueAtTime(options.value, 0);\n\t}\n};\n\nTone.extend(Tone.Param, Tone.AudioNode);\n\n/**\n *  Defaults\n *  @type  {Object}\n *  @const\n */\nTone.Param.defaults = {\n\t\"units\" : Tone.Type.Default,\n\t\"convert\" : true,\n\t\"param\" : undefined\n};\n\n/**\n * The current value of the parameter.\n * @memberOf Tone.Param#\n * @type {Number}\n * @name value\n */\nObject.defineProperty(Tone.Param.prototype, \"value\", {\n\tget : function(){\n\t\tvar now = this.now();\n\t\treturn this._toUnits(this.getValueAtTime(now));\n\t},\n\tset : function(value){\n\t\tthis._initialValue = this._fromUnits(value);\n\t\tthis.cancelScheduledValues(this.now());\n\t\tthis.setValueAtTime(value, this.now());\n\t}\n});\n\n/**\n * The minimum output value of the parameter\n * @memberOf Tone.Param#\n * @type {Number}\n * @name value\n */\nObject.defineProperty(Tone.Param.prototype, \"minValue\", {\n\tget : function(){\n\t\tif (this.units === Tone.Type.Time || this.units === Tone.Type.Frequency ||\n\t\t\tthis.units === Tone.Type.NormalRange || this.units === Tone.Type.Positive ||\n\t\t\tthis.units === Tone.Type.BPM){\n\t\t\treturn 0;\n\t\t} else if (this.units === Tone.Type.AudioRange){\n\t\t\treturn -1;\n\t\t} else if (this.units === Tone.Type.Decibels){\n\t\t\treturn -Infinity;\n\t\t} else {\n\t\t\treturn this._param.minValue;\n\t\t}\n\t}\n});\n\n/**\n * The maximum output value of the parameter\n * @memberOf Tone.Param#\n * @type {Number}\n * @name value\n */\nObject.defineProperty(Tone.Param.prototype, \"maxValue\", {\n\tget : function(){\n\t\tif (this.units === Tone.Type.NormalRange ||\n\t\t\tthis.units === Tone.Type.AudioRange){\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn this._param.maxValue;\n\t\t}\n\t}\n});\n\n/**\n *  Convert the given value from the type specified by Tone.Param.units\n *  into the destination value (such as Gain or Frequency).\n *  @private\n *  @param  {*} val the value to convert\n *  @return {number}     the number which the value should be set to\n */\nTone.Param.prototype._fromUnits = function(val){\n\tif ((this.convert || Tone.isUndef(this.convert)) && !this.overridden){\n\t\tswitch (this.units){\n\t\t\tcase Tone.Type.Time:\n\t\t\t\treturn this.toSeconds(val);\n\t\t\tcase Tone.Type.Frequency:\n\t\t\t\treturn this.toFrequency(val);\n\t\t\tcase Tone.Type.Decibels:\n\t\t\t\treturn Tone.dbToGain(val);\n\t\t\tcase Tone.Type.NormalRange:\n\t\t\t\treturn Math.min(Math.max(val, 0), 1);\n\t\t\tcase Tone.Type.AudioRange:\n\t\t\t\treturn Math.min(Math.max(val, -1), 1);\n\t\t\tcase Tone.Type.Positive:\n\t\t\t\treturn Math.max(val, 0);\n\t\t\tdefault:\n\t\t\t\treturn val;\n\t\t}\n\t} else {\n\t\treturn val;\n\t}\n};\n\n/**\n * Convert the parameters value into the units specified by Tone.Param.units.\n * @private\n * @param  {number} val the value to convert\n * @return {number}\n */\nTone.Param.prototype._toUnits = function(val){\n\tif (this.convert || Tone.isUndef(this.convert)){\n\t\tswitch (this.units){\n\t\t\tcase Tone.Type.Decibels:\n\t\t\t\treturn Tone.gainToDb(val);\n\t\t\tdefault:\n\t\t\t\treturn val;\n\t\t}\n\t} else {\n\t\treturn val;\n\t}\n};\n\n/**\n *  the minimum output value\n *  @type {Number}\n *  @private\n */\nTone.Param.prototype._minOutput = 1e-5;\n\n/**\n *  The event types\n *  @enum {String}\n *  @private\n */\nTone.Param.AutomationType = {\n\tLinear : \"linearRampToValueAtTime\",\n\tExponential : \"exponentialRampToValueAtTime\",\n\tTarget : \"setTargetAtTime\",\n\tSetValue : \"setValueAtTime\",\n\tCancel : \"cancelScheduledValues\"\n};\n\n/**\n *  Schedules a parameter value change at the given time.\n *  @param {*}\tvalue The value to set the signal.\n *  @param {Time}  time The time when the change should occur.\n *  @returns {Tone.Param} this\n *  @example\n * //set the frequency to \"G4\" in exactly 1 second from now.\n * freq.setValueAtTime(\"G4\", \"+1\");\n */\nTone.Param.prototype.setValueAtTime = function(value, time){\n\ttime = this.toSeconds(time);\n\tvalue = this._fromUnits(value);\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\"value\" : value,\n\t\t\"time\" : time,\n\t});\n\tthis.log(Tone.Param.AutomationType.SetValue, value, time);\n\tthis._param.setValueAtTime(value, time);\n\treturn this;\n};\n\n/**\n *  Get the signals value at the given time. Subsequent scheduling\n *  may invalidate the returned value.\n *  @param {Time} time When to get the value\n *  @returns {Number} The value at the given time\n */\nTone.Param.prototype.getValueAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar after = this._events.getAfter(time);\n\tvar before = this._events.get(time);\n\tvar initialValue = Tone.defaultArg(this._initialValue, this._param.defaultValue);\n\tvar value = initialValue;\n\t//if it was set by\n\tif (before === null){\n\t\tvalue = initialValue;\n\t} else if (before.type === Tone.Param.AutomationType.Target){\n\t\tvar previous = this._events.getBefore(before.time);\n\t\tvar previousVal;\n\t\tif (previous === null){\n\t\t\tpreviousVal = initialValue;\n\t\t} else {\n\t\t\tpreviousVal = previous.value;\n\t\t}\n\t\tvalue = this._exponentialApproach(before.time, previousVal, before.value, before.constant, time);\n\t} else if (after === null){\n\t\tvalue = before.value;\n\t} else if (after.type === Tone.Param.AutomationType.Linear){\n\t\tvalue = this._linearInterpolate(before.time, before.value, after.time, after.value, time);\n\t} else if (after.type === Tone.Param.AutomationType.Exponential){\n\t\tvalue = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);\n\t} else {\n\t\tvalue = before.value;\n\t}\n\treturn value;\n};\n\n/**\n *  Creates a schedule point with the current value at the current time.\n *  This is useful for creating an automation anchor point in order to\n *  schedule changes from the current value.\n *\n *  @param {number=} now (Optionally) pass the now value in.\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.setRampPoint = function(time){\n\ttime = this.toSeconds(time);\n\tvar currentVal = this.getValueAtTime(time);\n\tthis.cancelAndHoldAtTime(time);\n\tif (currentVal === 0){\n\t\tcurrentVal = this._minOutput;\n\t}\n\tthis.setValueAtTime(this._toUnits(currentVal), time);\n\treturn this;\n};\n\n/**\n *  Schedules a linear continuous change in parameter value from the\n *  previous scheduled parameter value to the given value.\n *\n *  @param  {number} value\n *  @param  {Time} endTime\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.linearRampToValueAtTime = function(value, endTime){\n\tvalue = this._fromUnits(value);\n\tendTime = this.toSeconds(endTime);\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.Linear,\n\t\t\"value\" : value,\n\t\t\"time\" : endTime,\n\t});\n\tthis.log(Tone.Param.AutomationType.Linear, value, endTime);\n\tthis._param.linearRampToValueAtTime(value, endTime);\n\treturn this;\n};\n\n/**\n *  Schedules an exponential continuous change in parameter value from\n *  the previous scheduled parameter value to the given value.\n *\n *  @param  {number} value\n *  @param  {Time} endTime\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.exponentialRampToValueAtTime = function(value, endTime){\n\tvalue = this._fromUnits(value);\n\tvalue = Math.max(this._minOutput, value);\n\tendTime = this.toSeconds(endTime);\n\t//store the event\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.Exponential,\n\t\t\"time\" : endTime,\n\t\t\"value\" : value\n\t});\n\tthis.log(Tone.Param.AutomationType.Exponential, value, endTime);\n\tthis._param.exponentialRampToValueAtTime(value, endTime);\n\treturn this;\n};\n\n/**\n *  Schedules an exponential continuous change in parameter value from\n *  the current time and current value to the given value over the\n *  duration of the rampTime.\n *\n *  @param  {number} value   The value to ramp to.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //exponentially ramp to the value 2 over 4 seconds.\n * signal.exponentialRampTo(2, 4);\n */\nTone.Param.prototype.exponentialRampTo = function(value, rampTime, startTime){\n\tstartTime = this.toSeconds(startTime);\n\tthis.setRampPoint(startTime);\n\tthis.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\treturn this;\n};\n\n/**\n *  Schedules an linear continuous change in parameter value from\n *  the current time and current value to the given value over the\n *  duration of the rampTime.\n *\n *  @param  {number} value   The value to ramp to.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //linearly ramp to the value 4 over 3 seconds.\n * signal.linearRampTo(4, 3);\n */\nTone.Param.prototype.linearRampTo = function(value, rampTime, startTime){\n\tstartTime = this.toSeconds(startTime);\n\tthis.setRampPoint(startTime);\n\tthis.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time. Since it\n *  is an exponential approach it will continue approaching after the ramp duration. The\n *  rampTime is the time that it takes to reach over 99% of the way towards the value.\n *  @param  {number} value   The value to ramp to.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //exponentially ramp to the value 2 over 4 seconds.\n * signal.exponentialRampTo(2, 4);\n */\nTone.Param.prototype.targetRampTo = function(value, rampTime, startTime){\n\tstartTime = this.toSeconds(startTime);\n\tthis.setRampPoint(startTime);\n\tthis.exponentialApproachValueAtTime(value, startTime, rampTime);\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time. Since it\n *  is an exponential approach it will continue approaching after the ramp duration. The\n *  rampTime is the time that it takes to reach over 99% of the way towards the value. This methods\n *  is similar to setTargetAtTime except the third argument is a time instead of a 'timeConstant'\n *  @param  {number} value   The value to ramp to.\n *  @param {Time}\ttime \tWhen the ramp should start.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @returns {Tone.Param} this\n *  @example\n * //exponentially ramp to the value 2 over 4 seconds.\n * signal.exponentialRampTo(2, 4);\n */\nTone.Param.prototype.exponentialApproachValueAtTime = function(value, time, rampTime){\n\tvar timeConstant = Math.log(this.toSeconds(rampTime)+1)/Math.log(200);\n\ttime = this.toSeconds(time);\n\tthis.setTargetAtTime(value, time, timeConstant);\n\t//at 90% start a linear ramp to the final value\n\tthis.cancelAndHoldAtTime(time + rampTime * 0.9);\n\tthis.linearRampToValueAtTime(value, time + rampTime);\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time with\n *  a rate having the given time constant.\n *  @param {number} value\n *  @param {Time} startTime\n *  @param {number} timeConstant\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.setTargetAtTime = function(value, startTime, timeConstant){\n\tvalue = this._fromUnits(value);\n\t// The value will never be able to approach without timeConstant > 0.\n\tif (timeConstant <= 0){\n\t\tthrow new Error(\"timeConstant must be greater than 0\");\n\t}\n\tstartTime = this.toSeconds(startTime);\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.Target,\n\t\t\"value\" : value,\n\t\t\"time\" : startTime,\n\t\t\"constant\" : timeConstant\n\t});\n\tthis.log(Tone.Param.AutomationType.Target, value, startTime, timeConstant);\n\tthis._param.setTargetAtTime(value, startTime, timeConstant);\n\treturn this;\n};\n\n/**\n *  Sets an array of arbitrary parameter values starting at the given time\n *  for the given duration.\n *\n *  @param {Array} values\n *  @param {Time} startTime\n *  @param {Time} duration\n *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.setValueCurveAtTime = function(values, startTime, duration, scaling){\n\tscaling = Tone.defaultArg(scaling, 1);\n\tduration = this.toSeconds(duration);\n\tstartTime = this.toSeconds(startTime);\n\tthis.setValueAtTime(values[0] * scaling, startTime);\n\tvar segTime = duration / (values.length - 1);\n\tfor (var i = 1; i < values.length; i++){\n\t\tthis.linearRampToValueAtTime(values[i] * scaling, startTime + i * segTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancels all scheduled parameter changes with times greater than or\n *  equal to startTime.\n *\n *  @param  {Time} time\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.cancelScheduledValues = function(time){\n\ttime = this.toSeconds(time);\n\tthis._events.cancel(time);\n\tthis._param.cancelScheduledValues(time);\n\tthis.log(Tone.Param.AutomationType.Cancel, time);\n\treturn this;\n};\n\n/**\n *  This is similar to [cancelScheduledValues](#cancelScheduledValues) except\n *  it holds the automated value at time until the next automated event.\n *  @param  {Time} time\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.cancelAndHoldAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar valueAtTime = this.getValueAtTime(time);\n\tthis.log(\"cancelAndHoldAtTime\", time, \"value=\"+valueAtTime);\n\n\t//remove the schedule events\n\tthis._param.cancelScheduledValues(time);\n\n\t//if there is an event at the given time\n\t//and that even is not a \"set\"\n\tvar before = this._events.get(time);\n\tvar after = this._events.getAfter(time);\n\tif (before && before.time === time){\n\t\t//remove everything after\n\t\tif (after){\n\t\t\tthis._events.cancel(after.time);\n\t\t} else {\n\t\t\tthis._events.cancel(time + this.sampleTime);\n\t\t}\n\t} else if (after){\n\t\t//cancel the next event(s)\n\t\tthis._events.cancel(after.time);\n\t\tif (after.type === Tone.Param.AutomationType.Linear){\n\t\t\tthis.linearRampToValueAtTime(valueAtTime, time);\n\t\t} else if (after.type === Tone.Param.AutomationType.Exponential){\n\t\t\tthis.exponentialRampToValueAtTime(valueAtTime, time);\n\t\t}\n\t}\n\n\t//set the value at the given time\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\"value\" : valueAtTime,\n\t\t\"time\" : time\n\t});\n\tthis._param.setValueAtTime(valueAtTime, time);\n\treturn this;\n};\n\n/**\n *  Ramps to the given value over the duration of the rampTime.\n *  Automatically selects the best ramp type (exponential or linear)\n *  depending on the `units` of the signal\n *\n *  @param  {number} value\n *  @param  {Time} rampTime \tThe time that it takes the\n *                              value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //ramp to the value either linearly or exponentially\n * //depending on the \"units\" value of the signal\n * signal.rampTo(0, 10);\n *  @example\n * //schedule it to ramp starting at a specific time\n * signal.rampTo(0, 10, 5)\n */\nTone.Param.prototype.rampTo = function(value, rampTime, startTime){\n\trampTime = Tone.defaultArg(rampTime, 0.1);\n\tif (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM || this.units === Tone.Type.Decibels){\n\t\tthis.exponentialRampTo(value, rampTime, startTime);\n\t} else {\n\t\tthis.linearRampTo(value, rampTime, startTime);\n\t}\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tAUTOMATION CURVE CALCULATIONS\n//\tMIT License, copyright (c) 2014 Jordan Santell\n///////////////////////////////////////////////////////////////////////////\n\n// Calculates the the value along the curve produced by setTargetAtTime\nTone.Param.prototype._exponentialApproach = function(t0, v0, v1, timeConstant, t){\n\treturn v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n};\n\n// Calculates the the value along the curve produced by linearRampToValueAtTime\nTone.Param.prototype._linearInterpolate = function(t0, v0, t1, v1, t){\n\treturn v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n};\n\n// Calculates the the value along the curve produced by exponentialRampToValueAtTime\nTone.Param.prototype._exponentialInterpolate = function(t0, v0, t1, v1, t){\n\treturn v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n};\n\n/**\n *  Clean up\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._param = null;\n\tthis._events = null;\n\treturn this;\n};\n\nexport default Tone.Param;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Base class for all Signals. Used Internally.\n *\n *  @constructor\n *  @extends {Tone}\n */\nTone.SignalBase = function(){\n\tTone.AudioNode.call(this);\n};\n\nTone.extend(Tone.SignalBase, Tone.AudioNode);\n\n/**\n *  When signals connect to other signals or AudioParams,\n *  they take over the output value of that signal or AudioParam.\n *  For all other nodes, the behavior is the same as a default <code>connect</code>.\n *\n *  @override\n *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node\n *  @param {number} [outputNumber=0] The output number to connect from.\n *  @param {number} [inputNumber=0] The input number to connect to.\n *  @returns {Tone.SignalBase} this\n */\nTone.SignalBase.prototype.connect = function(node, outputNumber, inputNumber){\n\t//zero it out so that the signal can have full control\n\tif ((Tone.Signal && Tone.Signal === node.constructor) ||\n\t\t\t(Tone.Param && Tone.Param === node.constructor)){\n\t\t//cancel changes\n\t\tnode._param.cancelScheduledValues(0);\n\t\t//reset the value\n\t\tnode._param.setValueAtTime(0, 0);\n\t\t//mark the value as overridden\n\t\tnode.overridden = true;\n\t} else if (node instanceof AudioParam){\n\t\tnode.cancelScheduledValues(0);\n\t\tnode.setValueAtTime(0, 0);\n\t}\n\tTone.AudioNode.prototype.connect.call(this, node, outputNumber, inputNumber);\n\treturn this;\n};\n\nexport default Tone.SignalBase;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../type/Type\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class A thin wrapper around the Native Web Audio GainNode.\n *         The GainNode is a basic building block of the Web Audio\n *         API and is useful for routing audio and adjusting gains.\n *  @extends {Tone.AudioNode}\n *  @param  {Number=}  gain  The initial gain of the GainNode\n *  @param {Tone.Type=} units The units of the gain parameter.\n */\nTone.Gain = function(){\n\n\tvar options = Tone.defaults(arguments, [\"gain\", \"units\"], Tone.Gain);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The GainNode\n\t *  @type  {GainNode}\n\t *  @private\n\t */\n\tthis.input = this.output = this._gainNode = this.context.createGain();\n\n\t/**\n\t *  The gain parameter of the gain node.\n\t *  @type {Gain}\n\t *  @signal\n\t */\n\tthis.gain = new Tone.Param({\n\t\t\"param\" : this._gainNode.gain,\n\t\t\"units\" : options.units,\n\t\t\"value\" : options.gain,\n\t\t\"convert\" : options.convert\n\t});\n\tthis._readOnly(\"gain\");\n};\n\nTone.extend(Tone.Gain, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Gain.defaults = {\n\t\"gain\" : 1,\n\t\"convert\" : true,\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Gain}  this\n */\nTone.Gain.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._gainNode.disconnect();\n\tthis._gainNode = null;\n\tthis._writable(\"gain\");\n\tthis.gain.dispose();\n\tthis.gain = null;\n};\n\nexport default Tone.Gain;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/AudioContext\";\nimport \"../core/Context\";\nimport \"../core/Gain\";\n\nif (Tone.supported && !Tone.global.AudioContext.prototype.createConstantSource){\n\n\tvar ConstantSourceNode = function(context){\n\t\tthis.context = context;\n\n\t\tvar buffer = context.createBuffer(1, 128, context.sampleRate);\n\t\tvar arr = buffer.getChannelData(0);\n\t\tfor (var i = 0; i < arr.length; i++){\n\t\t\tarr[i] = 1;\n\t\t}\n\n\t\tthis._bufferSource = context.createBufferSource();\n\t\tthis._bufferSource.channelCount = 1;\n\t\tthis._bufferSource.channelCountMode = \"explicit\";\n\t\tthis._bufferSource.buffer = buffer;\n\t\tthis._bufferSource.loop = true;\n\n\t\tvar gainNode = this._output = context.createGain();\n\t\tthis.offset = gainNode.gain;\n\n\t\tthis._bufferSource.connect(gainNode);\n\t};\n\n\tConstantSourceNode.prototype.start = function(time){\n\t\tthis._bufferSource.start(time);\n\t\treturn this;\n\t};\n\n\tConstantSourceNode.prototype.stop = function(time){\n\t\tthis._bufferSource.stop(time);\n\t\treturn this;\n\t};\n\n\tConstantSourceNode.prototype.connect = function(){\n\t\tthis._output.connect.apply(this._output, arguments);\n\t\treturn this;\n\t};\n\n\tConstantSourceNode.prototype.disconnect = function(){\n\t\tthis._output.disconnect.apply(this._output, arguments);\n\t\treturn this;\n\t};\n\n\tAudioContext.prototype.createConstantSource = function(){\n\t\treturn new ConstantSourceNode(this);\n\t};\n\n\tTone.Context.prototype.createConstantSource = function(){\n\t\treturn new ConstantSourceNode(this);\n\t};\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\nimport \"../core/Param\";\nimport \"../signal/SignalBase\";\nimport \"../shim/ConstantSourceNode\";\n\n/**\n *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.\n *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n *          has all of the methods available to native Web Audio\n *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n *          as well as additional conveniences. Read more about working with signals\n *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n *  @constructor\n *  @extends {Tone.Param}\n *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam\n *                                     is passed in, that parameter will be wrapped\n *                                     and controlled by the Signal.\n *  @param {string} [units=Number] unit The units the signal is in.\n *  @example\n * var signal = new Tone.Signal(10);\n */\nTone.Signal = function(){\n\n\tvar options = Tone.defaults(arguments, [\"value\", \"units\"], Tone.Signal);\n\tTone.Param.call(this, options);\n\n\t/**\n\t * The constant source node which generates the signal\n\t * @type {ConstantSourceNode}\n\t * @private\n\t */\n\tthis._constantSource = this.context.createConstantSource();\n\tthis._constantSource.start(0);\n\tthis._param = this._constantSource.offset;\n\tthis.value = options.value;\n\n\t/**\n\t * The node where the constant signal value is scaled.\n\t * @type {ConstantSourceNode}\n\t * @private\n\t */\n\tthis.output = this._constantSource;\n\n\t/**\n\t * The node where the value is set.\n\t * @type {Tone.Param}\n\t * @private\n\t */\n\tthis.input = this._param = this.output.offset;\n};\n\nTone.extend(Tone.Signal, Tone.Param);\n\n/**\n *  The default values\n *  @type  {Object}\n *  @static\n *  @const\n */\nTone.Signal.defaults = {\n\t\"value\" : 0,\n\t\"units\" : Tone.Type.Default,\n\t\"convert\" : true,\n};\n\n//use SignalBase's connect/disconnect methods\nTone.Signal.prototype.connect = Tone.SignalBase.prototype.connect;\nTone.Signal.prototype.disconnect = Tone.SignalBase.prototype.disconnect;\n\n/**\n * Return the current signal value at the given time.\n * @param  {Time} time When to get the signal value\n * @return {Number}\n */\nTone.Signal.prototype.getValueAtTime = function(time){\n\tif (this._param.getValueAtTime){\n\t\treturn this._param.getValueAtTime(time);\n\t} else {\n\t\treturn Tone.Param.prototype.getValueAtTime.call(this, time);\n\t}\n};\n\n/**\n *  dispose and disconnect\n *  @returns {Tone.Signal} this\n */\nTone.Signal.prototype.dispose = function(){\n\tTone.Param.prototype.dispose.call(this);\n\tthis._constantSource.stop();\n\tthis._constantSource.disconnect();\n\tthis._constantSource = null;\n\treturn this;\n};\n\nexport default Tone.Signal;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/AudioContext\";\n\nif (Tone.supported && !Tone.global.AudioContext.prototype._native_createWaveShaper){\n\n\t//fixes safari only bug which is still present in 11\n\tvar ua = navigator.userAgent.toLowerCase();\n\tvar isSafari = ua.includes(\"safari\") && !ua.includes(\"chrome\");\n\tif (isSafari){\n\n\t\tvar WaveShaperNode = function(context){\n\n\t\t\tthis._internalNode = this.input = this.output = context._native_createWaveShaper();\n\n\t\t\tthis._curve = null;\n\n\t\t\tfor (var prop in this._internalNode){\n\t\t\t\tthis._defineProperty(this._internalNode, prop);\n\t\t\t}\n\t\t};\n\n\t\tObject.defineProperty(WaveShaperNode.prototype, \"curve\", {\n\t\t\t\"get\" : function(){\n\t\t\t\treturn this._curve;\n\t\t\t},\n\t\t\t\"set\" : function(curve){\n\t\t\t\tthis._curve = curve;\n\t\t\t\tvar array = new Float32Array(curve.length+1);\n\t\t\t\tarray.set(curve, 1);\n\t\t\t\tarray[0] = curve[0];\n\t\t\t\tthis._internalNode.curve = array;\n\t\t\t}\n\t\t});\n\n\t\tWaveShaperNode.prototype._defineProperty = function(context, prop){\n\t\t\tif (Tone.isUndef(this[prop])){\n\t\t\t\tObject.defineProperty(this, prop, {\n\t\t\t\t\t\"get\" : function(){\n\t\t\t\t\t\tif (typeof context[prop] === \"function\"){\n\t\t\t\t\t\t\treturn context[prop].bind(context);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn context[prop];\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"set\" : function(val){\n\t\t\t\t\t\tcontext[prop] = val;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tTone.global.AudioContext.prototype._native_createWaveShaper = Tone.global.AudioContext.prototype.createWaveShaper;\n\t\tTone.global.AudioContext.prototype.createWaveShaper = function(){\n\t\t\treturn new WaveShaperNode(this);\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/SignalBase\";\nimport \"../shim/WaveShaperNode\";\n\n/**\n *  @class Wraps the native Web Audio API\n *         [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @param {function|Array|Number} mapping The function used to define the values.\n *                                    The mapping function should take two arguments:\n *                                    the first is the value at the current position\n *                                    and the second is the array position.\n *                                    If the argument is an array, that array will be\n *                                    set as the wave shaping function. The input\n *                                    signal is an AudioRange [-1, 1] value and the output\n *                                    signal can take on any numerical values.\n *\n *  @param {Number} [bufferLen=1024] The length of the WaveShaperNode buffer.\n *  @example\n * var timesTwo = new Tone.WaveShaper(function(val){\n * \treturn val * 2;\n * }, 2048);\n *  @example\n * //a waveshaper can also be constructed with an array of values\n * var invert = new Tone.WaveShaper([1, -1]);\n */\nTone.WaveShaper = function(mapping, bufferLen){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  the waveshaper\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._shaper = this.input = this.output = this.context.createWaveShaper();\n\n\t/**\n\t *  the waveshapers curve\n\t *  @type {Float32Array}\n\t *  @private\n\t */\n\tthis._curve = null;\n\n\tif (Array.isArray(mapping)){\n\t\tthis.curve = mapping;\n\t} else if (isFinite(mapping) || Tone.isUndef(mapping)){\n\t\tthis._curve = new Float32Array(Tone.defaultArg(mapping, 1024));\n\t} else if (Tone.isFunction(mapping)){\n\t\tthis._curve = new Float32Array(Tone.defaultArg(bufferLen, 1024));\n\t\tthis.setMap(mapping);\n\t}\n};\n\nTone.extend(Tone.WaveShaper, Tone.SignalBase);\n\n/**\n *  Uses a mapping function to set the value of the curve.\n *  @param {function} mapping The function used to define the values.\n *                            The mapping function take two arguments:\n *                            the first is the value at the current position\n *                            which goes from -1 to 1 over the number of elements\n *                            in the curve array. The second argument is the array position.\n *  @returns {Tone.WaveShaper} this\n *  @example\n * //map the input signal from [-1, 1] to [0, 10]\n * shaper.setMap(function(val, index){\n * \treturn (val + 1) * 5;\n * })\n */\nTone.WaveShaper.prototype.setMap = function(mapping){\n\tvar array = new Array(this._curve.length);\n\tfor (var i = 0, len = this._curve.length; i < len; i++){\n\t\tvar normalized = (i / (len - 1)) * 2 - 1;\n\t\tarray[i] = mapping(normalized, i);\n\t}\n\tthis.curve = array;\n\treturn this;\n};\n\n/**\n * The array to set as the waveshaper curve. For linear curves\n * array length does not make much difference, but for complex curves\n * longer arrays will provide smoother interpolation.\n * @memberOf Tone.WaveShaper#\n * @type {Array}\n * @name curve\n */\nObject.defineProperty(Tone.WaveShaper.prototype, \"curve\", {\n\tget : function(){\n\t\treturn this._shaper.curve;\n\t},\n\tset : function(mapping){\n\t\tthis._curve = new Float32Array(mapping);\n\t\tthis._shaper.curve = this._curve;\n\t}\n});\n\n/**\n * Specifies what type of oversampling (if any) should be used when\n * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n * @memberOf Tone.WaveShaper#\n * @type {string}\n * @name oversample\n */\nObject.defineProperty(Tone.WaveShaper.prototype, \"oversample\", {\n\tget : function(){\n\t\treturn this._shaper.oversample;\n\t},\n\tset : function(oversampling){\n\t\tif ([\"none\", \"2x\", \"4x\"].includes(oversampling)){\n\t\t\tthis._shaper.oversample = oversampling;\n\t\t} else {\n\t\t\tthrow new RangeError(\"Tone.WaveShaper: oversampling must be either 'none', '2x', or '4x'\");\n\t\t}\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.WaveShaper} this\n */\nTone.WaveShaper.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._shaper.disconnect();\n\tthis._shaper = null;\n\tthis._curve = null;\n\treturn this;\n};\n\nexport default Tone.WaveShaper;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Pow applies an exponent to the incoming signal. The incoming signal\n *         must be AudioRange.\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @param {Positive} exp The exponent to apply to the incoming signal, must be at least 2. \n *  @example\n * var pow = new Tone.Pow(2);\n * var sig = new Tone.Signal(0.5).connect(pow);\n * //output of pow is 0.25. \n */\nTone.Pow = function(exp){\n\n\tTone.SignalBase.call(this);\n\t\n\t/**\n\t * the exponent\n\t * @private\n\t * @type {number}\n\t */\n\tthis._exp = Tone.defaultArg(exp, 1);\n\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);\n};\n\nTone.extend(Tone.Pow, Tone.SignalBase);\n\n/**\n * The value of the exponent.\n * @memberOf Tone.Pow#\n * @type {number}\n * @name value\n */\nObject.defineProperty(Tone.Pow.prototype, \"value\", {\n\tget : function(){\n\t\treturn this._exp;\n\t},\n\tset : function(exp){\n\t\tthis._exp = exp;\n\t\tthis._expScaler.setMap(this._expFunc(this._exp));\n\t}\n});\n\n/**\n *  the function which maps the waveshaper\n *  @param   {number} exp\n *  @return {function}\n *  @private\n */\nTone.Pow.prototype._expFunc = function(exp){\n\treturn function(val){\n\t\treturn Math.pow(Math.abs(val), exp);\n\t};\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Pow} this\n */\nTone.Pow.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._expScaler.dispose();\n\tthis._expScaler = null;\n\treturn this;\n};\n\nexport default Tone.Pow;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Pow\";\nimport \"../type/Type\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n *          envelope generator. Tone.Envelope outputs a signal which\n *          can be connected to an AudioParam or Tone.Signal.\n *          <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Time} [attack] The amount of time it takes for the envelope to go from\n *                         0 to it's maximum value.\n *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n *                       \tto fall to the sustain value. Value must be greater than 0.\n *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n *                                \tthe release is triggered.\n *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n *                         \tValue must be greater than 0.\n *  @example\n * //an amplitude envelope\n * var gainNode = Tone.context.createGain();\n * var env = new Tone.Envelope({\n * \t\"attack\" : 0.1,\n * \t\"decay\" : 0.2,\n * \t\"sustain\" : 1,\n * \t\"release\" : 0.8,\n * });\n * env.connect(gainNode.gain);\n */\nTone.Envelope = function(){\n\n\t//get all of the defaults\n\tvar options = Tone.defaults(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  When triggerAttack is called, the attack time is the amount of\n\t *  time it takes for the envelope to reach it's maximum value.\n\t *  @type {Time}\n\t */\n\tthis.attack = options.attack;\n\n\t/**\n\t *  After the attack portion of the envelope, the value will fall\n\t *  over the duration of the decay time to it's sustain value.\n\t *  @type {Time}\n\t */\n\tthis.decay = options.decay;\n\n\t/**\n\t * \tThe sustain value is the value\n\t * \twhich the envelope rests at after triggerAttack is\n\t * \tcalled, but before triggerRelease is invoked.\n\t *  @type {NormalRange}\n\t */\n\tthis.sustain = options.sustain;\n\n\t/**\n\t *  After triggerRelease is called, the envelope's\n\t *  value will fall to it's miminum value over the\n\t *  duration of the release time.\n\t *  @type {Time}\n\t */\n\tthis.release = options.release;\n\n\t/**\n\t *  the next time the envelope is at standby\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._attackCurve = \"linear\";\n\n\t/**\n\t *  the next time the envelope is at standby\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._releaseCurve = \"exponential\";\n\n\t/**\n\t *  the signal\n\t *  @type {Tone.Signal}\n\t *  @private\n\t */\n\tthis._sig = this.output = new Tone.Signal(0);\n\n\t//set the attackCurve initially\n\tthis.attackCurve = options.attackCurve;\n\tthis.releaseCurve = options.releaseCurve;\n\tthis.decayCurve = options.decayCurve;\n};\n\nTone.extend(Tone.Envelope, Tone.AudioNode);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n */\nTone.Envelope.defaults = {\n\t\"attack\" : 0.01,\n\t\"decay\" : 0.1,\n\t\"sustain\" : 0.5,\n\t\"release\" : 1,\n\t\"attackCurve\" : \"linear\",\n\t\"decayCurve\" : \"exponential\",\n\t\"releaseCurve\" : \"exponential\",\n};\n\n/**\n * Read the current value of the envelope. Useful for\n * syncronizing visual output to the envelope.\n * @memberOf Tone.Envelope#\n * @type {Number}\n * @name value\n * @readOnly\n */\nObject.defineProperty(Tone.Envelope.prototype, \"value\", {\n\tget : function(){\n\t\treturn this.getValueAtTime(this.now());\n\t}\n});\n\n/**\n *  Get the curve\n *  @param  {Array|String}  curve\n *  @param  {String}  direction  In/Out\n *  @return  {String}  The curve name\n *  @private\n */\nTone.Envelope.prototype._getCurve = function(curve, direction){\n\tif (Tone.isString(curve)){\n\t\treturn curve;\n\t} else if (Tone.isArray(curve)){\n\t\t//look up the name in the curves array\n\t\tfor (var t in Tone.Envelope.Type){\n\t\t\tif (Tone.Envelope.Type[t][direction] === curve){\n\t\t\t\treturn t;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n *  Assign a the curve to the given name using the direction\n *  @param  {String}  name\n *  @param  {String}  direction In/Out\n *  @param  {Array}  curve\n *  @private\n */\nTone.Envelope.prototype._setCurve = function(name, direction, curve){\n\t//check if it's a valid type\n\tif (Tone.Envelope.Type.hasOwnProperty(curve)){\n\t\tvar curveDef = Tone.Envelope.Type[curve];\n\t\tif (Tone.isObject(curveDef)){\n\t\t\tthis[name] = curveDef[direction];\n\t\t} else {\n\t\t\tthis[name] = curveDef;\n\t\t}\n\t} else if (Tone.isArray(curve)){\n\t\tthis[name] = curve;\n\t} else {\n\t\tthrow new Error(\"Tone.Envelope: invalid curve: \" + curve);\n\t}\n};\n\n/**\n * The shape of the attack.\n * Can be any of these strings:\n * <ul>\n *   <li>linear</li>\n *   <li>exponential</li>\n *   <li>sine</li>\n *   <li>cosine</li>\n *   <li>bounce</li>\n *   <li>ripple</li>\n *   <li>step</li>\n * </ul>\n * Can also be an array which describes the curve. Values\n * in the array are evenly subdivided and linearly\n * interpolated over the duration of the attack.\n * @memberOf Tone.Envelope#\n * @type {String|Array}\n * @name attackCurve\n * @example\n * env.attackCurve = \"linear\";\n * @example\n * //can also be an array\n * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]\n */\nObject.defineProperty(Tone.Envelope.prototype, \"attackCurve\", {\n\tget : function(){\n\t\treturn this._getCurve(this._attackCurve, \"In\");\n\t},\n\tset : function(curve){\n\t\tthis._setCurve(\"_attackCurve\", \"In\", curve);\n\t}\n});\n\n/**\n * The shape of the release. See the attack curve types.\n * @memberOf Tone.Envelope#\n * @type {String|Array}\n * @name releaseCurve\n * @example\n * env.releaseCurve = \"linear\";\n */\nObject.defineProperty(Tone.Envelope.prototype, \"releaseCurve\", {\n\tget : function(){\n\t\treturn this._getCurve(this._releaseCurve, \"Out\");\n\t},\n\tset : function(curve){\n\t\tthis._setCurve(\"_releaseCurve\", \"Out\", curve);\n\t}\n});\n\n/**\n * The shape of the decay either \"linear\" or \"exponential\"\n * @memberOf Tone.Envelope#\n * @type {String}\n * @name decayCurve\n * @example\n * env.decayCurve = \"linear\";\n */\nObject.defineProperty(Tone.Envelope.prototype, \"decayCurve\", {\n\tget : function(){\n\t\treturn this._decayCurve;\n\t},\n\tset : function(curve){\n\t\tvar curves = [\"linear\", \"exponential\"];\n\t\tif (!curves.includes(curve)){\n\t\t\tthrow new Error(\"Tone.Envelope: invalid curve: \" + curve);\n\t\t} else {\n\t\t\tthis._decayCurve = curve;\n\t\t}\n\t}\n});\n\n/**\n *  Trigger the attack/decay portion of the ADSR envelope.\n *  @param  {Time} [time=now] When the attack should start.\n *  @param {NormalRange} [velocity=1] The velocity of the envelope scales the vales.\n *                               number between 0-1\n *  @returns {Tone.Envelope} this\n *  @example\n *  //trigger the attack 0.5 seconds from now with a velocity of 0.2\n *  env.triggerAttack(\"+0.5\", 0.2);\n */\nTone.Envelope.prototype.triggerAttack = function(time, velocity){\n\tthis.log(\"triggerAttack\", time, velocity);\n\ttime = this.toSeconds(time);\n\tvar originalAttack = this.toSeconds(this.attack);\n\tvar attack = originalAttack;\n\tvar decay = this.toSeconds(this.decay);\n\tvelocity = Tone.defaultArg(velocity, 1);\n\t//check if it's not a complete attack\n\tvar currentValue = this.getValueAtTime(time);\n\tif (currentValue > 0){\n\t\t//subtract the current value from the attack time\n\t\tvar attackRate = 1 / attack;\n\t\tvar remainingDistance = 1 - currentValue;\n\t\t//the attack is now the remaining time\n\t\tattack = remainingDistance / attackRate;\n\t}\n\t//attack\n\tif (attack === 0){\n\t\t//case where the attack time is 0 should set instantly\n\t\tthis._sig.setValueAtTime(velocity, time);\n\t} else if (this._attackCurve === \"linear\"){\n\t\tthis._sig.linearRampTo(velocity, attack, time);\n\t} else if (this._attackCurve === \"exponential\"){\n\t\tthis._sig.targetRampTo(velocity, attack, time);\n\t} else if (attack > 0){\n\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\tvar curve = this._attackCurve;\n\t\t//find the starting position in the curve\n\t\tfor (var i = 1; i < curve.length; i++){\n\t\t\t//the starting index is between the two values\n\t\t\tif (curve[i-1] <= currentValue && currentValue <= curve[i]){\n\t\t\t\tcurve = this._attackCurve.slice(i);\n\t\t\t\t//the first index is the current value\n\t\t\t\tcurve[0] = currentValue;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t}\n\t//decay\n\tif (decay){\n\t\tvar decayValue = velocity * this.sustain;\n\t\tvar decayStart = time + attack;\n\t\tthis.log(\"decay\", decayStart);\n\t\tif (this._decayCurve === \"linear\"){\n\t\t\tthis._sig.linearRampTo(decayValue, decay, decayStart+this.sampleTime);\n\t\t} else if (this._decayCurve === \"exponential\"){\n\t\t\tthis._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Triggers the release of the envelope.\n *  @param  {Time} [time=now] When the release portion of the envelope should start.\n *  @returns {Tone.Envelope} this\n *  @example\n *  //trigger release immediately\n *  env.triggerRelease();\n */\nTone.Envelope.prototype.triggerRelease = function(time){\n\tthis.log(\"triggerRelease\", time);\n\ttime = this.toSeconds(time);\n\tvar currentValue = this.getValueAtTime(time);\n\tif (currentValue > 0){\n\t\tvar release = this.toSeconds(this.release);\n\t\tif (this._releaseCurve === \"linear\"){\n\t\t\tthis._sig.linearRampTo(0, release, time);\n\t\t} else if (this._releaseCurve === \"exponential\"){\n\t\t\tthis._sig.targetRampTo(0, release, time);\n\t\t} else {\n\t\t\tvar curve = this._releaseCurve;\n\t\t\tif (Tone.isArray(curve)){\n\t\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\t\tthis._sig.setValueCurveAtTime(curve, time, release, currentValue);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Get the scheduled value at the given time. This will\n *  return the unconverted (raw) value.\n *  @param  {Number}  time  The time in seconds.\n *  @return  {Number}  The scheduled value at the given time.\n */\nTone.Envelope.prototype.getValueAtTime = function(time){\n\treturn this._sig.getValueAtTime(time);\n};\n\n/**\n *  triggerAttackRelease is shorthand for triggerAttack, then waiting\n *  some duration, then triggerRelease.\n *  @param {Time} duration The duration of the sustain.\n *  @param {Time} [time=now] When the attack should be triggered.\n *  @param {number} [velocity=1] The velocity of the envelope.\n *  @returns {Tone.Envelope} this\n *  @example\n * //trigger the attack and then the release after 0.6 seconds.\n * env.triggerAttackRelease(0.6);\n */\nTone.Envelope.prototype.triggerAttackRelease = function(duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.triggerAttack(time, velocity);\n\tthis.triggerRelease(time + this.toSeconds(duration));\n\treturn this;\n};\n\n/**\n *  Cancels all scheduled envelope changes after the given time.\n *  @param  {Time} after\n *  @returns {Tone.Envelope} this\n */\nTone.Envelope.prototype.cancel = function(after){\n\tthis._sig.cancelScheduledValues(after);\n\treturn this;\n};\n\n/**\n *  Borrows the connect method from Tone.Signal.\n *  @function\n *  @private\n */\nTone.Envelope.prototype.connect = Tone.SignalBase.prototype.connect;\n\n/**\n \t *  Generate some complex envelope curves.\n \t */\n(function _createCurves(){\n\n\tvar curveLen = 128;\n\n\tvar i, k;\n\n\t//cosine curve\n\tvar cosineCurve = [];\n\tfor (i = 0; i < curveLen; i++){\n\t\tcosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n\t}\n\n\t//ripple curve\n\tvar rippleCurve = [];\n\tvar rippleCurveFreq = 6.4;\n\tfor (i = 0; i < curveLen - 1; i++){\n\t\tk = (i / (curveLen - 1));\n\t\tvar sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t\trippleCurve[i] = sineWave/10 + k * 0.83;\n\t}\n\trippleCurve[curveLen - 1] = 1;\n\n\t//stairs curve\n\tvar stairsCurve = [];\n\tvar steps = 5;\n\tfor (i = 0; i < curveLen; i++){\n\t\tstairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n\t}\n\n\t//in-out easing curve\n\tvar sineCurve = [];\n\tfor (i = 0; i < curveLen; i++){\n\t\tk = i / (curveLen - 1);\n\t\tsineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t}\n\n\t//a bounce curve\n\tvar bounceCurve = [];\n\tfor (i = 0; i < curveLen; i++){\n\t\tk = i / (curveLen - 1);\n\t\tvar freq = Math.pow(k, 3) * 4 + 0.2;\n\t\tvar val = Math.cos(freq * Math.PI * 2 * k);\n\t\tbounceCurve[i] = Math.abs(val * (1 - k));\n\t}\n\n\t/**\n\t *  Invert a value curve to make it work for the release\n\t *  @private\n\t */\n\tfunction invertCurve(curve){\n\t\tvar out = new Array(curve.length);\n\t\tfor (var j = 0; j < curve.length; j++){\n\t\t\tout[j] = 1 - curve[j];\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t *  reverse the curve\n\t *  @private\n\t */\n\tfunction reverseCurve(curve){\n\t\treturn curve.slice(0).reverse();\n\t}\n\n\t/**\n\t *  attack and release curve arrays\n\t *  @type  {Object}\n\t *  @private\n\t */\n\tTone.Envelope.Type = {\n\t\t\"linear\" : \"linear\",\n\t\t\"exponential\" : \"exponential\",\n\t\t\"bounce\" : {\n\t\t\tIn : invertCurve(bounceCurve),\n\t\t\tOut : bounceCurve\n\t\t},\n\t\t\"cosine\" : {\n\t\t\tIn : cosineCurve,\n\t\t\tOut : reverseCurve(cosineCurve)\n\t\t},\n\t\t\"step\" : {\n\t\t\tIn : stairsCurve,\n\t\t\tOut : invertCurve(stairsCurve)\n\t\t},\n\t\t\"ripple\" : {\n\t\t\tIn : rippleCurve,\n\t\t\tOut : invertCurve(rippleCurve)\n\t\t},\n\t\t\"sine\" : {\n\t\t\tIn : sineCurve,\n\t\t\tOut : invertCurve(sineCurve)\n\t\t}\n\t};\n\n})();\n\n/**\n *  Disconnect and dispose.\n *  @returns {Tone.Envelope} this\n */\nTone.Envelope.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._sig.dispose();\n\tthis._sig = null;\n\tthis._attackCurve = null;\n\tthis._releaseCurve = null;\n\treturn this;\n};\n\nexport default Tone.Envelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Envelope\";\nimport \"../core/Gain\";\n\n/**\n *  @class  Tone.AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n *          Unlike Tone.Envelope, which outputs the envelope's value, Tone.AmplitudeEnvelope accepts\n *          an audio signal as the input and will apply the envelope to the amplitude\n *          of the signal. Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n *  @constructor\n *  @extends {Tone.Envelope}\n *  @param {Time|Object} [attack] The amount of time it takes for the envelope to go from\n *                               0 to it's maximum value.\n *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n *                       \tto fall to the sustain value.\n *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n *                                \tthe release is triggered.\n *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n *  @example\n * var ampEnv = new Tone.AmplitudeEnvelope({\n * \t\"attack\": 0.1,\n * \t\"decay\": 0.2,\n * \t\"sustain\": 1.0,\n * \t\"release\": 0.8\n * }).toMaster();\n * //create an oscillator and connect it\n * var osc = new Tone.Oscillator().connect(ampEnv).start();\n * //trigger the envelopes attack and release \"8t\" apart\n * ampEnv.triggerAttackRelease(\"8t\");\n */\nTone.AmplitudeEnvelope = function(){\n\n\tTone.Envelope.apply(this, arguments);\n\n\t/**\n\t *  the input node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.input = this.output = new Tone.Gain();\n\n\tthis._sig.connect(this.output.gain);\n};\n\nTone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);\n\n/**\n *  Clean up\n *  @return  {Tone.AmplitudeEnvelope}  this\n */\nTone.AmplitudeEnvelope.prototype.dispose = function(){\n\tTone.Envelope.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.AmplitudeEnvelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/AudioContext\";\n\n/**\n *  AnalyserNode.getFloatTimeDomainData polyfill\n *  @private\n */\nif (Tone.supported){\n\tif (!AnalyserNode.prototype.getFloatTimeDomainData){\n\t\t//referenced https://github.com/mohayonao/get-float-time-domain-data\n\t\tAnalyserNode.prototype.getFloatTimeDomainData = function(array){\n\t\t\tvar uint8 = new Uint8Array(array.length);\n\t\t\tthis.getByteTimeDomainData(uint8);\n\t\t\tfor (var i = 0; i < uint8.length; i++){\n\t\t\t\tarray[i] = (uint8[i] - 128) / 128;\n\t\t\t}\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/AudioNode\";\nimport \"../shim/AnalyserNode\";\n\n/**\n *  @class  Wrapper around the native Web Audio's\n *          [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n *          Extracts FFT or Waveform data from the incoming signal.\n *  @extends {Tone.AudioNode}\n *  @param {String=} type The return type of the analysis, either \"fft\", or \"waveform\".\n *  @param {Number=} size The size of the FFT. Value must be a power of\n *                       two in the range 16 to 16384.\n */\nTone.Analyser = function(){\n\n\tvar options = Tone.defaults(arguments, [\"type\", \"size\"], Tone.Analyser);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The analyser node.\n\t *  @private\n\t *  @type {AnalyserNode}\n\t */\n\tthis._analyser = this.input = this.output = this.context.createAnalyser();\n\n\t/**\n\t *  The analysis type\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  The buffer that the FFT data is written to\n\t *  @type {TypedArray}\n\t *  @private\n\t */\n\tthis._buffer = null;\n\n\t//set the values initially\n\tthis.size = options.size;\n\tthis.type = options.type;\n};\n\nTone.extend(Tone.Analyser, Tone.AudioNode);\n\n/**\n *  The default values.\n *  @type {Object}\n *  @const\n */\nTone.Analyser.defaults = {\n\t\"size\" : 1024,\n\t\"type\" : \"fft\",\n\t\"smoothing\" : 0.8\n};\n\n/**\n *  Possible return types of analyser.getValue()\n *  @enum {String}\n */\nTone.Analyser.Type = {\n\tWaveform : \"waveform\",\n\tFFT : \"fft\"\n};\n\n/**\n *  Run the analysis given the current settings and return the\n *  result as a TypedArray of length [size](#size).\n *  @returns {TypedArray}\n */\nTone.Analyser.prototype.getValue = function(){\n\tif (this._type === Tone.Analyser.Type.FFT){\n\t\tthis._analyser.getFloatFrequencyData(this._buffer);\n\t} else if (this._type === Tone.Analyser.Type.Waveform){\n\t\tthis._analyser.getFloatTimeDomainData(this._buffer);\n\t}\n\treturn this._buffer;\n};\n\n/**\n *  The size of analysis. This must be a power of two in the range 16 to 16384.\n *  @memberOf Tone.Analyser#\n *  @type {Number}\n *  @name size\n */\nObject.defineProperty(Tone.Analyser.prototype, \"size\", {\n\tget : function(){\n\t\treturn this._analyser.frequencyBinCount;\n\t},\n\tset : function(size){\n\t\t// fftSize is double frequencyBinCount\n\t\tthis._analyser.fftSize = size * 2;\n\t\tthis._buffer = new Float32Array(size);\n\t}\n});\n\n/**\n *  The analysis function returned by analyser.getValue(), either \"fft\" or \"waveform\".\n *  @memberOf Tone.Analyser#\n *  @type {String}\n *  @name type\n */\nObject.defineProperty(Tone.Analyser.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tif (type !== Tone.Analyser.Type.Waveform && type !== Tone.Analyser.Type.FFT){\n\t\t\tthrow new TypeError(\"Tone.Analyser: invalid type: \"+type);\n\t\t}\n\t\tthis._type = type;\n\t}\n});\n\n/**\n *  0 represents no time averaging with the last analysis frame.\n *  @memberOf Tone.Analyser#\n *  @type {NormalRange}\n *  @name smoothing\n */\nObject.defineProperty(Tone.Analyser.prototype, \"smoothing\", {\n\tget : function(){\n\t\treturn this._analyser.smoothingTimeConstant;\n\t},\n\tset : function(val){\n\t\tthis._analyser.smoothingTimeConstant = val;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.Analyser}  this\n */\nTone.Analyser.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.disconnect();\n\tthis._analyser = null;\n\tthis._buffer = null;\n};\n\nexport default Tone.Analyser;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\n\n/**\n *  @class Add a signal and a number or two signals. When no value is\n *         passed into the constructor, Tone.Add will sum <code>input[0]</code>\n *         and <code>input[1]</code>. If a value is passed into the constructor, \n *         the it will be added to the input.\n *  \n *  @constructor\n *  @extends {Tone.Signal}\n *  @param {number=} value If no value is provided, Tone.Add will sum the first\n *                         and second inputs. \n *  @example\n * var signal = new Tone.Signal(2);\n * var add = new Tone.Add(2);\n * signal.connect(add);\n * //the output of add equals 4\n *  @example\n * //if constructed with no arguments\n * //it will add the first and second inputs\n * var add = new Tone.Add();\n * var sig0 = new Tone.Signal(3).connect(add, 0, 0);\n * var sig1 = new Tone.Signal(4).connect(add, 0, 1);\n * //the output of add equals 7. \n */\nTone.Add = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  the summing node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._sum = this.input[0] = this.input[1] = this.output = new Tone.Gain();\n\n\t/**\n\t *  @private\n\t *  @type {Tone.Signal}\n\t */\n\tthis._param = this.input[1] = new Tone.Signal(value);\n\n\tthis._param.connect(this._sum);\n};\n\nTone.extend(Tone.Add, Tone.Signal);\n\n/**\n *  Clean up.\n *  @returns {Tone.Add} this\n */\nTone.Add.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._sum.dispose();\n\tthis._sum = null;\n\treturn this;\n}; \n\nexport default Tone.Add;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../core/Gain\";\nimport \"../signal/SignalBase\";\n\n/**\n *  @class  Multiply two incoming signals. Or, if a number is given in the constructor,\n *          multiplies the incoming signal by that value.\n *\n *  @constructor\n *  @extends {Tone.Signal}\n *  @param {number=} value Constant value to multiple. If no value is provided,\n *                         it will return the product of the first and second inputs\n *  @example\n * var mult = new Tone.Multiply();\n * var sigA = new Tone.Signal(3);\n * var sigB = new Tone.Signal(4);\n * sigA.connect(mult, 0, 0);\n * sigB.connect(mult, 0, 1);\n * //output of mult is 12.\n *  @example\n * var mult = new Tone.Multiply(10);\n * var sig = new Tone.Signal(2).connect(mult);\n * //the output of mult is 20.\n */\nTone.Multiply = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  the input node is the same as the output node\n\t *  it is also the GainNode which handles the scaling of incoming signal\n\t *\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._mult = this.input[0] = this.output = new Tone.Gain();\n\n\t/**\n\t *  the scaling parameter\n\t *  @type {AudioParam}\n\t *  @private\n\t */\n\tthis._param = this.input[1] = this.output.gain;\n\tthis.value = Tone.defaultArg(value, 0);\n};\n\nTone.extend(Tone.Multiply, Tone.Signal);\n\n/**\n *  clean up\n *  @returns {Tone.Multiply} this\n */\nTone.Multiply.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._mult.dispose();\n\tthis._mult = null;\n\tthis._param = null;\n\treturn this;\n};\n\nexport default Tone.Multiply;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Multiply\";\nimport \"../signal/Signal\";\n\n/**\n *  @class Negate the incoming signal. i.e. an input signal of 10 will output -10\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @example\n * var neg = new Tone.Negate();\n * var sig = new Tone.Signal(-2).connect(neg);\n * //output of neg is positive 2. \n */\nTone.Negate = function(){\n\n\tTone.SignalBase.call(this);\n\t/**\n\t *  negation is done by multiplying by -1\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._multiply = this.input = this.output = new Tone.Multiply(-1);\n};\n\nTone.extend(Tone.Negate, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.Negate} this\n */\nTone.Negate.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._multiply.dispose();\n\tthis._multiply = null;\n\treturn this;\n}; \n\nexport default Tone.Negate;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Negate\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\n\n/**\n *  @class Subtract the signal connected to <code>input[1]</code> from the signal connected \n *         to <code>input[0]</code>. If an argument is provided in the constructor, the \n *         signals <code>.value</code> will be subtracted from the incoming signal.\n *\n *  @extends {Tone.Signal}\n *  @constructor\n *  @param {number=} value The value to subtract from the incoming signal. If the value\n *                         is omitted, it will subtract the second signal from the first.\n *  @example\n * var sub = new Tone.Subtract(1);\n * var sig = new Tone.Signal(4).connect(sub);\n * //the output of sub is 3. \n *  @example\n * var sub = new Tone.Subtract();\n * var sigA = new Tone.Signal(10);\n * var sigB = new Tone.Signal(2.5);\n * sigA.connect(sub, 0, 0);\n * sigB.connect(sub, 0, 1);\n * //output of sub is 7.5\n */\nTone.Subtract = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  the summing node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._sum = this.input[0] = this.output = new Tone.Gain();\n\n\t/**\n\t *  negate the input of the second input before connecting it\n\t *  to the summing node.\n\t *  @type {Tone.Negate}\n\t *  @private\n\t */\n\tthis._neg = new Tone.Negate();\n\n\t/**\n\t *  the node where the value is set\n\t *  @private\n\t *  @type {Tone.Signal}\n\t */\n\tthis._param = this.input[1] = new Tone.Signal(value);\n\tthis._param.chain(this._neg, this._sum);\n};\n\nTone.extend(Tone.Subtract, Tone.Signal);\n\n/**\n *  Clean up.\n *  @returns {Tone.SignalBase} this\n */\nTone.Subtract.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._neg.dispose();\n\tthis._neg = null;\n\tthis._sum.disconnect();\n\tthis._sum = null;\n\treturn this;\n};\n\nexport default Tone.Subtract;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Convert an incoming signal between 0, 1 to an equal power gain scale.\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @example\n * var eqPowGain = new Tone.EqualPowerGain();\n */\nTone.EqualPowerGain = function(){\n\n\tTone.SignalBase.call(this);\n\t/**\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._eqPower = this.input = this.output = new Tone.WaveShaper(function(val){\n\t\tif (Math.abs(val) < 0.001){\n\t\t\t//should output 0 when input is 0\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn Tone.equalPowerScale(val);\n\t\t}\n\t}.bind(this), 4096);\n};\n\nTone.extend(Tone.EqualPowerGain, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.EqualPowerGain} this\n */\nTone.EqualPowerGain.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._eqPower.dispose();\n\tthis._eqPower = null;\n\treturn this;\n};\n\nexport default Tone.EqualPowerGain;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Subtract\";\nimport \"../signal/EqualPowerGain\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n * @class  Tone.Crossfade provides equal power fading between two inputs.\n *         More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n *\n * @constructor\n * @extends {Tone.AudioNode}\n * @param {NormalRange} [initialFade=0.5]\n * @example\n * var crossFade = new Tone.CrossFade(0.5);\n * //connect effect A to crossfade from\n * //effect output 0 to crossfade input 0\n * effectA.connect(crossFade, 0, 0);\n * //connect effect B to crossfade from\n * //effect output 0 to crossfade input 1\n * effectB.connect(crossFade, 0, 1);\n * crossFade.fade.value = 0;\n * // ^ only effectA is output\n * crossFade.fade.value = 1;\n * // ^ only effectB is output\n * crossFade.fade.value = 0.5;\n * // ^ the two signals are mixed equally.\n */\nTone.CrossFade = function(initialFade){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(2, 1);\n\n\t/**\n\t *  Alias for <code>input[0]</code>.\n\t *  @type {Tone.Gain}\n\t */\n\tthis.a = this.input[0] = new Tone.Gain();\n\n\t/**\n\t *  Alias for <code>input[1]</code>.\n\t *  @type {Tone.Gain}\n\t */\n\tthis.b = this.input[1] = new Tone.Gain();\n\n\t/**\n\t * \tThe mix between the two inputs. A fade value of 0\n\t * \twill output 100% <code>input[0]</code> and\n\t * \ta value of 1 will output 100% <code>input[1]</code>.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.fade = new Tone.Signal(Tone.defaultArg(initialFade, 0.5), Tone.Type.NormalRange);\n\n\t/**\n\t *  equal power gain cross fade\n\t *  @private\n\t *  @type {Tone.EqualPowerGain}\n\t */\n\tthis._equalPowerA = new Tone.EqualPowerGain();\n\n\t/**\n\t *  equal power gain cross fade\n\t *  @private\n\t *  @type {Tone.EqualPowerGain}\n\t */\n\tthis._equalPowerB = new Tone.EqualPowerGain();\n\n\t/**\n\t *  invert the incoming signal\n\t *  @private\n\t *  @type {Tone}\n\t */\n\tthis._one = this.context.getConstant(1);\n\n\t/**\n\t *  invert the incoming signal\n\t *  @private\n\t *  @type {Tone.Subtract}\n\t */\n\tthis._invert = new Tone.Subtract();\n\n\t//connections\n\tthis.a.connect(this.output);\n\tthis.b.connect(this.output);\n\tthis.fade.chain(this._equalPowerB, this.b.gain);\n\tTone.connect(this._one, this._invert, 0, 0);\n\tthis.fade.connect(this._invert, 0, 1);\n\tthis._invert.chain(this._equalPowerA, this.a.gain);\n\tthis._readOnly(\"fade\");\n};\n\nTone.extend(Tone.CrossFade, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.CrossFade} this\n */\nTone.CrossFade.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"fade\");\n\tthis._equalPowerA.dispose();\n\tthis._equalPowerA = null;\n\tthis._equalPowerB.dispose();\n\tthis._equalPowerB = null;\n\tthis.fade.dispose();\n\tthis.fade = null;\n\tthis._invert.dispose();\n\tthis._invert = null;\n\tthis._one = null;\n\tthis.a.dispose();\n\tthis.a = null;\n\tthis.b.dispose();\n\tthis.b = null;\n\treturn this;\n};\n\nexport default Tone.CrossFade;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Merge brings two signals into the left and right\n *          channels of a single stereo channel.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {number} [channels=2] The number of channels to merge. \n *  @example\n * var merge = new Tone.Merge().toMaster();\n * //routing a sine tone in the left channel\n * //and noise in the right channel\n * var osc = new Tone.Oscillator().connect(merge.left);\n * var noise = new Tone.Noise().connect(merge.right);\n * //starting our oscillators\n * noise.start();\n * osc.start();\n */\nTone.Merge = function(channels){\n\n\t//defaults to 2 channels\n\tchannels = Tone.defaultArg(channels, 2);\n\t\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(channels, 0);\n\n\t/**\n\t *  the merger node for the two channels\n\t *  @type {ChannelMergerNode}\n\t *  @private\n\t */\n\tthis._merger = this.output = this.context.createChannelMerger(channels);\n\n\t//connections\n\tfor (var i = 0; i < channels; i++){\n\t\tthis.input[i] = new Tone.Gain();\n\t\tthis.input[i].connect(this._merger, 0, i);\n\t\tthis.input[i].channelCount = 1;\n\t\tthis.input[i].channelCountMode = \"explicit\";\n\t}\n\n\t/**\n\t *  The left input channel.\n\t *  Alias for <code>input[0]</code>\n\t *  @type {GainNode}\n\t */\n\tthis.left = this.input[0];\n\n\t/**\n\t *  The right input channel.\n\t *  Alias for <code>input[1]</code>.\n\t *  @type {GainNode}\n\t */\n\tthis.right = this.input[1];\n};\n\nTone.extend(Tone.Merge, Tone.AudioNode);\n\n/**\n *  Clean up.\n *  @returns {Tone.Merge} this\n */\nTone.Merge.prototype.dispose = function(){\n\tthis.input.forEach(function(input){\n\t\tinput.dispose();\n\t});\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.left = null;\n\tthis.right = null;\n\tthis._merger.disconnect();\n\tthis._merger = null;\n\treturn this;\n};\n\nexport default Tone.Merge;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *\t@class  Tone.Split splits an incoming signal into left and right channels.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {number} [channels=2] The number of channels to merge.\n *  @example\n * var split = new Tone.Split();\n * stereoSignal.connect(split);\n */\nTone.Split = function(channels){\n\n\t//defaults to 2 channels\n\tchannels = Tone.defaultArg(channels, 2);\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(0, channels);\n\n\t/**\n\t *  @type {ChannelSplitterNode}\n\t *  @private\n\t */\n\tthis._splitter = this.input = this.context.createChannelSplitter(channels);\n\n\t//connections\n\tfor (var i = 0; i < channels; i++){\n\t\tthis.output[i] = new Tone.Gain();\n\t\tTone.connect(this._splitter, this.output[i], i, 0);\n\t\tthis.output[i].channelCount = 1;\n\t\tthis.output[i].channelCountMode = \"explicit\";\n\t}\n\n\t/**\n\t *  Left channel output.\n\t *  Alias for <code>output[0]</code>\n\t *  @type {Tone.Gain}\n\t */\n\tthis.left = this.output[0];\n\n\t/**\n\t *  Right channel output.\n\t *  Alias for <code>output[1]</code>\n\t *  @type {Tone.Gain}\n\t */\n\tthis.right = this.output[1];\n};\n\nTone.extend(Tone.Split, Tone.AudioNode);\n\n/**\n *  Clean up.\n *  @returns {Tone.Split} this\n */\nTone.Split.prototype.dispose = function(){\n\tthis.output.forEach(function(output){\n\t\toutput.dispose();\n\t});\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._splitter.disconnect();\n\tthis.left = null;\n\tthis.right = null;\n\tthis._splitter = null;\n\treturn this;\n};\n\nexport default Tone.Split;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\nimport \"../signal/SignalBase\";\n\n/**\n *  @class Tone.Zero outputs 0's at audio-rate. The reason this has to be\n *         it's own class is that many browsers optimize out Tone.Signal\n *         with a value of 0 and will not process nodes further down the graph.\n *  @extends {Tone.SignalBase}\n */\nTone.Zero = function(){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  The gain node\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._gain = this.input = this.output = new Tone.Gain();\n\n\tTone.connect(this.context.getConstant(0), this._gain);\n};\n\nTone.extend(Tone.Zero, Tone.SignalBase);\n\n/**\n *  clean up\n *  @return  {Tone.Zero}  this\n */\nTone.Zero.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._gain.dispose();\n\tthis._gain = null;\n\treturn this;\n};\n\nexport default Tone.Zero;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../component/Merge\";\nimport \"../signal/Zero\";\nimport \"../component/Split\";\nimport \"../core/Gain\";\nimport \"../signal/Signal\";\nimport \"../core/Context\";\n\nif (Tone.supported && !Tone.global.AudioContext.prototype.createStereoPanner){\n\n\t/**\n\t * @class Shimmed StereoPannerNode\n\t * @param  {AudioContext} context\n\t * @private\n\t */\n\tvar StereoPannerNode = function(context){\n\n\t\t/**\n\t\t * The audio context\n\t\t * @type {AudioContext}\n\t\t */\n\t\tthis.context = context;\n\n\t\t/**\n\t\t * The left/right panning. [-1, 1]\n\t\t * @type {AudioRange}\n\t\t * @signal\n\t\t */\n\t\tthis.pan = new Tone.Signal(0, Tone.Type.AudioRange);\n\n\t\t/**\n\t\t * Equal power scaling of the right gain\n\t\t * @type {Tone.WaveShaper}\n\t\t */\n\t\tvar rightWaveShaper = new Tone.WaveShaper(function(val){\n\t\t\treturn Tone.equalPowerScale((val+1)/2);\n\t\t}, 4096);\n\n\t\t/**\n\t\t * Equal power scaling of the left gain\n\t\t * @type {Tone.WaveShaper}\n\t\t * @private\n\t\t */\n\t\tvar leftWaveShaper = new Tone.WaveShaper(function(val){\n\t\t\treturn Tone.equalPowerScale(1 - (val+1)/2);\n\t\t}, 4096);\n\n\t\t/**\n\t\t * The left gain value\n\t\t * @type {Tone.Gain}\n\t\t * @private\n\t\t */\n\t\tvar leftGain = new Tone.Gain();\n\n\t\t/**\n\t\t * The right gain value\n\t\t * @type {Tone.Gain}\n\t\t * @private\n\t\t */\n\t\tvar rightGain = new Tone.Gain();\n\n\t\t/**\n\t\t * Split the incoming signal\n\t\t * @type {Tone.Split}\n\t\t * @private\n\t\t */\n\t\tvar split = this.input = new Tone.Split();\n\t\t//fixes safari issue with splitting audio\n\t\tsplit._splitter.channelCountMode = \"explicit\";\n\n\t\t/**\n\t\t * Keeps the waveshapers from optimizing 0s\n\t\t * @type {Tone.Zero}\n\t\t * @private\n\t\t */\n\t\tvar zero = new Tone.Zero();\n\t\tzero.fan(rightWaveShaper, leftWaveShaper);\n\n\t\t/**\n\t\t * Merge the outgoing signal\n\t\t * @type {Tone.Merge}\n\t\t * @private\n\t\t */\n\t\tvar merge = this.output = new Tone.Merge();\n\n\t\t//connections\n\t\tsplit.left.chain(leftGain, merge.left);\n\t\tsplit.right.chain(rightGain, merge.right);\n\t\tthis.pan.chain(leftWaveShaper, leftGain.gain);\n\t\tthis.pan.chain(rightWaveShaper, rightGain.gain);\n\t};\n\n\tStereoPannerNode.prototype.disconnect = function(){\n\t\tthis.output.disconnect.apply(this.output, arguments);\n\t};\n\n\tStereoPannerNode.prototype.connect = function(){\n\t\tthis.output.connect.apply(this.output, arguments);\n\t};\n\n\t//add it to the AudioContext\n\tAudioContext.prototype.createStereoPanner = function(){\n\t\treturn new StereoPannerNode(this);\n\t};\n\tTone.Context.prototype.createStereoPanner = function(){\n\t\treturn new StereoPannerNode(this);\n\t};\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/Signal\";\n\n/**\n *  @class AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1]. \n *         See Tone.GainToAudio.\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @example\n *  var a2g = new Tone.AudioToGain();\n */\nTone.AudioToGain = function(){\n\n\tTone.SignalBase.call(this);\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._norm = this.input = this.output = new Tone.WaveShaper(function(x){\n\t\treturn (x + 1) / 2;\n\t});\n};\n\nTone.extend(Tone.AudioToGain, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.AudioToGain} this\n */\nTone.AudioToGain.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._norm.dispose();\n\tthis._norm = null;\n\treturn this;\n};\n\nexport default Tone.AudioToGain;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../component/Merge\";\nimport \"../component/Split\";\nimport \"../shim/StereoPannerNode\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../signal/Zero\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Panner is an equal power Left/Right Panner and does not\n *          support 3D. Panner uses the StereoPannerNode when available.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {NormalRange} [initialPan=0] The initail panner value (center).\n *  @example\n *  //pan the input signal hard right.\n *  var panner = new Tone.Panner(1);\n */\nTone.Panner = function(){\n\n\tvar options = Tone.defaults(arguments, [\"pan\"], Tone.Panner);\n\tTone.AudioNode.call(this);\n\t/**\n\t*  the panner node\n\t*  @type {StereoPannerNode}\n\t*  @private\n\t*/\n\tthis._panner = this.input = this.output = this.context.createStereoPanner();\n\n\t/**\n\t*  The pan control. -1 = hard left, 1 = hard right.\n\t*  @type {AudioRange}\n\t*  @signal\n\t*/\n\tthis.pan = this._panner.pan;\n\n\t//initial value\n\tthis.pan.value = options.pan;\n\tthis._readOnly(\"pan\");\n};\n\nTone.extend(Tone.Panner, Tone.AudioNode);\n\n/**\n *  Defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.Panner.defaults = {\n\t\"pan\" : 0\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Panner} this\n */\nTone.Panner.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"pan\");\n\tthis._panner.disconnect();\n\tthis._panner = null;\n\tthis.pan = null;\n\treturn this;\n};\n\nexport default Tone.Panner;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Volume is a simple volume node, useful for creating a volume fader.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Decibels} [volume=0] the initial volume\n *  @example\n * var vol = new Tone.Volume(-12);\n * instrument.chain(vol, Tone.Master);\n */\nTone.Volume = function(){\n\n\tvar options = Tone.defaults(arguments, [\"volume\"], Tone.Volume);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t * the output node\n\t * @type {GainNode}\n\t * @private\n\t */\n\tthis.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);\n\n\t/**\n\t * The unmuted volume\n\t * @type {Decibels}\n\t * @private\n\t */\n\tthis._unmutedVolume = options.volume;\n\n\t/**\n\t *  The volume control in decibels.\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.volume = this.output.gain;\n\n\tthis._readOnly(\"volume\");\n\n\t//set the mute initially\n\tthis.mute = options.mute;\n};\n\nTone.extend(Tone.Volume, Tone.AudioNode);\n\n/**\n *  Defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.Volume.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n * Mute the output.\n * @memberOf Tone.Volume#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * volume.mute = true;\n */\nObject.defineProperty(Tone.Volume.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this.volume.value === -Infinity;\n\t},\n\tset : function(mute){\n\t\tif (!this.mute && mute){\n\t\t\tthis._unmutedVolume = this.volume.value;\n\t\t\t//maybe it should ramp here?\n\t\t\tthis.volume.value = -Infinity;\n\t\t} else if (this.mute && !mute){\n\t\t\tthis.volume.value = this._unmutedVolume;\n\t\t}\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Volume} this\n */\nTone.Volume.prototype.dispose = function(){\n\tthis.input.dispose();\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"volume\");\n\tthis.volume.dispose();\n\tthis.volume = null;\n\treturn this;\n};\n\nexport default Tone.Volume;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Panner\";\nimport \"../component/Volume\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.PanVol is a Tone.Panner and Tone.Volume in one.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {AudioRange} pan the initial pan\n *  @param {number} volume The output volume.\n *  @example\n * //pan the incoming signal left and drop the volume\n * var panVol = new Tone.PanVol(-0.25, -12);\n */\nTone.PanVol = function(){\n\n\tvar options = Tone.defaults(arguments, [\"pan\", \"volume\"], Tone.PanVol);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The panning node\n\t *  @type {Tone.Panner}\n\t *  @private\n\t */\n\tthis._panner = this.input = new Tone.Panner(options.pan);\n\n\t/**\n\t *  The L/R panning control.\n\t *  @type {AudioRange}\n\t *  @signal\n\t */\n\tthis.pan = this._panner.pan;\n\n\t/**\n\t *  The volume node\n\t *  @type {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t *  The volume control in decibels.\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.volume = this._volume.volume;\n\n\t//connections\n\tthis._panner.connect(this._volume);\n\tthis.mute = options.mute;\n\n\tthis._readOnly([\"pan\", \"volume\"]);\n};\n\nTone.extend(Tone.PanVol, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.PanVol.defaults = {\n\t\"pan\" : 0,\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n * Mute/unmute the volume\n * @memberOf Tone.PanVol#\n * @name mute\n * @type {Boolean}\n */\nObject.defineProperty(Tone.PanVol.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.PanVol} this\n */\nTone.PanVol.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"pan\", \"volume\"]);\n\tthis._panner.dispose();\n\tthis._panner = null;\n\tthis.pan = null;\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n\treturn this;\n};\n\nexport default Tone.PanVol;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Solo lets you isolate a specific audio stream. When\n *         an instance is set to `solo=true`, it will mute all other instances.\n *  @extends {Tone.AudioNode}\n *  @example\n * var soloA = new Tone.Solo()\n * var soloB = new Tone.Solo()\n * soloA.solo = true\n * //no audio will pass through soloB\n */\nTone.Solo = function(){\n\n\tvar options = Tone.defaults(arguments, [\"solo\"], Tone.Solo);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The input and output node\n\t *  @type  {Tone.Gain}\n\t */\n\tthis.input = this.output = new Tone.Gain();\n\n\t/**\n\t *  A bound _soloed method\n\t *  @type  {Function}\n\t *  @private\n\t */\n\tthis._soloBind = this._soloed.bind(this);\n\n\t//listen for solo events class-wide.\n\tthis.context.on(\"solo\", this._soloBind);\n\t//set initially\n\tthis.solo = options.solo;\n};\n\nTone.extend(Tone.Solo, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @static\n */\nTone.Solo.defaults = {\n\tsolo : false,\n};\n\n/**\n *  Isolates this instance and mutes all other instances of Tone.Solo.\n *  Only one instance can be soloed at a time. A soloed\n *  instance will report `solo=false` when another instance is soloed.\n *  @memberOf Tone.Solo#\n *  @type {Boolean}\n *  @name solo\n */\nObject.defineProperty(Tone.Solo.prototype, \"solo\", {\n\tget : function(){\n\t\treturn this._isSoloed();\n\t},\n\tset : function(solo){\n\t\tif (solo){\n\t\t\tthis._addSolo();\n\t\t} else {\n\t\t\tthis._removeSolo();\n\t\t}\n\t\tthis.context.emit(\"solo\", this);\n\t}\n});\n\n/**\n *  If the current instance is muted, i.e. another instance is soloed\n *  @memberOf Tone.Solo#\n *  @type {Boolean}\n *  @name muted\n *  @readOnly\n */\nObject.defineProperty(Tone.Solo.prototype, \"muted\", {\n\tget : function(){\n\t\treturn this.input.gain.value === 0;\n\t}\n});\n\n/**\n * Add this to the soloed array\n * @private\n */\nTone.Solo.prototype._addSolo = function(){\n\tif (!Tone.isArray(this.context._currentSolo)){\n\t\tthis.context._currentSolo = [];\n\t}\n\tif (!this._isSoloed()){\n\t\tthis.context._currentSolo.push(this);\n\t}\n};\n\n/**\n * Remove this from the soloed array\n * @private\n */\nTone.Solo.prototype._removeSolo = function(){\n\tif (this._isSoloed()){\n\t\tvar index = this.context._currentSolo.indexOf(this);\n\t\tthis.context._currentSolo.splice(index, 1);\n\t}\n};\n\n/**\n * @return {Boolean} Is this on the soloed array\n * @private\n */\nTone.Solo.prototype._isSoloed = function(){\n\tif (Tone.isArray(this.context._currentSolo)){\n\t\treturn this.context._currentSolo.length !== 0 && this.context._currentSolo.indexOf(this) !== -1;\n\t} else {\n\t\treturn false;\n\t}\n};\n\n/**\n * @return {Boolean} Returns true if no one is soloed\n * @private\n */\nTone.Solo.prototype._noSolos = function(){\n\treturn !Tone.isArray(this.context._currentSolo) || this.context._currentSolo.length === 0;\n};\n\n/**\n *  Solo the current instance and unsolo all other instances.\n *  @param  {Tone.Solo}  instance  The instance which is being soloed/unsoloed.\n *  @private\n */\nTone.Solo.prototype._soloed = function(){\n\tif (this._isSoloed()){\n\t\tthis.input.gain.value = 1;\n\t} else if (this._noSolos()){\n\t\t//no one is soloed\n\t\tthis.input.gain.value = 1;\n\t} else {\n\t\tthis.input.gain.value = 0;\n\t}\n};\n\n/**\n *  Clean up\n *  @return  {Tone.Solo}  this\n */\nTone.Solo.prototype.dispose = function(){\n\tthis.context.off(\"solo\", this._soloBind);\n\tthis._removeSolo();\n\tthis._soloBind = null;\n\tTone.AudioNode.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.Solo;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/PanVol\";\nimport \"../component/Solo\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Channel provides a channel strip interface with \n *  volume, pan, solo and mute controls. \n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Decibels} volume The output volume.\n *  @param {AudioRange} pan the initial pan\n *  @example\n * //pan the incoming signal left and drop the volume\n * var channel = new Tone.Channel(-0.25, -12);\n */\nTone.Channel = function(){\n\n\tvar options = Tone.defaults(arguments, [\"volume\", \"pan\"], Tone.PanVol);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The soloing interface\n\t *  @type {Tone.Solo}\n\t *  @private\n\t */\n\tthis._solo = this.input = new Tone.Solo(options.solo);\n\n\t/**\n\t *  The panning and volume node\n\t *  @type {Tone.PanVol}\n\t *  @private\n\t */\n\tthis._panVol = this.output = new Tone.PanVol({\n\t\t\"pan\" : options.pan, \n\t\t\"volume\" : options.volume,\n\t\t\"mute\" : options.mute\n\t});\n\n\t/**\n\t *  The L/R panning control.\n\t *  @type {AudioRange}\n\t *  @signal\n\t */\n\tthis.pan = this._panVol.pan;\n\n\t/**\n\t *  The volume control in decibels.\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.volume = this._panVol.volume;\n\n\tthis._solo.connect(this._panVol);\n\tthis._readOnly([\"pan\", \"volume\"]);\n};\n\nTone.extend(Tone.Channel, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.Channel.defaults = {\n\t\"pan\" : 0,\n\t\"volume\" : 0,\n\t\"mute\" : false,\n\t\"solo\" : false\n};\n\n/**\n * Solo/unsolo the channel. Soloing is only relative to other\n * Tone.Channels and Tone.Solos. \n * @memberOf Tone.Channel#\n * @name solo\n * @type {Boolean}\n */\nObject.defineProperty(Tone.Channel.prototype, \"solo\", {\n\tget : function(){\n\t\treturn this._solo.solo;\n\t},\n\tset : function(solo){\n\t\tthis._solo.solo = solo;\n\t}\n});\n\n/**\n *  If the current instance is muted, i.e. another instance is soloed,\n *  or the channel is muted\n *  @memberOf Tone.Channel#\n *  @type {Boolean}\n *  @name muted\n *  @readOnly\n */\nObject.defineProperty(Tone.Channel.prototype, \"muted\", {\n\tget : function(){\n\t\treturn this._solo.muted || this.mute;\n\t}\n});\n\n/**\n * Mute/unmute the volume\n * @memberOf Tone.Channel#\n * @name mute\n * @type {Boolean}\n */\nObject.defineProperty(Tone.Channel.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._panVol.mute;\n\t},\n\tset : function(mute){\n\t\tthis._panVol.mute = mute;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Channel} this\n */\nTone.Channel.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"pan\", \"volume\"]);\n\tthis._panVol.dispose();\n\tthis._panVol = null;\n\tthis.pan = null;\n\tthis.volume = null;\n\tthis._solo.dispose();\n\tthis._solo = null;\n\treturn this;\n};\n\nexport default Tone.Channel;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Compressor is a thin wrapper around the Web Audio\n *         [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n *         Compression reduces the volume of loud sounds or amplifies quiet sounds\n *         by narrowing or \"compressing\" an audio signal's dynamic range.\n *         Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Decibels|Object} [threshold] The value above which the compression starts to be applied.\n *  @param {Positive} [ratio] The gain reduction ratio.\n *  @example\n * var comp = new Tone.Compressor(-30, 3);\n */\nTone.Compressor = function(){\n\n\tvar options = Tone.defaults(arguments, [\"threshold\", \"ratio\"], Tone.Compressor);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the compressor node\n\t *  @type {DynamicsCompressorNode}\n\t *  @private\n\t */\n\tthis._compressor = this.input = this.output = this.context.createDynamicsCompressor();\n\n\t/**\n\t *  the threshold vaue\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.threshold = new Tone.Param({\n\t\t\"param\" : this._compressor.threshold,\n\t\t\"units\" : Tone.Type.Decibels,\n\t\t\"convert\" : false\n\t});\n\n\t/**\n\t *  The attack parameter\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.attack = new Tone.Param(this._compressor.attack, Tone.Type.Time);\n\n\t/**\n\t *  The release parameter\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.release = new Tone.Param(this._compressor.release, Tone.Type.Time);\n\n\t/**\n\t *  The knee parameter\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.knee = new Tone.Param({\n\t\t\"param\" : this._compressor.knee,\n\t\t\"units\" : Tone.Type.Decibels,\n\t\t\"convert\" : false\n\t});\n\n\t/**\n\t *  The ratio value\n\t *  @type {Number}\n\t *  @signal\n\t */\n\tthis.ratio = new Tone.Param({\n\t\t\"param\" : this._compressor.ratio,\n\t\t\"convert\" : false\n\t});\n\n\t//set the defaults\n\tthis._readOnly([\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n\tthis.set(options);\n};\n\nTone.extend(Tone.Compressor, Tone.AudioNode);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Compressor.defaults = {\n\t\"ratio\" : 12,\n\t\"threshold\" : -24,\n\t\"release\" : 0.25,\n\t\"attack\" : 0.003,\n\t\"knee\" : 30\n};\n\n/**\n *  clean up\n *  @returns {Tone.Compressor} this\n */\nTone.Compressor.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n\tthis._compressor.disconnect();\n\tthis._compressor = null;\n\tthis.attack.dispose();\n\tthis.attack = null;\n\tthis.release.dispose();\n\tthis.release = null;\n\tthis.threshold.dispose();\n\tthis.threshold = null;\n\tthis.ratio.dispose();\n\tthis.ratio = null;\n\tthis.knee.dispose();\n\tthis.knee = null;\n\treturn this;\n};\n\nexport default Tone.Compressor;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Filter is a filter which allows for all of the same native methods\n *          as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).\n *          Tone.Filter has the added ability to set the filter rolloff at -12\n *          (default), -24 and -48.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Frequency|Object} [frequency] The cutoff frequency of the filter.\n *  @param {string=} type The type of filter.\n *  @param {number=} rolloff The drop in decibels per octave after the cutoff frequency.\n *                            3 choices: -12, -24, and -48\n *  @example\n *  var filter = new Tone.Filter(200, \"highpass\");\n */\nTone.Filter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"rolloff\"], Tone.Filter);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  the filter(s)\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._filters = [];\n\n\t/**\n\t *  The cutoff frequency of the filter.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune parameter\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(0, Tone.Type.Cents);\n\n\t/**\n\t *  The gain of the filter, only used in certain filter types\n\t *  @type {Number}\n\t *  @signal\n\t */\n\tthis.gain = new Tone.Signal({\n\t\t\"value\" : options.gain,\n\t\t\"convert\" : true,\n\t\t\"type\" : Tone.Type.Decibels\n\t});\n\n\t/**\n\t *  The Q or Quality of the filter\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.Q = new Tone.Signal(options.Q);\n\n\t/**\n\t *  the type of the filter\n\t *  @type {string}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  the rolloff value of the filter\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._rolloff = options.rolloff;\n\n\t//set the rolloff;\n\tthis.rolloff = options.rolloff;\n\tthis._readOnly([\"detune\", \"frequency\", \"gain\", \"Q\"]);\n};\n\nTone.extend(Tone.Filter, Tone.AudioNode);\n\n/**\n *  the default parameters\n *\n *  @static\n *  @type {Object}\n */\nTone.Filter.defaults = {\n\t\"type\" : \"lowpass\",\n\t\"frequency\" : 350,\n\t\"rolloff\" : -12,\n\t\"Q\" : 1,\n\t\"gain\" : 0,\n};\n\n/**\n * The type of the filter. Types: \"lowpass\", \"highpass\",\n * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\".\n * @memberOf Tone.Filter#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Filter.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tvar types = [\"lowpass\", \"highpass\", \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n\t\tif (types.indexOf(type)=== -1){\n\t\t\tthrow new TypeError(\"Tone.Filter: invalid type \"+type);\n\t\t}\n\t\tthis._type = type;\n\t\tfor (var i = 0; i < this._filters.length; i++){\n\t\t\tthis._filters[i].type = type;\n\t\t}\n\t}\n});\n\n/**\n * The rolloff of the filter which is the drop in db\n * per octave. Implemented internally by cascading filters.\n * Only accepts the values -12, -24, -48 and -96.\n * @memberOf Tone.Filter#\n * @type {number}\n * @name rolloff\n */\nObject.defineProperty(Tone.Filter.prototype, \"rolloff\", {\n\tget : function(){\n\t\treturn this._rolloff;\n\t},\n\tset : function(rolloff){\n\t\trolloff = parseInt(rolloff, 10);\n\t\tvar possibilities = [-12, -24, -48, -96];\n\t\tvar cascadingCount = possibilities.indexOf(rolloff);\n\t\t//check the rolloff is valid\n\t\tif (cascadingCount === -1){\n\t\t\tthrow new RangeError(\"Tone.Filter: rolloff can only be -12, -24, -48 or -96\");\n\t\t}\n\t\tcascadingCount += 1;\n\t\tthis._rolloff = rolloff;\n\t\t//first disconnect the filters and throw them away\n\t\tthis.input.disconnect();\n\t\tfor (var i = 0; i < this._filters.length; i++){\n\t\t\tthis._filters[i].disconnect();\n\t\t\tthis._filters[i] = null;\n\t\t}\n\t\tthis._filters = new Array(cascadingCount);\n\t\tfor (var count = 0; count < cascadingCount; count++){\n\t\t\tvar filter = this.context.createBiquadFilter();\n\t\t\tfilter.type = this._type;\n\t\t\tthis.frequency.connect(filter.frequency);\n\t\t\tthis.detune.connect(filter.detune);\n\t\t\tthis.Q.connect(filter.Q);\n\t\t\tthis.gain.connect(filter.gain);\n\t\t\tthis._filters[count] = filter;\n\t\t}\n\t\t//connect them up\n\t\tvar connectionChain = [this.input].concat(this._filters).concat([this.output]);\n\t\tTone.connectSeries.apply(Tone, connectionChain);\n\t}\n});\n\n/**\n * Get the frequency response curve. This curve represets how the filter\n * responses to frequencies between 20hz-20khz. \n * @param  {Number} [len=128] The number of values to return\n * @return {Float32Array}     The frequency response curve between 20-20k\n */\nTone.Filter.prototype.getFrequencyResponse = function(len){\n\tlen = Tone.defaultArg(len, 128);\n\t//start with all 1s\n\tvar totalResponse = new Float32Array(len).map(function(){\n\t\treturn 1;\n\t});\n\tvar freqValues = new Float32Array(len);\n\tfor (var i = 0; i < len; i++){\n\t\tconst norm = Math.pow(i / len, 2);\n\t\tvar freq = norm * (20000 - 20) + 20;\n\t\tfreqValues[i] = freq;\n\t}\n\tvar magValues = new Float32Array(len);\n\tvar phaseValues = new Float32Array(len);\n\tthis._filters.forEach(function(){\n\t\tvar filterClone = this.context.createBiquadFilter();\n\t\tfilterClone.type = this._type;\n\t\tfilterClone.Q.value = this.Q.value;\n\t\tfilterClone.frequency.value = this.frequency.value;\n\t\tfilterClone.gain.value = this.gain.value;\n\t\tfilterClone.getFrequencyResponse(freqValues, magValues, phaseValues);\n\t\tmagValues.forEach(function(val, i){\n\t\t\ttotalResponse[i] *= val;\n\t\t});\n\t}.bind(this));\n\treturn totalResponse;\n};\n\n/**\n *  Clean up.\n *  @return {Tone.Filter} this\n */\nTone.Filter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tfor (var i = 0; i < this._filters.length; i++){\n\t\tthis._filters[i].disconnect();\n\t\tthis._filters[i] = null;\n\t}\n\tthis._filters = null;\n\tthis._writable([\"detune\", \"frequency\", \"gain\", \"Q\"]);\n\tthis.frequency.dispose();\n\tthis.Q.dispose();\n\tthis.frequency = null;\n\tthis.Q = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.gain.dispose();\n\tthis.gain = null;\n\treturn this;\n};\n\nexport default Tone.Filter;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Filter\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Split the incoming signal into three bands (low, mid, high)\n *         with two crossover frequency controls.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Frequency|Object} [lowFrequency] the low/mid crossover frequency\n *  @param {Frequency} [highFrequency] the mid/high crossover frequency\n */\nTone.MultibandSplit = function(){\n\n\tvar options = Tone.defaults(arguments, [\"lowFrequency\", \"highFrequency\"], Tone.MultibandSplit);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the input\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.input = new Tone.Gain();\n\n\t/**\n\t *  the outputs\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis.output = new Array(3);\n\n\t/**\n\t *  The low band. Alias for <code>output[0]</code>\n\t *  @type {Tone.Filter}\n\t */\n\tthis.low = this.output[0] = new Tone.Filter(0, \"lowpass\");\n\n\t/**\n\t *  the lower filter of the mid band\n\t *  @type {Tone.Filter}\n\t *  @private\n\t */\n\tthis._lowMidFilter = new Tone.Filter(0, \"highpass\");\n\n\t/**\n\t *  The mid band output. Alias for <code>output[1]</code>\n\t *  @type {Tone.Filter}\n\t */\n\tthis.mid = this.output[1] = new Tone.Filter(0, \"lowpass\");\n\n\t/**\n\t *  The high band output. Alias for <code>output[2]</code>\n\t *  @type {Tone.Filter}\n\t */\n\tthis.high = this.output[2] = new Tone.Filter(0, \"highpass\");\n\n\t/**\n\t *  The low/mid crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.lowFrequency = new Tone.Signal(options.lowFrequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The mid/high crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.highFrequency = new Tone.Signal(options.highFrequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The quality of all the filters\n\t *  @type {Number}\n\t *  @signal\n\t */\n\tthis.Q = new Tone.Signal(options.Q);\n\n\tthis.input.fan(this.low, this.high);\n\tthis.input.chain(this._lowMidFilter, this.mid);\n\t//the frequency control signal\n\tthis.lowFrequency.connect(this.low.frequency);\n\tthis.lowFrequency.connect(this._lowMidFilter.frequency);\n\tthis.highFrequency.connect(this.mid.frequency);\n\tthis.highFrequency.connect(this.high.frequency);\n\t//the Q value\n\tthis.Q.connect(this.low.Q);\n\tthis.Q.connect(this._lowMidFilter.Q);\n\tthis.Q.connect(this.mid.Q);\n\tthis.Q.connect(this.high.Q);\n\n\tthis._readOnly([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n};\n\nTone.extend(Tone.MultibandSplit, Tone.AudioNode);\n\n/**\n *  @private\n *  @static\n *  @type {Object}\n */\nTone.MultibandSplit.defaults = {\n\t\"lowFrequency\" : 400,\n\t\"highFrequency\" : 2500,\n\t\"Q\" : 1,\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.MultibandSplit} this\n */\nTone.MultibandSplit.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n\tthis.low.dispose();\n\tthis.low = null;\n\tthis._lowMidFilter.dispose();\n\tthis._lowMidFilter = null;\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.high.dispose();\n\tthis.high = null;\n\tthis.lowFrequency.dispose();\n\tthis.lowFrequency = null;\n\tthis.highFrequency.dispose();\n\tthis.highFrequency = null;\n\tthis.Q.dispose();\n\tthis.Q = null;\n\treturn this;\n};\n\nexport default Tone.MultibandSplit;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/MultibandSplit\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.EQ3 is a three band EQ with control over low, mid, and high gain as\n *         well as the low and high crossover frequencies.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *\n *  @param {Decibels|Object} [lowLevel] The gain applied to the lows.\n *  @param {Decibels} [midLevel] The gain applied to the mid.\n *  @param {Decibels} [highLevel] The gain applied to the high.\n *  @example\n * var eq = new Tone.EQ3(-10, 3, -20);\n */\nTone.EQ3 = function(){\n\n\tvar options = Tone.defaults(arguments, [\"low\", \"mid\", \"high\"], Tone.EQ3);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the output node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.output = new Tone.Gain();\n\n\t/**\n\t *  the multiband split\n\t *  @type {Tone.MultibandSplit}\n\t *  @private\n\t */\n\tthis._multibandSplit = this.input = new Tone.MultibandSplit({\n\t\t\"lowFrequency\" : options.lowFrequency,\n\t\t\"highFrequency\" : options.highFrequency\n\t});\n\n\t/**\n\t *  The gain for the lower signals\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._lowGain = new Tone.Gain(options.low, Tone.Type.Decibels);\n\n\t/**\n\t *  The gain for the mid signals\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._midGain = new Tone.Gain(options.mid, Tone.Type.Decibels);\n\n\t/**\n\t * The gain in decibels of the high part\n\t * @type {Tone.Gain}\n\t * @private\n\t */\n\tthis._highGain = new Tone.Gain(options.high, Tone.Type.Decibels);\n\n\t/**\n\t * The gain in decibels of the low part\n\t * @type {Decibels}\n\t * @signal\n\t */\n\tthis.low = this._lowGain.gain;\n\n\t/**\n\t * The gain in decibels of the mid part\n\t * @type {Decibels}\n\t * @signal\n\t */\n\tthis.mid = this._midGain.gain;\n\n\t/**\n\t * The gain in decibels of the high part\n\t * @type {Decibels}\n\t * @signal\n\t */\n\tthis.high = this._highGain.gain;\n\n\t/**\n\t *  The Q value for all of the filters.\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.Q = this._multibandSplit.Q;\n\n\t/**\n\t *  The low/mid crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.lowFrequency = this._multibandSplit.lowFrequency;\n\n\t/**\n\t *  The mid/high crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.highFrequency = this._multibandSplit.highFrequency;\n\n\t//the frequency bands\n\tthis._multibandSplit.low.chain(this._lowGain, this.output);\n\tthis._multibandSplit.mid.chain(this._midGain, this.output);\n\tthis._multibandSplit.high.chain(this._highGain, this.output);\n\tthis._readOnly([\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n};\n\nTone.extend(Tone.EQ3, Tone.AudioNode);\n\n/**\n *  the default values\n */\nTone.EQ3.defaults = {\n\t\"low\" : 0,\n\t\"mid\" : 0,\n\t\"high\" : 0,\n\t\"lowFrequency\" : 400,\n\t\"highFrequency\" : 2500\n};\n\n/**\n *  clean up\n *  @returns {Tone.EQ3} this\n */\nTone.EQ3.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n\tthis._multibandSplit.dispose();\n\tthis._multibandSplit = null;\n\tthis.lowFrequency = null;\n\tthis.highFrequency = null;\n\tthis._lowGain.dispose();\n\tthis._lowGain = null;\n\tthis._midGain.dispose();\n\tthis._midGain = null;\n\tthis._highGain.dispose();\n\tthis._highGain = null;\n\tthis.low = null;\n\tthis.mid = null;\n\tthis.high = null;\n\tthis.Q = null;\n\treturn this;\n};\n\nexport default Tone.EQ3;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Multiply\";\nimport \"../signal/Signal\";\n\n/**\n *  @class  Performs a linear scaling on an input signal.\n *          Scales a NormalRange input to between\n *          outputMin and outputMax.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @param {number} [outputMin=0] The output value when the input is 0. \n *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n *  @example\n * var scale = new Tone.Scale(50, 100);\n * var signal = new Tone.Signal(0.5).connect(scale);\n * //the output of scale equals 75\n */\nTone.Scale = function(outputMin, outputMax){\n\n\tTone.SignalBase.call(this);\n\t\n\t/** \n\t *  @private\n\t *  @type {number}\n\t */\n\tthis._outputMin = Tone.defaultArg(outputMin, 0);\n\n\t/** \n\t *  @private\n\t *  @type {number}\n\t */\n\tthis._outputMax = Tone.defaultArg(outputMax, 1);\n\n\t/** \n\t *  @private\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = this.input = new Tone.Multiply(1);\n\t\n\t/** \n\t *  @private\n\t *  @type {Tone.Add}\n\t *  @private\n\t */\n\tthis._add = this.output = new Tone.Add(0);\n\n\tthis._scale.connect(this._add);\n\tthis._setRange();\n};\n\nTone.extend(Tone.Scale, Tone.SignalBase);\n\n/**\n * The minimum output value. This number is output when \n * the value input value is 0. \n * @memberOf Tone.Scale#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.Scale.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._outputMin;\n\t},\n\tset : function(min){\n\t\tthis._outputMin = min;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n * The maximum output value. This number is output when \n * the value input value is 1. \n * @memberOf Tone.Scale#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.Scale.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._outputMax;\n\t},\n\tset : function(max){\n\t\tthis._outputMax = max;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n *  set the values\n *  @private\n */\nTone.Scale.prototype._setRange = function(){\n\tthis._add.value = this._outputMin;\n\tthis._scale.value = this._outputMax - this._outputMin;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Scale} this\n */\nTone.Scale.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._add.dispose();\n\tthis._add = null;\n\tthis._scale.dispose();\n\tthis._scale = null;\n\treturn this;\n}; \n\nexport default Tone.Scale;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Scale\";\nimport \"../signal/Pow\";\n\n/**\n *  @class  Performs an exponential scaling on an input signal.\n *          Scales a NormalRange value [0,1] exponentially\n *          to the output range of outputMin to outputMax.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @param {number} [outputMin=0] The output value when the input is 0.\n *  @param {number} [outputMax=1]\tThe output value when the input is 1.\n *  @param {number} [exponent=2] The exponent which scales the incoming signal.\n *  @example\n * var scaleExp = new Tone.ScaleExp(0, 100, 2);\n * var signal = new Tone.Signal(0.5).connect(scaleExp);\n */\nTone.ScaleExp = function(outputMin, outputMax, exponent){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  scale the input to the output range\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._scale = this.output = new Tone.Scale(outputMin, outputMax);\n\n\t/**\n\t *  @private\n\t *  @type {Tone.Pow}\n\t *  @private\n\t */\n\tthis._exp = this.input = new Tone.Pow(Tone.defaultArg(exponent, 2));\n\n\tthis._exp.connect(this._scale);\n};\n\nTone.extend(Tone.ScaleExp, Tone.SignalBase);\n\n/**\n * Instead of interpolating linearly between the <code>min</code> and\n * <code>max</code> values, setting the exponent will interpolate between\n * the two values with an exponential curve.\n * @memberOf Tone.ScaleExp#\n * @type {number}\n * @name exponent\n */\nObject.defineProperty(Tone.ScaleExp.prototype, \"exponent\", {\n\tget : function(){\n\t\treturn this._exp.value;\n\t},\n\tset : function(exp){\n\t\tthis._exp.value = exp;\n\t}\n});\n\n/**\n * The minimum output value. This number is output when\n * the value input value is 0.\n * @memberOf Tone.ScaleExp#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.ScaleExp.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._scale.min;\n\t},\n\tset : function(min){\n\t\tthis._scale.min = min;\n\t}\n});\n\n/**\n * The maximum output value. This number is output when\n * the value input value is 1.\n * @memberOf Tone.ScaleExp#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.ScaleExp.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._scale.max;\n\t},\n\tset : function(max){\n\t\tthis._scale.max = max;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.ScaleExp} this\n */\nTone.ScaleExp.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._exp.dispose();\n\tthis._exp = null;\n\treturn this;\n};\n\nexport default Tone.ScaleExp;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n *  @extends {Tone}\n *  @param {Time=} delayTime The delay applied to the incoming signal.\n *  @param {Time=} maxDelay The maximum delay time.\n */\nTone.Delay = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"maxDelay\"], Tone.Delay);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t * The maximum delay time initialized with the node\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._maxDelay = Math.max(this.toSeconds(options.maxDelay), this.toSeconds(options.delayTime));\n\t\n\t/**\n\t *  The native delay node\n\t *  @type {DelayNode}\n\t *  @private\n\t */\n\tthis._delayNode = this.input = this.output = this.context.createDelay(this._maxDelay);\n\n\t/**\n\t *  The amount of time the incoming signal is\n\t *  delayed.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = new Tone.Param({\n\t\t\"param\" : this._delayNode.delayTime,\n\t\t\"units\" : Tone.Type.Time,\n\t\t\"value\" : options.delayTime\n\t});\n\n\tthis._readOnly(\"delayTime\");\n};\n\nTone.extend(Tone.Delay, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Delay.defaults = {\n\t\"maxDelay\" : 1,\n\t\"delayTime\" : 0\n};\n\n/**\n * The maximum delay time. This cannot be changed. The value is passed into the constructor.\n * @memberof Tone.Delay#\n * @type {Time}\n * @name maxDelay\n * @readOnly\n */\nObject.defineProperty(Tone.Delay.prototype, \"maxDelay\", {\n\tget : function(){\n\t\treturn this._maxDelay;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.Delay}  this\n */\nTone.Delay.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._delayNode.disconnect();\n\tthis._delayNode = null;\n\tthis._writable(\"delayTime\");\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.Delay;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/ScaleExp\";\nimport \"../signal/Signal\";\nimport \"../core/Param\";\nimport \"../core/Delay\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Comb filters are basic building blocks for physical modeling. Read more\n *         about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Time|Object} [delayTime] The delay time of the filter.\n *  @param {NormalRange=} resonance The amount of feedback the filter has.\n */\nTone.FeedbackCombFilter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"resonance\"], Tone.FeedbackCombFilter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the delay node\n\t *  @type {DelayNode}\n\t *  @private\n\t */\n\tthis._delay = this.input = this.output = new Tone.Delay(options.delayTime);\n\n\t/**\n\t *  The amount of delay of the comb filter.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._delay.delayTime;\n\n\t/**\n\t *  the feedback node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\n\t/**\n\t *  The amount of feedback of the delayed signal.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.resonance = this._feedback.gain;\n\n\tthis._delay.chain(this._feedback, this._delay);\n\tthis._readOnly([\"resonance\", \"delayTime\"]);\n};\n\nTone.extend(Tone.FeedbackCombFilter, Tone.AudioNode);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.FeedbackCombFilter.defaults = {\n\t\"delayTime\" : 0.1,\n\t\"resonance\" : 0.5\n};\n\n/**\n *  clean up\n *  @returns {Tone.FeedbackCombFilter} this\n */\nTone.FeedbackCombFilter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"resonance\", \"delayTime\"]);\n\tthis._delay.dispose();\n\tthis._delay = null;\n\tthis.delayTime = null;\n\tthis._feedback.dispose();\n\tthis._feedback = null;\n\tthis.resonance = null;\n\treturn this;\n};\n\nexport default Tone.FeedbackCombFilter;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Analyser\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Get the current frequency data of the connected audio source\n *          using a fast Fourier transform.\n *  @extends {Tone.AudioNode}\n *  @param {Number=} size The size of the FFT. Value must be a power of\n *                       two in the range 16 to 16384.\n */\nTone.FFT = function(){\n\n\tvar options = Tone.defaults(arguments, [\"size\"], Tone.FFT);\n\toptions.type = Tone.Analyser.Type.FFT;\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The analyser node.\n\t *  @private\n\t *  @type {Tone.Analyser}\n\t */\n\tthis._analyser = this.input = this.output = new Tone.Analyser(options);\n};\n\nTone.extend(Tone.FFT, Tone.AudioNode);\n\n/**\n *  The default values.\n *  @type {Object}\n *  @const\n */\nTone.FFT.defaults = {\n\t\"size\" : 1024\n};\n\n/**\n *  Gets the current frequency data from the connected audio source. \n *  Returns the frequency data of length [size](#size) as a Float32Array of decibel values. \n *  @returns {TypedArray}\n */\nTone.FFT.prototype.getValue = function(){\n\treturn this._analyser.getValue();\n};\n\n/**\n *  The size of analysis. This must be a power of two in the range 16 to 16384.\n *  Determines the size of the array returned by [getValue](#getvalue) (i.e. the number of\n *  frequency bins). Large FFT sizes may be costly to compute.\n *  @memberOf Tone.FFT#\n *  @type {Number}\n *  @name size\n */\nObject.defineProperty(Tone.FFT.prototype, \"size\", {\n\tget : function(){\n\t\treturn this._analyser.size;\n\t},\n\tset : function(size){\n\t\tthis._analyser.size = size;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.FFT}  this\n */\nTone.FFT.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.dispose();\n\tthis._analyser = null;\n};\n\nexport default Tone.FFT;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/SignalBase\";\n\n/**\n *  @class Return the absolute value of an incoming signal.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @example\n * var signal = new Tone.Signal(-1);\n * var abs = new Tone.Abs();\n * signal.connect(abs);\n * //the output of abs is 1.\n */\nTone.Abs = function(){\n\tTone.SignalBase.call(this);\n\t/**\n\t *  @type {Tone.LessThan}\n\t *  @private\n\t */\n\tthis._abs = this.input = this.output = new Tone.WaveShaper(function(val){\n\t\tif (Math.abs(val) < 0.001){\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn Math.abs(val);\n\t\t}\n\t}, 1024);\n};\n\nTone.extend(Tone.Abs, Tone.SignalBase);\n\n/**\n *  dispose method\n *  @returns {Tone.Abs} this\n */\nTone.Abs.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._abs.dispose();\n\tthis._abs = null;\n\treturn this;\n};\n\nexport default Tone.Abs;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Abs\";\nimport \"../signal/Subtract\";\nimport \"../signal/Signal\";\nimport \"../type/Type\";\nimport \"../core/Delay\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Follower is a  crude envelope follower which will follow\n *          the amplitude of an incoming signal. Read more about envelope followers (also known\n *          as envelope detectors) on [Wikipedia](https://en.wikipedia.org/wiki/Envelope_detector).\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Time} [smoothing=0.05] The rate of change of the follower.\n *  @example\n * var follower = new Tone.Follower(0.3);\n */\nTone.Follower = function(){\n\n\tvar options = Tone.defaults(arguments, [\"smoothing\"], Tone.Follower);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  @type {Tone.Abs}\n\t *  @private\n\t */\n\tthis._abs = new Tone.Abs();\n\n\t/**\n\t *  the lowpass filter which smooths the input\n\t *  @type {BiquadFilterNode}\n\t *  @private\n\t */\n\tthis._filter = this.context.createBiquadFilter();\n\tthis._filter.type = \"lowpass\";\n\tthis._filter.frequency.value = 0;\n\tthis._filter.Q.value = 0;\n\n\t/**\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._sub = new Tone.Subtract();\n\n\t/**\n\t *  delay node to compare change over time\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delay = new Tone.Delay(this.blockTime);\n\n\t/**\n\t *  the smoothing value\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._smoothing = options.smoothing;\n\n\tTone.connect(this.input, this._delay);\n\tTone.connect(this.input, this._sub, 0, 1);\n\tthis._sub.chain(this._abs, this._filter, this.output);\n\n\t//set the smoothing initially\n\tthis.smoothing = options.smoothing;\n};\n\nTone.extend(Tone.Follower, Tone.AudioNode);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Follower.defaults = {\n\t\"smoothing\" : 0.05,\n};\n\n/**\n * The attack time.\n * @memberOf Tone.Follower#\n * @type {Time}\n * @name smoothing\n */\nObject.defineProperty(Tone.Follower.prototype, \"smoothing\", {\n\tget : function(){\n\t\treturn this._smoothing;\n\t},\n\tset : function(smoothing){\n\t\tthis._smoothing = smoothing;\n\t\tthis._filter.frequency.value = Tone.Time(smoothing).toFrequency() * 0.5;\n\t}\n});\n\n/**\n *  Borrows the connect method from Signal so that the output can be used\n *  as a Tone.Signal control signal.\n *  @function\n */\nTone.Follower.prototype.connect = Tone.SignalBase.prototype.connect;\n\n/**\n *  dispose\n *  @returns {Tone.Follower} this\n */\nTone.Follower.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._filter.disconnect();\n\tthis._filter = null;\n\tthis._delay.dispose();\n\tthis._delay = null;\n\tthis._sub.disconnect();\n\tthis._sub = null;\n\tthis._abs.dispose();\n\tthis._abs = null;\n\treturn this;\n};\n\nexport default Tone.Follower;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Envelope\";\nimport \"../signal/Scale\";\n\n/**\n *  @class Tone.ScaledEnvelop is an envelope which can be scaled\n *         to any range. It's useful for applying an envelope\n *         to a frequency or any other non-NormalRange signal\n *         parameter.\n *\n *  @extends {Tone.Envelope}\n *  @constructor\n *  @param {Time|Object} [attack]\tthe attack time in seconds\n *  @param {Time} [decay]\tthe decay time in seconds\n *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n *  @param {Time} [release]\tthe release time in seconds\n *  @example\n *  var scaledEnv = new Tone.ScaledEnvelope({\n *  \t\"attack\" : 0.2,\n *  \t\"min\" : 200,\n *  \t\"max\" : 2000\n *  });\n *  scaledEnv.connect(oscillator.frequency);\n */\nTone.ScaledEnvelope = function(){\n\n\t//get all of the defaults\n\tvar options = Tone.defaults(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope);\n\tTone.Envelope.call(this, options);\n\toptions = Tone.defaultArg(options, Tone.ScaledEnvelope.defaults);\n\n\t/**\n\t *  scale the incoming signal by an exponent\n\t *  @type {Tone.Pow}\n\t *  @private\n\t */\n\tthis._exp = this.output = new Tone.Pow(options.exponent);\n\n\t/**\n\t *  scale the signal to the desired range\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = this.output = new Tone.Scale(options.min, options.max);\n\n\tthis._sig.chain(this._exp, this._scale);\n};\n\nTone.extend(Tone.ScaledEnvelope, Tone.Envelope);\n\n/**\n *  the default parameters\n *  @static\n */\nTone.ScaledEnvelope.defaults = {\n\t\"min\" : 0,\n\t\"max\" : 1,\n\t\"exponent\" : 1\n};\n\n/**\n * The envelope's min output value. This is the value which it\n * starts at.\n * @memberOf Tone.ScaledEnvelope#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.ScaledEnvelope.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._scale.min;\n\t},\n\tset : function(min){\n\t\tthis._scale.min = min;\n\t}\n});\n\n/**\n * The envelope's max output value. In other words, the value\n * at the peak of the attack portion of the envelope.\n * @memberOf Tone.ScaledEnvelope#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.ScaledEnvelope.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._scale.max;\n\t},\n\tset : function(max){\n\t\tthis._scale.max = max;\n\t}\n});\n\n/**\n * The envelope's exponent value.\n * @memberOf Tone.ScaledEnvelope#\n * @type {number}\n * @name exponent\n */\nObject.defineProperty(Tone.ScaledEnvelope.prototype, \"exponent\", {\n\tget : function(){\n\t\treturn this._exp.value;\n\t},\n\tset : function(exp){\n\t\tthis._exp.value = exp;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.ScaledEnvelope} this\n */\nTone.ScaledEnvelope.prototype.dispose = function(){\n\tTone.Envelope.prototype.dispose.call(this);\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._exp.dispose();\n\tthis._exp = null;\n\treturn this;\n};\n\nexport default Tone.ScaledEnvelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/ScaledEnvelope\";\nimport \"../component/Envelope\";\n\n/**\n *  @class Tone.FrequencyEnvelope is a Tone.ScaledEnvelope, but instead of `min` and `max`\n *         it's got a `baseFrequency` and `octaves` parameter.\n *\n *  @extends {Tone.Envelope}\n *  @constructor\n *  @param {Time|Object} [attack]\tthe attack time in seconds\n *  @param {Time} [decay]\tthe decay time in seconds\n *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n *  @param {Time} [release]\tthe release time in seconds\n *  @example\n *  var freqEnv = new Tone.FrequencyEnvelope({\n *  \t\"attack\" : 0.2,\n *  \t\"baseFrequency\" : \"C2\",\n *  \t\"octaves\" : 4\n *  });\n *  freqEnv.connect(oscillator.frequency);\n */\nTone.FrequencyEnvelope = function(){\n\n\tvar options = Tone.defaults(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope);\n\t//merge it with the frequency envelope defaults\n\toptions = Tone.defaultArg(options, Tone.FrequencyEnvelope.defaults);\n\tTone.ScaledEnvelope.call(this, options);\n\n\t/**\n\t *  Stores the octave value\n\t *  @type {Positive}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t//setup\n\tthis.baseFrequency = options.baseFrequency;\n\tthis.octaves = options.octaves;\n\tthis.exponent = options.exponent;\n};\n\nTone.extend(Tone.FrequencyEnvelope, Tone.Envelope);\n\n/**\n *  the default parameters\n *  @static\n */\nTone.FrequencyEnvelope.defaults = {\n\t\"baseFrequency\" : 200,\n\t\"octaves\" : 4,\n\t\"exponent\" : 1\n};\n\n/**\n * The envelope's mininum output value. This is the value which it\n * starts at.\n * @memberOf Tone.FrequencyEnvelope#\n * @type {Frequency}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.FrequencyEnvelope.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._scale.min;\n\t},\n\tset : function(min){\n\t\tthis._scale.min = this.toFrequency(min);\n\t\t//also update the octaves\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n * The number of octaves above the baseFrequency that the\n * envelope will scale to.\n * @memberOf Tone.FrequencyEnvelope#\n * @type {Positive}\n * @name octaves\n */\nObject.defineProperty(Tone.FrequencyEnvelope.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octaves){\n\t\tthis._octaves = octaves;\n\t\tthis._scale.max = this.baseFrequency * Math.pow(2, octaves);\n\t}\n});\n\n/**\n * The envelope's exponent value.\n * @memberOf Tone.FrequencyEnvelope#\n * @type {number}\n * @name exponent\n */\nObject.defineProperty(Tone.FrequencyEnvelope.prototype, \"exponent\", {\n\tget : function(){\n\t\treturn this._exp.value;\n\t},\n\tset : function(exp){\n\t\tthis._exp.value = exp;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.FrequencyEnvelope} this\n */\nTone.FrequencyEnvelope.prototype.dispose = function(){\n\tTone.ScaledEnvelope.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.FrequencyEnvelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class  GreaterThanZero outputs 1 when the input is strictly greater than zero\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @example\n * var gt0 = new Tone.GreaterThanZero();\n * var sig = new Tone.Signal(0.01).connect(gt0);\n * //the output of gt0 is 1.\n * sig.value = 0;\n * //the output of gt0 is 0.\n */\nTone.GreaterThanZero = function(){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._thresh = this.output = new Tone.WaveShaper(function(val){\n\t\tif (val <= 0){\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}, 127);\n\n\t/**\n\t *  scale the first thresholded signal by a large value.\n\t *  this will help with values which are very close to 0\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = this.input = new Tone.Multiply(10000);\n\n\t//connections\n\tthis._scale.connect(this._thresh);\n};\n\nTone.extend(Tone.GreaterThanZero, Tone.SignalBase);\n\n/**\n *  dispose method\n *  @returns {Tone.GreaterThanZero} this\n */\nTone.GreaterThanZero.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._thresh.dispose();\n\tthis._thresh = null;\n\treturn this;\n};\n\nexport default Tone.GreaterThanZero;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/GreaterThanZero\";\nimport \"../signal/Subtract\";\nimport \"../signal/Signal\";\n\n/**\n *  @class  Output 1 if the signal is greater than the value, otherwise outputs 0.\n *          can compare two signals or a signal and a number.\n *\n *  @constructor\n *  @extends {Tone.Signal}\n *  @param {number} [value=0] the value to compare to the incoming signal\n *  @example\n * var gt = new Tone.GreaterThan(2);\n * var sig = new Tone.Signal(4).connect(gt);\n * //output of gt is equal 1.\n */\nTone.GreaterThan = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  subtract the amount from the incoming signal\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._param = this.input[0] = new Tone.Subtract(value);\n\tthis.input[1] = this._param.input[1];\n\n\t/**\n\t *  compare that amount to zero\n\t *  @type {Tone.GreaterThanZero}\n\t *  @private\n\t */\n\tthis._gtz = this.output = new Tone.GreaterThanZero();\n\n\t//connect\n\tthis._param.connect(this._gtz);\n};\n\nTone.extend(Tone.GreaterThan, Tone.Signal);\n\n/**\n *  dispose method\n *  @returns {Tone.GreaterThan} this\n */\nTone.GreaterThan.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._gtz.dispose();\n\tthis._gtz = null;\n\treturn this;\n};\n\nexport default Tone.GreaterThan;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Follower\";\nimport \"../signal/GreaterThan\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Gate only passes a signal through when the incoming\n *          signal exceeds a specified threshold. To do this, Gate uses\n *          a Tone.Follower to follow the amplitude of the incoming signal.\n *          A common implementation of this class is a [Noise Gate](https://en.wikipedia.org/wiki/Noise_gate).\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Decibels|Object} [threshold] The threshold above which the gate will open.\n *  @param {Time=} smoothing The follower's smoothing time\n *  @example\n * var gate = new Tone.Gate(-30, 0.2, 0.3).toMaster();\n * var mic = new Tone.UserMedia().connect(gate);\n * //the gate will only pass through the incoming\n * //signal when it's louder than -30db\n */\nTone.Gate = function(){\n\n\tvar options = Tone.defaults(arguments, [\"threshold\", \"smoothing\"], Tone.Gate);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  @type {Tone.Follower}\n\t *  @private\n\t */\n\tthis._follower = new Tone.Follower(options.smoothing);\n\n\t/**\n\t *  @type {Tone.GreaterThan}\n\t *  @private\n\t */\n\tthis._gt = new Tone.GreaterThan(Tone.dbToGain(options.threshold));\n\n\t//the connections\n\tTone.connect(this.input, this.output);\n\t//the control signal\n\tTone.connectSeries(this.input, this._follower, this._gt, this.output.gain);\n};\n\nTone.extend(Tone.Gate, Tone.AudioNode);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.Gate.defaults = {\n\t\"smoothing\" : 0.1,\n\t\"threshold\" : -40\n};\n\n/**\n * The threshold of the gate in decibels\n * @memberOf Tone.Gate#\n * @type {Decibels}\n * @name threshold\n */\nObject.defineProperty(Tone.Gate.prototype, \"threshold\", {\n\tget : function(){\n\t\treturn Tone.gainToDb(this._gt.value);\n\t},\n\tset : function(thresh){\n\t\tthis._gt.value = Tone.dbToGain(thresh);\n\t}\n});\n\n/**\n * The attack/decay speed of the gate\n * @memberOf Tone.Gate#\n * @type {Time}\n * @name smoothing\n */\nObject.defineProperty(Tone.Gate.prototype, \"smoothing\", {\n\tget : function(){\n\t\treturn this._follower.smoothing;\n\t},\n\tset : function(smoothingTime){\n\t\tthis._follower.smoothing = smoothingTime;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Gate} this\n */\nTone.Gate.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._follower.dispose();\n\tthis._gt.dispose();\n\tthis._follower = null;\n\tthis._gt = null;\n\treturn this;\n};\n\nexport default Tone.Gate;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\n\n/**\n * @class Tone.TickSignal extends Tone.Signal, but adds the capability\n *        to calculate the number of elapsed ticks. exponential and target curves\n *        are approximated with multiple linear ramps.\n *\n *        Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos, for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n *        describing integrating timing functions for tempo calculations.\n *\n * @param {Number} value The initial value of the signal\n * @extends {Tone.Signal}\n */\nTone.TickSignal = function(value){\n\n\tvalue = Tone.defaultArg(value, 1);\n\n\tTone.Signal.call(this, {\n\t\t\"units\" : Tone.Type.Ticks,\n\t\t\"value\" : value\n\t});\n\n\t//extend the memory\n\tthis._events.memory = Infinity;\n\n\t//clear the clock from the beginning\n\tthis.cancelScheduledValues(0);\n\t//set an initial event\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\"time\" : 0,\n\t\t\"value\" : value\n\t});\n};\n\nTone.extend(Tone.TickSignal, Tone.Signal);\n\n/**\n * Wraps Tone.Signal methods so that they also\n * record the ticks.\n * @param  {Function} method\n * @return {Function}\n * @private\n */\nfunction _wrapScheduleMethods(method){\n\treturn function(value, time){\n\t\ttime = this.toSeconds(time);\n\t\tmethod.apply(this, arguments);\n\t\tvar event = this._events.get(time);\n\t\tvar previousEvent = this._events.previousEvent(event);\n\t\tvar ticksUntilTime = this._getTicksUntilEvent(previousEvent, time);\n\t\tevent.ticks = Math.max(ticksUntilTime, 0);\n\t\treturn this;\n\t};\n}\n\nTone.TickSignal.prototype.setValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.setValueAtTime);\nTone.TickSignal.prototype.linearRampToValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.linearRampToValueAtTime);\n\n/**\n *  Start exponentially approaching the target value at the given time with\n *  a rate having the given time constant.\n *  @param {number} value\n *  @param {Time} startTime\n *  @param {number} timeConstant\n *  @returns {Tone.TickSignal} this\n */\nTone.TickSignal.prototype.setTargetAtTime = function(value, time, constant){\n\t//aproximate it with multiple linear ramps\n\ttime = this.toSeconds(time);\n\tthis.setRampPoint(time);\n\tvalue = this._fromUnits(value);\n\n\t//start from previously scheduled value\n\tvar prevEvent = this._events.get(time);\n\tvar segments = Math.round(Math.max(1 / constant, 1));\n\tfor (var i = 0; i <= segments; i++){\n\t\tvar segTime = constant * i + time;\n\t\tvar rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, value, constant, segTime);\n\t\tthis.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Schedules an exponential continuous change in parameter value from\n *  the previous scheduled parameter value to the given value.\n *  @param  {number} value\n *  @param  {Time} endTime\n *  @returns {Tone.TickSignal} this\n */\nTone.TickSignal.prototype.exponentialRampToValueAtTime = function(value, time){\n\t//aproximate it with multiple linear ramps\n\ttime = this.toSeconds(time);\n\tvalue = this._fromUnits(value);\n\n\t//start from previously scheduled value\n\tvar prevEvent = this._events.get(time);\n\t//approx 10 segments per second\n\tvar segments = Math.round(Math.max((time - prevEvent.time)*10, 1));\n\tvar segmentDur = ((time - prevEvent.time)/segments);\n\tfor (var i = 0; i <= segments; i++){\n\t\tvar segTime = segmentDur * i + prevEvent.time;\n\t\tvar rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, value, segTime);\n\t\tthis.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t}\n\treturn this;\n};\n\n/**\n * Returns the tick value at the time. Takes into account\n * any automation curves scheduled on the signal.\n * @private\n * @param  {Time} time The time to get the tick count at\n * @return {Ticks}      The number of ticks which have elapsed at the time\n *                          given any automations.\n */\nTone.TickSignal.prototype._getTicksUntilEvent = function(event, time){\n\tif (event === null){\n\t\tevent = {\n\t\t\t\"ticks\" : 0,\n\t\t\t\"time\" : 0\n\t\t};\n\t} else if (Tone.isUndef(event.ticks)){\n\t\tvar previousEvent = this._events.previousEvent(event);\n\t\tevent.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n\t}\n\tvar val0 = this.getValueAtTime(event.time);\n\tvar val1 = this.getValueAtTime(time);\n\t//if it's right on the line, take the previous value\n\tif (this._events.get(time).time === time && this._events.get(time).type === Tone.Param.AutomationType.SetValue){\n\t\tval1 = this.getValueAtTime(time - this.sampleTime);\n\t}\n\treturn 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n};\n\n/**\n * Returns the tick value at the time. Takes into account\n * any automation curves scheduled on the signal.\n * @param  {Time} time The time to get the tick count at\n * @return {Ticks}      The number of ticks which have elapsed at the time\n *                          given any automations.\n */\nTone.TickSignal.prototype.getTicksAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar event = this._events.get(time);\n\treturn Math.max(this._getTicksUntilEvent(event, time), 0);\n};\n\n/**\n * Return the elapsed time of the number of ticks from the given time\n * @param {Ticks} ticks The number of ticks to calculate\n * @param  {Time} time The time to get the next tick from\n * @return {Seconds} The duration of the number of ticks from the given time in seconds\n */\nTone.TickSignal.prototype.getDurationOfTicks = function(ticks, time){\n\ttime = this.toSeconds(time);\n\tvar currentTick = this.getTicksAtTime(time);\n\treturn this.getTimeOfTick(currentTick + ticks) - time;\n};\n\n/**\n * Given a tick, returns the time that tick occurs at.\n * @param  {Ticks} tick\n * @return {Time}      The time that the tick occurs.\n */\nTone.TickSignal.prototype.getTimeOfTick = function(tick){\n\tvar before = this._events.get(tick, \"ticks\");\n\tvar after = this._events.getAfter(tick, \"ticks\");\n\tif (before && before.ticks === tick){\n\t\treturn before.time;\n\t} else if (before && after &&\n\t\tafter.type === Tone.Param.AutomationType.Linear &&\n\t\tbefore.value !== after.value){\n\t\tvar val0 = this.getValueAtTime(before.time);\n\t\tvar val1 = this.getValueAtTime(after.time);\n\t\tvar delta = (val1 - val0) / (after.time - before.time);\n\t\tvar k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n\t\tvar sol1 = (-val0 + k) / delta;\n\t\tvar sol2 = (-val0 - k) / delta;\n\t\treturn (sol1 > 0 ? sol1 : sol2) + before.time;\n\t} else if (before){\n\t\tif (before.value === 0){\n\t\t\treturn Infinity;\n\t\t} else {\n\t\t\treturn before.time + (tick - before.ticks) / before.value;\n\t\t}\n\t} else {\n\t\treturn tick / this._initialValue;\n\t}\n};\n\n/**\n * Convert some number of ticks their the duration in seconds accounting\n * for any automation curves starting at the given time.\n * @param  {Ticks} ticks The number of ticks to convert to seconds.\n * @param  {Time} [when=now]  When along the automation timeline to convert the ticks.\n * @return {Tone.Time}       The duration in seconds of the ticks.\n */\nTone.TickSignal.prototype.ticksToTime = function(ticks, when){\n\twhen = this.toSeconds(when);\n\treturn new Tone.Time(this.getDurationOfTicks(ticks, when));\n};\n\n/**\n * The inverse of [ticksToTime](#tickstotime). Convert a duration in\n * seconds to the corresponding number of ticks accounting for any\n * automation curves starting at the given time.\n * @param  {Time} duration The time interval to convert to ticks.\n * @param  {Time} [when=now]     When along the automation timeline to convert the ticks.\n * @return {Tone.Ticks}          The duration in ticks.\n */\nTone.TickSignal.prototype.timeToTicks = function(duration, when){\n\twhen = this.toSeconds(when);\n\tduration = this.toSeconds(duration);\n\tvar startTicks = this.getTicksAtTime(when);\n\tvar endTicks = this.getTicksAtTime(when + duration);\n\treturn new Tone.Ticks(endTicks - startTicks);\n};\n\nexport default Tone.TickSignal;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Timeline\";\nimport \"../type/Type\";\n\n/**\n *  @class  A Timeline State. Provides the methods: <code>setStateAtTime(\"state\", time)</code>\n *          and <code>getValueAtTime(time)</code>.\n *\n *  @extends {Tone.Timeline}\n *  @param {String} initial The initial state of the TimelineState. \n *                          Defaults to <code>undefined</code>\n */\nTone.TimelineState = function(initial){\n\n\tTone.Timeline.call(this);\n\n\t/**\n\t *  The initial state\n\t *  @private\n\t *  @type {String}\n\t */\n\tthis._initial = initial;\n};\n\nTone.extend(Tone.TimelineState, Tone.Timeline);\n\n/**\n *  Returns the scheduled state scheduled before or at\n *  the given time.\n *  @param  {Number}  time  The time to query.\n *  @return  {String}  The name of the state input in setStateAtTime.\n */\nTone.TimelineState.prototype.getValueAtTime = function(time){\n\tvar event = this.get(time);\n\tif (event !== null){\n\t\treturn event.state;\n\t} else {\n\t\treturn this._initial;\n\t}\n};\n\n/**\n *  Add a state to the timeline.\n *  @param  {String}  state The name of the state to set.\n *  @param  {Number}  time  The time to query.\n *  @returns {Tone.TimelineState} this\n */\nTone.TimelineState.prototype.setStateAtTime = function(state, time){\n\t//all state changes need to be >= the previous state time\n\t//TODO throw error if time < the previous event time\n\tthis.add({\n\t\t\"state\" : state,\n\t\t\"time\" : time\n\t});\n\treturn this;\n};\n\n/**\n *  Return the event before the time with the given state\n *  @param {Tone.State} state The state to look for\n *  @param  {Time}  time  When to check before\t\t\t\n *  @return  {Object}  The event with the given state before the time\n */\nTone.TimelineState.prototype.getLastState = function(state, time){\n\ttime = this.toSeconds(time);\n\tvar index = this._search(time);\n\tfor (var i = index; i >= 0; i--){\n\t\tvar event = this._timeline[i];\n\t\tif (event.state === state){\n\t\t\treturn event;\n\t\t}\n\t}\n};\n\n/**\n *  Return the event after the time with the given state\n *  @param {Tone.State} state The state to look for\n *  @param  {Time}  time  When to check from\n *  @return  {Object}  The event with the given state after the time\n */\nTone.TimelineState.prototype.getNextState = function(state, time){\n\ttime = this.toSeconds(time);\n\tvar index = this._search(time);\n\tif (index !== -1){\n\t\tfor (var i = index; i < this._timeline.length; i++){\n\t\t\tvar event = this._timeline[i];\n\t\t\tif (event.state === state){\n\t\t\t\treturn event;\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default Tone.TimelineState;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/TickSignal\";\nimport \"../core/TimelineState\";\nimport \"../core/Timeline\";\nimport \"../core/Param\";\n\n/**\n *  @class  Uses [Tone.TickSignal](TickSignal) to track elapsed ticks with\n *  \t\tcomplex automation curves.\n *\n * \t@constructor\n *  @extends {Tone}\n *  @param {Frequency} frequency The initial frequency that the signal ticks at\n *  @param {Tone.Param=} param A parameter to control (such as playbackRate)\n */\nTone.TickSource = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\"], Tone.TickSource);\n\n\t/**\n\t *  The frequency the callback function should be invoked.\n\t *  @type  {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.TickSignal(options.frequency);\n\tthis._readOnly(\"frequency\");\n\n\t/**\n\t *  The state timeline\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\tthis._state.setStateAtTime(Tone.State.Stopped, 0);\n\n\t/**\n\t * The offset values of the ticks\n\t * @type {Tone.Timeline}\n\t * @private\n\t */\n\tthis._tickOffset = new Tone.Timeline();\n\t//add the first event\n\tthis.setTicksAtTime(0, 0);\n};\n\nTone.extend(Tone.TickSource);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.TickSource.defaults = {\n\t\"frequency\" : 1,\n};\n\n/**\n *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.TickSource#\n *  @name state\n */\nObject.defineProperty(Tone.TickSource.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._state.getValueAtTime(this.now());\n\t}\n});\n\n/**\n *  Start the clock at the given time. Optionally pass in an offset\n *  of where to start the tick counter from.\n *  @param  {Time=}  time    The time the clock should start\n *  @param {Ticks} [offset=0] The number of ticks to start the source at\n *  @return  {Tone.TickSource}  this\n */\nTone.TickSource.prototype.start = function(time, offset){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) !== Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tif (Tone.isDefined(offset)){\n\t\t\tthis.setTicksAtTime(offset, time);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the clock. Stopping the clock resets the tick counter to 0.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.TickSource} this\n *  @example\n * clock.stop();\n */\nTone.TickSource.prototype.stop = function(time){\n\ttime = this.toSeconds(time);\n\t//cancel the previous stop\n\tif (this._state.getValueAtTime(time) === Tone.State.Stopped){\n\t\tvar event = this._state.get(time);\n\t\tif (event.time > 0){\n\t\t\tthis._tickOffset.cancel(event.time);\n\t\t\tthis._state.cancel(event.time);\n\t\t}\n\t}\n\tthis._state.cancel(time);\n\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\tthis.setTicksAtTime(0, time);\n\treturn this;\n};\n\n/**\n *  Pause the clock. Pausing does not reset the tick counter.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.TickSource} this\n */\nTone.TickSource.prototype.pause = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Paused, time);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n *  @param {Time} [time=now] When to clear the events after\n *  @returns {Tone.TickSource} this\n */\nTone.TickSource.prototype.cancel = function(time){\n\ttime = this.toSeconds(time);\n\tthis._state.cancel(time);\n\tthis._tickOffset.cancel(time);\n\treturn this;\n};\n\n/**\n * Get the elapsed ticks at the given time\n * @param  {Time} time  When to get the tick value\n * @return {Ticks}     The number of ticks\n */\nTone.TickSource.prototype.getTicksAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar stopEvent = this._state.getLastState(Tone.State.Stopped, time);\n\t//this event allows forEachBetween to iterate until the current time\n\tvar tmpEvent = { state : Tone.State.Paused, time : time };\n\tthis._state.add(tmpEvent);\n\n\t//keep track of the previous offset event\n\tvar lastState = stopEvent;\n\tvar elapsedTicks = 0;\n\n\t//iterate through all the events since the last stop\n\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, function(e){\n\t\tvar periodStartTime = lastState.time;\n\t\t//if there is an offset event in this period use that\n\t\tvar offsetEvent = this._tickOffset.get(e.time);\n\t\tif (offsetEvent.time >= lastState.time){\n\t\t\telapsedTicks = offsetEvent.ticks;\n\t\t\tperiodStartTime = offsetEvent.time;\n\t\t}\n\t\tif (lastState.state === Tone.State.Started && e.state !== Tone.State.Started){\n\t\t\telapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n\t\t} \n\t\tlastState = e;\n\t}.bind(this));\n\n\t//remove the temporary event\n\tthis._state.remove(tmpEvent);\n\n\t//return the ticks\n\treturn elapsedTicks;\n};\n\n/**\n *  The number of times the callback was invoked. Starts counting at 0\n *  and increments after the callback was invoked. Returns -1 when stopped.\n *  @memberOf Tone.TickSource#\n *  @name ticks\n *  @type {Ticks}\n */\nObject.defineProperty(Tone.TickSource.prototype, \"ticks\", {\n\tget : function(){\n\t\treturn this.getTicksAtTime(this.now());\n\t},\n\tset : function(t){\n\t\tthis.setTicksAtTime(t, this.now());\n\t}\n});\n\n/**\n *  The time since ticks=0 that the TickSource has been running. Accounts\n *  for tempo curves\n *  @memberOf Tone.TickSource#\n *  @name seconds\n *  @type {Seconds}\n */\nObject.defineProperty(Tone.TickSource.prototype, \"seconds\", {\n\tget : function(){\n\t\treturn this.getSecondsAtTime(this.now());\n\t},\n\tset : function(s){\n\t\tvar now = this.now();\n\t\tvar ticks = this.frequency.timeToTicks(s, now);\n\t\tthis.setTicksAtTime(ticks, now);\n\t}\n});\n\n/**\n *  Return the elapsed seconds at the given time.\n *  @param  {Time}  time  When to get the elapsed seconds\n *  @return  {Seconds}  The number of elapsed seconds\n */\nTone.TickSource.prototype.getSecondsAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar stopEvent = this._state.getLastState(Tone.State.Stopped, time);\n\t//this event allows forEachBetween to iterate until the current time\n\tvar tmpEvent = { state : Tone.State.Paused, time : time };\n\tthis._state.add(tmpEvent);\n\n\t//keep track of the previous offset event\n\tvar lastState = stopEvent;\n\tvar elapsedSeconds = 0;\n\n\t//iterate through all the events since the last stop\n\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, function(e){\n\t\tvar periodStartTime = lastState.time;\n\t\t//if there is an offset event in this period use that\n\t\tvar offsetEvent = this._tickOffset.get(e.time);\n\t\tif (offsetEvent.time >= lastState.time){\n\t\t\telapsedSeconds = offsetEvent.seconds;\n\t\t\tperiodStartTime = offsetEvent.time;\n\t\t}\n\t\tif (lastState.state === Tone.State.Started && e.state !== Tone.State.Started){\n\t\t\telapsedSeconds += e.time - periodStartTime;\n\t\t} \n\t\tlastState = e;\n\t}.bind(this));\n\n\t//remove the temporary event\n\tthis._state.remove(tmpEvent);\n\n\t//return the ticks\n\treturn elapsedSeconds;\n};\n\n/**\n * Set the clock's ticks at the given time.\n * @param  {Ticks} ticks The tick value to set\n * @param  {Time} time  When to set the tick value\n * @return {Tone.TickSource}       this\n */\nTone.TickSource.prototype.setTicksAtTime = function(ticks, time){\n\ttime = this.toSeconds(time);\n\tthis._tickOffset.cancel(time);\n\tthis._tickOffset.add({\n\t\t\"time\" : time,\n\t\t\"ticks\" : ticks,\n\t\t\"seconds\" : this.frequency.getDurationOfTicks(ticks, time)\n\t});\n\treturn this;\n};\n\n/**\n *  Returns the scheduled state at the given time.\n *  @param  {Time}  time  The time to query.\n *  @return  {String}  The name of the state input in setStateAtTime.\n *  @example\n * source.start(\"+0.1\");\n * source.getStateAtTime(\"+0.1\"); //returns \"started\"\n */\nTone.TickSource.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\treturn this._state.getValueAtTime(time);\n};\n\n/**\n * Get the time of the given tick. The second argument\n * is when to test before. Since ticks can be set (with setTicksAtTime)\n * there may be multiple times for a given tick value. \n * @param  {Ticks} ticks The tick number.\n * @param  {Time=} before When to measure the tick value from. \n * @return {Time}       The time of the tick\n */\nTone.TickSource.prototype.getTimeOfTick = function(tick, before){\n\tbefore = Tone.defaultArg(before, this.now());\n\tvar offset = this._tickOffset.get(before);\n\tvar event = this._state.get(before);\n\tvar startTime = Math.max(offset.time, event.time);\n\tvar absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n\treturn this.frequency.getTimeOfTick(absoluteTicks);\n};\n\n/**\n * @callback forEachTickBetween\n * @param {Time} when\n * @param {Ticks} when\n */\n\n/**\n *  Invoke the callback event at all scheduled ticks between the \n *  start time and the end time\n *  @param  {Time}    startTime  The beginning of the search range\n *  @param  {Time}    endTime    The end of the search range\n *  @param  {ForEachCallback}  callback   The callback to invoke with each tick\n *  @return  {Tone.TickSource}    this\n */\nTone.TickSource.prototype.forEachTickBetween = function(startTime, endTime, callback){\n\n\t//only iterate through the sections where it is \"started\"\n\tvar lastStateEvent = this._state.get(startTime);\n\tthis._state.forEachBetween(startTime, endTime, function(event){\n\t\tif (lastStateEvent.state === Tone.State.Started && event.state !== Tone.State.Started){\n\t\t\tthis.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n\t\t}\n\t\tlastStateEvent = event;\n\t}.bind(this));\n\n\tstartTime = Math.max(lastStateEvent.time, startTime);\n\n\tif (lastStateEvent.state === Tone.State.Started && this._state){\n\t\t//figure out the difference between the frequency ticks and the \n\t\tvar startTicks = this.frequency.getTicksAtTime(startTime);\n\t\tvar ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n\t\tvar diff = startTicks - ticksAtStart;\n\t\tvar offset = diff % 1;\n\t\tif (offset !== 0){\n\t\t\toffset = 1 - offset;\n\t\t}\n\t\tvar nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n\t\tvar error = null;\n\t\twhile (nextTickTime < endTime && this._state){\n\t\t\ttry {\n\t\t\t\tcallback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n\t\t\t} catch (e){\n\t\t\t\terror = e;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (this._state){\n\t\t\t\tnextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n\t\t\t} \n\t\t}\n\t}\n\n\tif (error){\n\t\tthrow error;\n\t}\n\t\n\treturn this;\n};\n\n/**\n *  Clean up\n *  @returns {Tone.TickSource} this\n */\nTone.TickSource.prototype.dispose = function(){\n\tTone.Param.prototype.dispose.call(this);\n\tthis._state.dispose();\n\tthis._state = null;\n\tthis._tickOffset.dispose();\n\tthis._tickOffset = null;\n\tthis._writable(\"frequency\");\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\treturn this;\n};\n\nexport default Tone.TickSource;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/TickSource\";\nimport \"../core/TimelineState\";\nimport \"../core/Emitter\";\nimport \"../core/Context\";\n\n/**\n *  @class  A sample accurate clock which provides a callback at the given rate.\n *          While the callback is not sample-accurate (it is still susceptible to\n *          loose JS timing), the time passed in as the argument to the callback\n *          is precise. For most applications, it is better to use Tone.Transport\n *          instead of the Clock by itself since you can synchronize multiple callbacks.\n *\n * \t@constructor\n *  @extends {Tone.Emitter}\n * \t@param {function} callback The callback to be invoked with the time of the audio event\n * \t@param {Frequency} frequency The rate of the callback\n * \t@example\n * //the callback will be invoked approximately once a second\n * //and will print the time exactly once a second apart.\n * var clock = new Tone.Clock(function(time){\n * \tconsole.log(time);\n * }, 1);\n */\nTone.Clock = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"frequency\"], Tone.Clock);\n\tTone.Emitter.call(this);\n\n\t/**\n\t *  The callback function to invoke at the scheduled tick.\n\t *  @type  {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t/**\n\t *  The next time the callback is scheduled.\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._nextTick = 0;\n\n\t/**\n\t *  The tick counter\n\t *  @type  {Tone.TickSource}\n\t *  @private\n\t */\n\tthis._tickSource = new Tone.TickSource(options.frequency);\n\n\t/**\n\t *  The last time the loop callback was invoked\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._lastUpdate = 0;\n\n\t/**\n\t *  The rate the callback function should be invoked.\n\t *  @type  {BPM}\n\t *  @signal\n\t */\n\tthis.frequency = this._tickSource.frequency;\n\tthis._readOnly(\"frequency\");\n\n\t/**\n\t *  The state timeline\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\t//add an initial state\n\tthis._state.setStateAtTime(Tone.State.Stopped, 0);\n\n\t/**\n\t *  The loop function bound to its context.\n\t *  This is necessary to remove the event in the end.\n\t *  @type {Function}\n\t *  @private\n\t */\n\tthis._boundLoop = this._loop.bind(this);\n\n\t//bind a callback to the worker thread\n\tthis.context.on(\"tick\", this._boundLoop);\n};\n\nTone.extend(Tone.Clock, Tone.Emitter);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Clock.defaults = {\n\t\"callback\" : Tone.noOp,\n\t\"frequency\" : 1,\n};\n\n/**\n *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.Clock#\n *  @name state\n */\nObject.defineProperty(Tone.Clock.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._state.getValueAtTime(this.now());\n\t}\n});\n\n/**\n *  Start the clock at the given time. Optionally pass in an offset\n *  of where to start the tick counter from.\n *  @param  {Time=}  time    The time the clock should start\n *  @param  {Ticks=}  offset  Where the tick counter starts counting from.\n *  @return  {Tone.Clock}  this\n */\nTone.Clock.prototype.start = function(time, offset){\n\t//make sure the context is started\n\tthis.context.resume();\n\t//start the loop\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) !== Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tthis._tickSource.start(time, offset);\n\t\tif (time < this._lastUpdate){\n\t\t\tthis.emit(\"start\", time, offset);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the clock. Stopping the clock resets the tick counter to 0.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.Clock} this\n *  @example\n * clock.stop();\n */\nTone.Clock.prototype.stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._state.cancel(time);\n\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\tthis._tickSource.stop(time);\n\tif (time < this._lastUpdate){\n\t\tthis.emit(\"stop\", time);\n\t}\n\treturn this;\n};\n\n/**\n *  Pause the clock. Pausing does not reset the tick counter.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.Clock} this\n */\nTone.Clock.prototype.pause = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Paused, time);\n\t\tthis._tickSource.pause(time);\n\t\tif (time < this._lastUpdate){\n\t\t\tthis.emit(\"pause\", time);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  The number of times the callback was invoked. Starts counting at 0\n *  and increments after the callback was invoked.\n *  @type {Ticks}\n */\nObject.defineProperty(Tone.Clock.prototype, \"ticks\", {\n\tget : function(){\n\t\treturn Math.ceil(this.getTicksAtTime(this.now()));\n\t},\n\tset : function(t){\n\t\tthis._tickSource.ticks = t;\n\t}\n});\n\n/**\n *  The time since ticks=0 that the Clock has been running. Accounts\n *  for tempo curves\n *  @type {Seconds}\n */\nObject.defineProperty(Tone.Clock.prototype, \"seconds\", {\n\tget : function(){\n\t\treturn this._tickSource.seconds;\n\t},\n\tset : function(s){\n\t\tthis._tickSource.seconds = s;\n\t}\n});\n\n/**\n *  Return the elapsed seconds at the given time.\n *  @param  {Time}  time  When to get the elapsed seconds\n *  @return  {Seconds}  The number of elapsed seconds\n */\nTone.Clock.prototype.getSecondsAtTime = function(time){\n\treturn this._tickSource.getSecondsAtTime(time);\n};\n\n/**\n * Set the clock's ticks at the given time.\n * @param  {Ticks} ticks The tick value to set\n * @param  {Time} time  When to set the tick value\n * @return {Tone.Clock}       this\n */\nTone.Clock.prototype.setTicksAtTime = function(ticks, time){\n\tthis._tickSource.setTicksAtTime(ticks, time);\n\treturn this;\n};\n\n/**\n * Get the clock's ticks at the given time.\n * @param  {Time} time  When to get the tick value\n * @return {Ticks}       The tick value at the given time.\n */\nTone.Clock.prototype.getTicksAtTime = function(time){\n\treturn this._tickSource.getTicksAtTime(time);\n};\n\n/**\n * Get the time of the next tick\n * @param  {Ticks} ticks The tick number.\n * @param  {Time} before \n * @return {Tone.Clock}       this\n */\nTone.Clock.prototype.nextTickTime = function(offset, when){\n\twhen = this.toSeconds(when);\n\tvar currentTick = this.getTicksAtTime(when);\n\treturn this._tickSource.getTimeOfTick(currentTick+offset, when);\n};\n\n/**\n *  The scheduling loop.\n *  @private\n */\nTone.Clock.prototype._loop = function(){\n\n\tvar startTime = this._lastUpdate;\n\tvar endTime = this.now();\n\tthis._lastUpdate = endTime;\n\n\tif (startTime !== endTime){\n\t\t//the state change events\n\t\tthis._state.forEachBetween(startTime, endTime, function(e){\n\t\t\tswitch (e.state){\n\t\t\t\tcase Tone.State.Started : \n\t\t\t\t\tvar offset = this._tickSource.getTicksAtTime(e.time);\n\t\t\t\t\tthis.emit(\"start\", e.time, offset);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.State.Stopped : \n\t\t\t\t\tif (e.time !== 0){\n\t\t\t\t\t\tthis.emit(\"stop\", e.time);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.State.Paused :\n\t\t\t\t\tthis.emit(\"pause\", e.time); \n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}.bind(this));\n\t\t//the tick callbacks\n\t\tthis._tickSource.forEachTickBetween(startTime, endTime, function(time, ticks){\n\t\t\tthis.callback(time, ticks);\n\t\t}.bind(this));\n\t}\n};\n\n/**\n *  Returns the scheduled state at the given time.\n *  @param  {Time}  time  The time to query.\n *  @return  {String}  The name of the state input in setStateAtTime.\n *  @example\n * clock.start(\"+0.1\");\n * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n */\nTone.Clock.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\treturn this._state.getValueAtTime(time);\n};\n\n/**\n *  Clean up\n *  @returns {Tone.Clock} this\n */\nTone.Clock.prototype.dispose = function(){\n\tTone.Emitter.prototype.dispose.call(this);\n\tthis.context.off(\"tick\", this._boundLoop);\n\tthis._writable(\"frequency\");\n\tthis._tickSource.dispose();\n\tthis._tickSource = null;\n\tthis.frequency = null;\n\tthis._boundLoop = null;\n\tthis._nextTick = Infinity;\n\tthis.callback = null;\n\tthis._state.dispose();\n\tthis._state = null;\n};\n\nexport default Tone.Clock;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\n\n/**\n *  @class Similar to Tone.Timeline, but all events represent\n *         intervals with both \"time\" and \"duration\" times. The\n *         events are placed in a tree structure optimized\n *         for querying an intersection point with the timeline\n *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n *         to represent the data.\n *  @extends {Tone}\n */\nTone.IntervalTimeline = function(){\n\n\tTone.call(this);\n\n\t/**\n\t *  The root node of the inteval tree\n\t *  @type  {IntervalNode}\n\t *  @private\n\t */\n\tthis._root = null;\n\n\t/**\n\t *  Keep track of the length of the timeline.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._length = 0;\n};\n\nTone.extend(Tone.IntervalTimeline);\n\n/**\n *  The event to add to the timeline. All events must\n *  have a time and duration value\n *  @param  {Object}  event  The event to add to the timeline\n *  @return  {Tone.IntervalTimeline}  this\n */\nTone.IntervalTimeline.prototype.add = function(event){\n\tif (Tone.isUndef(event.time) || Tone.isUndef(event.duration)){\n\t\tthrow new Error(\"Tone.IntervalTimeline: events must have time and duration parameters\");\n\t}\n\tevent.time = event.time.valueOf();\n\tvar node = new IntervalNode(event.time, event.time + event.duration, event);\n\tif (this._root === null){\n\t\tthis._root = node;\n\t} else {\n\t\tthis._root.insert(node);\n\t}\n\tthis._length++;\n\t// Restructure tree to be balanced\n\twhile (node !== null){\n\t\tnode.updateHeight();\n\t\tnode.updateMax();\n\t\tthis._rebalance(node);\n\t\tnode = node.parent;\n\t}\n\treturn this;\n};\n\n/**\n *  Remove an event from the timeline.\n *  @param  {Object}  event  The event to remove from the timeline\n *  @return  {Tone.IntervalTimeline}  this\n */\nTone.IntervalTimeline.prototype.remove = function(event){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.search(event.time, results);\n\t\tfor (var i = 0; i < results.length; i++){\n\t\t\tvar node = results[i];\n\t\t\tif (node.event === event){\n\t\t\t\tthis._removeNode(node);\n\t\t\t\tthis._length--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  The number of items in the timeline.\n *  @type {Number}\n *  @memberOf Tone.IntervalTimeline#\n *  @name length\n *  @readOnly\n */\nObject.defineProperty(Tone.IntervalTimeline.prototype, \"length\", {\n\tget : function(){\n\t\treturn this._length;\n\t}\n});\n\n/**\n *  Remove events whose time time is after the given time\n *  @param  {Number}  time  The time to query.\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.cancel = function(after){\n\tthis.forEachFrom(after, function(event){\n\t\tthis.remove(event);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Set the root node as the given node\n *  @param {IntervalNode} node\n *  @private\n */\nTone.IntervalTimeline.prototype._setRoot = function(node){\n\tthis._root = node;\n\tif (this._root !== null){\n\t\tthis._root.parent = null;\n\t}\n};\n\n/**\n *  Replace the references to the node in the node's parent\n *  with the replacement node.\n *  @param  {IntervalNode}  node\n *  @param  {IntervalNode}  replacement\n *  @private\n */\nTone.IntervalTimeline.prototype._replaceNodeInParent = function(node, replacement){\n\tif (node.parent !== null){\n\t\tif (node.isLeftChild()){\n\t\t\tnode.parent.left = replacement;\n\t\t} else {\n\t\t\tnode.parent.right = replacement;\n\t\t}\n\t\tthis._rebalance(node.parent);\n\t} else {\n\t\tthis._setRoot(replacement);\n\t}\n};\n\n/**\n *  Remove the node from the tree and replace it with\n *  a successor which follows the schema.\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._removeNode = function(node){\n\tif (node.left === null && node.right === null){\n\t\tthis._replaceNodeInParent(node, null);\n\t} else if (node.right === null){\n\t\tthis._replaceNodeInParent(node, node.left);\n\t} else if (node.left === null){\n\t\tthis._replaceNodeInParent(node, node.right);\n\t} else {\n\t\tvar balance = node.getBalance();\n\t\tvar replacement, temp;\n\t\tif (balance > 0){\n\t\t\tif (node.left.right === null){\n\t\t\t\treplacement = node.left;\n\t\t\t\treplacement.right = node.right;\n\t\t\t\ttemp = replacement;\n\t\t\t} else {\n\t\t\t\treplacement = node.left.right;\n\t\t\t\twhile (replacement.right !== null){\n\t\t\t\t\treplacement = replacement.right;\n\t\t\t\t}\n\t\t\t\treplacement.parent.right = replacement.left;\n\t\t\t\ttemp = replacement.parent;\n\t\t\t\treplacement.left = node.left;\n\t\t\t\treplacement.right = node.right;\n\t\t\t}\n\t\t} else if (node.right.left === null){\n\t\t\treplacement = node.right;\n\t\t\treplacement.left = node.left;\n\t\t\ttemp = replacement;\n\t\t} else {\n\t\t\treplacement = node.right.left;\n\t\t\twhile (replacement.left !== null){\n\t\t\t\treplacement = replacement.left;\n\t\t\t}\n\t\t\treplacement.parent.left = replacement.right;\n\t\t\ttemp = replacement.parent;\n\t\t\treplacement.left = node.left;\n\t\t\treplacement.right = node.right;\n\t\t}\n\t\tif (node.parent !== null){\n\t\t\tif (node.isLeftChild()){\n\t\t\t\tnode.parent.left = replacement;\n\t\t\t} else {\n\t\t\t\tnode.parent.right = replacement;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(replacement);\n\t\t}\n\t\t// this._replaceNodeInParent(node, replacement);\n\t\tthis._rebalance(temp);\n\t}\n\tnode.dispose();\n};\n\n/**\n *  Rotate the tree to the left\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._rotateLeft = function(node){\n\tvar parent = node.parent;\n\tvar isLeftChild = node.isLeftChild();\n\n\t// Make node.right the new root of this sub tree (instead of node)\n\tvar pivotNode = node.right;\n\tnode.right = pivotNode.left;\n\tpivotNode.left = node;\n\n\tif (parent !== null){\n\t\tif (isLeftChild){\n\t\t\tparent.left = pivotNode;\n\t\t} else {\n\t\t\tparent.right = pivotNode;\n\t\t}\n\t} else {\n\t\tthis._setRoot(pivotNode);\n\t}\n};\n\n/**\n *  Rotate the tree to the right\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._rotateRight = function(node){\n\tvar parent = node.parent;\n\tvar isLeftChild = node.isLeftChild();\n\n\t// Make node.left the new root of this sub tree (instead of node)\n\tvar pivotNode = node.left;\n\tnode.left = pivotNode.right;\n\tpivotNode.right = node;\n\n\tif (parent !== null){\n\t\tif (isLeftChild){\n\t\t\tparent.left = pivotNode;\n\t\t} else {\n\t\t\tparent.right = pivotNode;\n\t\t}\n\t} else {\n\t\tthis._setRoot(pivotNode);\n\t}\n};\n\n/**\n *  Balance the BST\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._rebalance = function(node){\n\tvar balance = node.getBalance();\n\tif (balance > 1){\n\t\tif (node.left.getBalance() < 0){\n\t\t\tthis._rotateLeft(node.left);\n\t\t} else {\n\t\t\tthis._rotateRight(node);\n\t\t}\n\t} else if (balance < -1){\n\t\tif (node.right.getBalance() > 0){\n\t\t\tthis._rotateRight(node.right);\n\t\t} else {\n\t\t\tthis._rotateLeft(node);\n\t\t}\n\t}\n};\n\n/**\n *  Get an event whose time and duration span the give time. Will\n *  return the match whose \"time\" value is closest to the given time.\n *  @param  {Object}  event  The event to add to the timeline\n *  @return  {Object}  The event which spans the desired time\n */\nTone.IntervalTimeline.prototype.get = function(time){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.search(time, results);\n\t\tif (results.length > 0){\n\t\t\tvar max = results[0];\n\t\t\tfor (var i = 1; i < results.length; i++){\n\t\t\t\tif (results[i].low > max.low){\n\t\t\t\t\tmax = results[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn max.event;\n\t\t}\n\t}\n\treturn null;\n};\n\n/**\n *  Iterate over everything in the timeline.\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.forEach = function(callback){\n\tif (this._root !== null){\n\t\tvar allNodes = [];\n\t\tthis._root.traverse(function(node){\n\t\t\tallNodes.push(node);\n\t\t});\n\t\tfor (var i = 0; i < allNodes.length; i++){\n\t\t\tvar ev = allNodes[i].event;\n\t\t\tif (ev){\n\t\t\t\tcallback(ev);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array in which the given time\n *  overlaps with the time and duration time of the event.\n *  @param  {Number}  time The time to check if items are overlapping\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.forEachAtTime = function(time, callback){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.search(time, results);\n\t\tfor (var i = results.length - 1; i >= 0; i--){\n\t\t\tvar ev = results[i].event;\n\t\t\tif (ev){\n\t\t\t\tcallback(ev);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array in which the time is greater\n *  than or equal to the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.forEachFrom = function(time, callback){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.searchAfter(time, results);\n\t\tfor (var i = results.length - 1; i >= 0; i--){\n\t\t\tvar ev = results[i].event;\n\t\t\tcallback(ev);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up\n *  @return  {Tone.IntervalTimeline}  this\n */\nTone.IntervalTimeline.prototype.dispose = function(){\n\tvar allNodes = [];\n\tif (this._root !== null){\n\t\tthis._root.traverse(function(node){\n\t\t\tallNodes.push(node);\n\t\t});\n\t}\n\tfor (var i = 0; i < allNodes.length; i++){\n\t\tallNodes[i].dispose();\n\t}\n\tallNodes = null;\n\tthis._root = null;\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tINTERVAL NODE HELPER\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Represents a node in the binary search tree, with the addition\n *  of a \"high\" value which keeps track of the highest value of\n *  its children.\n *  References:\n *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n *  @param {Number} low\n *  @param {Number} high\n *  @private\n */\nvar IntervalNode = function(low, high, event){\n\t//the event container\n\tthis.event = event;\n\t//the low value\n\tthis.low = low;\n\t//the high value\n\tthis.high = high;\n\t//the high value for this and all child nodes\n\tthis.max = this.high;\n\t//the nodes to the left\n\tthis._left = null;\n\t//the nodes to the right\n\tthis._right = null;\n\t//the parent node\n\tthis.parent = null;\n\t//the number of child nodes\n\tthis.height = 0;\n};\n\n/**\n *  Insert a node into the correct spot in the tree\n *  @param  {IntervalNode}  node\n */\nIntervalNode.prototype.insert = function(node){\n\tif (node.low <= this.low){\n\t\tif (this.left === null){\n\t\t\tthis.left = node;\n\t\t} else {\n\t\t\tthis.left.insert(node);\n\t\t}\n\t} else if (this.right === null){\n\t\tthis.right = node;\n\t} else {\n\t\tthis.right.insert(node);\n\t}\n};\n\n/**\n *  Search the tree for nodes which overlap\n *  with the given point\n *  @param  {Number}  point  The point to query\n *  @param  {Array}  results  The array to put the results\n */\nIntervalNode.prototype.search = function(point, results){\n\t// If p is to the right of the rightmost point of any interval\n\t// in this node and all children, there won't be any matches.\n\tif (point > this.max){\n\t\treturn;\n\t}\n\t// Search left children\n\tif (this.left !== null){\n\t\tthis.left.search(point, results);\n\t}\n\t// Check this node\n\tif (this.low <= point && this.high > point){\n\t\tresults.push(this);\n\t}\n\t// If p is to the left of the time of this interval,\n\t// then it can't be in any child to the right.\n\tif (this.low > point){\n\t\treturn;\n\t}\n\t// Search right children\n\tif (this.right !== null){\n\t\tthis.right.search(point, results);\n\t}\n};\n\n/**\n *  Search the tree for nodes which are less\n *  than the given point\n *  @param  {Number}  point  The point to query\n *  @param  {Array}  results  The array to put the results\n */\nIntervalNode.prototype.searchAfter = function(point, results){\n\t// Check this node\n\tif (this.low >= point){\n\t\tresults.push(this);\n\t\tif (this.left !== null){\n\t\t\tthis.left.searchAfter(point, results);\n\t\t}\n\t}\n\t// search the right side\n\tif (this.right !== null){\n\t\tthis.right.searchAfter(point, results);\n\t}\n};\n\n/**\n *  Invoke the callback on this element and both it's branches\n *  @param  {Function}  callback\n */\nIntervalNode.prototype.traverse = function(callback){\n\tcallback(this);\n\tif (this.left !== null){\n\t\tthis.left.traverse(callback);\n\t}\n\tif (this.right !== null){\n\t\tthis.right.traverse(callback);\n\t}\n};\n\n/**\n *  Update the height of the node\n */\nIntervalNode.prototype.updateHeight = function(){\n\tif (this.left !== null && this.right !== null){\n\t\tthis.height = Math.max(this.left.height, this.right.height) + 1;\n\t} else if (this.right !== null){\n\t\tthis.height = this.right.height + 1;\n\t} else if (this.left !== null){\n\t\tthis.height = this.left.height + 1;\n\t} else {\n\t\tthis.height = 0;\n\t}\n};\n\n/**\n *  Update the height of the node\n */\nIntervalNode.prototype.updateMax = function(){\n\tthis.max = this.high;\n\tif (this.left !== null){\n\t\tthis.max = Math.max(this.max, this.left.max);\n\t}\n\tif (this.right !== null){\n\t\tthis.max = Math.max(this.max, this.right.max);\n\t}\n};\n\n/**\n *  The balance is how the leafs are distributed on the node\n *  @return  {Number}  Negative numbers are balanced to the right\n */\nIntervalNode.prototype.getBalance = function(){\n\tvar balance = 0;\n\tif (this.left !== null && this.right !== null){\n\t\tbalance = this.left.height - this.right.height;\n\t} else if (this.left !== null){\n\t\tbalance = this.left.height + 1;\n\t} else if (this.right !== null){\n\t\tbalance = -(this.right.height + 1);\n\t}\n\treturn balance;\n};\n\n/**\n *  @returns {Boolean} true if this node is the left child\n *  of its parent\n */\nIntervalNode.prototype.isLeftChild = function(){\n\treturn this.parent !== null && this.parent.left === this;\n};\n\n/**\n *  get/set the left node\n *  @type {IntervalNode}\n */\nObject.defineProperty(IntervalNode.prototype, \"left\", {\n\tget : function(){\n\t\treturn this._left;\n\t},\n\tset : function(node){\n\t\tthis._left = node;\n\t\tif (node !== null){\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n});\n\n/**\n *  get/set the right node\n *  @type {IntervalNode}\n */\nObject.defineProperty(IntervalNode.prototype, \"right\", {\n\tget : function(){\n\t\treturn this._right;\n\t},\n\tset : function(node){\n\t\tthis._right = node;\n\t\tif (node !== null){\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n});\n\n/**\n *  null out references.\n */\nIntervalNode.prototype.dispose = function(){\n\tthis.parent = null;\n\tthis._left = null;\n\tthis._right = null;\n\tthis.event = null;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tEND INTERVAL NODE HELPER\n///////////////////////////////////////////////////////////////////////////\n\nexport default Tone.IntervalTimeline;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/TransportTime\";\n\n/**\n *  @class Tone.Ticks is a primitive type for encoding Time values.\n *         Tone.Ticks can be constructed with or without the `new` keyword. Tone.Ticks can be passed\n *         into the parameter of any method which takes time as an argument.\n *  @constructor\n *  @extends {Tone.TransportTime}\n *  @param  {String|Number}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * var t = Tone.Ticks(\"4n\");//a quarter note\n */\nTone.Ticks = function(val, units){\n\tif (this instanceof Tone.Ticks){\n\n\t\tTone.TransportTime.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Ticks(val, units);\n\t}\n};\n\nTone.extend(Tone.Ticks, Tone.TransportTime);\n\n/**\n *  The default units if none are given.\n *  @type {String}\n *  @private\n */\nTone.Ticks.prototype._defaultUnits = \"i\";\n\n/**\n * Get the current time in the given units\n * @return {Ticks}\n * @private\n */\nTone.Ticks.prototype._now = function(){\n\treturn Tone.Transport.ticks;\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.Ticks.prototype._beatsToUnits = function(beats){\n\treturn this._getPPQ() * beats;\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.Ticks.prototype._secondsToUnits = function(seconds){\n\treturn Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.Ticks.prototype._ticksToUnits = function(ticks){\n\treturn ticks;\n};\n\n/**\n *  Return the time in ticks\n *  @return  {Ticks}\n */\nTone.Ticks.prototype.toTicks = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the time in ticks\n *  @return  {Ticks}\n */\nTone.Ticks.prototype.toSeconds = function(){\n\treturn (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n};\n\nexport default Tone.Ticks;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Ticks\";\n\n/**\n *  @class Tone.TransportEvent is an internal class used by (Tone.Transport)[Transport]\n *         to schedule events. Do no invoke this class directly, it is\n *         handled from within Tone.Transport.\n *  @extends {Tone}\n *  @param {Object} options\n */\nTone.TransportEvent = function(Transport, options){\n\n\toptions = Tone.defaultArg(options, Tone.TransportEvent.defaults);\n\tTone.call(this);\n\n\t/**\n\t * Reference to the Transport that created it\n\t * @type {Tone.Transport}\n\t */\n\tthis.Transport = Transport;\n\n\t/**\n\t * The unique id of the event\n\t * @type {Number}\n\t */\n\tthis.id = Tone.TransportEvent._eventId++;\n\n\t/**\n\t * The time the event starts\n\t * @type {Ticks}\n\t */\n\tthis.time = Tone.Ticks(options.time);\n\n\t/**\n\t * The callback to invoke\n\t * @type {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t/**\n\t * If the event should be removed after being created.\n\t * @type {Boolean}\n\t * @private\n\t */\n\tthis._once = options.once;\n};\n\nTone.extend(Tone.TransportEvent);\n\n/**\n * The defaults\n * @static\n * @type {Object}\n */\nTone.TransportEvent.defaults = {\n\t\"once\" : false,\n\t\"callback\" : Tone.noOp,\n};\n\n/**\n * Current ID counter\n * @private\n * @static\n * @type {Number}\n */\nTone.TransportEvent._eventId = 0;\n\n/**\n * Invoke the event callback.\n * @param  {Time} time  The AudioContext time in seconds of the event\n */\nTone.TransportEvent.prototype.invoke = function(time){\n\tif (this.callback){\n\t\tthis.callback(time);\n\t\tif (this._once && this.Transport){\n\t\t\tthis.Transport.clear(this.id);\n\t\t}\n\t}\n};\n\n/**\n * Clean up\n * @return {Tone.TransportEvent} this\n */\nTone.TransportEvent.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis.Transport = null;\n\tthis.callback = null;\n\tthis.time = null;\n\treturn this;\n};\n\nexport default Tone.TransportEvent;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/TransportEvent\";\nimport \"../type/Ticks\";\n\n/**\n *  @class Tone.TransportRepeatEvent is an internal class used by Tone.Transport\n *         to schedule repeat events. This class should not be instantiated directly.\n *  @extends {Tone.TransportEvent}\n *  @param {Object} options\n */\nTone.TransportRepeatEvent = function(Transport, options){\n\n\tTone.TransportEvent.call(this, Transport, options);\n\toptions = Tone.defaultArg(options, Tone.TransportRepeatEvent.defaults);\n\n\t/**\n\t * When the event should stop repeating\n\t * @type {Ticks}\n\t * @private\n\t */\n\tthis.duration = Tone.Ticks(options.duration);\n\n\t/**\n\t * The interval of the repeated event\n\t * @type {Ticks}\n\t * @private\n\t */\n\tthis._interval = Tone.Ticks(options.interval);\n\n\t/**\n\t * The ID of the current timeline event\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._currentId = -1;\n\n\t/**\n\t * The ID of the next timeline event\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._nextId = -1;\n\n\t/**\n\t  * The time of the next event\n\t  * @type {Ticks}\n\t  * @private\n\t  */\n\tthis._nextTick = this.time;\n\n\t/**\n\t * a reference to the bound start method\n\t * @type {Function}\n\t * @private\n\t */\n\tthis._boundRestart = this._restart.bind(this);\n\tthis.Transport.on(\"start loopStart\", this._boundRestart);\n\tthis._restart();\n};\n\nTone.extend(Tone.TransportRepeatEvent, Tone.TransportEvent);\n\n/**\n * The defaults\n * @static\n * @type {Object}\n */\nTone.TransportRepeatEvent.defaults = {\n\t\"duration\" : Infinity,\n\t\"interval\" : 1\n};\n\n/**\n * Invoke the callback. Returns the tick time which\n * the next event should be scheduled at.\n * @param  {Number} time  The AudioContext time in seconds of the event\n */\nTone.TransportRepeatEvent.prototype.invoke = function(time){\n\t//create more events if necessary\n\tthis._createEvents(time);\n\t//call the super class\n\tTone.TransportEvent.prototype.invoke.call(this, time);\n};\n\n/**\n * Push more events onto the timeline to keep up with the position of the timeline\n * @private\n */\nTone.TransportRepeatEvent.prototype._createEvents = function(time){\n\t// schedule the next event\n\tvar ticks = this.Transport.getTicksAtTime(time);\n\tif (ticks >= this.time && ticks >= this._nextTick &&\n\tthis._nextTick + this._interval < this.time + this.duration){\n\t\tthis._nextTick += this._interval;\n\t\tthis._currentId = this._nextId;\n\t\tthis._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\t}\n};\n\n/**\n * Push more events onto the timeline to keep up with the position of the timeline\n * @private\n */\nTone.TransportRepeatEvent.prototype._restart = function(time){\n\tthis.Transport.clear(this._currentId);\n\tthis.Transport.clear(this._nextId);\n\tthis._nextTick = this.time;\n\tvar ticks = this.Transport.getTicksAtTime(time);\n\tif (ticks > this.time){\n\t\tthis._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n\t}\n\tthis._currentId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\tthis._nextTick += this._interval;\n\tthis._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n};\n\n/**\n * Clean up\n * @return {Tone.TransportRepeatEvent} this\n */\nTone.TransportRepeatEvent.prototype.dispose = function(){\n\tthis.Transport.clear(this._currentId);\n\tthis.Transport.clear(this._nextId);\n\tthis.Transport.off(\"start loopStart\", this._boundRestart);\n\tthis._boundCreateEvents = null;\n\tTone.TransportEvent.prototype.dispose.call(this);\n\tthis.duration = null;\n\tthis._interval = null;\n\treturn this;\n};\n\nexport default Tone.TransportRepeatEvent;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Clock\";\nimport \"../type/Type\";\nimport \"../core/Timeline\";\nimport \"../core/Emitter\";\nimport \"../core/Gain\";\nimport \"../core/IntervalTimeline\";\nimport \"../core/TransportRepeatEvent\";\nimport \"../core/TransportEvent\";\n\n/**\n *  @class  Transport for timing musical events.\n *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n *          Tone.Transport timing events pass in the exact time of the scheduled event\n *          in the argument of the callback function. Pass that time value to the object\n *          you're scheduling. <br><br>\n *          A single transport is created for you when the library is initialized.\n *          <br><br>\n *          The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n *          called with the time of that event as the argument.\n *\n *  @extends {Tone.Emitter}\n *  @singleton\n *  @example\n * //repeated event every 8th note\n * Tone.Transport.scheduleRepeat(function(time){\n * \t//do something with the time\n * }, \"8n\");\n *  @example\n * //schedule an event on the 16th measure\n * Tone.Transport.schedule(function(time){\n * \t//do something with the time\n * }, \"16:0:0\");\n */\nTone.Transport = function(){\n\n\tTone.Emitter.call(this);\n\n\tTone.getContext(function(){\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tLOOPING\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t * \tIf the transport loops or not.\n\t\t *  @type {boolean}\n\t\t */\n\t\tthis.loop = false;\n\n\t\t/**\n\t\t * \tThe loop start position in ticks\n\t\t *  @type {Ticks}\n\t\t *  @private\n\t\t */\n\t\tthis._loopStart = 0;\n\n\t\t/**\n\t\t * \tThe loop end position in ticks\n\t\t *  @type {Ticks}\n\t\t *  @private\n\t\t */\n\t\tthis._loopEnd = 0;\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tCLOCK/TEMPO\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  Pulses per quarter is the number of ticks per quarter note.\n\t\t *  @private\n\t\t *  @type  {Number}\n\t\t */\n\t\tthis._ppq = TransportConstructor.defaults.PPQ;\n\n\t\t/**\n\t\t *  watches the main oscillator for timing ticks\n\t\t *  initially starts at 120bpm\n\t\t *  @private\n\t\t *  @type {Tone.Clock}\n\t\t */\n\t\tthis._clock = new Tone.Clock({\n\t\t\t\"callback\" : this._processTick.bind(this),\n\t\t\t\"frequency\" : 0,\n\t\t});\n\n\t\tthis._bindClockEvents();\n\n\t\t/**\n\t\t *  The Beats Per Minute of the Transport.\n\t\t *  @type {BPM}\n\t\t *  @signal\n\t\t *  @example\n\t\t * Tone.Transport.bpm.value = 80;\n\t\t * //ramp the bpm to 120 over 10 seconds\n\t\t * Tone.Transport.bpm.rampTo(120, 10);\n\t\t */\n\t\tthis.bpm = this._clock.frequency;\n\t\tthis.bpm._toUnits = this._toUnits.bind(this);\n\t\tthis.bpm._fromUnits = this._fromUnits.bind(this);\n\t\tthis.bpm.units = Tone.Type.BPM;\n\t\tthis.bpm.value = TransportConstructor.defaults.bpm;\n\t\tthis._readOnly(\"bpm\");\n\n\t\t/**\n\t\t *  The time signature, or more accurately the numerator\n\t\t *  of the time signature over a denominator of 4.\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._timeSignature = TransportConstructor.defaults.timeSignature;\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tTIMELINE EVENTS\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  All the events in an object to keep track by ID\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t\tthis._scheduledEvents = {};\n\n\t\t/**\n\t\t * \tThe scheduled events.\n\t\t *  @type {Tone.Timeline}\n\t\t *  @private\n\t\t */\n\t\tthis._timeline = new Tone.Timeline();\n\n\t\t/**\n\t\t *  Repeated events\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t\tthis._repeatedEvents = new Tone.IntervalTimeline();\n\n\t\t/**\n\t\t *  All of the synced Signals\n\t\t *  @private\n\t\t *  @type {Array}\n\t\t */\n\t\tthis._syncedSignals = [];\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tSWING\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  The subdivision of the swing\n\t\t *  @type  {Ticks}\n\t\t *  @private\n\t\t */\n\t\tthis._swingTicks = TransportConstructor.defaults.PPQ / 2; //8n\n\n\t\t/**\n\t\t *  The swing amount\n\t\t *  @type {NormalRange}\n\t\t *  @private\n\t\t */\n\t\tthis._swingAmount = 0;\n\n\t\t//transport is a singleton so it adds itself to the context\n\t\tthis.context.transport = this;\n\n\t}.bind(this));\n};\n\nTone.extend(Tone.Transport, Tone.Emitter);\n\n/**\n *  the defaults\n *  @type {Object}\n *  @const\n *  @static\n */\nTone.Transport.defaults = {\n\t\"bpm\" : 120,\n\t\"swing\" : 0,\n\t\"swingSubdivision\" : \"8n\",\n\t\"timeSignature\" : 4,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : \"4m\",\n\t\"PPQ\" : 192\n};\n\n/**\n * Is an instanceof Tone.Transport\n * @type {Boolean}\n */\nTone.Transport.prototype.isTransport = true;\n\n///////////////////////////////////////////////////////////////////////////////\n//\tTICKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  called on every tick\n *  @param   {number} tickTime clock relative tick time\n *  @private\n */\nTone.Transport.prototype._processTick = function(tickTime, ticks){\n\t//handle swing\n\tif (this._swingAmount > 0 &&\n\t\tticks % this._ppq !== 0 && //not on a downbeat\n\t\tticks % (this._swingTicks * 2) !== 0){\n\t\t//add some swing\n\t\tvar progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n\t\tvar amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n\t\ttickTime += Tone.Ticks(this._swingTicks * 2/3).toSeconds() * amount;\n\t}\n\t//do the loop test\n\tif (this.loop){\n\t\tif (ticks >= this._loopEnd){\n\t\t\tthis.emit(\"loopEnd\", tickTime);\n\t\t\tthis._clock.setTicksAtTime(this._loopStart, tickTime);\n\t\t\tticks = this._loopStart;\n\t\t\tthis.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n\t\t\tthis.emit(\"loop\", tickTime);\n\t\t}\n\t}\n\t//invoke the timeline events scheduled on this tick\n\tthis._timeline.forEachAtTime(ticks, function(event){\n\t\tevent.invoke(tickTime);\n\t});\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSCHEDULABLE EVENTS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  Schedule an event along the timeline.\n *  @param {Function} callback The callback to be invoked at the time.\n *  @param {TransportTime}  time The time to invoke the callback at.\n *  @return {Number} The id of the event which can be used for canceling the event.\n *  @example\n * //trigger the callback when the Transport reaches the desired time\n * Tone.Transport.schedule(function(time){\n * \tenvelope.triggerAttack(time);\n * }, \"128i\");\n */\nTone.Transport.prototype.schedule = function(callback, time){\n\tvar event = new Tone.TransportEvent(this, {\n\t\t\"time\" : Tone.TransportTime(time),\n\t\t\"callback\" : callback\n\t});\n\treturn this._addEvent(event, this._timeline);\n};\n\n/**\n *  Schedule a repeated event along the timeline. The event will fire\n *  at the `interval` starting at the `startTime` and for the specified\n *  `duration`.\n *  @param  {Function}  callback   The callback to invoke.\n *  @param  {Time}    interval   The duration between successive\n *                               callbacks. Must be a positive number.\n *  @param  {TransportTime=}    startTime  When along the timeline the events should\n *                               start being invoked.\n *  @param {Time} [duration=Infinity] How long the event should repeat.\n *  @return  {Number}    The ID of the scheduled event. Use this to cancel\n *                           the event.\n *  @example\n * //a callback invoked every eighth note after the first measure\n * Tone.Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n */\nTone.Transport.prototype.scheduleRepeat = function(callback, interval, startTime, duration){\n\tvar event = new Tone.TransportRepeatEvent(this, {\n\t\t\"callback\" : callback,\n\t\t\"interval\" : Tone.Time(interval),\n\t\t\"time\" : Tone.TransportTime(startTime),\n\t\t\"duration\" : Tone.Time(Tone.defaultArg(duration, Infinity)),\n\t});\n\t//kick it off if the Transport is started\n\treturn this._addEvent(event, this._repeatedEvents);\n};\n\n/**\n *  Schedule an event that will be removed after it is invoked. \n *  @param {Function} callback The callback to invoke once.\n *  @param {TransportTime} time The time the callback should be invoked.\n *  @returns {Number} The ID of the scheduled event.\n */\nTone.Transport.prototype.scheduleOnce = function(callback, time){\n\tvar event = new Tone.TransportEvent(this, {\n\t\t\"time\" : Tone.TransportTime(time),\n\t\t\"callback\" : callback,\n\t\t\"once\" : true\n\t});\n\treturn this._addEvent(event, this._timeline);\n};\n\n/**\n *  Clear the passed in event id from the timeline\n *  @param {Number} eventId The id of the event.\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.clear = function(eventId){\n\tif (this._scheduledEvents.hasOwnProperty(eventId)){\n\t\tvar item = this._scheduledEvents[eventId.toString()];\n\t\titem.timeline.remove(item.event);\n\t\titem.event.dispose();\n\t\tdelete this._scheduledEvents[eventId.toString()];\n\t}\n\treturn this;\n};\n\n/**\n * Add an event to the correct timeline. Keep track of the\n * timeline it was added to.\n * @param {Tone.TransportEvent}\tevent\n * @param {Tone.Timeline} timeline\n * @returns {Number} the event id which was just added\n * @private\n */\nTone.Transport.prototype._addEvent = function(event, timeline){\n\tthis._scheduledEvents[event.id.toString()] = {\n\t\t\"event\" : event,\n\t\t\"timeline\" : timeline\n\t};\n\ttimeline.add(event);\n\treturn event.id;\n};\n\n/**\n *  Remove scheduled events from the timeline after\n *  the given time. Repeated events will be removed\n *  if their startTime is after the given time\n *  @param {TransportTime} [after=0] Clear all events after\n *                          this time.\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.cancel = function(after){\n\tafter = Tone.defaultArg(after, 0);\n\tafter = this.toTicks(after);\n\tthis._timeline.forEachFrom(after, function(event){\n\t\tthis.clear(event.id);\n\t}.bind(this));\n\tthis._repeatedEvents.forEachFrom(after, function(event){\n\t\tthis.clear(event.id);\n\t}.bind(this));\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSTART/STOP/PAUSE\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  Bind start/stop/pause events from the clock and emit them.\n *  @private\n */\nTone.Transport.prototype._bindClockEvents = function(){\n\tthis._clock.on(\"start\", function(time, offset){\n\t\toffset = Tone.Ticks(offset).toSeconds();\n\t\tthis.emit(\"start\", time, offset);\n\t}.bind(this));\n\n\tthis._clock.on(\"stop\", function(time){\n\t\tthis.emit(\"stop\", time);\n\t}.bind(this));\n\n\tthis._clock.on(\"pause\", function(time){\n\t\tthis.emit(\"pause\", time);\n\t}.bind(this));\n};\n\n/**\n *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.Transport#\n *  @name state\n */\nObject.defineProperty(Tone.Transport.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._clock.getStateAtTime(this.now());\n\t}\n});\n\n/**\n *  Start the transport and all sources synced to the transport.\n *  @param  {Time} [time=now] The time when the transport should start.\n *  @param  {TransportTime=} offset The timeline offset to start the transport.\n *  @returns {Tone.Transport} this\n *  @example\n * //start the transport in one second starting at beginning of the 5th measure.\n * Tone.Transport.start(\"+1\", \"4:0:0\");\n */\nTone.Transport.prototype.start = function(time, offset){\n\t//start the clock\n\tif (Tone.isDefined(offset)){\n\t\toffset = this.toTicks(offset);\n\t}\n\tthis._clock.start(time, offset);\n\treturn this;\n};\n\n/**\n *  Stop the transport and all sources synced to the transport.\n *  @param  {Time} [time=now] The time when the transport should stop.\n *  @returns {Tone.Transport} this\n *  @example\n * Tone.Transport.stop();\n */\nTone.Transport.prototype.stop = function(time){\n\tthis._clock.stop(time);\n\treturn this;\n};\n\n/**\n *  Pause the transport and all sources synced to the transport.\n *  @param  {Time} [time=now]\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.pause = function(time){\n\tthis._clock.pause(time);\n\treturn this;\n};\n\n/**\n * Toggle the current state of the transport. If it is\n * started, it will stop it, otherwise it will start the Transport.\n * @param  {Time=} time The time of the event\n * @return {Tone.Transport}      this\n */\nTone.Transport.prototype.toggle = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._clock.getStateAtTime(time) !== Tone.State.Started){\n\t\tthis.start(time);\n\t} else {\n\t\tthis.stop(time);\n\t}\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSETTERS/GETTERS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  The time signature as just the numerator over 4.\n *  For example 4/4 would be just 4 and 6/8 would be 3.\n *  @memberOf Tone.Transport#\n *  @type {Number|Array}\n *  @name timeSignature\n *  @example\n * //common time\n * Tone.Transport.timeSignature = 4;\n * // 7/8\n * Tone.Transport.timeSignature = [7, 8];\n * //this will be reduced to a single number\n * Tone.Transport.timeSignature; //returns 3.5\n */\nObject.defineProperty(Tone.Transport.prototype, \"timeSignature\", {\n\tget : function(){\n\t\treturn this._timeSignature;\n\t},\n\tset : function(timeSig){\n\t\tif (Tone.isArray(timeSig)){\n\t\t\ttimeSig = (timeSig[0] / timeSig[1]) * 4;\n\t\t}\n\t\tthis._timeSignature = timeSig;\n\t}\n});\n\n/**\n * When the Tone.Transport.loop = true, this is the starting position of the loop.\n * @memberOf Tone.Transport#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.Transport.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopStart).toSeconds();\n\t},\n\tset : function(startPosition){\n\t\tthis._loopStart = this.toTicks(startPosition);\n\t}\n});\n\n/**\n * When the Tone.Transport.loop = true, this is the ending position of the loop.\n * @memberOf Tone.Transport#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.Transport.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopEnd).toSeconds();\n\t},\n\tset : function(endPosition){\n\t\tthis._loopEnd = this.toTicks(endPosition);\n\t}\n});\n\n/**\n *  Set the loop start and stop at the same time.\n *  @param {TransportTime} startPosition\n *  @param {TransportTime} endPosition\n *  @returns {Tone.Transport} this\n *  @example\n * //loop over the first measure\n * Tone.Transport.setLoopPoints(0, \"1m\");\n * Tone.Transport.loop = true;\n */\nTone.Transport.prototype.setLoopPoints = function(startPosition, endPosition){\n\tthis.loopStart = startPosition;\n\tthis.loopEnd = endPosition;\n\treturn this;\n};\n\n/**\n *  The swing value. Between 0-1 where 1 equal to\n *  the note + half the subdivision.\n *  @memberOf Tone.Transport#\n *  @type {NormalRange}\n *  @name swing\n */\nObject.defineProperty(Tone.Transport.prototype, \"swing\", {\n\tget : function(){\n\t\treturn this._swingAmount;\n\t},\n\tset : function(amount){\n\t\t//scale the values to a normal range\n\t\tthis._swingAmount = amount;\n\t}\n});\n\n/**\n *  Set the subdivision which the swing will be applied to.\n *  The default value is an 8th note. Value must be less\n *  than a quarter note.\n *\n *  @memberOf Tone.Transport#\n *  @type {Time}\n *  @name swingSubdivision\n */\nObject.defineProperty(Tone.Transport.prototype, \"swingSubdivision\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._swingTicks).toNotation();\n\t},\n\tset : function(subdivision){\n\t\tthis._swingTicks = this.toTicks(subdivision);\n\t}\n});\n\n/**\n *  The Transport's position in Bars:Beats:Sixteenths.\n *  Setting the value will jump to that position right away.\n *  @memberOf Tone.Transport#\n *  @type {BarsBeatsSixteenths}\n *  @name position\n */\nObject.defineProperty(Tone.Transport.prototype, \"position\", {\n\tget : function(){\n\t\tvar now = this.now();\n\t\tvar ticks = this._clock.getTicksAtTime(now);\n\t\treturn Tone.Ticks(ticks).toBarsBeatsSixteenths();\n\t},\n\tset : function(progress){\n\t\tvar ticks = this.toTicks(progress);\n\t\tthis.ticks = ticks;\n\t}\n});\n\n/**\n *  The Transport's position in seconds\n *  Setting the value will jump to that position right away.\n *  @memberOf Tone.Transport#\n *  @type {Seconds}\n *  @name seconds\n */\nObject.defineProperty(Tone.Transport.prototype, \"seconds\", {\n\tget : function(){\n\t\treturn this._clock.seconds;\n\t},\n\tset : function(s){\n\t\tvar now = this.now();\n\t\tvar ticks = this.bpm.timeToTicks(s, now);\n\t\tthis.ticks = ticks;\n\t}\n});\n\n/**\n *  The Transport's loop position as a normalized value. Always\n *  returns 0 if the transport if loop is not true.\n *  @memberOf Tone.Transport#\n *  @name progress\n *  @type {NormalRange}\n */\nObject.defineProperty(Tone.Transport.prototype, \"progress\", {\n\tget : function(){\n\t\tif (this.loop){\n\t\t\tvar now = this.now();\n\t\t\tvar ticks = this._clock.getTicksAtTime(now);\n\t\t\treturn (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  The transports current tick position.\n *\n *  @memberOf Tone.Transport#\n *  @type {Ticks}\n *  @name ticks\n */\nObject.defineProperty(Tone.Transport.prototype, \"ticks\", {\n\tget : function(){\n\t\treturn this._clock.ticks;\n\t},\n\tset : function(t){\n\t\tif (this._clock.ticks !== t){\n\t\t\tvar now = this.now();\n\t\t\t//stop everything synced to the transport\n\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\tthis.emit(\"stop\", now);\n\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t\t//restart it with the new time\n\t\t\t\tthis.emit(\"start\", now, this.seconds);\n\t\t\t} else {\n\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n * Get the clock's ticks at the given time.\n * @param  {Time} time  When to get the tick value\n * @return {Ticks}       The tick value at the given time.\n */\nTone.Transport.prototype.getTicksAtTime = function(time){\n\treturn Math.round(this._clock.getTicksAtTime(time));\n};\n\n/**\n *  Return the elapsed seconds at the given time.\n *  @param  {Time}  time  When to get the elapsed seconds\n *  @return  {Seconds}  The number of elapsed seconds\n */\nTone.Transport.prototype.getSecondsAtTime = function(time){\n\treturn this._clock.getSecondsAtTime(time);\n};\n\n/**\n *  Pulses Per Quarter note. This is the smallest resolution\n *  the Transport timing supports. This should be set once\n *  on initialization and not set again. Changing this value\n *  after other objects have been created can cause problems.\n *\n *  @memberOf Tone.Transport#\n *  @type {Number}\n *  @name PPQ\n */\nObject.defineProperty(Tone.Transport.prototype, \"PPQ\", {\n\tget : function(){\n\t\treturn this._ppq;\n\t},\n\tset : function(ppq){\n\t\tvar bpm = this.bpm.value;\n\t\tthis._ppq = ppq;\n\t\tthis.bpm.value = bpm;\n\t}\n});\n\n/**\n *  Convert from BPM to frequency (factoring in PPQ)\n *  @param  {BPM}  bpm The BPM value to convert to frequency\n *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.\n *  @private\n */\nTone.Transport.prototype._fromUnits = function(bpm){\n\treturn 1 / (60 / bpm / this.PPQ);\n};\n\n/**\n *  Convert from frequency (with PPQ) into BPM\n *  @param  {Frequency}  freq The clocks frequency to convert to BPM\n *  @return  {BPM}  The frequency value as BPM.\n *  @private\n */\nTone.Transport.prototype._toUnits = function(freq){\n\treturn (freq / this.PPQ) * 60;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSYNCING\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  Returns the time aligned to the next subdivision\n *  of the Transport. If the Transport is not started,\n *  it will return 0.\n *  Note: this will not work precisely during tempo ramps.\n *  @param  {Time}  subdivision  The subdivision to quantize to\n *  @return  {Number}  The context time of the next subdivision.\n *  @example\n * Tone.Transport.start(); //the transport must be started\n * Tone.Transport.nextSubdivision(\"4n\");\n */\nTone.Transport.prototype.nextSubdivision = function(subdivision){\n\tsubdivision = this.toTicks(subdivision);\n\tif (this.state !== Tone.State.Started){\n\t\t//if the transport's not started, return 0\n\t\treturn 0;\n\t} else {\n\t\tvar now = this.now();\n\t\t//the remainder of the current ticks and the subdivision\n\t\tvar transportPos = this.getTicksAtTime(now);\n\t\tvar remainingTicks = subdivision - transportPos % subdivision;\n\t\treturn this._clock.nextTickTime(remainingTicks, now);\n\t}\n};\n\n/**\n *  Attaches the signal to the tempo control signal so that\n *  any changes in the tempo will change the signal in the same\n *  ratio.\n *\n *  @param  {Tone.Signal} signal\n *  @param {number=} ratio Optionally pass in the ratio between\n *                         the two signals. Otherwise it will be computed\n *                         based on their current values.\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.syncSignal = function(signal, ratio){\n\tif (!ratio){\n\t\t//get the sync ratio\n\t\tvar now = this.now();\n\t\tif (signal.getValueAtTime(now) !== 0){\n\t\t\tratio = signal.getValueAtTime(now) / this.bpm.getValueAtTime(now);\n\t\t} else {\n\t\t\tratio = 0;\n\t\t}\n\t}\n\tvar ratioSignal = new Tone.Gain(ratio);\n\tthis.bpm.chain(ratioSignal, signal._param);\n\tthis._syncedSignals.push({\n\t\t\"ratio\" : ratioSignal,\n\t\t\"signal\" : signal,\n\t\t\"initial\" : signal.value\n\t});\n\tsignal.value = 0;\n\treturn this;\n};\n\n/**\n *  Unsyncs a previously synced signal from the transport's control.\n *  See Tone.Transport.syncSignal.\n *  @param  {Tone.Signal} signal\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.unsyncSignal = function(signal){\n\tfor (var i = this._syncedSignals.length - 1; i >= 0; i--){\n\t\tvar syncedSignal = this._syncedSignals[i];\n\t\tif (syncedSignal.signal === signal){\n\t\t\tsyncedSignal.ratio.dispose();\n\t\t\tsyncedSignal.signal.value = syncedSignal.initial;\n\t\t\tthis._syncedSignals.splice(i, 1);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Transport} this\n *  @private\n */\nTone.Transport.prototype.dispose = function(){\n\tTone.Emitter.prototype.dispose.call(this);\n\tthis._clock.dispose();\n\tthis._clock = null;\n\tthis._writable(\"bpm\");\n\tthis.bpm = null;\n\tthis._timeline.dispose();\n\tthis._timeline = null;\n\tthis._repeatedEvents.dispose();\n\tthis._repeatedEvents = null;\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tINITIALIZATION\n///////////////////////////////////////////////////////////////////////////////\n\nvar TransportConstructor = Tone.Transport;\nTone.Transport = new TransportConstructor();\n\nTone.Context.on(\"init\", function(context){\n\tif (context.transport && context.transport.isTransport){\n\t\tTone.Transport = context.transport;\n\t} else {\n\t\tTone.Transport = new TransportConstructor();\n\t}\n});\n\nTone.Context.on(\"close\", function(context){\n\tif (context.transport && context.transport.isTransport){\n\t\tcontext.transport.dispose();\n\t}\n});\n\nexport default Tone.Transport;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Volume\";\nimport \"../core/Context\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  A single master output which is connected to the\n *          AudioDestinationNode (aka your speakers).\n *          It provides useful conveniences such as the ability\n *          to set the volume and mute the entire application.\n *          It also gives you the ability to apply master effects to your application.\n *          <br><br>\n *          Like Tone.Transport, A single Tone.Master is created\n *          on initialization and you do not need to explicitly construct one.\n *\n *  @constructor\n *  @extends {Tone}\n *  @singleton\n *  @example\n * //the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.Master);\n * //a convenience for connecting to the master output is also provided:\n * oscillator.toMaster();\n * //the above two examples are equivalent.\n */\nTone.Master = function(){\n\n\tTone.AudioNode.call(this);\n\tTone.getContext(function(){\n\t\tthis.createInsOuts(1, 0);\n\n\t\t/**\n\t\t *  The private volume node\n\t\t *  @type  {Tone.Volume}\n\t\t *  @private\n\t\t */\n\t\tthis._volume = this.output = new Tone.Volume();\n\n\t\t/**\n\t\t * The volume of the master output.\n\t\t * @type {Decibels}\n\t\t * @signal\n\t\t */\n\t\tthis.volume = this._volume.volume;\n\n\t\tthis._readOnly(\"volume\");\n\t\t//connections\n\t\tTone.connectSeries(this.input, this.output, this.context.destination);\n\n\t\t//master is a singleton so it adds itself to the context\n\t\tthis.context.master = this;\n\t}.bind(this));\n};\n\nTone.extend(Tone.Master, Tone.AudioNode);\n\n/**\n *  @type {Object}\n *  @const\n */\nTone.Master.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n * Is an instanceof Tone.Master\n * @type {Boolean}\n */\nTone.Master.prototype.isMaster = true;\n\n/**\n * Mute the output.\n * @memberOf Tone.Master#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * Tone.Master.mute = true;\n */\nObject.defineProperty(Tone.Master.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n *  chained in the master effects chain.\n *  @param {...(AudioNode|Tone)} nodes All arguments will be connected in a row\n *                                  and the Master will be routed through it.\n *  @return  {Tone.Master}  this\n *  @example\n * //some overall compression to keep the levels in check\n * var masterCompressor = new Tone.Compressor({\n * \t\"threshold\" : -6,\n * \t\"ratio\" : 3,\n * \t\"attack\" : 0.5,\n * \t\"release\" : 0.1\n * });\n * //give a little boost to the lows\n * var lowBump = new Tone.Filter(200, \"lowshelf\");\n * //route everything through the filter\n * //and compressor before going to the speakers\n * Tone.Master.chain(lowBump, masterCompressor);\n */\nTone.Master.prototype.chain = function(){\n\tthis.input.disconnect();\n\tvar args = Array.from(arguments);\n\targs.unshift(this.input);\n\targs.push(this.output);\n\tTone.connectSeries.apply(undefined, args);\n};\n\n/**\n *  Clean up\n *  @return  {Tone.Master}  this\n */\nTone.Master.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"volume\");\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tAUGMENT TONE's PROTOTYPE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)\n *  @returns {Tone.AudioNode} this\n *  @example\n * //connect an oscillator to the master output\n * var osc = new Tone.Oscillator().toMaster();\n */\nTone.AudioNode.prototype.toMaster = function(){\n\tthis.connect(this.context.master);\n\treturn this;\n};\n\n/**\n *  initialize the module and listen for new audio contexts\n *  @private\n */\nvar MasterConstructor = Tone.Master;\nTone.Master = new MasterConstructor();\n\nTone.Context.on(\"init\", function(context){\n\t// if it already exists, just restore it\n\tif (context.master && context.master.isMaster){\n\t\tTone.Master = context.master;\n\t} else {\n\t\tTone.Master = new MasterConstructor();\n\t}\n});\n\nTone.Context.on(\"close\", function(context){\n\tif (context.master && context.master.isMaster){\n\t\tcontext.master.dispose();\n\t}\n});\n\nexport default Tone.Master;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../component/Volume\";\nimport \"../core/Master\";\nimport \"../type/Type\";\nimport \"../core/TimelineState\";\nimport \"../signal/Signal\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Base class for sources. Sources have start/stop methods\n *          and the ability to be synced to the\n *          start/stop of Tone.Transport.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @example\n * //Multiple state change events can be chained together,\n * //but must be set in the correct order and with ascending times\n *\n * // OK\n * state.start().stop(\"+0.2\");\n * // AND\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n *\n * // BAD\n * state.stop(\"+0.2\").start();\n * // OR\n * state.start(\"+0.3\").stop(\"+0.2\");\n *\n */\nTone.Source = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.Source.defaults);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The output volume node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * source.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\t/**\n\t * \tKeep track of the scheduled state.\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\tthis._state.memory = 100;\n\n\t/**\n\t *  The synced `start` callback function from the transport\n\t *  @type {Function}\n\t *  @private\n\t */\n\tthis._synced = false;\n\n\t/**\n\t *  Keep track of all of the scheduled event ids\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._scheduled = [];\n\n\t//make the output explicitly stereo\n\tthis._volume.output.output.channelCount = 2;\n\tthis._volume.output.output.channelCountMode = \"explicit\";\n\t//mute initially\n\tthis.mute = options.mute;\n};\n\nTone.extend(Tone.Source, Tone.AudioNode);\n\n/**\n *  The default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Source.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n *  Returns the playback state of the source, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.Source#\n *  @name state\n */\nObject.defineProperty(Tone.Source.prototype, \"state\", {\n\tget : function(){\n\t\tif (this._synced){\n\t\t\tif (Tone.Transport.state === Tone.State.Started){\n\t\t\t\treturn this._state.getValueAtTime(Tone.Transport.seconds);\n\t\t\t} else {\n\t\t\t\treturn Tone.State.Stopped;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._state.getValueAtTime(this.now());\n\t\t}\n\t}\n});\n\n/**\n * Mute the output.\n * @memberOf Tone.Source#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * source.mute = true;\n */\nObject.defineProperty(Tone.Source.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n//overwrite these functions\nTone.Source.prototype._start = Tone.noOp;\nTone.Source.prototype.restart = Tone.noOp;\nTone.Source.prototype._stop = Tone.noOp;\n\n/**\n *  Start the source at the specified time. If no time is given,\n *  start the source now.\n *  @param  {Time} [time=now] When the source should be started.\n *  @returns {Tone.Source} this\n *  @example\n * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n */\nTone.Source.prototype.start = function(time, offset, duration){\n\tif (Tone.isUndef(time) && this._synced){\n\t\ttime = Tone.Transport.seconds;\n\t} else {\n\t\ttime = this.toSeconds(time);\n\t\ttime = Math.max(time, this.context.currentTime);\n\t}\n\t//if it's started, stop it and restart it\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.cancel(time);\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tthis.restart(time, offset, duration);\n\t} else {\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tif (this._synced){\n\t\t\t// add the offset time to the event\n\t\t\tvar event = this._state.get(time);\n\t\t\tevent.offset = Tone.defaultArg(offset, 0);\n\t\t\tevent.duration = duration;\n\t\t\tvar sched = Tone.Transport.schedule(function(t){\n\t\t\t\tthis._start(t, offset, duration);\n\t\t\t}.bind(this), time);\n\t\t\tthis._scheduled.push(sched);\n\n\t\t\t//if it's already started\n\t\t\tif (Tone.Transport.state === Tone.State.Started){\n\t\t\t\tthis._syncedStart(this.now(), Tone.Transport.seconds);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._start.apply(this, arguments);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the source at the specified time. If no time is given,\n *  stop the source now.\n *  @param  {Time} [time=now] When the source should be stopped.\n *  @returns {Tone.Source} this\n *  @example\n * source.stop(); // stops the source immediately\n */\nTone.Source.prototype.stop = function(time){\n\tif (Tone.isUndef(time) && this._synced){\n\t\ttime = Tone.Transport.seconds;\n\t} else {\n\t\ttime = this.toSeconds(time);\n\t\ttime = Math.max(time, this.context.currentTime);\n\t}\n\tif (!this._synced){\n\t\tthis._stop.apply(this, arguments);\n\t} else {\n\t\tvar sched = Tone.Transport.schedule(this._stop.bind(this), time);\n\t\tthis._scheduled.push(sched);\n\t}\n\tthis._state.cancel(time);\n\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\treturn this;\n};\n\n/**\n *  Sync the source to the Transport so that all subsequent\n *  calls to `start` and `stop` are synced to the TransportTime\n *  instead of the AudioContext time.\n *\n *  @returns {Tone.Source} this\n *  @example\n * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n * source.sync().start(0).stop(0.3);\n * //start the transport.\n * Tone.Transport.start();\n *\n *  @example\n * //start the transport with an offset and the sync'ed sources\n * //will start in the correct position\n * source.sync().start(0.1);\n * //the source will be invoked with an offset of 0.4\n * Tone.Transport.start(\"+0.5\", 0.5);\n */\nTone.Source.prototype.sync = function(){\n\tthis._synced = true;\n\tthis._syncedStart = function(time, offset){\n\t\tif (offset > 0){\n\t\t\t// get the playback state at that time\n\t\t\tvar stateEvent = this._state.get(offset);\n\t\t\t// listen for start events which may occur in the middle of the sync'ed time\n\t\t\tif (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset){\n\t\t\t\t// get the offset\n\t\t\t\tvar startOffset = offset - this.toSeconds(stateEvent.time);\n\t\t\t\tvar duration;\n\t\t\t\tif (stateEvent.duration){\n\t\t\t\t\tduration = this.toSeconds(stateEvent.duration) - startOffset;\n\t\t\t\t}\n\t\t\t\tthis._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t\t\t}\n\t\t}\n\t}.bind(this);\n\tthis._syncedStop = function(time){\n\t\tvar seconds = Tone.Transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n\t\tif (this._state.getValueAtTime(seconds) === Tone.State.Started){\n\t\t\tthis._stop(time);\n\t\t}\n\t}.bind(this);\n\tTone.Transport.on(\"start loopStart\", this._syncedStart);\n\tTone.Transport.on(\"stop pause loopEnd\", this._syncedStop);\n\treturn this;\n};\n\n/**\n *  Unsync the source to the Transport. See Tone.Source.sync\n *  @returns {Tone.Source} this\n */\nTone.Source.prototype.unsync = function(){\n\tif (this._synced){\n\t\tTone.Transport.off(\"stop pause loopEnd\", this._syncedStop);\n\t\tTone.Transport.off(\"start loopStart\", this._syncedStart);\n\t}\n\tthis._synced = false;\n\t// clear all of the scheduled ids\n\tfor (var i = 0; i < this._scheduled.length; i++){\n\t\tvar id = this._scheduled[i];\n\t\tTone.Transport.clear(id);\n\t}\n\tthis._scheduled = [];\n\tthis._state.cancel(0);\n\treturn this;\n};\n\n/**\n *\tClean up.\n *  @return {Tone.Source} this\n */\nTone.Source.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.unsync();\n\tthis._scheduled = null;\n\tthis._writable(\"volume\");\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n\tthis._state.dispose();\n\tthis._state = null;\n};\n\nexport default Tone.Source;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  AudioBuffer.copyTo/FromChannel polyfill\n *  @private\n */\nif (Tone.supported){\n\tif (!AudioBuffer.prototype.copyToChannel){\n\t\tAudioBuffer.prototype.copyToChannel = function(src, chanNum, start){\n\t\t\tvar channel = this.getChannelData(chanNum);\n\t\t\tstart = start || 0;\n\t\t\tfor (var i = 0; i < channel.length; i++){\n\t\t\t\tchannel[i+start] = src[i];\n\t\t\t}\n\t\t};\n\t\tAudioBuffer.prototype.copyFromChannel = function(dest, chanNum, start){\n\t\t\tvar channel = this.getChannelData(chanNum);\n\t\t\tstart = start || 0;\n\t\t\tfor (var i = 0; i < dest.length; i++){\n\t\t\t\tdest[i] = channel[i+start];\n\t\t\t}\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Emitter\";\nimport \"../type/Type\";\nimport \"../shim/AudioBuffer\";\n\n/**\n *  @class  Buffer loading and storage. Tone.Buffer is used internally by all\n *          classes that make requests for audio files such as Tone.Player,\n *          Tone.Sampler and Tone.Convolver.\n *\n *          Aside from load callbacks from individual buffers, Tone.Buffer\n *  \t\tprovides events which keep track of the loading progress\n *  \t\tof _all_ of the buffers. These are Tone.Buffer.on(\"load\" / \"progress\" / \"error\")\n *\n *  @constructor\n *  @extends {Tone}\n *  @param {AudioBuffer|String} url The url to load, or the audio buffer to set.\n *  @param {Function=} onload A callback which is invoked after the buffer is loaded.\n *                            It's recommended to use `Tone.Buffer.on('load', callback)` instead\n *                            since it will give you a callback when _all_ buffers are loaded.\n *  @param {Function=} onerror The callback to invoke if there is an error\n *  @example\n * var buffer = new Tone.Buffer(\"path/to/sound.mp3\", function(){\n * \t//the buffer is now available.\n * \tvar buff = buffer.get();\n * });\n *  @example\n * //can load provide fallback extension types if the first type is not supported.\n * var buffer = new Tone.Buffer(\"path/to/sound.[mp3|ogg|wav]\");\n */\nTone.Buffer = function(){\n\n\tvar options = Tone.defaults(arguments, [\"url\", \"onload\", \"onerror\"], Tone.Buffer);\n\tTone.call(this);\n\n\t/**\n\t *  stores the loaded AudioBuffer\n\t *  @type {AudioBuffer}\n\t *  @private\n\t */\n\tthis._buffer = null;\n\n\t/**\n\t *  indicates if the buffer should be reversed or not\n\t *  @type {Boolean}\n\t *  @private\n\t */\n\tthis._reversed = options.reverse;\n\n\t/**\n\t *  The XHR\n\t *  @type  {XMLHttpRequest}\n\t *  @private\n\t */\n\tthis._xhr = null;\n\n\t/**\n\t * Private callback when the buffer is loaded.\n\t * @type {Function}\n\t * @private\n\t */\n\tthis.onload = Tone.noOp;\n\n\tif (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer){\n\t\tthis.set(options.url);\n\t\tif (!this.loaded){\n\t\t\tthis.onload = options.onload;\n\t\t}\n\t} else if (Tone.isString(options.url)){\n\t\tthis.load(options.url).then(options.onload).catch(options.onerror);\n\t}\n};\n\nTone.extend(Tone.Buffer);\n\n/**\n *  the default parameters\n *  @type {Object}\n */\nTone.Buffer.defaults = {\n\t\"url\" : undefined,\n\t\"reverse\" : false,\n\t\"onload\" : Tone.noOp,\n\t\"onerror\" : Tone.noOp\n};\n\n/**\n *  Pass in an AudioBuffer or Tone.Buffer to set the value\n *  of this buffer.\n *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n *  @returns {Tone.Buffer} this\n */\nTone.Buffer.prototype.set = function(buffer){\n\tif (buffer instanceof Tone.Buffer){\n\t\t//if it's loaded, set it\n\t\tif (buffer.loaded){\n\t\t\tthis._buffer = buffer.get();\n\t\t} else {\n\t\t\t//otherwise when it's loaded, invoke it's callback\n\t\t\tbuffer.onload = function(){\n\t\t\t\tthis.set(buffer);\n\t\t\t\tthis.onload(this);\n\t\t\t}.bind(this);\n\t\t}\n\t} else {\n\t\tthis._buffer = buffer;\n\t}\n\t//reverse it initially\n\tif (this._reversed){\n\t\tthis._reverse();\n\t}\n\treturn this;\n};\n\n/**\n *  @return {AudioBuffer} The audio buffer stored in the object.\n */\nTone.Buffer.prototype.get = function(){\n\treturn this._buffer;\n};\n\n/**\n *  Makes an xhr reqest for the selected url then decodes\n *  the file as an audio buffer. Invokes\n *  the callback once the audio buffer loads.\n *  @param {String} url The url of the buffer to load.\n *                      filetype support depends on the\n *                      browser.\n *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer\n */\nTone.Buffer.prototype.load = function(url, onload, onerror){\n\n\tvar promise = new Promise(function(load, error){\n\n\t\tthis._xhr = Tone.Buffer.load(url,\n\n\t\t\t//success\n\t\t\tfunction(buff){\n\t\t\t\tthis._xhr = null;\n\t\t\t\tthis.set(buff);\n\t\t\t\tload(this);\n\t\t\t\tthis.onload(this);\n\t\t\t\tif (onload){\n\t\t\t\t\tonload(this);\n\t\t\t\t}\n\t\t\t}.bind(this),\n\n\t\t\t//error\n\t\t\tfunction(err){\n\t\t\t\tthis._xhr = null;\n\t\t\t\terror(err);\n\t\t\t\tif (onerror){\n\t\t\t\t\tonerror(err);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\n\t}.bind(this));\n\n\treturn promise;\n};\n\n/**\n *  dispose and disconnect\n *  @returns {Tone.Buffer} this\n */\nTone.Buffer.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis._buffer = null;\n\tif (this._xhr){\n\t\tTone.Buffer._removeFromDownloadQueue(this._xhr);\n\t\tthis._xhr.abort();\n\t\tthis._xhr = null;\n\t}\n\treturn this;\n};\n\n/**\n * If the buffer is loaded or not\n * @memberOf Tone.Buffer#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"loaded\", {\n\t\"get\" : function(){\n\t\treturn this.length > 0;\n\t},\n});\n\n/**\n * The duration of the buffer.\n * @memberOf Tone.Buffer#\n * @type {Number}\n * @name duration\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"duration\", {\n\t\"get\" : function(){\n\t\tif (this._buffer){\n\t\t\treturn this._buffer.duration;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n});\n\n/**\n * The length of the buffer in samples\n * @memberOf Tone.Buffer#\n * @type {Number}\n * @name length\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"length\", {\n\t\"get\" : function(){\n\t\tif (this._buffer){\n\t\t\treturn this._buffer.length;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n});\n\n/**\n * The number of discrete audio channels. Returns 0 if no buffer\n * is loaded.\n * @memberOf Tone.Buffer#\n * @type {Number}\n * @name numberOfChannels\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"numberOfChannels\", {\n\t\"get\" : function(){\n\t\tif (this._buffer){\n\t\t\treturn this._buffer.numberOfChannels;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n});\n\n/**\n *  Set the audio buffer from the array. To create a multichannel AudioBuffer,\n *  pass in a multidimensional array.\n *  @param {Float32Array} array The array to fill the audio buffer\n *  @return {Tone.Buffer} this\n */\nTone.Buffer.prototype.fromArray = function(array){\n\tvar isMultidimensional = array[0].length > 0;\n\tvar channels = isMultidimensional ? array.length : 1;\n\tvar len = isMultidimensional ? array[0].length : array.length;\n\tvar buffer = this.context.createBuffer(channels, len, this.context.sampleRate);\n\tif (!isMultidimensional && channels === 1){\n\t\tarray = [array];\n\t}\n\tfor (var c = 0; c < channels; c++){\n\t\tbuffer.copyToChannel(array[c], c);\n\t}\n\tthis._buffer = buffer;\n\treturn this;\n};\n\n/**\n * \tSums muliple channels into 1 channel\n *  @param {Number=} channel Optionally only copy a single channel from the array.\n *  @return {Array}\n */\nTone.Buffer.prototype.toMono = function(chanNum){\n\tif (Tone.isNumber(chanNum)){\n\t\tthis.fromArray(this.toArray(chanNum));\n\t} else {\n\t\tvar outputArray = new Float32Array(this.length);\n\t\tvar numChannels = this.numberOfChannels;\n\t\tfor (var channel = 0; channel < numChannels; channel++){\n\t\t\tvar channelArray = this.toArray(channel);\n\t\t\tfor (var i = 0; i < channelArray.length; i++){\n\t\t\t\toutputArray[i] += channelArray[i];\n\t\t\t}\n\t\t}\n\t\t//divide by the number of channels\n\t\toutputArray = outputArray.map(function(sample){\n\t\t\treturn sample / numChannels;\n\t\t});\n\t\tthis.fromArray(outputArray);\n\t}\n\treturn this;\n};\n\n/**\n * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional\n * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n *  @param {Number=} channel Optionally only copy a single channel from the array.\n *  @return {Array}\n */\nTone.Buffer.prototype.toArray = function(channel){\n\tif (Tone.isNumber(channel)){\n\t\treturn this.getChannelData(channel);\n\t} else if (this.numberOfChannels === 1){\n\t\treturn this.toArray(0);\n\t} else {\n\t\tvar ret = [];\n\t\tfor (var c = 0; c < this.numberOfChannels; c++){\n\t\t\tret[c] = this.getChannelData(c);\n\t\t}\n\t\treturn ret;\n\t}\n};\n\n/**\n *  Returns the Float32Array representing the PCM audio data for the specific channel.\n *  @param  {Number}  channel  The channel number to return\n *  @return  {Float32Array}  The audio as a TypedArray\n */\nTone.Buffer.prototype.getChannelData = function(channel){\n\treturn this._buffer.getChannelData(channel);\n};\n\n/**\n *  Cut a subsection of the array and return a buffer of the\n *  subsection. Does not modify the original buffer\n *  @param {Time} start The time to start the slice\n *  @param {Time=} end The end time to slice. If none is given\n *                     will default to the end of the buffer\n *  @return {Tone.Buffer} this\n */\nTone.Buffer.prototype.slice = function(start, end){\n\tend = Tone.defaultArg(end, this.duration);\n\tvar startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));\n\tvar endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));\n\tvar replacement = [];\n\tfor (var i = 0; i < this.numberOfChannels; i++){\n\t\treplacement[i] = this.toArray(i).slice(startSamples, endSamples);\n\t}\n\tvar retBuffer = new Tone.Buffer().fromArray(replacement);\n\treturn retBuffer;\n};\n\n/**\n *  Reverse the buffer.\n *  @private\n *  @return {Tone.Buffer} this\n */\nTone.Buffer.prototype._reverse = function(){\n\tif (this.loaded){\n\t\tfor (var i = 0; i < this.numberOfChannels; i++){\n\t\t\tArray.prototype.reverse.call(this.getChannelData(i));\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n * Reverse the buffer.\n * @memberOf Tone.Buffer#\n * @type {Boolean}\n * @name reverse\n */\nObject.defineProperty(Tone.Buffer.prototype, \"reverse\", {\n\t\"get\" : function(){\n\t\treturn this._reversed;\n\t},\n\t\"set\" : function(rev){\n\t\tif (this._reversed !== rev){\n\t\t\tthis._reversed = rev;\n\t\t\tthis._reverse();\n\t\t}\n\t},\n});\n\n///////////////////////////////////////////////////////////////////////////\n// STATIC METHODS\n///////////////////////////////////////////////////////////////////////////\n\n//statically inherits Emitter methods\nTone.Emitter.mixin(Tone.Buffer);\n\n/**\n *  the static queue for all of the xhr requests\n *  @type {Array}\n *  @private\n */\nTone.Buffer._downloadQueue = [];\n\n/**\n *  A path which is prefixed before every url.\n *  @type  {String}\n *  @static\n */\nTone.Buffer.baseUrl = \"\";\n\n/**\n *  Create a Tone.Buffer from the array. To create a multichannel AudioBuffer,\n *  pass in a multidimensional array.\n *  @param {Float32Array} array The array to fill the audio buffer\n *  @return {Tone.Buffer} A Tone.Buffer created from the array\n */\nTone.Buffer.fromArray = function(array){\n\treturn (new Tone.Buffer()).fromArray(array);\n};\n\n/**\n * Creates a Tone.Buffer from a URL, returns a promise\n * which resolves to a Tone.Buffer\n * @param  {String} url The url to load.\n * @return {Promise<Tone.Buffer>}     A promise which resolves to a Tone.Buffer\n */\nTone.Buffer.fromUrl = function(url){\n\tvar buffer = new Tone.Buffer();\n\treturn buffer.load(url).then(function(){\n\t\treturn buffer;\n\t});\n};\n\n/**\n * Remove an xhr request from the download queue\n * @private\n */\nTone.Buffer._removeFromDownloadQueue = function(request){\n\tvar index = Tone.Buffer._downloadQueue.indexOf(request);\n\tif (index !== -1){\n\t\tTone.Buffer._downloadQueue.splice(index, 1);\n\t}\n};\n\n/**\n *  Loads a url using XMLHttpRequest.\n *  @param {String} url\n *  @param {Function} onload\n *  @param {Function} onerror\n *  @param {Function} onprogress\n *  @return {XMLHttpRequest}\n */\nTone.Buffer.load = function(url, onload, onerror){\n\t//default\n\tonload = Tone.defaultArg(onload, Tone.noOp);\n\n\t// test if the url contains multiple extensions\n\tvar matches = url.match(/\\[(.+\\|?)+\\]$/);\n\tif (matches){\n\t\tvar extensions = matches[1].split(\"|\");\n\t\tvar extension = extensions[0];\n\t\tfor (var i = 0; i < extensions.length; i++){\n\t\t\tif (Tone.Buffer.supportsType(extensions[i])){\n\t\t\t\textension = extensions[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\turl = url.replace(matches[0], extension);\n\t}\n\n\tfunction onError(e){\n\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\tTone.Buffer.emit(\"error\", e);\n\t\tif (onerror){\n\t\t\tonerror(e);\n\t\t} else {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tfunction onProgress(){\n\t\t//calculate the progress\n\t\tvar totalProgress = 0;\n\t\tfor (var i = 0; i < Tone.Buffer._downloadQueue.length; i++){\n\t\t\ttotalProgress += Tone.Buffer._downloadQueue[i].progress;\n\t\t}\n\t\tTone.Buffer.emit(\"progress\", totalProgress / Tone.Buffer._downloadQueue.length);\n\t}\n\n\tvar request = new XMLHttpRequest();\n\trequest.open(\"GET\", Tone.Buffer.baseUrl + url, true);\n\trequest.responseType = \"arraybuffer\";\n\t//start out as 0\n\trequest.progress = 0;\n\n\tTone.Buffer._downloadQueue.push(request);\n\n\trequest.addEventListener(\"load\", function(){\n\n\t\tif (request.status === 200){\n\t\t\tTone.context.decodeAudioData(request.response).then(function(buff){\n\n\t\t\t\trequest.progress = 1;\n\t\t\t\tonProgress();\n\t\t\t\tonload(buff);\n\n\t\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\t\tif (Tone.Buffer._downloadQueue.length === 0){\n\t\t\t\t\t//emit the event at the end\n\t\t\t\t\tTone.Buffer.emit(\"load\");\n\t\t\t\t}\n\t\t\t}).catch(function(){\n\t\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\t\tonError(\"Tone.Buffer: could not decode audio data: \"+url);\n\t\t\t});\n\t\t} else {\n\t\t\tonError(\"Tone.Buffer: could not locate file: \"+url);\n\t\t}\n\t});\n\trequest.addEventListener(\"error\", onError);\n\n\trequest.addEventListener(\"progress\", function(event){\n\t\tif (event.lengthComputable){\n\t\t\t//only go to 95%, the last 5% is when the audio is decoded\n\t\t\trequest.progress = (event.loaded / event.total) * 0.95;\n\t\t\tonProgress();\n\t\t}\n\t});\n\n\trequest.send();\n\n\treturn request;\n};\n\n/**\n *  Stop all of the downloads in progress\n *  @return {Tone.Buffer}\n *  @static\n */\nTone.Buffer.cancelDownloads = function(){\n\tTone.Buffer._downloadQueue.slice().forEach(function(request){\n\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\trequest.abort();\n\t});\n\treturn Tone.Buffer;\n};\n\n/**\n *  Checks a url's extension to see if the current browser can play that file type.\n *  @param {String} url The url/extension to test\n *  @return {Boolean} If the file extension can be played\n *  @static\n *  @example\n * Tone.Buffer.supportsType(\"wav\"); //returns true\n * Tone.Buffer.supportsType(\"path/to/file.wav\"); //returns true\n */\nTone.Buffer.supportsType = function(url){\n\tvar extension = url.split(\".\");\n\textension = extension[extension.length - 1];\n\tvar response = document.createElement(\"audio\").canPlayType(\"audio/\"+extension);\n\treturn response !== \"\";\n};\n\n/**\n *  Returns a Promise which resolves when all of the buffers have loaded\n *  @return {Promise}\n */\nTone.loaded = function(){\n\tvar onload, onerror;\n\tfunction removeEvents(){\n\t\t//remove the events when it's resolved\n\t\tTone.Buffer.off(\"load\", onload);\n\t\tTone.Buffer.off(\"error\", onerror);\n\t}\n\treturn new Promise(function(success, fail){\n\t\tonload = function(){\n\t\t\tsuccess();\n\t\t};\n\t\tonerror = function(){\n\t\t\tfail();\n\t\t};\n\t\t//add the event listeners\n\t\tTone.Buffer.on(\"load\", onload);\n\t\tTone.Buffer.on(\"error\", onerror);\n\t}).then(removeEvents).catch(function(e){\n\t\tremoveEvents();\n\t\tthrow new Error(e);\n\t});\n};\n\nexport default Tone.Buffer;\n\n","import Tone from \"../core/Tone\";\n\nif (Tone.supported){\n\tif (!OscillatorNode.prototype.setPeriodicWave){\n\t\tOscillatorNode.prototype.setPeriodicWave = OscillatorNode.prototype.setWaveTable;\n\t}\n\tif (!AudioContext.prototype.createPeriodicWave){\n\t\tAudioContext.prototype.createPeriodicWave = AudioContext.prototype.createWaveTable;\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../source/Source\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\nimport \"../shim/OscillatorNode\";\n\n/**\n *  @class Wrapper around the native fire-and-forget OscillatorNode. Adds the\n *     ability to reschedule the stop method. ***[Tone.Oscillator](Oscillator) is better \n *     for most use-cases***\n *  @extends {Tone.AudioNode}\n *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n *  @param  {Function}  onload  The callback to invoke when the\n *                               buffer is done playing.\n */\nTone.OscillatorNode = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.OscillatorNode);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The callback to invoke after the\n\t *  buffer source is done playing.\n\t *  @type  {Function}\n\t */\n\tthis.onended = options.onended;\n\n\t/**\n\t *  The oscillator start time\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._startTime = -1;\n\n\t/**\n\t *  The oscillator stop time\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._stopTime = -1;\n\n\t/**\n\t *  The gain node which envelopes the OscillatorNode\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._gainNode = this.output = new Tone.Gain(0);\n\n\t/**\n\t *  The oscillator\n\t *  @type  {OscillatorNode}\n\t *  @private\n\t */\n\tthis._oscillator = this.context.createOscillator();\n\tTone.connect(this._oscillator, this._gainNode);\n\tthis.type = options.type;\n\n\t/**\n\t *  The frequency of the oscillator\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Param({\n\t\tparam : this._oscillator.frequency, \n\t\tunits : Tone.Type.Frequency,\n\t\tvalue : options.frequency\n\t});\n\n\t/**\n\t *  The detune of the oscillator\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Param({\n\t\tparam : this._oscillator.detune,\n\t\tunits : Tone.Type.Cents,\n\t\tvalue : options.detune\n\t});\n\n\t/**\n\t *  The value that the buffer ramps to\n\t *  @type {Gain}\n\t *  @private\n\t */\n\tthis._gain = 1;\n};\n\nTone.extend(Tone.OscillatorNode, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.OscillatorNode.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"type\" : \"sine\",\n\t\"onended\" : Tone.noOp\n};\n\n/**\n *  Returns the playback state of the oscillator, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.OscillatorNode#\n *  @name state\n */\nObject.defineProperty(Tone.OscillatorNode.prototype, \"state\", {\n\tget : function(){\n\t\treturn this.getStateAtTime(this.now());\n\t}\n});\n\n/**\n *  Get the playback state at the given time\n *  @param  {Time}  time  The time to test the state at\n *  @return  {Tone.State}  The playback state. \n */\nTone.OscillatorNode.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._startTime !== -1 && time >= this._startTime && (this._stopTime === -1 || time <= this._stopTime)){\n\t\treturn Tone.State.Started;\n\t} else {\n\t\treturn Tone.State.Stopped;\n\t}\n};\n\n/**\n     * Start the oscillator node at the given time\n     * @param  {Time=} time When to start the oscillator\n     * @return {OscillatorNode}      this\n     */\nTone.OscillatorNode.prototype.start = function(time){\n\tthis.log(\"start\", time);\n\tif (this._startTime === -1){\n\t\tthis._startTime = this.toSeconds(time);\n\t\tthis._startTime = Math.max(this._startTime, this.context.currentTime);\n\t\tthis._oscillator.start(this._startTime);\n\t\tthis._gainNode.gain.setValueAtTime(1, this._startTime);\n\t} else {\n\t\tthrow new Error(\"cannot call OscillatorNode.start more than once\");\n\t}\n\treturn this;\n};\n\n/**\n     * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n     * @param  {PeriodicWave} periodicWave PeriodicWave should be created with context.createPeriodicWave\n     * @return {OscillatorNode} this\n     */\nTone.OscillatorNode.prototype.setPeriodicWave = function(periodicWave){\n\tthis._oscillator.setPeriodicWave(periodicWave);\n\treturn this;\n};\n\n/**\n     * Stop the oscillator node at the given time\n     * @param  {Time=} time When to stop the oscillator\n     * @return {OscillatorNode}      this\n     */\nTone.OscillatorNode.prototype.stop = function(time){\n\tthis.log(\"stop\", time);\n\tthis.assert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n\t//cancel the previous stop\n\tthis.cancelStop();\n\t//reschedule it\n\tthis._stopTime = this.toSeconds(time);\n\tthis._stopTime = Math.max(this._stopTime, this.context.currentTime);\n\tif (this._stopTime > this._startTime){\n\t\tthis._gainNode.gain.setValueAtTime(0, this._stopTime);\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._timeout = this.context.setTimeout(function(){\n\t\t\tthis._oscillator.stop(this.now());\n\t\t\tthis.onended();\n\t\t\t//disconnect the object when it's ended\n\t\t\tsetTimeout(function(){\n\t\t\t\tif (this._oscillator){\n\t\t\t\t\tthis._oscillator.disconnect();\n\t\t\t\t\tthis._gainNode.disconnect();\n\t\t\t\t}\n\t\t\t}.bind(this), 100);\n\t\t}.bind(this), this._stopTime - this.context.currentTime);\n\t} else {\n\t\t//cancel the stop envelope\n\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel a scheduled stop event\n *  @return  {Tone.OscillatorNode}  this\n */\nTone.OscillatorNode.prototype.cancelStop = function(){\n\tif (this._startTime !== -1){\n\t\t//cancel the stop envelope\n\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime);\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._stopTime = -1;\n\t}\n\treturn this;\n};\n\n/**\n * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n * @memberOf Tone.OscillatorNode#\n * @type {Time}\n * @name type\n */\nObject.defineProperty(Tone.OscillatorNode.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._oscillator.type;\n\t},\n\tset : function(type){\n\t\tthis._oscillator.type = type;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.OscillatorNode}  this\n */\nTone.OscillatorNode.prototype.dispose = function(){\n\tif (!this._wasDisposed){\n\t\tthis._wasDisposed = true;\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis.onended = null;\n\t\tthis._oscillator.disconnect();\n\t\tthis._oscillator = null;\n\t\tthis._gainNode.dispose();\n\t\tthis._gainNode = null;\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\tthis.detune.dispose();\n\t\tthis.detune = null;\n\t}\n\treturn this;\n};\n\nexport default Tone.OscillatorNode;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../source/Source\";\nimport \"../core/Transport\";\nimport \"../source/OscillatorNode\";\n\n/**\n *  @class Tone.Oscillator supports a number of features including\n *         phase rotation, multiple oscillator types (see Tone.Oscillator.type),\n *         and Transport syncing (see Tone.Oscillator.syncFrequency).\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {Frequency} [frequency] Starting frequency\n *  @param {string} [type] The oscillator type. Read more about type below.\n *  @example\n * //make and start a 440hz sine tone\n * var osc = new Tone.Oscillator(440, \"sine\").toMaster().start();\n */\nTone.Oscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.Oscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  the main oscillator\n\t *  @type {OscillatorNode}\n\t *  @private\n\t */\n\tthis._oscillator = null;\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  the periodic wave\n\t *  @type {PeriodicWave}\n\t *  @private\n\t */\n\tthis._wave = null;\n\n\t/**\n\t *  The partials of the oscillator\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._partials = options.partials;\n\n\t/**\n\t *  The number of partials to limit or extend the periodic wave by\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._partialCount = options.partialCount;\n\n\t/**\n\t *  the phase of the oscillator\n\t *  between 0 - 360\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._phase = options.phase;\n\n\t/**\n\t *  the type of the oscillator\n\t *  @type {string}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t//setup\n\tif (options.partialCount && options.type !== Tone.Oscillator.Type.Custom){\n\t\tthis._type = this.baseType + options.partialCount.toString();\n\t}\n\tthis.phase = this._phase;\n\tthis._readOnly([\"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.Oscillator, Tone.Source);\n\n/**\n *  the default parameters\n *  @type {Object}\n */\nTone.Oscillator.defaults = {\n\t\"type\" : \"sine\",\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"partials\" : [],\n\t\"partialCount\" : 0\n};\n\n/**\n *  The Oscillator types\n *  @enum {String}\n */\nTone.Oscillator.Type = {\n\tSine : \"sine\",\n\tTriangle : \"triangle\",\n\tSawtooth : \"sawtooth\",\n\tSquare : \"square\",\n\tCustom : \"custom\"\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.Oscillator.prototype._start = function(time){\n\tthis.log(\"start\", time);\n\t//new oscillator with previous values\n\tvar oscillator = new Tone.OscillatorNode();\n\tthis._oscillator = oscillator;\n\tif (this._wave){\n\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t} else {\n\t\tthis._oscillator.type = this._type;\n\t}\n\t//connect the control signal to the oscillator frequency & detune\n\tthis._oscillator.connect(this.output);\n\tthis.frequency.connect(this._oscillator.frequency);\n\tthis.detune.connect(this._oscillator.detune);\n\n\t//start the oscillator\n\ttime = this.toSeconds(time);\n\tthis._oscillator.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @private\n *  @param  {Time} [time=now] (optional) timing parameter\n *  @returns {Tone.Oscillator} this\n */\nTone.Oscillator.prototype._stop = function(time){\n\tthis.log(\"stop\", time);\n\tif (this._oscillator){\n\t\ttime = this.toSeconds(time);\n\t\tthis._oscillator.stop(time);\n\t}\n\treturn this;\n};\n\n/**\n * Restart the oscillator. Does not stop the oscillator, but instead\n * just cancels any scheduled 'stop' from being invoked.\n * @param  {Time=} time\n * @return {Tone.Oscillator}      this\n */\nTone.Oscillator.prototype.restart = function(time){\n\tif (this._oscillator){\n\t\tthis._oscillator.cancelStop();\n\t}\n\tthis._state.cancel(this.toSeconds(time));\n\treturn this;\n};\n\n/**\n *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n *  will also affect the oscillators frequency.\n *  @returns {Tone.Oscillator} this\n *  @example\n * Tone.Transport.bpm.value = 120;\n * osc.frequency.value = 440;\n * //the ration between the bpm and the frequency will be maintained\n * osc.syncFrequency();\n * Tone.Transport.bpm.value = 240;\n * // the frequency of the oscillator is doubled to 880\n */\nTone.Oscillator.prototype.syncFrequency = function(){\n\tTone.Transport.syncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n *  Unsync the oscillator's frequency from the Transport.\n *  See Tone.Oscillator.syncFrequency\n *  @returns {Tone.Oscillator} this\n */\nTone.Oscillator.prototype.unsyncFrequency = function(){\n\tTone.Transport.unsyncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n * setting the first x number of partials of the oscillator. For example: \"sine4\" would\n * set be the first 4 partials of the sine wave and \"triangle8\" would set the first\n * 8 partials of the triangle wave.\n * <br><br>\n * Uses PeriodicWave internally even for native types so that it can set the phase.\n * PeriodicWave equations are from the\n * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).\n *\n * @memberOf Tone.Oscillator#\n * @type {string}\n * @name type\n * @example\n * //set it to a square wave\n * osc.type = \"square\";\n * @example\n * //set the first 6 partials of a sawtooth wave\n * osc.type = \"sawtooth6\";\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tvar isBasicType = [Tone.Oscillator.Type.Sine, Tone.Oscillator.Type.Square, Tone.Oscillator.Type.Triangle, Tone.Oscillator.Type.Sawtooth].includes(type);\n\t\tif (this._phase === 0 && isBasicType){\n\t\t\tthis._wave = null;\n\t\t\tthis._partialCount = 0;\n\t\t\t//just go with the basic approach\n\t\t\tif (this._oscillator !== null){\n\t\t\t\tthis._oscillator.type = type;\n\t\t\t}\n\t\t} else {\n\t\t\tvar coefs = this._getRealImaginary(type, this._phase);\n\t\t\tvar periodicWave = this.context.createPeriodicWave(coefs[0], coefs[1]);\n\t\t\tthis._wave = periodicWave;\n\t\t\tif (this._oscillator !== null){\n\t\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t}\n\t\t}\n\t\tthis._type = type;\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.Oscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._type.replace(this.partialCount, \"\");\n\t},\n\tset : function(baseType){\n\t\tif (this.partialCount && this._type !== Tone.Oscillator.Type.Custom && baseType !== Tone.Oscillator.Type.Custom){\n\t\t\tthis.type = baseType + this.partialCount;\n\t\t} else {\n\t\t\tthis.type = baseType;\n\t\t}\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @example\n * osc.type = 'sine'\n * osc.partialCount = 3\n * //is equivalent to\n * osc.type = 'sine3'\n * @memberOf Tone.Oscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._partialCount;\n\t},\n\tset : function(p){\n\t\tvar type = this._type;\n\t\tvar partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n\t\tif (partial){\n\t\t\ttype = partial[1];\n\t\t}\n\t\tif (this._type !== Tone.Oscillator.Type.Custom){\n\t\t\tif (p === 0){\n\t\t\t\tthis.type = type;\n\t\t\t} else {\n\t\t\t\tthis.type = type + p.toString();\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n *  Get the object's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. \n *  @memberOf Tone.Oscillator#\n *  @returns {Object}\n */\nTone.Oscillator.prototype.get = function(){\n\tvar values = Tone.prototype.get.apply(this, arguments);\n\tif (values.type !== Tone.Oscillator.Type.Custom){\n\t\tdelete values.partials;\n\t}\n\treturn values;\n};\n\n/**\n *  Returns the real and imaginary components based\n *  on the oscillator type.\n *  @returns {Array} [real, imaginary]\n *  @private\n */\nTone.Oscillator.prototype._getRealImaginary = function(type, phase){\n\tvar fftSize = 4096;\n\tvar periodicWaveSize = fftSize / 2;\n\n\tvar real = new Float32Array(periodicWaveSize);\n\tvar imag = new Float32Array(periodicWaveSize);\n\n\tvar partialCount = 1;\n\tif (type === Tone.Oscillator.Type.Custom){\n\t\tpartialCount = this._partials.length + 1;\n\t\tthis._partialCount = this._partials.length;\n\t\tperiodicWaveSize = partialCount;\n\t} else {\n\t\tvar partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t\tif (partial){\n\t\t\tpartialCount = parseInt(partial[2]) + 1;\n\t\t\tthis._partialCount = parseInt(partial[2]);\n\t\t\ttype = partial[1];\n\t\t\tpartialCount = Math.max(partialCount, 2);\n\t\t\tperiodicWaveSize = partialCount;\n\t\t} else {\n\t\t\tthis._partialCount = 0;\n\t\t}\n\t\tthis._partials = [];\n\t}\n\n\tfor (var n = 1; n < periodicWaveSize; ++n){\n\t\tvar piFactor = 2 / (n * Math.PI);\n\t\tvar b;\n\t\tswitch (type){\n\t\t\tcase Tone.Oscillator.Type.Sine:\n\t\t\t\tb = (n <= partialCount) ? 1 : 0;\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Square:\n\t\t\t\tb = (n & 1) ? 2 * piFactor : 0;\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Sawtooth:\n\t\t\t\tb = piFactor * ((n & 1) ? 1 : -1);\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Triangle:\n\t\t\t\tif (n & 1){\n\t\t\t\t\tb = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n\t\t\t\t} else {\n\t\t\t\t\tb = 0;\n\t\t\t\t}\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Custom:\n\t\t\t\tb = this._partials[n - 1];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new TypeError(\"Tone.Oscillator: invalid type: \"+type);\n\t\t}\n\t\tif (b !== 0){\n\t\t\treal[n] = -b * Math.sin(phase * n);\n\t\t\timag[n] = b * Math.cos(phase * n);\n\t\t} else {\n\t\t\treal[n] = 0;\n\t\t\timag[n] = 0;\n\t\t}\n\t}\n\treturn [real, imag];\n};\n\n/**\n *  Compute the inverse FFT for a given phase.\n *  @param  {Float32Array}  real\n *  @param  {Float32Array}  imag\n *  @param  {NormalRange}  phase\n *  @return  {AudioRange}\n *  @private\n */\nTone.Oscillator.prototype._inverseFFT = function(real, imag, phase){\n\tvar sum = 0;\n\tvar len = real.length;\n\tfor (var i = 0; i < len; i++){\n\t\tsum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t}\n\treturn sum;\n};\n\n/**\n *  Returns the initial value of the oscillator.\n *  @return  {AudioRange}\n *  @private\n */\nTone.Oscillator.prototype._getInitialValue = function(){\n\tvar coefs = this._getRealImaginary(this._type, 0);\n\tvar real = coefs[0];\n\tvar imag = coefs[1];\n\tvar maxValue = 0;\n\tvar twoPi = Math.PI * 2;\n\t//check for peaks in 8 places\n\tfor (var i = 0; i < 8; i++){\n\t\tmaxValue = Math.max(this._inverseFFT(real, imag, (i / 8) * twoPi), maxValue);\n\t}\n\treturn -this._inverseFFT(real, imag, this._phase) / maxValue;\n};\n\n/**\n * The partials of the waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.Oscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._partials;\n\t},\n\tset : function(partials){\n\t\tthis._partials = partials;\n\t\tthis.type = Tone.Oscillator.Type.Custom;\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.Oscillator#\n * @type {Degrees}\n * @name phase\n * @example\n * osc.phase = 180; //flips the phase of the oscillator\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._phase * (180 / Math.PI);\n\t},\n\tset : function(phase){\n\t\tthis._phase = phase * Math.PI / 180;\n\t\t//reset the type\n\t\tthis.type = this._type;\n\t}\n});\n\n/**\n *  Dispose and disconnect.\n *  @return {Tone.Oscillator} this\n */\nTone.Oscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tif (this._oscillator !== null){\n\t\tthis._oscillator.dispose();\n\t\tthis._oscillator = null;\n\t}\n\tthis._wave = null;\n\tthis._writable([\"frequency\", \"detune\"]);\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis._partials = null;\n\treturn this;\n};\n\nexport default Tone.Oscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Oscillator\";\nimport \"../signal/Scale\";\nimport \"../core/AudioNode\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../type/Type\";\nimport \"../signal/Zero\";\n\n/**\n *  @class  LFO stands for low frequency oscillator. Tone.LFO produces an output signal\n *          which can be attached to an AudioParam or Tone.Signal\n *          in order to modulate that parameter with an oscillator. The LFO can\n *          also be synced to the transport to start/stop and change when the tempo changes.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Frequency|Object} [frequency] The frequency of the oscillation. Typically, LFOs will be\n *                               in the frequency range of 0.1 to 10 hertz.\n *  @param {number=} min The minimum output value of the LFO.\n *  @param {number=} max The maximum value of the LFO.\n *  @example\n * var lfo = new Tone.LFO(\"4n\", 400, 4000);\n * lfo.connect(filter.frequency);\n */\nTone.LFO = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"min\", \"max\"], Tone.LFO);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._oscillator = new Tone.Oscillator({\n\t\t\"frequency\" : options.frequency,\n\t\t\"type\" : options.type,\n\t});\n\n\t/**\n\t *  the lfo's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._oscillator.frequency;\n\n\t/**\n\t * The amplitude of the LFO, which controls the output range between\n\t * the min and max output. For example if the min is -10 and the max\n\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t * between -5 and 5.\n\t * @type {Number}\n\t * @signal\n\t */\n\tthis.amplitude = this._oscillator.volume;\n\tthis.amplitude.units = Tone.Type.NormalRange;\n\tthis.amplitude.value = options.amplitude;\n\n\t/**\n\t *  The signal which is output when the LFO is stopped\n\t *  @type  {Tone.Signal}\n\t *  @private\n\t */\n\tthis._stoppedSignal = new Tone.Signal(0, Tone.Type.AudioRange);\n\n\t/**\n\t *  Just outputs zeros.\n\t *  @type {Tone.Zero}\n\t *  @private\n\t */\n\tthis._zeros = new Tone.Zero();\n\n\t/**\n\t *  The value that the LFO outputs when it's stopped\n\t *  @type {AudioRange}\n\t *  @private\n\t */\n\tthis._stoppedValue = 0;\n\n\t/**\n\t *  @type {Tone.AudioToGain}\n\t *  @private\n\t */\n\tthis._a2g = new Tone.AudioToGain();\n\n\t/**\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._scaler = this.output = new Tone.Scale(options.min, options.max);\n\n\t/**\n\t *  the units of the LFO (used for converting)\n\t *  @type {Tone.Type}\n\t *  @private\n\t */\n\tthis._units = Tone.Type.Default;\n\tthis.units = options.units;\n\n\t//connect it up\n\tthis._oscillator.chain(this._a2g, this._scaler);\n\tthis._zeros.connect(this._a2g);\n\tthis._stoppedSignal.connect(this._a2g);\n\tthis._readOnly([\"amplitude\", \"frequency\"]);\n\tthis.phase = options.phase;\n};\n\nTone.extend(Tone.LFO, Tone.AudioNode);\n\n/**\n *  the default parameters\n *\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.LFO.defaults = {\n\t\"type\" : \"sine\",\n\t\"min\" : 0,\n\t\"max\" : 1,\n\t\"phase\" : 0,\n\t\"frequency\" : \"4n\",\n\t\"amplitude\" : 1,\n\t\"units\" : Tone.Type.Default\n};\n\n/**\n *  Start the LFO.\n *  @param  {Time} [time=now] the time the LFO will start\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._stoppedSignal.setValueAtTime(0, time);\n\tthis._oscillator.start(time);\n\treturn this;\n};\n\n/**\n *  Stop the LFO.\n *  @param  {Time} [time=now] the time the LFO will stop\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\tthis._oscillator.stop(time);\n\treturn this;\n};\n\n/**\n *  Sync the start/stop/pause to the transport\n *  and the frequency to the bpm of the transport\n *  @returns {Tone.LFO} this\n *  @example\n *  lfo.frequency.value = \"8n\";\n *  lfo.sync().start(0)\n *  //the rate of the LFO will always be an eighth note,\n *  //even as the tempo changes\n */\nTone.LFO.prototype.sync = function(){\n\tthis._oscillator.sync();\n\tthis._oscillator.syncFrequency();\n\treturn this;\n};\n\n/**\n *  unsync the LFO from transport control\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.unsync = function(){\n\tthis._oscillator.unsync();\n\tthis._oscillator.unsyncFrequency();\n\treturn this;\n};\n\n/**\n * The miniumum output of the LFO.\n * @memberOf Tone.LFO#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.LFO.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._toUnits(this._scaler.min);\n\t},\n\tset : function(min){\n\t\tmin = this._fromUnits(min);\n\t\tthis._scaler.min = min;\n\t}\n});\n\n/**\n * The maximum output of the LFO.\n * @memberOf Tone.LFO#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.LFO.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._toUnits(this._scaler.max);\n\t},\n\tset : function(max){\n\t\tmax = this._fromUnits(max);\n\t\tthis._scaler.max = max;\n\t}\n});\n\n/**\n * The type of the oscillator: sine, square, sawtooth, triangle.\n * @memberOf Tone.LFO#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.LFO.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._oscillator.type;\n\t},\n\tset : function(type){\n\t\tthis._oscillator.type = type;\n\t\tthis._stoppedValue = this._oscillator._getInitialValue();\n\t\tthis._stoppedSignal.value = this._stoppedValue;\n\t}\n});\n\n/**\n * The phase of the LFO.\n * @memberOf Tone.LFO#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.LFO.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._oscillator.phase;\n\t},\n\tset : function(phase){\n\t\tthis._oscillator.phase = phase;\n\t\tthis._stoppedValue = this._oscillator._getInitialValue();\n\t\tthis._stoppedSignal.value = this._stoppedValue;\n\t}\n});\n\n/**\n * The output units of the LFO.\n * @memberOf Tone.LFO#\n * @type {Tone.Type}\n * @name units\n */\nObject.defineProperty(Tone.LFO.prototype, \"units\", {\n\tget : function(){\n\t\treturn this._units;\n\t},\n\tset : function(val){\n\t\tvar currentMin = this.min;\n\t\tvar currentMax = this.max;\n\t\t//convert the min and the max\n\t\tthis._units = val;\n\t\tthis.min = currentMin;\n\t\tthis.max = currentMax;\n\t}\n});\n\n/**\n *  Returns the playback state of the source, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.LFO#\n *  @name state\n */\nObject.defineProperty(Tone.LFO.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._oscillator.state;\n\t}\n});\n\n/**\n *  Connect the output of the LFO to an AudioParam, AudioNode, or Tone Node.\n *  Tone.LFO will automatically convert to the destination units of the\n *  will get the units from the connected node.\n *  @param  {Tone | AudioParam | AudioNode} node\n *  @param {number} [outputNum=0] optionally which output to connect from\n *  @param {number} [inputNum=0] optionally which input to connect to\n *  @returns {Tone.LFO} this\n *  @private\n */\nTone.LFO.prototype.connect = function(node){\n\tif (node.constructor === Tone.Signal || node.constructor === Tone.Param){\n\t\tthis.convert = node.convert;\n\t\tthis.units = node.units;\n\t}\n\tTone.SignalBase.prototype.connect.apply(this, arguments);\n\treturn this;\n};\n\n/**\n *  private method borrowed from Param converts\n *  units from their destination value\n *  @function\n *  @private\n */\nTone.LFO.prototype._fromUnits = Tone.Param.prototype._fromUnits;\n\n/**\n *  private method borrowed from Param converts\n *  units to their destination value\n *  @function\n *  @private\n */\nTone.LFO.prototype._toUnits = Tone.Param.prototype._toUnits;\n\n/**\n *  disconnect and dispose\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"amplitude\", \"frequency\"]);\n\tthis._oscillator.dispose();\n\tthis._oscillator = null;\n\tthis._stoppedSignal.dispose();\n\tthis._stoppedSignal = null;\n\tthis._zeros.dispose();\n\tthis._zeros = null;\n\tthis._scaler.dispose();\n\tthis._scaler = null;\n\tthis._a2g.dispose();\n\tthis._a2g = null;\n\tthis.frequency = null;\n\tthis.amplitude = null;\n\treturn this;\n};\n\nexport default Tone.LFO;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Compressor\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Limiter will limit the loudness of an incoming signal.\n *         It is composed of a Tone.Compressor with a fast attack\n *         and release. Limiters are commonly used to safeguard against\n *         signal clipping. Unlike a compressor, limiters do not provide\n *         smooth gain reduction and almost completely prevent\n *         additional gain above the threshold.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {number} threshold The theshold above which the limiting is applied.\n *  @example\n *  var limiter = new Tone.Limiter(-6);\n */\nTone.Limiter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"threshold\"], Tone.Limiter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the compressor\n\t *  @private\n\t *  @type {Tone.Compressor}\n\t */\n\tthis._compressor = this.input = this.output = new Tone.Compressor({\n\t\t\"attack\" : 0.001,\n\t\t\"decay\" : 0.001,\n\t\t\"threshold\" : options.threshold\n\t});\n\n\t/**\n\t * The threshold of of the limiter\n\t * @type {Decibel}\n\t * @signal\n\t */\n\tthis.threshold = this._compressor.threshold;\n\n\tthis._readOnly(\"threshold\");\n};\n\nTone.extend(Tone.Limiter, Tone.AudioNode);\n\n/**\n *  The default value\n *  @type {Object}\n *  @const\n *  @static\n */\nTone.Limiter.defaults = {\n\t\"threshold\" : -12\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Limiter} this\n */\nTone.Limiter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._compressor.dispose();\n\tthis._compressor = null;\n\tthis._writable(\"threshold\");\n\tthis.threshold = null;\n\treturn this;\n};\n\nexport default Tone.Limiter;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../component/Filter\";\nimport \"../core/AudioNode\";\nimport \"../component/FeedbackCombFilter\";\n\n/**\n *  @class Tone.Lowpass is a lowpass feedback comb filter. It is similar to\n *         Tone.FeedbackCombFilter, but includes a lowpass filter.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Time|Object} [delayTime] The delay time of the comb filter\n *  @param {NormalRange=} resonance The resonance (feedback) of the comb filter\n *  @param {Frequency=} dampening The cutoff of the lowpass filter dampens the\n *                                signal as it is fedback.\n */\nTone.LowpassCombFilter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"resonance\", \"dampening\"], Tone.LowpassCombFilter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the delay node\n\t *  @type {DelayNode}\n\t *  @private\n\t */\n\tthis._combFilter = this.output = new Tone.FeedbackCombFilter(options.delayTime, options.resonance);\n\n\t/**\n\t *  The delayTime of the comb filter.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._combFilter.delayTime;\n\n\t/**\n\t *  the lowpass filter\n\t *  @type  {BiquadFilterNode}\n\t *  @private\n\t */\n\tthis._lowpass = this.input = new Tone.Filter({\n\t\t\"frequency\" : options.dampening,\n\t\t\"type\" : \"lowpass\",\n\t\t\"Q\" : 0,\n\t\t\"rolloff\" : -12\n\t});\n\n\t/**\n\t *  The dampening control of the feedback\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.dampening = this._lowpass.frequency;\n\t\n\t/**\n\t *  The amount of feedback of the delayed signal.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.resonance = this._combFilter.resonance;\n\n\t//connections\n\tthis._lowpass.connect(this._combFilter);\n\tthis._readOnly([\"dampening\", \"resonance\", \"delayTime\"]);\n};\n\nTone.extend(Tone.LowpassCombFilter, Tone.AudioNode);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.LowpassCombFilter.defaults = {\n\t\"delayTime\" : 0.1,\n\t\"resonance\" : 0.5,\n\t\"dampening\" : 3000\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.LowpassCombFilter} this\n */\nTone.LowpassCombFilter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"dampening\", \"resonance\", \"delayTime\"]);\n\tthis._combFilter.dispose();\n\tthis._combFilter = null;\n\tthis.resonance = null;\n\tthis.delayTime = null;\n\tthis._lowpass.dispose();\n\tthis._lowpass = null;\n\tthis.dampening = null;\n\treturn this;\n};\n\nexport default Tone.LowpassCombFilter;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Analyser\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n *          of an input signal. It can also get the raw\n *          value of the input signal.\n *\n *  @constructor\n *  @param {Number} smoothing The amount of smoothing applied between frames.\n *  @extends {Tone.AudioNode}\n *  @example\n * var meter = new Tone.Meter();\n * var mic = new Tone.UserMedia().open();\n * //connect mic to the meter\n * mic.connect(meter);\n * //the current level of the mic input in decibels\n * var level = meter.getLevel();\n */\nTone.Meter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"smoothing\"], Tone.Meter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t * A value from 0 -> 1 where 0 represents no time averaging with the last analysis frame.\n\t * @type {Number}\n\t */\n\tthis.smoothing = options.smoothing;\n\n\t/**\n\t * The previous frame's value\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._rms = 0;\n\n\t/**\n\t *  The analyser node which computes the levels.\n\t *  @private\n\t *  @type  {Tone.Analyser}\n\t */\n\tthis.input = this.output = this._analyser = new Tone.Analyser(\"waveform\", 256);\n};\n\nTone.extend(Tone.Meter, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type {Object}\n *  @static\n *  @const\n */\nTone.Meter.defaults = {\n\t\"smoothing\" : 0.8,\n};\n\n/**\n *  Get the current decibel value of the incoming signal\n *  @returns {Decibels}\n */\nTone.Meter.prototype.getLevel = function(){\n\tvar values = this._analyser.getValue();\n\tvar totalSquared = 0;\n\tfor (var i = 0; i < values.length; i++){\n\t\tvar value = values[i];\n\t\ttotalSquared += value * value;\n\t}\n\tvar rms = Math.sqrt(totalSquared / values.length);\n\n\t//the rms can only fall at the rate of the smoothing\n\t//but can jump up instantly\n\tthis._rms = Math.max(rms, this._rms * this.smoothing);\n\n\treturn Tone.gainToDb(this._rms);\n};\n\n/**\n *  Get the signal value of the incoming signal\n *  @returns {Number}\n */\nTone.Meter.prototype.getValue = function(){\n\tvar value = this._analyser.getValue();\n\treturn value[0];\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Meter} this\n */\nTone.Meter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.dispose();\n\tthis._analyser = null;\n\treturn this;\n};\n\nexport default Tone.Meter;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Subtract\";\nimport \"../signal/Signal\";\nimport \"../component/Split\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Mid/Side processing separates the the 'mid' signal\n *         (which comes out of both the left and the right channel)\n *         and the 'side' (which only comes out of the the side channels). <br><br>\n *         <code>\n *         Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right<br>\n *         Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ<br>\n *         </code>\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n */\nTone.MidSideSplit = function(){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(0, 2);\n\n\t/**\n\t *  split the incoming signal into left and right channels\n\t *  @type  {Tone.Split}\n\t *  @private\n\t */\n\tthis._split = this.input = new Tone.Split();\n\n\t/**\n\t *  The mid send. Connect to mid processing. Alias for\n\t *  <code>output[0]</code>\n\t *  @type {Tone.Add}\n\t */\n\tthis._midAdd = new Tone.Add();\n\n\t/**\n\t * Multiply the _midAdd by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis.mid = this.output[0] = new Tone.Multiply(Math.SQRT1_2);\n\n\t/**\n\t *  The side output. Connect to side processing. Also Output 1\n\t *  @type {Tone.Subtract}\n\t */\n\tthis._sideSubtract = new Tone.Subtract();\n\n\t/**\n\t * Multiply the _midAdd by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis.side = this.output[1] = new Tone.Multiply(Math.SQRT1_2);\n\n\tthis._split.connect(this._midAdd, 0, 0);\n\tthis._split.connect(this._midAdd, 1, 1);\n\tthis._split.connect(this._sideSubtract, 0, 0);\n\tthis._split.connect(this._sideSubtract, 1, 1);\n\tthis._midAdd.connect(this.mid);\n\tthis._sideSubtract.connect(this.side);\n};\n\nTone.extend(Tone.MidSideSplit, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.MidSideSplit} this\n */\nTone.MidSideSplit.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.side.dispose();\n\tthis.side = null;\n\tthis._midAdd.dispose();\n\tthis._midAdd = null;\n\tthis._sideSubtract.dispose();\n\tthis._sideSubtract = null;\n\tthis._split.dispose();\n\tthis._split = null;\n\treturn this;\n};\n\nexport default Tone.MidSideSplit;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Subtract\";\nimport \"../signal/Add\";\nimport \"../component/Merge\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Mid/Side processing separates the the 'mid' signal\n *         (which comes out of both the left and the right channel)\n *         and the 'side' (which only comes out of the the side channels).\n *         MidSideMerge merges the mid and side signal after they've been seperated\n *         by Tone.MidSideSplit.<br><br>\n *         <code>\n *         Left = (Mid+Side)/sqrt(2);   // obtain left signal from mid and side<br>\n *         Right = (Mid-Side)/sqrt(2);   // obtain right signal from mid and side<br>\n *         </code>\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n */\nTone.MidSideMerge = function(){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  The mid signal input. Alias for\n\t *  <code>input[0]</code>\n\t *  @type  {Tone.Gain}\n\t */\n\tthis.mid = this.input[0] = new Tone.Gain();\n\n\t/**\n\t *  recombine the mid/side into Left\n\t *  @type {Tone.Add}\n\t *  @private\n\t */\n\tthis._left = new Tone.Add();\n\n\t/**\n\t * Multiply the left by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis._timesTwoLeft = new Tone.Multiply(Math.SQRT1_2);\n\n\t/**\n\t *  The side signal input. Alias for\n\t *  <code>input[1]</code>\n\t *  @type  {Tone.Gain}\n\t */\n\tthis.side = this.input[1] = new Tone.Gain();\n\n\t/**\n\t *  recombine the mid/side into Right\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._right = new Tone.Subtract(/*\"($0 - $1) * $2\"*/);\n\n\t/**\n\t * Multiply the right by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis._timesTwoRight = new Tone.Multiply(Math.SQRT1_2);\n\n\t/**\n\t *  Merge the left/right signal back into a stereo signal.\n\t *  @type {Tone.Merge}\n\t *  @private\n\t */\n\tthis._merge = this.output = new Tone.Merge();\n\n\tthis.mid.connect(this._left, 0, 0);\n\tthis.side.connect(this._left, 0, 1);\n\tthis.mid.connect(this._right, 0, 0);\n\tthis.side.connect(this._right, 0, 1);\n\tthis._left.connect(this._timesTwoLeft);\n\tthis._right.connect(this._timesTwoRight);\n\tthis._timesTwoLeft.connect(this._merge, 0, 0);\n\tthis._timesTwoRight.connect(this._merge, 0, 1);\n};\n\nTone.extend(Tone.MidSideMerge, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.MidSideMerge} this\n */\nTone.MidSideMerge.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.side.dispose();\n\tthis.side = null;\n\tthis._left.dispose();\n\tthis._left = null;\n\tthis._timesTwoLeft.dispose();\n\tthis._timesTwoLeft = null;\n\tthis._right.dispose();\n\tthis._right = null;\n\tthis._timesTwoRight.dispose();\n\tthis._timesTwoRight = null;\n\tthis._merge.dispose();\n\tthis._merge = null;\n\treturn this;\n};\n\nexport default Tone.MidSideMerge;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/MidSideSplit\";\nimport \"../component/MidSideMerge\";\nimport \"../component/Compressor\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.MidSideCompressor applies two different compressors to the mid\n *         and side signal components. See Tone.MidSideSplit.\n *\n *  @extends {Tone.AudioNode}\n *  @param {Object} options The options that are passed to the mid and side\n *                          compressors.\n *  @constructor\n */\nTone.MidSideCompressor = function(options){\n\n\tTone.AudioNode.call(this);\n\toptions = Tone.defaultArg(options, Tone.MidSideCompressor.defaults);\n\n\t/**\n\t *  the mid/side split\n\t *  @type  {Tone.MidSideSplit}\n\t *  @private\n\t */\n\tthis._midSideSplit = this.input = new Tone.MidSideSplit();\n\n\t/**\n\t *  the mid/side recombination\n\t *  @type  {Tone.MidSideMerge}\n\t *  @private\n\t */\n\tthis._midSideMerge = this.output = new Tone.MidSideMerge();\n\n\t/**\n\t *  The compressor applied to the mid signal\n\t *  @type  {Tone.Compressor}\n\t */\n\tthis.mid = new Tone.Compressor(options.mid);\n\n\t/**\n\t *  The compressor applied to the side signal\n\t *  @type  {Tone.Compressor}\n\t */\n\tthis.side = new Tone.Compressor(options.side);\n\n\tthis._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n\tthis._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n\tthis._readOnly([\"mid\", \"side\"]);\n};\n\nTone.extend(Tone.MidSideCompressor, Tone.AudioNode);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.MidSideCompressor.defaults = {\n\t\"mid\" : {\n\t\t\"ratio\" : 3,\n\t\t\"threshold\" : -24,\n\t\t\"release\" : 0.03,\n\t\t\"attack\" : 0.02,\n\t\t\"knee\" : 16\n\t},\n\t\"side\" : {\n\t\t\"ratio\" : 6,\n\t\t\"threshold\" : -30,\n\t\t\"release\" : 0.25,\n\t\t\"attack\" : 0.03,\n\t\t\"knee\" : 10\n\t}\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.MidSideCompressor} this\n */\nTone.MidSideCompressor.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"mid\", \"side\"]);\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.side.dispose();\n\tthis.side = null;\n\tthis._midSideSplit.dispose();\n\tthis._midSideSplit = null;\n\tthis._midSideMerge.dispose();\n\tthis._midSideMerge = null;\n\treturn this;\n};\n\nexport default Tone.MidSideCompressor;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Merge\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Mono coerces the incoming mono or stereo signal into a mono signal\n *         where both left and right channels have the same value. This can be useful\n *         for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n */\nTone.Mono = function(){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 0);\n\n\t/**\n\t *  merge the signal\n\t *  @type {Tone.Merge}\n\t *  @private\n\t */\n\tthis._merge = this.output = new Tone.Merge();\n\n\tTone.connect(this.input, this._merge, 0, 0);\n\tTone.connect(this.input, this._merge, 0, 1);\n};\n\nTone.extend(Tone.Mono, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.Mono} this\n */\nTone.Mono.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._merge.dispose();\n\tthis._merge = null;\n\treturn this;\n};\n\nexport default Tone.Mono;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/MultibandSplit\";\nimport \"../component/Compressor\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class A compressor with seperate controls over low/mid/high dynamics\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Object} options The low/mid/high compressor settings.\n *  @example\n *  var multiband = new Tone.MultibandCompressor({\n *  \t\"lowFrequency\" : 200,\n *  \t\"highFrequency\" : 1300\n *  \t\"low\" : {\n *  \t\t\"threshold\" : -12\n *  \t}\n *  })\n */\nTone.MultibandCompressor = function(options){\n\n\tTone.AudioNode.call(this);\n\toptions = Tone.defaultArg(arguments, Tone.MultibandCompressor.defaults);\n\n\t/**\n\t *  split the incoming signal into high/mid/low\n\t *  @type {Tone.MultibandSplit}\n\t *  @private\n\t */\n\tthis._splitter = this.input = new Tone.MultibandSplit({\n\t\t\"lowFrequency\" : options.lowFrequency,\n\t\t\"highFrequency\" : options.highFrequency\n\t});\n\n\t/**\n\t *  low/mid crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.lowFrequency = this._splitter.lowFrequency;\n\n\t/**\n\t *  mid/high crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.highFrequency = this._splitter.highFrequency;\n\n\t/**\n\t *  the output\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.output = new Tone.Gain();\n\n\t/**\n\t *  The compressor applied to the low frequencies.\n\t *  @type {Tone.Compressor}\n\t */\n\tthis.low = new Tone.Compressor(options.low);\n\n\t/**\n\t *  The compressor applied to the mid frequencies.\n\t *  @type {Tone.Compressor}\n\t */\n\tthis.mid = new Tone.Compressor(options.mid);\n\n\t/**\n\t *  The compressor applied to the high frequencies.\n\t *  @type {Tone.Compressor}\n\t */\n\tthis.high = new Tone.Compressor(options.high);\n\n\t//connect the compressor\n\tthis._splitter.low.chain(this.low, this.output);\n\tthis._splitter.mid.chain(this.mid, this.output);\n\tthis._splitter.high.chain(this.high, this.output);\n\n\tthis._readOnly([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n};\n\nTone.extend(Tone.MultibandCompressor, Tone.AudioNode);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.MultibandCompressor.defaults = {\n\t\"low\" : Tone.Compressor.defaults,\n\t\"mid\" : Tone.Compressor.defaults,\n\t\"high\" : Tone.Compressor.defaults,\n\t\"lowFrequency\" : 250,\n\t\"highFrequency\" : 2000\n};\n\n/**\n *  clean up\n *  @returns {Tone.MultibandCompressor} this\n */\nTone.MultibandCompressor.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._splitter.dispose();\n\tthis._writable([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n\tthis.low.dispose();\n\tthis.mid.dispose();\n\tthis.high.dispose();\n\tthis._splitter = null;\n\tthis.low = null;\n\tthis.mid = null;\n\tthis.high = null;\n\tthis.lowFrequency = null;\n\tthis.highFrequency = null;\n\treturn this;\n};\n\nexport default Tone.MultibandCompressor;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../component/Merge\";\nimport \"../component/Split\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../signal/Zero\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  A spatialized panner node which supports equalpower or HRTF panning.\n *          Tries to normalize the API across various browsers. See Tone.Listener\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Number} positionX The initial x position.\n *  @param {Number} positionY The initial y position.\n *  @param {Number} positionZ The initial z position.\n */\nTone.Panner3D = function(){\n\n\tvar options = Tone.defaults(arguments, [\"positionX\", \"positionY\", \"positionZ\"], Tone.Panner3D);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The panner node\n\t *  @type {PannerNode}\n\t *  @private\n\t */\n\tthis._panner = this.input = this.output = this.context.createPanner();\n\t//set some values\n\tthis._panner.panningModel = options.panningModel;\n\tthis._panner.maxDistance = options.maxDistance;\n\tthis._panner.distanceModel = options.distanceModel;\n\tthis._panner.coneOuterGain = options.coneOuterGain;\n\tthis._panner.coneOuterAngle = options.coneOuterAngle;\n\tthis._panner.coneInnerAngle = options.coneInnerAngle;\n\tthis._panner.refDistance = options.refDistance;\n\tthis._panner.rolloffFactor = options.rolloffFactor;\n\n\t/**\n\t *  Holds the current orientation\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._orientation = [options.orientationX, options.orientationY, options.orientationZ];\n\n\t/**\n\t *  Holds the current position\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._position = [options.positionX, options.positionY, options.positionZ];\n\n\t// set the default position/orientation\n\tthis.orientationX = options.orientationX;\n\tthis.orientationY = options.orientationY;\n\tthis.orientationZ = options.orientationZ;\n\tthis.positionX = options.positionX;\n\tthis.positionY = options.positionY;\n\tthis.positionZ = options.positionZ;\n};\n\nTone.extend(Tone.Panner3D, Tone.AudioNode);\n\n/**\n *  Defaults according to the specification\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Panner3D.defaults = {\n\t\"positionX\" : 0,\n\t\"positionY\" : 0,\n\t\"positionZ\" : 0,\n\t\"orientationX\" : 0,\n\t\"orientationY\" : 0,\n\t\"orientationZ\" : 0,\n\t\"panningModel\" : \"equalpower\",\n\t\"maxDistance\" : 10000,\n\t\"distanceModel\" : \"inverse\",\n\t\"coneOuterGain\" : 0,\n\t\"coneOuterAngle\" : 360,\n\t\"coneInnerAngle\" : 360,\n\t\"refDistance\" : 1,\n\t\"rolloffFactor\" : 1\n};\n\n/**\n * The ramp time which is applied to the setTargetAtTime\n * @type {Number}\n * @private\n */\nTone.Panner3D.prototype._rampTimeConstant = 0.01;\n\n/**\n *  Sets the position of the source in 3d space.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @return {Tone.Panner3D} this\n */\nTone.Panner3D.prototype.setPosition = function(x, y, z){\n\tif (this._panner.positionX){\n\t\tvar now = this.now();\n\t\tthis._panner.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis._panner.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis._panner.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t} else {\n\t\tthis._panner.setPosition(x, y, z);\n\t}\n\tthis._position = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  Sets the orientation of the source in 3d space.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @return {Tone.Panner3D} this\n */\nTone.Panner3D.prototype.setOrientation = function(x, y, z){\n\tif (this._panner.orientationX){\n\t\tvar now = this.now();\n\t\tthis._panner.orientationX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis._panner.orientationY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis._panner.orientationZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t} else {\n\t\tthis._panner.setOrientation(x, y, z);\n\t}\n\tthis._orientation = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  The x position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name positionX\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"positionX\", {\n\tset : function(pos){\n\t\tthis._position[0] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[0];\n\t}\n});\n\n/**\n *  The y position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name positionY\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"positionY\", {\n\tset : function(pos){\n\t\tthis._position[1] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[1];\n\t}\n});\n\n/**\n *  The z position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name positionZ\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"positionZ\", {\n\tset : function(pos){\n\t\tthis._position[2] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[2];\n\t}\n});\n\n/**\n *  The x orientation of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name orientationX\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"orientationX\", {\n\tset : function(pos){\n\t\tthis._orientation[0] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[0];\n\t}\n});\n\n/**\n *  The y orientation of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name orientationY\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"orientationY\", {\n\tset : function(pos){\n\t\tthis._orientation[1] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[1];\n\t}\n});\n\n/**\n *  The z orientation of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name orientationZ\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"orientationZ\", {\n\tset : function(pos){\n\t\tthis._orientation[2] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[2];\n\t}\n});\n\n/**\n *  Proxy a property on the panner to an exposed public propery\n *  @param  {String}  prop\n *  @private\n */\nTone.Panner3D._aliasProperty = function(prop){\n\tObject.defineProperty(Tone.Panner3D.prototype, prop, {\n\t\tset : function(val){\n\t\t\tthis._panner[prop] = val;\n\t\t},\n\t\tget : function(){\n\t\t\treturn this._panner[prop];\n\t\t}\n\t});\n};\n\n/**\n *  The panning model. Either \"equalpower\" or \"HRTF\".\n *  @type {String}\n *  @memberOf Tone.Panner3D#\n *  @name panningModel\n */\nTone.Panner3D._aliasProperty(\"panningModel\");\n\n/**\n *  A reference distance for reducing volume as source move further from the listener\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name refDistance\n */\nTone.Panner3D._aliasProperty(\"refDistance\");\n\n/**\n *  Describes how quickly the volume is reduced as source moves away from listener.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name rolloffFactor\n */\nTone.Panner3D._aliasProperty(\"rolloffFactor\");\n\n/**\n *  The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n *  @type {String}\n *  @memberOf Tone.Panner3D#\n *  @name distanceModel\n */\nTone.Panner3D._aliasProperty(\"distanceModel\");\n\n/**\n *  The angle, in degrees, inside of which there will be no volume reduction\n *  @type {Degrees}\n *  @memberOf Tone.Panner3D#\n *  @name coneInnerAngle\n */\nTone.Panner3D._aliasProperty(\"coneInnerAngle\");\n\n/**\n *  The angle, in degrees, outside of which the volume will be reduced\n *  to a constant value of coneOuterGain\n *  @type {Degrees}\n *  @memberOf Tone.Panner3D#\n *  @name coneOuterAngle\n */\nTone.Panner3D._aliasProperty(\"coneOuterAngle\");\n\n/**\n *  The gain outside of the coneOuterAngle\n *  @type {Gain}\n *  @memberOf Tone.Panner3D#\n *  @name coneOuterGain\n */\nTone.Panner3D._aliasProperty(\"coneOuterGain\");\n\n/**\n *  The maximum distance between source and listener,\n *  after which the volume will not be reduced any further.\n *  @type {Positive}\n *  @memberOf Tone.Panner3D#\n *  @name maxDistance\n */\nTone.Panner3D._aliasProperty(\"maxDistance\");\n\n/**\n *  Clean up.\n *  @returns {Tone.Panner3D} this\n */\nTone.Panner3D.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._panner.disconnect();\n\tthis._panner = null;\n\tthis._orientation = null;\n\tthis._position = null;\n\treturn this;\n};\n\nexport default Tone.Panner3D;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Analyser\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Get the current waveform data of the connected audio source.\n *  @extends {Tone.AudioNode}\n *  @param {Number=} size The size of the FFT. Value must be a power of\n *                       two in the range 32 to 32768.\n */\nTone.Waveform = function(){\n\n\tvar options = Tone.defaults(arguments, [\"size\"], Tone.Waveform);\n\toptions.type = Tone.Analyser.Type.Waveform;\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The analyser node.\n\t *  @private\n\t *  @type {Tone.Analyser}\n\t */\n\tthis._analyser = this.input = this.output = new Tone.Analyser(options);\n};\n\nTone.extend(Tone.Waveform, Tone.AudioNode);\n\n/**\n *  The default values.\n *  @type {Object}\n *  @const\n */\nTone.Waveform.defaults = {\n\t\"size\" : 1024\n};\n\n/**\n *  Gets the waveform of the audio source. Returns the waveform data\n *  of length [size](#size) as a Float32Array with values between -1 and 1.\n *  @returns {TypedArray}\n */\nTone.Waveform.prototype.getValue = function(){\n\treturn this._analyser.getValue();\n};\n\n/**\n *  The size of analysis. This must be a power of two in the range 32 to 32768.\n *  @memberOf Tone.Waveform#\n *  @type {Number}\n *  @name size\n */\nObject.defineProperty(Tone.Waveform.prototype, \"size\", {\n\tget : function(){\n\t\treturn this._analyser.size;\n\t},\n\tset : function(size){\n\t\tthis._analyser.size = size;\n\t}\n});\n/**\n *  Clean up.\n *  @return  {Tone.Waveform}  this\n */\nTone.Waveform.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.dispose();\n\tthis._analyser = null;\n};\n\nexport default Tone.Waveform;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\n\n/**\n *  @class Tone.CtrlInterpolate will interpolate between given values based\n *         on the \"index\" property. Passing in an array or object literal\n *         will interpolate each of the parameters. Note (i.e. \"C3\")\n *         and Time (i.e. \"4n + 2\") can be interpolated. All other values are\n *         assumed to be numbers. \n *  @example\n * var interp = new Tone.CtrlInterpolate([0, 2, 9, 4]);\n * interp.index = 0.75;\n * interp.value; //returns 1.5\n *\n *  @example\n * var interp = new Tone.CtrlInterpolate([\n * \t[2, 4, 5],\n * \t[9, 3, 2],\n * ]);\n * @param {Array} values The array of values to interpolate over\n * @param {Positive} index The initial interpolation index.\n * @extends {Tone}\n */\nTone.CtrlInterpolate = function(){\n\n\tvar options = Tone.defaults(arguments, [\"values\", \"index\"], Tone.CtrlInterpolate);\n\tTone.call(this);\n\n\t/**\n\t *  The values to interpolate between\n\t *  @type  {Array}\n\t */\n\tthis.values = options.values;\n\n\t/**\n\t *  The interpolated index between values. For example: a value of 1.5\n\t *  would interpolate equally between the value at index 1\n\t *  and the value at index 2. \n\t *  @example\n\t * interp.index = 0; \n\t * interp.value; //returns the value at 0\n\t * interp.index = 0.5;\n\t * interp.value; //returns the value between indices 0 and 1. \n\t *  @type  {Positive}\n\t */\n\tthis.index = options.index;\n};\n\nTone.extend(Tone.CtrlInterpolate);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.CtrlInterpolate.defaults = {\n\t\"index\" : 0,\n\t\"values\" : []\n};\n\n/**\n *  The current interpolated value based on the index\n *  @readOnly\n *  @memberOf Tone.CtrlInterpolate#\n *  @type {*}\n *  @name value\n */\nObject.defineProperty(Tone.CtrlInterpolate.prototype, \"value\", {\n\tget : function(){\n\t\tvar index = this.index;\n\t\tindex = Math.min(index, this.values.length - 1);\n\t\tvar lowerPosition = Math.floor(index);\n\t\tvar lower = this.values[lowerPosition];\n\t\tvar upper = this.values[Math.ceil(index)];\n\t\treturn this._interpolate(index - lowerPosition, lower, upper);\n\t}\n});\n\n/**\n *  Internal interpolation routine\n *  @param  {NormalRange}  index  The index between the lower and upper\n *  @param  {*}  lower \n *  @param  {*}  upper \n *  @return  {*}  The interpolated value\n *  @private\n */\nTone.CtrlInterpolate.prototype._interpolate = function(index, lower, upper){\n\tif (Tone.isArray(lower)){\n\t\tvar retArray = [];\n\t\tfor (var i = 0; i < lower.length; i++){\n\t\t\tretArray[i] = this._interpolate(index, lower[i], upper[i]);\n\t\t}\n\t\treturn retArray;\n\t} else if (Tone.isObject(lower)){\n\t\tvar retObj = {};\n\t\tfor (var attr in lower){\n\t\t\tretObj[attr] = this._interpolate(index, lower[attr], upper[attr]);\n\t\t}\n\t\treturn retObj;\n\t} else {\n\t\tlower = this._toNumber(lower);\n\t\tupper = this._toNumber(upper);\n\t\treturn (1 - index) * lower + index * upper;\n\t}\n};\n\n/**\n *  Convert from the given type into a number\n *  @param  {Number|String}  value\n *  @return  {Number}\n *  @private\n */\nTone.CtrlInterpolate.prototype._toNumber = function(val){\n\tif (Tone.isNumber(val)){\n\t\treturn val;\n\t} else {\n\t\t//otherwise assume that it's Time...\n\t\treturn this.toSeconds(val);\n\t}\n};\n\n/**\n *  Clean up\n *  @return  {Tone.CtrlInterpolate}  this\n */\nTone.CtrlInterpolate.prototype.dispose = function(){\n\tthis.values = null;\n};\n\nexport default Tone.CtrlInterpolate;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Tone.CtrlMarkov represents a Markov Chain where each call\n *         to Tone.CtrlMarkov.next will move to the next state. If the next\n *         state choice is an array, the next state is chosen randomly with\n *         even probability for all of the choices. For a weighted probability\n *         of the next choices, pass in an object with \"state\" and \"probability\" attributes. \n *         The probabilities will be normalized and then chosen. If no next options\n *         are given for the current state, the state will stay there. \n *  @extends {Tone}\n *  @example\n * var chain = new Tone.CtrlMarkov({\n * \t\"beginning\" : [\"end\", \"middle\"],\n * \t\"middle\" : \"end\"\n * });\n * chain.value = \"beginning\";\n * chain.next(); //returns \"end\" or \"middle\" with 50% probability\n *\n *  @example\n * var chain = new Tone.CtrlMarkov({\n * \t\"beginning\" : [{\"value\" : \"end\", \"probability\" : 0.8}, \n * \t\t\t\t\t{\"value\" : \"middle\", \"probability\" : 0.2}],\n * \t\"middle\" : \"end\"\n * });\n * chain.value = \"beginning\";\n * chain.next(); //returns \"end\" with 80% probability or \"middle\" with 20%.\n *  @param {Object} values An object with the state names as the keys\n *                         and the next state(s) as the values. \n */\nTone.CtrlMarkov = function(values, initial){\n\n\tTone.call(this);\n\n\t/**\n\t *  The Markov values with states as the keys\n\t *  and next state(s) as the values. \n\t *  @type {Object}\n\t */\n\tthis.values = Tone.defaultArg(values, {});\n\t\n\t/**\n\t *  The current state of the Markov values. The next\n\t *  state will be evaluated and returned when Tone.CtrlMarkov.next\n\t *  is invoked.\n\t *  @type {String}\n\t */\n\tthis.value = Tone.defaultArg(initial, Object.keys(this.values)[0]);\n};\n\nTone.extend(Tone.CtrlMarkov);\n\n/**\n *  Returns the next state of the Markov values. \n *  @return  {String}\n */\nTone.CtrlMarkov.prototype.next = function(){\n\tif (this.values.hasOwnProperty(this.value)){\n\t\tvar next = this.values[this.value];\n\t\tif (Tone.isArray(next)){\n\t\t\tvar distribution = this._getProbDistribution(next);\n\t\t\tvar rand = Math.random();\n\t\t\tvar total = 0;\n\t\t\tfor (var i = 0; i < distribution.length; i++){\n\t\t\t\tvar dist = distribution[i];\n\t\t\t\tif (rand > total && rand < total + dist){\n\t\t\t\t\tvar chosen = next[i];\n\t\t\t\t\tif (Tone.isObject(chosen)){\n\t\t\t\t\t\tthis.value = chosen.value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.value = chosen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttotal += dist;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.value = next;\n\t\t}\n\t} \n\treturn this.value;\n};\n\n/**\n *  Choose randomly from an array weighted options in the form \n *  {\"state\" : string, \"probability\" : number} or an array of values\n *  @param  {Array}  options \n *  @return  {Array}  The randomly selected choice\n *  @private\n */\nTone.CtrlMarkov.prototype._getProbDistribution = function(options){\n\tvar distribution = [];\n\tvar total = 0;\n\tvar needsNormalizing = false;\n\tfor (var i = 0; i < options.length; i++){\n\t\tvar option = options[i];\n\t\tif (Tone.isObject(option)){\n\t\t\tneedsNormalizing = true;\n\t\t\tdistribution[i] = option.probability;\n\t\t} else {\n\t\t\tdistribution[i] = 1 / options.length;\n\t\t}\n\t\ttotal += distribution[i];\n\t}\n\tif (needsNormalizing){\n\t\t//normalize the values\n\t\tfor (var j = 0; j < distribution.length; j++){\n\t\t\tdistribution[j] = distribution[j] / total;\n\t\t}\n\t}\n\treturn distribution;\n};\n\n/**\n *  Clean up\n *  @return  {Tone.CtrlMarkov}  this\n */\nTone.CtrlMarkov.prototype.dispose = function(){\n\tthis.values = null;\n};\n\nexport default Tone.CtrlMarkov;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Generate patterns from an array of values.\n *         Has a number of arpeggiation and randomized\n *         selection patterns. \n *           <ul>\n *  \t        <li>\"up\" - cycles upward</li>\n *  \t\t\t<li>\"down\" - cycles downward</li>\n *  \t\t\t<li>\"upDown\" - up then and down</li>\n *  \t\t\t<li>\"downUp\" - cycles down then and up</li>\n *  \t\t\t<li>\"alternateUp\" - jump up two and down one</li>\n *  \t\t\t<li>\"alternateDown\" - jump down two and up one</li>\n *  \t\t\t<li>\"random\" - randomly select an index</li>\n *  \t\t\t<li>\"randomWalk\" - randomly moves one index away from the current position</li>\n *  \t\t\t<li>\"randomOnce\" - randomly select an index without repeating until all values have been chosen.</li>\n *     \t\t</ul>\n *  @param  {Array}  values   An array of options to choose from.\n *  @param  {Tone.CtrlPattern.Type=}  type  The name of the pattern.\n *  @extends {Tone}\n */\nTone.CtrlPattern = function(){\n\n\tvar options = Tone.defaults(arguments, [\"values\", \"type\"], Tone.CtrlPattern);\n\tTone.call(this);\n\n\t/**\n\t *  The array of values to arpeggiate over\n\t *  @type {Array}\n\t */\n\tthis.values = options.values;\n\t\n\t/**\n\t *  The current position in the values array\n\t *  @type  {Number}\n\t */\n\tthis.index = 0;\n\n\t/**\n\t *  The type placeholder\n\t *  @type {Tone.CtrlPattern.Type}\n\t *  @private\n\t */\n\tthis._type = null;\n\n\t/**\n\t *  Shuffled values for the RandomOnce type\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._shuffled = null;\n\n\t/**\n\t *  The direction of the movement\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._direction = null;\n\n\tthis.type = options.type;\n};\n\nTone.extend(Tone.CtrlPattern);\n\n/**\n *  The Control Patterns\n *  @type  {Object}\n *  @static\n */\nTone.CtrlPattern.Type = {\n\tUp : \"up\",\n\tDown : \"down\",\n\tUpDown : \"upDown\",\n\tDownUp : \"downUp\",\n\tAlternateUp : \"alternateUp\",\n\tAlternateDown : \"alternateDown\",\n\tRandom : \"random\",\n\tRandomWalk : \"randomWalk\",\n\tRandomOnce : \"randomOnce\",\n};\n\n/**\n *  The default values. \n *  @type  {Object}\n */\nTone.CtrlPattern.defaults = {\n\t\"type\" : Tone.CtrlPattern.Type.Up,\n\t\"values\" : []\n};\n\n/**\n *  The value at the current index of the pattern.\n *  @readOnly\n *  @memberOf Tone.CtrlPattern#\n *  @type {*}\n *  @name value\n */\nObject.defineProperty(Tone.CtrlPattern.prototype, \"value\", {\n\tget : function(){\n\t\t//some safeguards\n\t\tif (this.values.length === 0){\n\t\t\treturn undefined;\n\t\t} else if (this.values.length === 1){\n\t\t\treturn this.values[0];\n\t\t} \n\t\tthis.index = Math.min(this.index, this.values.length - 1);\n\t\tvar val = this.values[this.index];\n\t\tif (this.type === Tone.CtrlPattern.Type.RandomOnce){\n\t\t\tif (this.values.length !== this._shuffled.length){\n\t\t\t\tthis._shuffleValues();\n\t\t\t}\n\t\t\tval = this.values[this._shuffled[this.index]];\n\t\t}\n\t\treturn val;\n\t}\n});\n\n/**\n *  The pattern used to select the next\n *  item from the values array\n *  @memberOf Tone.CtrlPattern#\n *  @type {Tone.CtrlPattern.Type}\n *  @name type\n */\nObject.defineProperty(Tone.CtrlPattern.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tthis._type = type;\n\t\tthis._shuffled = null;\n\n\t\t//the first index\n\t\tif (this._type === Tone.CtrlPattern.Type.Up ||\n\t\t\t\tthis._type === Tone.CtrlPattern.Type.UpDown || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.RandomOnce ||\n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateUp){\n\t\t\tthis.index = 0;\n\t\t} else if (this._type === Tone.CtrlPattern.Type.Down ||\n\t\t\t\tthis._type === Tone.CtrlPattern.Type.DownUp || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateDown){\n\t\t\tthis.index = this.values.length - 1;\n\t\t}\n\n\t\t//the direction\n\t\tif (this._type === Tone.CtrlPattern.Type.UpDown || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateUp){\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t} else if (this._type === Tone.CtrlPattern.Type.DownUp || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateDown){\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t}\n\n\t\t//randoms\n\t\tif (this._type === Tone.CtrlPattern.Type.RandomOnce){\n\t\t\tthis._shuffleValues();\n\t\t} else if (this._type === Tone.CtrlPattern.Type.Random){\n\t\t\tthis.index = Math.floor(Math.random() * this.values.length);\n\t\t}\n\t}\n});\n\n/**\n *  Return the next value given the current position\n *  and pattern.\n *  @return {*} The next value\n */\nTone.CtrlPattern.prototype.next = function(){\n\t\n\tvar type = this.type;\n\n\t//choose the next index\n\tif (type === Tone.CtrlPattern.Type.Up){\n\t\tthis.index++;\n\t\tif (this.index >= this.values.length){\n\t\t\tthis.index = 0;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.Down){\n\t\tthis.index--;\n\t\tif (this.index < 0){\n\t\t\tthis.index = this.values.length - 1;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.UpDown ||\n\t\t\t\ttype === Tone.CtrlPattern.Type.DownUp){\n\t\tif (this._direction === Tone.CtrlPattern.Type.Up){\n\t\t\tthis.index++;\n\t\t} else {\n\t\t\tthis.index--;\n\t\t}\n\t\tif (this.index < 0){\n\t\t\tthis.index = 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t} else if (this.index >= this.values.length){\n\t\t\tthis.index = this.values.length - 2;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.Random){\n\t\tthis.index = Math.floor(Math.random() * this.values.length);\n\t} else if (type === Tone.CtrlPattern.Type.RandomWalk){\n\t\tif (Math.random() < 0.5){\n\t\t\tthis.index--;\n\t\t\tthis.index = Math.max(this.index, 0);\n\t\t} else {\n\t\t\tthis.index++;\n\t\t\tthis.index = Math.min(this.index, this.values.length - 1);\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.RandomOnce){\n\t\tthis.index++;\n\t\tif (this.index >= this.values.length){\n\t\t\tthis.index = 0;\n\t\t\t//reshuffle the values for next time\n\t\t\tthis._shuffleValues();\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.AlternateUp){\n\t\tif (this._direction === Tone.CtrlPattern.Type.Up){\n\t\t\tthis.index += 2;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t} else {\n\t\t\tthis.index -= 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t}\n\t\tif (this.index >= this.values.length){\n\t\t\tthis.index = 0;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.AlternateDown){\n\t\tif (this._direction === Tone.CtrlPattern.Type.Up){\n\t\t\tthis.index += 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t} else {\n\t\t\tthis.index -= 2;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t}\n\t\tif (this.index < 0){\n\t\t\tthis.index = this.values.length - 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t}\n\t}\n\treturn this.value;\n};\n\n/**\n *  Shuffles the values and places the results into the _shuffled\n *  @private\n */\nTone.CtrlPattern.prototype._shuffleValues = function(){\n\tvar copy = [];\n\tthis._shuffled = [];\n\tfor (var i = 0; i < this.values.length; i++){\n\t\tcopy[i] = i;\n\t}\n\twhile (copy.length > 0){\n\t\tvar randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n\t\tthis._shuffled.push(randVal[0]);\n\t}\n};\n\n/**\n *  Clean up\n *  @returns {Tone.CtrlPattern} this\n */\nTone.CtrlPattern.prototype.dispose = function(){\n\tthis._shuffled = null;\n\tthis.values = null;\n};\n\nexport default Tone.CtrlPattern;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\n\n/**\n *  @class  Choose a random value.\n *  @extends {Tone}\n *  @example\n * var randomWalk = new Tone.CtrlRandom({\n * \t\"min\" : 0,\n * \t\"max\" : 10,\n * \t\"integer\" : true\n * });\n * randomWalk.eval();\n *\n *  @param {Number|Time=} min The minimum return value.\n *  @param {Number|Time=} max The maximum return value.\n */\nTone.CtrlRandom = function(){\n\n\tvar options = Tone.defaults(arguments, [\"min\", \"max\"], Tone.CtrlRandom);\n\tTone.call(this);\n\n\t/**\n\t *  The minimum return value\n\t *  @type  {Number|Time}\n\t */\n\tthis.min = options.min;\n\n\t/**\n\t *  The maximum return value\n\t *  @type  {Number|Time}\n\t */\n\tthis.max = options.max;\n\n\t/**\n\t *  If the return value should be an integer\n\t *  @type  {Boolean}\n\t */\n\tthis.integer = options.integer;\n};\n\nTone.extend(Tone.CtrlRandom);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.CtrlRandom.defaults = {\n\t\"min\" : 0,\n\t\"max\" : 1,\n\t\"integer\" : false\n};\n\n/**\n *  Return a random value between min and max. \n *  @readOnly\n *  @memberOf Tone.CtrlRandom#\n *  @type {*}\n *  @name value\n */\nObject.defineProperty(Tone.CtrlRandom.prototype, \"value\", {\n\tget : function(){\n\t\tvar min = this.toSeconds(this.min);\n\t\tvar max = this.toSeconds(this.max);\n\t\tvar rand = Math.random(); \n\t\tvar val = rand * min + (1 - rand) * max;\n\t\tif (this.integer){\n\t\t\tval = Math.floor(val);\n\t\t}\n\t\treturn val;\n\t}\n});\n\nexport default Tone.CtrlRandom;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\n\n/**\n *  @class A data structure for holding multiple buffers.\n *  \n *  @param  {Object|Array}    urls      An object literal or array\n *                                      of urls to load.\n *  @param  {Function=}  callback  The callback to invoke when\n *                                 the buffers are loaded. \n *  @extends {Tone}\n *  @example\n * //load a whole bank of piano samples\n * var pianoSamples = new Tone.Buffers({\n * \t\"C4\" : \"path/to/C4.mp3\"\n * \t\"C#4\" : \"path/to/C#4.mp3\"\n * \t\"D4\" : \"path/to/D4.mp3\"\n * \t\"D#4\" : \"path/to/D#4.mp3\"\n * \t...\n * }, function(){\n * \t//play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"C4\");\n * \tplayer.start();\n * });\n * \t@example\n * //To pass in additional parameters in the second parameter\n * var buffers = new Tone.Buffers(urls, {\n * \t\"onload\" : callback,\n * \t\"baseUrl\" : \"../path/to/audio/\"\n * })\n */\nTone.Buffers = function(urls){\n\n\t//remove the urls from the options\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.shift();\n\tvar options = Tone.defaults(args, [\"onload\", \"baseUrl\"], Tone.Buffers);\n\tTone.call(this);\n\n\t/**\n\t *  All of the buffers\n\t *  @type  {Object}\n\t *  @private\n\t */\n\tthis._buffers = {};\n\n\t/**\n\t *  A path which is prefixed before every url.\n\t *  @type  {String}\n\t */\n\tthis.baseUrl = options.baseUrl;\n\n\tthis._loadingCount = 0;\n\t//add each one\n\tfor (var key in urls){\n\t\tthis._loadingCount++;\n\t\tthis.add(key, urls[key], this._bufferLoaded.bind(this, options.onload));\n\t}\n};\n\nTone.extend(Tone.Buffers);\n\n/**\n *  Defaults\n *  @type  {Object}\n */\nTone.Buffers.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"baseUrl\" : \"\"\n};\n\n/**\n *  True if the buffers object has a buffer by that name.\n *  @param  {String|Number}  name  The key or index of the \n *                                 buffer.\n *  @return  {Boolean}\n */\nTone.Buffers.prototype.has = function(name){\n\treturn this._buffers.hasOwnProperty(name);\n};\n\n/**\n *  Get a buffer by name. If an array was loaded, \n *  then use the array index.\n *  @param  {String|Number}  name  The key or index of the \n *                                 buffer.\n *  @return  {Tone.Buffer}\n */\nTone.Buffers.prototype.get = function(name){\n\tif (this.has(name)){\n\t\treturn this._buffers[name];\n\t} else {\n\t\tthrow new Error(\"Tone.Buffers: no buffer named \"+name);\n\t}\n};\n\n/**\n *  A buffer was loaded. decrement the counter.\n *  @param  {Function}  callback \n *  @private\n */\nTone.Buffers.prototype._bufferLoaded = function(callback){\n\tthis._loadingCount--;\n\tif (this._loadingCount === 0 && callback){\n\t\tcallback(this);\n\t}\n};\n\n/**\n * If the buffers are loaded or not\n * @memberOf Tone.Buffers#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Buffers.prototype, \"loaded\", {\n\tget : function(){\n\t\tvar isLoaded = true;\n\t\tfor (var buffName in this._buffers){\n\t\t\tvar buff = this.get(buffName);\n\t\t\tisLoaded = isLoaded && buff.loaded;\n\t\t}\n\t\treturn isLoaded;\n\t}\n});\n\n/**\n *  Add a buffer by name and url to the Buffers\n *  @param  {String}    name      A unique name to give\n *                                the buffer\n *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer, \n *                                                 or a buffer which will be added\n *                                                 with the given name.\n *  @param  {Function=}  callback  The callback to invoke \n *                                 when the url is loaded.\n */\nTone.Buffers.prototype.add = function(name, url, callback){\n\tcallback = Tone.defaultArg(callback, Tone.noOp);\n\tif (url instanceof Tone.Buffer){\n\t\tthis._buffers[name] = url;\n\t\tcallback(this);\n\t} else if (url instanceof AudioBuffer){\n\t\tthis._buffers[name] = new Tone.Buffer(url);\n\t\tcallback(this);\n\t} else if (Tone.isString(url)){\n\t\tthis._buffers[name] = new Tone.Buffer(this.baseUrl + url, callback);\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Buffers} this\n */\nTone.Buffers.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tfor (var name in this._buffers){\n\t\tthis._buffers[name].dispose();\n\t}\n\tthis._buffers = null;\n\treturn this;\n};\n\nexport default Tone.Buffers;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\n\n/**\n *  buses are another way of routing audio\n *\n *  augments Tone.prototype to include send and receive\n */\n\n/**\n *  All of the routes\n *\n *  @type {Object}\n *  @static\n *  @private\n */\nvar Buses = {};\n\n/**\n *  Send this signal to the channel name.\n *  @param  {String} channelName A named channel to send the signal to.\n *  @param  {Decibels} amount The amount of the source to send to the bus.\n *  @return {GainNode} The gain node which connects this node to the desired channel.\n *                     Can be used to adjust the levels of the send.\n *  @example\n * source.send(\"reverb\", -12);\n */\nTone.prototype.send = function(channelName, amount){\n\tif (!Buses.hasOwnProperty(channelName)){\n\t\tBuses[channelName] = this.context.createGain();\n\t}\n\tamount = Tone.defaultArg(amount, 0);\n\tvar sendKnob = new Tone.Gain(amount, Tone.Type.Decibels);\n\tthis.connect(sendKnob);\n\tsendKnob.connect(Buses[channelName]);\n\treturn sendKnob;\n};\n\n/**\n *  Receive the input from the desired channelName to the input\n *\n *  @param  {String} channelName A named channel to send the signal to.\n *  @param  {Number=} channelNumber The channel to connect to\n *  @returns {Tone} this\n *  @example\n * reverbEffect.receive(\"reverb\");\n */\nTone.prototype.receive = function(channelName, inputNum){\n\tif (!Buses.hasOwnProperty(channelName)){\n\t\tBuses[channelName] = this.context.createGain();\n\t}\n\tTone.connect(Buses[channelName], this, 0, inputNum);\n\treturn this;\n};\n\n//remove all the send/receives when a new audio context is passed in\nTone.Context.on(\"init\", function(context){\n\tif (context.buses){\n\t\tBuses = context.buses;\n\t} else {\n\t\tBuses = {};\n\t\tcontext.buses = Buses;\n\t}\n});\n\nexport default Tone;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Timeline\";\n\n/**\n *  @class Tone.Draw is useful for synchronizing visuals and audio events.\n *         Callbacks from Tone.Transport or any of the Tone.Event classes\n *         always happen _before_ the scheduled time and are not synchronized\n *         to the animation frame so they are not good for triggering tightly\n *         synchronized visuals and sound. Tone.Draw makes it easy to schedule\n *         callbacks using the AudioContext time and uses requestAnimationFrame.\n *         \n *  @singleton\n *  @extends {Tone}\n *  @example\n * Tone.Transport.schedule(function(time){\n * \t//use the time argument to schedule a callback with Tone.Draw\n * \tTone.Draw.schedule(function(){\n * \t\t//do drawing or DOM manipulation here\n * \t}, time)\n * }, \"+0.5\")\n */\nTone.Draw = function(){\n\n\tTone.call(this);\n\t\n\t/**\n\t *  All of the events.\n\t *  @type  {Tone.Timeline}\n\t *  @private\n\t */\n\tthis._events = new Tone.Timeline();\n\n\t/**\n\t *  The duration after which events are not invoked.\n\t *  @type  {Number}\n\t *  @default 0.25\n\t */\n\tthis.expiration = 0.25;\n\n\t/**\n\t *  The amount of time before the scheduled time \n\t *  that the callback can be invoked. Default is\n\t *  half the time of an animation frame (0.008 seconds).\n\t *  @type  {Number}\n\t *  @default 0.008\n\t */\n\tthis.anticipation = 0.008;\n\n\t/**\n\t *  The draw loop\n\t *  @type  {Function}\n\t *  @private\n\t */\n\tthis._boundDrawLoop = this._drawLoop.bind(this);\n};\n\nTone.extend(Tone.Draw);\n\n/**\n *  Schedule a function at the given time to be invoked\n *  on the nearest animation frame.\n *  @param  {Function}  callback  Callback is invoked at the given time.\n *  @param  {Time}    time      The time relative to the AudioContext time\n *                              to invoke the callback.\n *  @return  {Tone.Draw}    this\n */\nTone.Draw.prototype.schedule = function(callback, time){\n\tthis._events.add({\n\t\tcallback : callback,\n\t\ttime : this.toSeconds(time)\n\t});\n\t//start the draw loop on the first event\n\tif (this._events.length === 1){\n\t\trequestAnimationFrame(this._boundDrawLoop);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel events scheduled after the given time\n *  @param  {Time=}  after  Time after which scheduled events will \n *                          be removed from the scheduling timeline.\n *  @return  {Tone.Draw}  this\n */\nTone.Draw.prototype.cancel = function(after){\n\tthis._events.cancel(this.toSeconds(after));\n\treturn this;\n};\n\n/**\n *  The draw loop\n *  @private\n */\nTone.Draw.prototype._drawLoop = function(){\n\tvar now = Tone.context.currentTime;\n\twhile (this._events.length && this._events.peek().time - this.anticipation <= now){\n\t\tvar event = this._events.shift();\n\t\tif (now - event.time <= this.expiration){\n\t\t\tevent.callback();\n\t\t}\n\t}\n\tif (this._events.length > 0){\n\t\trequestAnimationFrame(this._boundDrawLoop);\n\t}\n};\n\n//make a singleton\nTone.Draw = new Tone.Draw();\n\nexport default Tone.Draw;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../component/Merge\";\nimport \"../component/Split\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../signal/Zero\";\n\n/**\n *  @class  Both Tone.Panner3D and Tone.Listener have a position in 3D space\n *          using a right-handed cartesian coordinate system.\n *          The units used in the coordinate system are not defined;\n *          these coordinates are independent/invariant of any particular\n *          units such as meters or feet. Tone.Panner3D objects have an forward\n *          vector representing the direction the sound is projecting. Additionally,\n *          they have a sound cone representing how directional the sound is.\n *          For example, the sound could be omnidirectional, in which case it would\n *          be heard anywhere regardless of its forward, or it can be more directional\n *          and heard only if it is facing the listener. Tone.Listener objects\n *          (representing a person's ears) have an forward and up vector\n *          representing in which direction the person is facing. Because both the\n *          source stream and the listener can be moving, they both have a velocity\n *          vector representing both the speed and direction of movement. Taken together,\n *          these two velocities can be used to generate a doppler shift effect which changes the pitch.\n *          <br><br>\n *          Note: the position of the Listener will have no effect on nodes not connected to a Tone.Panner3D\n *\n *  @constructor\n *  @extends {Tone}\n *  @singleton\n */\nTone.Listener = function(){\n\n\tTone.call(this);\n\n\t/**\n\t *  Holds the current forward orientation\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._orientation = [0, 0, 0, 0, 0, 0];\n\n\t/**\n\t *  Holds the current position\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._position = [0, 0, 0];\n\n\tTone.getContext(function(){\n\t\t// set the default position/forward\n\t\tthis.set(ListenerConstructor.defaults);\n\n\t\t//listener is a singleton so it adds itself to the context\n\t\t// this.context.listener = this;\n\t}.bind(this));\n\n};\n\nTone.extend(Tone.Listener);\n\n/**\n *  Defaults according to the specification\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Listener.defaults = {\n\t\"positionX\" : 0,\n\t\"positionY\" : 0,\n\t\"positionZ\" : 0,\n\t\"forwardX\" : 0,\n\t\"forwardY\" : 0,\n\t\"forwardZ\" : 1,\n\t\"upX\" : 0,\n\t\"upY\" : 1,\n\t\"upZ\" : 0\n};\n\n/**\n * Is an instanceof Tone.Listener\n * @type {Boolean}\n */\nTone.Listener.prototype.isListener = true;\n\n/**\n * The ramp time which is applied to the setTargetAtTime\n * @type {Number}\n * @private\n */\nTone.Listener.prototype._rampTimeConstant = 0.01;\n\n/**\n *  Sets the position of the listener in 3d space.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @return {Tone.Listener} this\n */\nTone.Listener.prototype.setPosition = function(x, y, z){\n\tif (this.context.rawContext.listener.positionX){\n\t\tvar now = this.now();\n\t\tthis.context.rawContext.listener.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t} else {\n\t\tthis.context.rawContext.listener.setPosition(x, y, z);\n\t}\n\tthis._position = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  Sets the orientation of the listener using two vectors, the forward\n *  vector (which direction the listener is facing) and the up vector\n *  (which the up direction of the listener). An up vector\n *  of 0, 0, 1 is equivalent to the listener standing up in the Z direction.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @param  {Number}  upX\n *  @param  {Number}  upY\n *  @param  {Number}  upZ\n *  @return {Tone.Listener} this\n */\nTone.Listener.prototype.setOrientation = function(x, y, z, upX, upY, upZ){\n\tif (this.context.rawContext.listener.forwardX){\n\t\tvar now = this.now();\n\t\tthis.context.rawContext.listener.forwardX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.forwardY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.forwardZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.upX.setTargetAtTime(upX, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.upY.setTargetAtTime(upY, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.upZ.setTargetAtTime(upZ, now, this._rampTimeConstant);\n\t} else {\n\t\tthis.context.rawContext.listener.setOrientation(x, y, z, upX, upY, upZ);\n\t}\n\tthis._orientation = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  The x position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name positionX\n */\nObject.defineProperty(Tone.Listener.prototype, \"positionX\", {\n\tset : function(pos){\n\t\tthis._position[0] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[0];\n\t}\n});\n\n/**\n *  The y position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name positionY\n */\nObject.defineProperty(Tone.Listener.prototype, \"positionY\", {\n\tset : function(pos){\n\t\tthis._position[1] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[1];\n\t}\n});\n\n/**\n *  The z position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name positionZ\n */\nObject.defineProperty(Tone.Listener.prototype, \"positionZ\", {\n\tset : function(pos){\n\t\tthis._position[2] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[2];\n\t}\n});\n\n/**\n *  The x coordinate of the listeners front direction. i.e.\n *  which way they are facing.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name forwardX\n */\nObject.defineProperty(Tone.Listener.prototype, \"forwardX\", {\n\tset : function(pos){\n\t\tthis._orientation[0] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[0];\n\t}\n});\n\n/**\n *  The y coordinate of the listeners front direction. i.e.\n *  which way they are facing.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name forwardY\n */\nObject.defineProperty(Tone.Listener.prototype, \"forwardY\", {\n\tset : function(pos){\n\t\tthis._orientation[1] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[1];\n\t}\n});\n\n/**\n *  The z coordinate of the listeners front direction. i.e.\n *  which way they are facing.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name forwardZ\n */\nObject.defineProperty(Tone.Listener.prototype, \"forwardZ\", {\n\tset : function(pos){\n\t\tthis._orientation[2] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[2];\n\t}\n});\n\n/**\n *  The x coordinate of the listener's up direction. i.e.\n *  the direction the listener is standing in.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name upX\n */\nObject.defineProperty(Tone.Listener.prototype, \"upX\", {\n\tset : function(pos){\n\t\tthis._orientation[3] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[3];\n\t}\n});\n\n/**\n *  The y coordinate of the listener's up direction. i.e.\n *  the direction the listener is standing in.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name upY\n */\nObject.defineProperty(Tone.Listener.prototype, \"upY\", {\n\tset : function(pos){\n\t\tthis._orientation[4] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[4];\n\t}\n});\n\n/**\n *  The z coordinate of the listener's up direction. i.e.\n *  the direction the listener is standing in.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name upZ\n */\nObject.defineProperty(Tone.Listener.prototype, \"upZ\", {\n\tset : function(pos){\n\t\tthis._orientation[5] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[5];\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Listener} this\n */\nTone.Listener.prototype.dispose = function(){\n\tthis._orientation = null;\n\tthis._position = null;\n\treturn this;\n};\n\n//SINGLETON SETUP\nvar ListenerConstructor = Tone.Listener;\nTone.Listener = new ListenerConstructor();\n\nTone.Context.on(\"init\", function(context){\n\tif (context.listener && context.listener.isListener){\n\t\t//a single listener object\n\t\tTone.Listener = context.listener;\n\t} else {\n\t\t//make new Listener insides\n\t\tTone.Listener = new ListenerConstructor();\n\t}\n});\n//END SINGLETON SETUP\n\nexport default Tone.Listener;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Context\";\nimport \"../shim/OfflineAudioContext\";\n\n/**\n *  @class Wrapper around the OfflineAudioContext\n *  @extends {Tone.Context}\n *  @param  {Number}  channels  The number of channels to render\n *  @param  {Number}  duration  The duration to render in samples\n *  @param {Number} sampleRate the sample rate to render at\n */\nTone.OfflineContext = function(channels, duration, sampleRate){\n\n\t/**\n\t *  The offline context\n\t *  @private\n\t *  @type  {OfflineAudioContext}\n\t */\n\tvar offlineContext = new OfflineAudioContext(channels, duration * sampleRate, sampleRate);\n\n\t//wrap the methods/members\n\tTone.Context.call(this, {\n\t\t\"context\" : offlineContext,\n\t\t\"clockSource\" : \"offline\",\n\t\t\"lookAhead\" : 0,\n\t\t\"updateInterval\" : 128 / sampleRate\n\t});\n\n\t/**\n\t *  A private reference to the duration\n\t *  @private\n\t *  @type  {Number}\n\t */\n\tthis._duration = duration;\n\n\t/**\n\t *  An artificial clock source\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._currentTime = 0;\n};\n\nTone.extend(Tone.OfflineContext, Tone.Context);\n\n/**\n *  Override the now method to point to the internal clock time\n *  @return  {Number}\n */\nTone.OfflineContext.prototype.now = function(){\n\treturn this._currentTime;\n};\n\n/**\n *  Overwrite resume, should not do anything in the OfflineAudioContext.\n *  @return {Promise}\n */\nTone.OfflineContext.prototype.resume = function(){\n\treturn Promise.resolve();\n};\n\n/**\n *  Render the output of the OfflineContext\n *  @return  {Promise}\n */\nTone.OfflineContext.prototype.render = function(){\n\twhile (this._duration - this._currentTime >= 0){\n\t\t//invoke all the callbacks on that time\n\t\tthis.emit(\"tick\");\n\t\t//increment the clock in 5ms chunks\n\t\tthis._currentTime += 0.005;\n\t}\n\n\treturn this._context.startRendering();\n};\n\n/**\n *  Close the context\n *  @return  {Promise}\n */\nTone.OfflineContext.prototype.close = function(){\n\tthis._context = null;\n\treturn Promise.resolve();\n};\n\nexport default Tone.OfflineContext;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../core/Buffer\";\nimport \"../core/OfflineContext\";\nimport \"../core/Master\";\n\n/**\n *  Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext.\n *  The OfflineAudioContext is capable of rendering much faster than real time in many cases.\n *  The callback function also passes in an offline instance of Tone.Transport which can be used\n *  to schedule events along the Transport. **NOTE** OfflineAudioContext has the same restrictions\n *  as the AudioContext in that on certain platforms (like iOS) it must be invoked by an explicit\n *  user action like a click or tap. \n *  @param  {Function}  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.\n *  @param  {Time}  duration     the amount of time to record for.\n *  @return  {Promise}  The promise which is invoked with the Tone.Buffer of the recorded output.\n *  @example\n * //render 2 seconds of the oscillator\n * Tone.Offline(function(){\n * \t//only nodes created in this callback will be recorded\n * \tvar oscillator = new Tone.Oscillator().toMaster().start(0)\n * \t//schedule their events\n * }, 2).then(function(buffer){\n * \t//do something with the output buffer\n * })\n * @example\n * //can also schedule events along the Transport\n * //using the passed in Offline Transport\n * Tone.Offline(function(Transport){\n * \tvar osc = new Tone.Oscillator().toMaster()\n * \tTransport.schedule(function(time){\n * \t\tosc.start(time).stop(time + 0.1)\n * \t}, 1)\n * \tTransport.start(0.2)\n * }, 4).then(function(buffer){\n * \t//do something with the output buffer\n * })\n */\nTone.Offline = function(callback, duration){\n\t//set the OfflineAudioContext\n\tvar sampleRate = Tone.context.sampleRate;\n\tvar originalContext = Tone.context;\n\n\tvar context = new Tone.OfflineContext(2, duration, sampleRate);\n\tTone.context = context;\n\n\t//invoke the callback/scheduling\n\tvar response = callback(Tone.Transport);\n\n\t//the return value\n\tvar ret = null;\n\n\tif (response && Tone.isFunction(response.then)){\n\t\t//wait for the promise to resolve\n\t\tret = response.then(function(){\n\t\t\t//then render the audio\n\t\t\treturn context.render();\n\t\t});\n\t} else {\n\t\t//process the audio\n\t\tret = context.render();\n\t}\n\n\t//return the original AudioContext\n\tTone.context = originalContext;\n\n\t//return the audio\n\treturn ret.then(function(buffer){\n\t\t//wrap it in a Tone.Buffer\n\t\treturn new Tone.Buffer(buffer);\n\t});\n};\n\nexport default Tone.Offline;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../core/AudioNode\";\n\n/**\n * \t@class  Tone.Effect is the base class for effects. Connect the effect between\n * \t        the effectSend and effectReturn GainNodes, then control the amount of\n * \t        effect which goes to the output using the wet control.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {NormalRange|Object} [wet] The starting wet value.\n */\nTone.Effect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"wet\"], Tone.Effect);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  the drywet knob to control the amount of effect\n\t *  @type {Tone.CrossFade}\n\t *  @private\n\t */\n\tthis._dryWet = new Tone.CrossFade(options.wet);\n\n\t/**\n\t *  The wet control is how much of the effected\n\t *  will pass through to the output. 1 = 100% effected\n\t *  signal, 0 = 100% dry signal.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.wet = this._dryWet.fade;\n\n\t/**\n\t *  connect the effectSend to the input of hte effect\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.effectSend = new Tone.Gain();\n\n\t/**\n\t *  connect the output of the effect to the effectReturn\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.effectReturn = new Tone.Gain();\n\n\t//connections\n\tTone.connect(this.input, this._dryWet.a);\n\tTone.connect(this.input, this.effectSend);\n\tthis.effectReturn.connect(this._dryWet.b);\n\tthis._dryWet.connect(this.output);\n\tthis._readOnly([\"wet\"]);\n};\n\nTone.extend(Tone.Effect, Tone.AudioNode);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Effect.defaults = {\n\t\"wet\" : 1\n};\n\n/**\n *  chains the effect in between the effectSend and effectReturn\n *  @param  {Tone} effect\n *  @private\n *  @returns {Tone.Effect} this\n */\nTone.Effect.prototype.connectEffect = function(effect){\n\tthis.effectSend.chain(effect, this.effectReturn);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Effect} this\n */\nTone.Effect.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._dryWet.dispose();\n\tthis._dryWet = null;\n\tthis.effectSend.dispose();\n\tthis.effectSend = null;\n\tthis.effectReturn.dispose();\n\tthis.effectReturn = null;\n\tthis._writable([\"wet\"]);\n\tthis.wet = null;\n\treturn this;\n};\n\nexport default Tone.Effect;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/LFO\";\nimport \"../component/Filter\";\n\n/**\n *  @class Tone.AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n *         Setting the LFO rate and depth allows for control over the filter modulation rate \n *         and depth.\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Time|Object} [frequency] The rate of the LFO.\n *  @param {Frequency=} baseFrequency The lower value of the LFOs oscillation\n \t *  @param {Frequency=} octaves The number of octaves above the baseFrequency\n *  @example\n * //create an autofilter and start it's LFO\n * var autoFilter = new Tone.AutoFilter(\"4n\").toMaster().start();\n * //route an oscillator through the filter and start it\n * var oscillator = new Tone.Oscillator().connect(autoFilter).start();\n */\nTone.AutoFilter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"baseFrequency\", \"octaves\"], Tone.AutoFilter);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  the lfo which drives the filter cutoff\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfo = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"amplitude\" : options.depth,\n\t});\n\n\t/**\n\t * The range of the filter modulating between the min and max frequency. \n\t * 0 = no modulation. 1 = full modulation.\n\t * @type {NormalRange}\n\t * @signal\n\t */\n\tthis.depth = this._lfo.amplitude;\n\n\t/**\n\t * How fast the filter modulates between min and max. \n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.frequency = this._lfo.frequency;\n\n\t/**\n\t *  The filter node\n\t *  @type {Tone.Filter}\n\t */\n\tthis.filter = new Tone.Filter(options.filter);\n\n\t/**\n\t *  The octaves placeholder\n\t *  @type {Positive}\n\t *  @private\n\t */\n\tthis._octaves = 0;\n\n\t//connections\n\tthis.connectEffect(this.filter);\n\tthis._lfo.connect(this.filter.frequency);\n\tthis.type = options.type;\n\tthis._readOnly([\"frequency\", \"depth\"]);\n\tthis.octaves = options.octaves;\n\tthis.baseFrequency = options.baseFrequency;\n};\n\n//extend Effect\nTone.extend(Tone.AutoFilter, Tone.Effect);\n\n/**\n *  defaults\n *  @static\n *  @type {Object}\n */\nTone.AutoFilter.defaults = {\n\t\"frequency\" : 1,\n\t\"type\" : \"sine\",\n\t\"depth\" : 1,\n\t\"baseFrequency\" : 200,\n\t\"octaves\" : 2.6,\n\t\"filter\" : {\n\t\t\"type\" : \"lowpass\",\n\t\t\"rolloff\" : -12,\n\t\t\"Q\" : 1,\n\t}\n};\n\n/**\n * Start the effect.\n * @param {Time} [time=now] When the LFO will start. \n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.start = function(time){\n\tthis._lfo.start(time);\n\treturn this;\n};\n\n/**\n * Stop the effect.\n * @param {Time} [time=now] When the LFO will stop. \n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.stop = function(time){\n\tthis._lfo.stop(time);\n\treturn this;\n};\n\n/**\n * Sync the filter to the transport.\n * @param {Time} [delay=0] Delay time before starting the effect after the\n *                               Transport has started. \n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.sync = function(delay){\n\tthis._lfo.sync(delay);\n\treturn this;\n};\n\n/**\n * Unsync the filter from the transport.\n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.unsync = function(){\n\tthis._lfo.unsync();\n\treturn this;\n};\n\n/**\n * Type of oscillator attached to the AutoFilter. \n * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n * @memberOf Tone.AutoFilter#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.AutoFilter.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfo.type;\n\t},\n\tset : function(type){\n\t\tthis._lfo.type = type;\n\t}\n});\n\n/**\n * The minimum value of the filter's cutoff frequency.\n * @memberOf Tone.AutoFilter#\n * @type {Frequency}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.AutoFilter.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._lfo.min;\n\t},\n\tset : function(freq){\n\t\tthis._lfo.min = this.toFrequency(freq);\n\t\t//and set the max\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n * The maximum value of the filter's cutoff frequency. \n * @memberOf Tone.AutoFilter#\n * @type {Positive}\n * @name octaves\n */\nObject.defineProperty(Tone.AutoFilter.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(oct){\n\t\tthis._octaves = oct;\n\t\tthis._lfo.max = this.baseFrequency * Math.pow(2, oct);\n\t}\n});\n\n/**\n *  Clean up. \n *  @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._lfo.dispose();\n\tthis._lfo = null;\n\tthis.filter.dispose();\n\tthis.filter = null;\n\tthis._writable([\"frequency\", \"depth\"]);\n\tthis.frequency = null;\n\tthis.depth = null;\n\treturn this;\n};\n\nexport default Tone.AutoFilter;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/LFO\";\nimport \"../component/Panner\";\n\n/**\n *  @class Tone.AutoPanner is a Tone.Panner with an LFO connected to the pan amount. \n *         More on using autopanners [here](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Frequency|Object} [frequency] Rate of left-right oscillation. \n *  @example\n * //create an autopanner and start it's LFO\n * var autoPanner = new Tone.AutoPanner(\"4n\").toMaster().start();\n * //route an oscillator through the panner and start it\n * var oscillator = new Tone.Oscillator().connect(autoPanner).start();\n */\nTone.AutoPanner = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\"], Tone.AutoPanner);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  the lfo which drives the panning\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfo = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"amplitude\" : options.depth,\n\t\t\"min\" : -1,\n\t\t\"max\" : 1,\n\t});\n\n\t/**\n\t * The amount of panning between left and right. \n\t * 0 = always center. 1 = full range between left and right. \n\t * @type {NormalRange}\n\t * @signal\n\t */\n\tthis.depth = this._lfo.amplitude;\n\n\t/**\n\t *  the panner node which does the panning\n\t *  @type {Tone.Panner}\n\t *  @private\n\t */\n\tthis._panner = new Tone.Panner();\n\n\t/**\n\t * How fast the panner modulates between left and right. \n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.frequency = this._lfo.frequency;\n\n\t//connections\n\tthis.connectEffect(this._panner);\n\tthis._lfo.connect(this._panner.pan);\n\tthis.type = options.type;\n\tthis._readOnly([\"depth\", \"frequency\"]);\n};\n\n//extend Effect\nTone.extend(Tone.AutoPanner, Tone.Effect);\n\n/**\n *  defaults\n *  @static\n *  @type {Object}\n */\nTone.AutoPanner.defaults = {\n\t\"frequency\" : 1,\n\t\"type\" : \"sine\",\n\t\"depth\" : 1\n};\n\n/**\n * Start the effect.\n * @param {Time} [time=now] When the LFO will start. \n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.start = function(time){\n\tthis._lfo.start(time);\n\treturn this;\n};\n\n/**\n * Stop the effect.\n * @param {Time} [time=now] When the LFO will stop. \n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.stop = function(time){\n\tthis._lfo.stop(time);\n\treturn this;\n};\n\n/**\n * Sync the panner to the transport.\n * @param {Time} [delay=0] Delay time before starting the effect after the\n *                               Transport has started. \n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.sync = function(delay){\n\tthis._lfo.sync(delay);\n\treturn this;\n};\n\n/**\n * Unsync the panner from the transport\n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.unsync = function(){\n\tthis._lfo.unsync();\n\treturn this;\n};\n\n/**\n * Type of oscillator attached to the AutoFilter. \n * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n * @memberOf Tone.AutoFilter#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.AutoPanner.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfo.type;\n\t},\n\tset : function(type){\n\t\tthis._lfo.type = type;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._lfo.dispose();\n\tthis._lfo = null;\n\tthis._panner.dispose();\n\tthis._panner = null;\n\tthis._writable([\"depth\", \"frequency\"]);\n\tthis.frequency = null;\n\tthis.depth = null;\n\treturn this;\n};\n\nexport default Tone.AutoPanner;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Follower\";\nimport \"../signal/ScaleExp\";\nimport \"../effect/Effect\";\nimport \"../component/Filter\";\n\n/**\n *  @class  Tone.AutoWah connects a Tone.Follower to a bandpass filter (Tone.Filter).\n *          The frequency of the filter is adjusted proportionally to the\n *          incoming signal's amplitude. Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Frequency|Object} [baseFrequency] The frequency the filter is set\n *                                            to at the low point of the wah\n *  @param {Positive} [octaves] The number of octaves above the baseFrequency\n *                                the filter will sweep to when fully open\n *  @param {Decibels} [sensitivity] The decibel threshold sensitivity for\n *                                   the incoming signal. Normal range of -40 to 0.\n *  @example\n * var autoWah = new Tone.AutoWah(50, 6, -30).toMaster();\n * //initialize the synth and connect to autowah\n * var synth = new Synth.connect(autoWah);\n * //Q value influences the effect of the wah - default is 2\n * autoWah.Q.value = 6;\n * //more audible on higher notes\n * synth.triggerAttackRelease(\"C4\", \"8n\")\n */\nTone.AutoWah = function(){\n\n\tvar options = Tone.defaults(arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"], Tone.AutoWah);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  The envelope follower. Set the attack/release\n\t *  timing to adjust how the envelope is followed.\n\t *  @type {Tone.Follower}\n\t *  @private\n\t */\n\tthis.follower = new Tone.Follower(options.follower);\n\n\t/**\n\t *  scales the follower value to the frequency domain\n\t *  @type {Tone}\n\t *  @private\n\t */\n\tthis._sweepRange = new Tone.ScaleExp(0, 1, 0.5);\n\n\t/**\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._baseFrequency = options.baseFrequency;\n\n\t/**\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t/**\n\t *  the input gain to adjust the sensitivity\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._inputBoost = new Tone.Gain();\n\n\t/**\n\t *  @type {BiquadFilterNode}\n\t *  @private\n\t */\n\tthis._bandpass = new Tone.Filter({\n\t\t\"rolloff\" : -48,\n\t\t\"frequency\" : 0,\n\t\t\"Q\" : options.Q,\n\t});\n\n\t/**\n\t *  @type {Tone.Filter}\n\t *  @private\n\t */\n\tthis._peaking = new Tone.Filter(0, \"peaking\");\n\tthis._peaking.gain.value = options.gain;\n\n\t/**\n\t * The gain of the filter.\n\t * @type {Number}\n\t * @signal\n\t */\n\tthis.gain = this._peaking.gain;\n\n\t/**\n\t * The quality of the filter.\n\t * @type {Positive}\n\t * @signal\n\t */\n\tthis.Q = this._bandpass.Q;\n\n\t//the control signal path\n\tthis.effectSend.chain(this._inputBoost, this.follower, this._sweepRange);\n\tthis._sweepRange.connect(this._bandpass.frequency);\n\tthis._sweepRange.connect(this._peaking.frequency);\n\t//the filtered path\n\tthis.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n\t//set the initial value\n\tthis._setSweepRange();\n\tthis.sensitivity = options.sensitivity;\n\n\tthis._readOnly([\"gain\", \"Q\"]);\n};\n\nTone.extend(Tone.AutoWah, Tone.Effect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.AutoWah.defaults = {\n\t\"baseFrequency\" : 100,\n\t\"octaves\" : 6,\n\t\"sensitivity\" : 0,\n\t\"Q\" : 2,\n\t\"gain\" : 2,\n\t\"follower\" : {\n\t\t\"attack\" : 0.3,\n\t\t\"release\" : 0.5\n\t}\n};\n\n/**\n * The number of octaves that the filter will sweep above the\n * baseFrequency.\n * @memberOf Tone.AutoWah#\n * @type {Number}\n * @name octaves\n */\nObject.defineProperty(Tone.AutoWah.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octaves){\n\t\tthis._octaves = octaves;\n\t\tthis._setSweepRange();\n\t}\n});\n\n/**\n * The base frequency from which the sweep will start from.\n * @memberOf Tone.AutoWah#\n * @type {Frequency}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.AutoWah.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._baseFrequency;\n\t},\n\tset : function(baseFreq){\n\t\tthis._baseFrequency = baseFreq;\n\t\tthis._setSweepRange();\n\t}\n});\n\n/**\n * The sensitivity to control how responsive to the input signal the filter is.\n * @memberOf Tone.AutoWah#\n * @type {Decibels}\n * @name sensitivity\n */\nObject.defineProperty(Tone.AutoWah.prototype, \"sensitivity\", {\n\tget : function(){\n\t\treturn Tone.gainToDb(1 / this._inputBoost.gain.value);\n\t},\n\tset : function(sensitivy){\n\t\tthis._inputBoost.gain.value = 1 / Tone.dbToGain(sensitivy);\n\t}\n});\n\n/**\n *  sets the sweep range of the scaler\n *  @private\n */\nTone.AutoWah.prototype._setSweepRange = function(){\n\tthis._sweepRange.min = this._baseFrequency;\n\tthis._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.AutoWah} this\n */\nTone.AutoWah.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis.follower.dispose();\n\tthis.follower = null;\n\tthis._sweepRange.dispose();\n\tthis._sweepRange = null;\n\tthis._bandpass.dispose();\n\tthis._bandpass = null;\n\tthis._peaking.dispose();\n\tthis._peaking = null;\n\tthis._inputBoost.dispose();\n\tthis._inputBoost = null;\n\tthis._writable([\"gain\", \"Q\"]);\n\tthis.gain = null;\n\tthis.Q = null;\n\treturn this;\n};\n\nexport default Tone.AutoWah;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/Multiply\";\nimport \"../signal/Subtract\";\n\n/**\n *  @class Signal-rate modulo operator. Only works in AudioRange [-1, 1] and for modulus\n *         values in the NormalRange.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @param {NormalRange} modulus The modulus to apply.\n *  @example\n * var mod = new Tone.Modulo(0.2)\n * var sig = new Tone.Signal(0.5).connect(mod);\n * //mod outputs 0.1\n */\nTone.Modulo = function(modulus){\n\n\tTone.SignalBase.call(this);\n\tthis.createInsOuts(1, 0);\n\n\t/**\n\t *  A waveshaper gets the integer multiple of\n\t *  the input signal and the modulus.\n\t *  @private\n\t *  @type {Tone.WaveShaper}\n\t */\n\tthis._shaper = new Tone.WaveShaper(Math.pow(2, 16));\n\n\t/**\n\t *  the integer multiple is multiplied by the modulus\n\t *  @type  {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._multiply = new Tone.Multiply();\n\n\t/**\n\t *  and subtracted from the input signal\n\t *  @type  {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._subtract = this.output = new Tone.Subtract();\n\n\t/**\n\t *  the modulus signal\n\t *  @type  {Tone.Signal}\n\t *  @private\n\t */\n\tthis._modSignal = new Tone.Signal(modulus);\n\n\t//connections\n\tTone.connect(this.input, this._shaper);\n\tTone.connect(this.input, this._subtract);\n\tthis._modSignal.connect(this._multiply, 0, 0);\n\tthis._shaper.connect(this._multiply, 0, 1);\n\tthis._multiply.connect(this._subtract, 0, 1);\n\tthis._setWaveShaper(modulus);\n};\n\nTone.extend(Tone.Modulo, Tone.SignalBase);\n\n/**\n *  @param  {number}  mod  the modulus to apply\n *  @private\n */\nTone.Modulo.prototype._setWaveShaper = function(mod){\n\tthis._shaper.setMap(function(val){\n\t\tvar multiple = Math.floor((val + 0.0001) / mod);\n\t\treturn multiple;\n\t});\n};\n\n/**\n * The modulus value.\n * @memberOf Tone.Modulo#\n * @type {NormalRange}\n * @name value\n */\nObject.defineProperty(Tone.Modulo.prototype, \"value\", {\n\tget : function(){\n\t\treturn this._modSignal.value;\n\t},\n\tset : function(mod){\n\t\tthis._modSignal.value = mod;\n\t\tthis._setWaveShaper(mod);\n\t}\n});\n\n/**\n * clean up\n *  @returns {Tone.Modulo} this\n */\nTone.Modulo.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._shaper.dispose();\n\tthis._shaper = null;\n\tthis._multiply.dispose();\n\tthis._multiply = null;\n\tthis._subtract.dispose();\n\tthis._subtract = null;\n\tthis._modSignal.dispose();\n\tthis._modSignal = null;\n\treturn this;\n};\n\nexport default Tone.Modulo;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/Subtract\";\nimport \"../signal/Modulo\";\n\n/**\n *  @class Tone.Bitcrusher downsamples the incoming signal to a different bitdepth.\n *         Lowering the bitdepth of the signal creates distortion. Read more about Bitcrushing\n *         on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Number} bits The number of bits to downsample the signal. Nominal range\n *                       of 1 to 8.\n *  @example\n * //initialize crusher and route a synth through it\n * var crusher = new Tone.BitCrusher(4).toMaster();\n * var synth = new Tone.MonoSynth().connect(crusher);\n */\nTone.BitCrusher = function(){\n\n\tvar options = Tone.defaults(arguments, [\"bits\"], Tone.BitCrusher);\n\tTone.Effect.call(this, options);\n\n\tvar invStepSize = 1 / Math.pow(2, options.bits - 1);\n\n\t/**\n\t *  Subtract the input signal and the modulus of the input signal\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._subtract = new Tone.Subtract();\n\n\t/**\n\t *  The mod function\n\t *  @type  {Tone.Modulo}\n\t *  @private\n\t */\n\tthis._modulo = new Tone.Modulo(invStepSize);\n\n\t/**\n\t *  keeps track of the bits\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._bits = options.bits;\n\n\t//connect it up\n\tthis.effectSend.fan(this._subtract, this._modulo);\n\tthis._modulo.connect(this._subtract, 0, 1);\n\tthis._subtract.connect(this.effectReturn);\n};\n\nTone.extend(Tone.BitCrusher, Tone.Effect);\n\n/**\n *  the default values\n *  @static\n *  @type {Object}\n */\nTone.BitCrusher.defaults = {\n\t\"bits\" : 4\n};\n\n/**\n * The bit depth of the effect. Nominal range of 1-8.\n * @memberOf Tone.BitCrusher#\n * @type {number}\n * @name bits\n */\nObject.defineProperty(Tone.BitCrusher.prototype, \"bits\", {\n\tget : function(){\n\t\treturn this._bits;\n\t},\n\tset : function(bits){\n\t\tthis._bits = bits;\n\t\tvar invStepSize = 1 / Math.pow(2, bits - 1);\n\t\tthis._modulo.value = invStepSize;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.BitCrusher} this\n */\nTone.BitCrusher.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._subtract.dispose();\n\tthis._subtract = null;\n\tthis._modulo.dispose();\n\tthis._modulo = null;\n\treturn this;\n};\n\nexport default Tone.BitCrusher;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Tone.ChebyShev is a Chebyshev waveshaper, an effect which is good \n *         for making different types of distortion sounds.\n *         Note that odd orders sound very different from even ones, \n *         and order = 1 is no change. \n *         Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {Positive|Object} [order] The order of the chebyshev polynomial. Normal range between 1-100. \n *  @example\n * //create a new cheby\n * var cheby = new Tone.Chebyshev(50);\n * //create a monosynth connected to our cheby\n * synth = new Tone.MonoSynth().connect(cheby);\n */\nTone.Chebyshev = function(){\n\n\tvar options = Tone.defaults(arguments, [\"order\"], Tone.Chebyshev);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._shaper = new Tone.WaveShaper(4096);\n\n\t/**\n\t * holds onto the order of the filter\n\t * @type {number}\n\t * @private\n\t */\n\tthis._order = options.order;\n\n\tthis.connectEffect(this._shaper);\n\tthis.order = options.order;\n\tthis.oversample = options.oversample;\n};\n\nTone.extend(Tone.Chebyshev, Tone.Effect);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Chebyshev.defaults = {\n\t\"order\" : 1,\n\t\"oversample\" : \"none\"\n};\n\n/**\n *  get the coefficient for that degree\n *  @param {number} x the x value\n *  @param   {number} degree \n *  @param {Object} memo memoize the computed value. \n *                       this speeds up computation greatly. \n *  @return  {number}       the coefficient \n *  @private\n */\nTone.Chebyshev.prototype._getCoefficient = function(x, degree, memo){\n\tif (memo.hasOwnProperty(degree)){\n\t\treturn memo[degree];\n\t} else if (degree === 0){\n\t\tmemo[degree] = 0;\n\t} else if (degree === 1){\n\t\tmemo[degree] = x;\n\t} else {\n\t\tmemo[degree] = 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo);\n\t}\n\treturn memo[degree];\n};\n\n/**\n * The order of the Chebyshev polynomial which creates\n * the equation which is applied to the incoming \n * signal through a Tone.WaveShaper. The equations\n * are in the form:<br>\n * order 2: 2x^2 + 1<br>\n * order 3: 4x^3 + 3x <br>\n * @memberOf Tone.Chebyshev#\n * @type {Positive}\n * @name order\n */\nObject.defineProperty(Tone.Chebyshev.prototype, \"order\", {\n\tget : function(){\n\t\treturn this._order;\n\t},\n\tset : function(order){\n\t\tthis._order = order;\n\t\tvar curve = new Array(4096);\n\t\tvar len = curve.length;\n\t\tfor (var i = 0; i < len; ++i){\n\t\t\tvar x = i * 2 / len - 1;\n\t\t\tif (x === 0){\n\t\t\t\t//should output 0 when input is 0\n\t\t\t\tcurve[i] = 0;\n\t\t\t} else {\n\t\t\t\tcurve[i] = this._getCoefficient(x, order, {});\n\t\t\t}\n\t\t}\n\t\tthis._shaper.curve = curve;\n\t} \n});\n\n/**\n * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n * @memberOf Tone.Chebyshev#\n * @type {string}\n * @name oversample\n */\nObject.defineProperty(Tone.Chebyshev.prototype, \"oversample\", {\n\tget : function(){\n\t\treturn this._shaper.oversample;\n\t},\n\tset : function(oversampling){\n\t\tthis._shaper.oversample = oversampling;\n\t} \n});\n\n/**\n *  Clean up. \n *  @returns {Tone.Chebyshev} this\n */\nTone.Chebyshev.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._shaper.dispose();\n\tthis._shaper = null;\n\treturn this;\n};\n\nexport default Tone.Chebyshev;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/Split\";\nimport \"../component/Merge\";\nimport \"../component/CrossFade\";\n\n/**\n *  @class Base class for Stereo effects. Provides effectSendL/R and effectReturnL/R.\n *\n *\t@constructor\n *\t@extends {Tone.Effect}\n */\nTone.StereoEffect = function(){\n\n\t//get the defaults\n\tTone.AudioNode.call(this);\n\tvar options = Tone.defaults(arguments, [\"wet\"], Tone.Effect);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  the drywet knob to control the amount of effect\n\t *  @type {Tone.CrossFade}\n\t *  @private\n\t */\n\tthis._dryWet = new Tone.CrossFade(options.wet);\n\n\t/**\n\t *  The wet control, i.e. how much of the effected\n\t *  will pass through to the output.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.wet = this._dryWet.fade;\n\n\t/**\n\t *  then split it\n\t *  @type {Tone.Split}\n\t *  @private\n\t */\n\tthis._split = new Tone.Split();\n\n\t/**\n\t *  the effects send LEFT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectSendL = this._split.left;\n\n\t/**\n\t *  the effects send RIGHT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectSendR = this._split.right;\n\n\t/**\n\t *  the stereo effect merger\n\t *  @type {Tone.Merge}\n\t *  @private\n\t */\n\tthis._merge = new Tone.Merge();\n\n\t/**\n\t *  the effect return LEFT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectReturnL = this._merge.left;\n\n\t/**\n\t *  the effect return RIGHT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectReturnR = this._merge.right;\n\n\t//connections\n\tTone.connect(this.input, this._split);\n\t//dry wet connections\n\tTone.connect(this.input, this._dryWet, 0, 0);\n\tthis._merge.connect(this._dryWet, 0, 1);\n\tthis._dryWet.connect(this.output);\n\tthis._readOnly([\"wet\"]);\n};\n\nTone.extend(Tone.StereoEffect, Tone.Effect);\n\n/**\n *  Clean up.\n *  @returns {Tone.StereoEffect} this\n */\nTone.StereoEffect.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._dryWet.dispose();\n\tthis._dryWet = null;\n\tthis._split.dispose();\n\tthis._split = null;\n\tthis._merge.dispose();\n\tthis._merge = null;\n\tthis.effectSendL = null;\n\tthis.effectSendR = null;\n\tthis.effectReturnL = null;\n\tthis.effectReturnR = null;\n\tthis._writable([\"wet\"]);\n\tthis.wet = null;\n\treturn this;\n};\n\nexport default Tone.StereoEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../effect/StereoEffect\";\nimport \"../core/Delay\";\n\n/**\n *  @class Tone.Chorus is a stereo chorus effect composed of\n *         a left and right delay with a Tone.LFO applied to the delayTime of each channel.\n *         Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n *         Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n *\n *\t@constructor\n *\t@extends {Tone.StereoEffect}\n *\t@param {Frequency|Object} [frequency] The frequency of the LFO.\n *\t@param {Milliseconds} [delayTime] The delay of the chorus effect in ms.\n *\t@param {NormalRange} [depth] The depth of the chorus.\n *\t@example\n * var chorus = new Tone.Chorus(4, 2.5, 0.5);\n * var synth = new Tone.PolySynth(4, Tone.MonoSynth).connect(chorus);\n * synth.triggerAttackRelease([\"C3\",\"E3\",\"G3\"], \"8n\");\n */\nTone.Chorus = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"delayTime\", \"depth\"], Tone.Chorus);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  the depth of the chorus\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._depth = options.depth;\n\n\t/**\n\t *  the delayTime\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._delayTime = options.delayTime / 1000;\n\n\t/**\n\t *  the lfo which controls the delayTime\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoL = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"min\" : 0,\n\t\t\"max\" : 1,\n\t});\n\n\t/**\n\t *  another LFO for the right side with a 180 degree phase diff\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoR = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"min\" : 0,\n\t\t\"max\" : 1,\n\t\t\"phase\" : 180\n\t});\n\n\t/**\n\t *  delay for left\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNodeL = new Tone.Delay();\n\n\t/**\n\t *  delay for right\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNodeR = new Tone.Delay();\n\n\t/**\n\t * The frequency of the LFO which modulates the delayTime.\n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.frequency = this._lfoL.frequency;\n\n\t//connections\n\tthis.effectSendL.chain(this._delayNodeL, this.effectReturnL);\n\tthis.effectSendR.chain(this._delayNodeR, this.effectReturnR);\n\t//and pass through to make the detune apparent\n\tthis.effectSendL.connect(this.effectReturnL);\n\tthis.effectSendR.connect(this.effectReturnR);\n\t//lfo setup\n\tthis._lfoL.connect(this._delayNodeL.delayTime);\n\tthis._lfoR.connect(this._delayNodeR.delayTime);\n\t//start the lfo\n\tthis._lfoL.start();\n\tthis._lfoR.start();\n\t//have one LFO frequency control the other\n\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\t//set the initial values\n\tthis.depth = this._depth;\n\tthis.frequency.value = options.frequency;\n\tthis.type = options.type;\n\tthis._readOnly([\"frequency\"]);\n\tthis.spread = options.spread;\n};\n\nTone.extend(Tone.Chorus, Tone.StereoEffect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Chorus.defaults = {\n\t\"frequency\" : 1.5,\n\t\"delayTime\" : 3.5,\n\t\"depth\" : 0.7,\n\t\"type\" : \"sine\",\n\t\"spread\" : 180\n};\n\n/**\n * The depth of the effect. A depth of 1 makes the delayTime\n * modulate between 0 and 2*delayTime (centered around the delayTime).\n * @memberOf Tone.Chorus#\n * @type {NormalRange}\n * @name depth\n */\nObject.defineProperty(Tone.Chorus.prototype, \"depth\", {\n\tget : function(){\n\t\treturn this._depth;\n\t},\n\tset : function(depth){\n\t\tthis._depth = depth;\n\t\tvar deviation = this._delayTime * depth;\n\t\tthis._lfoL.min = Math.max(this._delayTime - deviation, 0);\n\t\tthis._lfoL.max = this._delayTime + deviation;\n\t\tthis._lfoR.min = Math.max(this._delayTime - deviation, 0);\n\t\tthis._lfoR.max = this._delayTime + deviation;\n\t}\n});\n\n/**\n * The delayTime in milliseconds of the chorus. A larger delayTime\n * will give a more pronounced effect. Nominal range a delayTime\n * is between 2 and 20ms.\n * @memberOf Tone.Chorus#\n * @type {Milliseconds}\n * @name delayTime\n */\nObject.defineProperty(Tone.Chorus.prototype, \"delayTime\", {\n\tget : function(){\n\t\treturn this._delayTime * 1000;\n\t},\n\tset : function(delayTime){\n\t\tthis._delayTime = delayTime / 1000;\n\t\tthis.depth = this._depth;\n\t}\n});\n\n/**\n * The oscillator type of the LFO.\n * @memberOf Tone.Chorus#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Chorus.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfoL.type;\n\t},\n\tset : function(type){\n\t\tthis._lfoL.type = type;\n\t\tthis._lfoR.type = type;\n\t}\n});\n\n/**\n * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n * When set to 180, LFO's will be panned hard left and right respectively.\n * @memberOf Tone.Chorus#\n * @type {Degrees}\n * @name spread\n */\nObject.defineProperty(Tone.Chorus.prototype, \"spread\", {\n\tget : function(){\n\t\treturn this._lfoR.phase - this._lfoL.phase;\n\t},\n\tset : function(spread){\n\t\tthis._lfoL.phase = 90 - (spread/2);\n\t\tthis._lfoR.phase = (spread/2) + 90;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Chorus} this\n */\nTone.Chorus.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._lfoL.dispose();\n\tthis._lfoL = null;\n\tthis._lfoR.dispose();\n\tthis._lfoR = null;\n\tthis._delayNodeL.dispose();\n\tthis._delayNodeL = null;\n\tthis._delayNodeR.dispose();\n\tthis._delayNodeR = null;\n\tthis._writable(\"frequency\");\n\tthis.frequency = null;\n\treturn this;\n};\n\nexport default Tone.Chorus;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../effect/Effect\";\n\n/**\n *  @class  Tone.Convolver is a wrapper around the Native Web Audio\n *          [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n *          Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n *          [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {string|Tone.Buffer|Object} [url] The URL of the impulse response or the Tone.Buffer\n *                                           contianing the impulse response.\n *  @param {Function=} onload The callback to invoke when the url is loaded.\n *  @example\n * //initializing the convolver with an impulse response\n * var convolver = new Tone.Convolver(\"./path/to/ir.wav\").toMaster();\n */\nTone.Convolver = function(){\n\n\tvar options = Tone.defaults(arguments, [\"url\", \"onload\"], Tone.Convolver);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  convolver node\n\t *  @type {ConvolverNode}\n\t *  @private\n\t */\n\tthis._convolver = this.context.createConvolver();\n\n\t/**\n\t *  the convolution buffer\n\t *  @type {Tone.Buffer}\n\t *  @private\n\t */\n\tthis._buffer = new Tone.Buffer(options.url, function(buffer){\n\t\tthis.buffer = buffer.get();\n\t\toptions.onload();\n\t}.bind(this));\n\n\t//set if it's already loaded\n\tif (this._buffer.loaded){\n\t\tthis.buffer = this._buffer;\n\t}\n\n\t//initially set normalization\n\tthis.normalize = options.normalize;\n\n\tthis.connectEffect(this._convolver);\n};\n\nTone.extend(Tone.Convolver, Tone.Effect);\n\n/**\n *  @static\n *  @const\n *  @type  {Object}\n */\nTone.Convolver.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"normalize\" : true\n};\n\n/**\n *  The convolver's buffer\n *  @memberOf Tone.Convolver#\n *  @type {AudioBuffer}\n *  @name buffer\n */\nObject.defineProperty(Tone.Convolver.prototype, \"buffer\", {\n\t\"get\" : function(){\n\t\tif (this._buffer.length){\n\t\t\treturn this._buffer;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t},\n\t\"set\" : function(buffer){\n\t\tthis._buffer.set(buffer);\n\t\t//if it's already got a buffer, create a new one\n\t\tif (this._convolver.buffer){\n\t\t\t//disconnect the old one\n\t\t\tthis.effectSend.disconnect();\n\t\t\tthis._convolver.disconnect();\n\t\t\t//create and connect a new one\n\t\t\tthis._convolver = this.context.createConvolver();\n\t\t\tthis.connectEffect(this._convolver);\n\t\t}\n\t\tthis._convolver.buffer = this._buffer.get();\n\t}\n});\n\n/**\n *  The normalize property of the ConvolverNode interface is a boolean that controls whether the impulse response from the buffer will be scaled by an equal-power normalization when the buffer attribute is set, or not.\n *  @memberOf Tone.Convolver#\n *  @type {Boolean}\n *  @name normalize\n */\nObject.defineProperty(Tone.Convolver.prototype, \"normalize\", {\n\t\"get\" : function(){\n\t\treturn this._convolver.normalize;\n\t},\n\t\"set\" : function(norm){\n\t\tthis._convolver.normalize = norm;\n\t}\n});\n\n/**\n *  Load an impulse response url as an audio buffer.\n *  Decodes the audio asynchronously and invokes\n *  the callback once the audio buffer loads.\n *  @param {string} url The url of the buffer to load.\n *                      filetype support depends on the\n *                      browser.\n *  @param  {function=} callback\n *  @returns {Promise}\n */\nTone.Convolver.prototype.load = function(url, callback){\n\treturn this._buffer.load(url, function(buff){\n\t\tthis.buffer = buff;\n\t\tif (callback){\n\t\t\tcallback();\n\t\t}\n\t}.bind(this));\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Convolver} this\n */\nTone.Convolver.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._buffer.dispose();\n\tthis._buffer = null;\n\tthis._convolver.disconnect();\n\tthis._convolver = null;\n\treturn this;\n};\n\nexport default Tone.Convolver;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Tone.Distortion is a simple distortion effect using Tone.WaveShaper.\n *         Algorithm from [a stackoverflow answer](http://stackoverflow.com/a/22313408).\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {Number|Object} [distortion] The amount of distortion (nominal range of 0-1)\n *  @example\n * var dist = new Tone.Distortion(0.8).toMaster();\n * var fm = new Tone.SimpleFM().connect(dist);\n * //this sounds good on bass notes\n * fm.triggerAttackRelease(\"A1\", \"8n\");\n */\nTone.Distortion = function(){\n\n\tvar options = Tone.defaults(arguments, [\"distortion\"], Tone.Distortion);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._shaper = new Tone.WaveShaper(4096);\n\n\t/**\n\t * holds the distortion amount\n\t * @type {number}\n\t * @private\n\t */\n\tthis._distortion = options.distortion;\n\n\tthis.connectEffect(this._shaper);\n\tthis.distortion = options.distortion;\n\tthis.oversample = options.oversample;\n};\n\nTone.extend(Tone.Distortion, Tone.Effect);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Distortion.defaults = {\n\t\"distortion\" : 0.4,\n\t\"oversample\" : \"none\"\n};\n\n/**\n * The amount of distortion.\n * @memberOf Tone.Distortion#\n * @type {NormalRange}\n * @name distortion\n */\nObject.defineProperty(Tone.Distortion.prototype, \"distortion\", {\n\tget : function(){\n\t\treturn this._distortion;\n\t},\n\tset : function(amount){\n\t\tthis._distortion = amount;\n\t\tvar k = amount * 100;\n\t\tvar deg = Math.PI / 180;\n\t\tthis._shaper.setMap(function(x){\n\t\t\tif (Math.abs(x) < 0.001){\n\t\t\t\t//should output 0 when input is 0\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n\t\t\t}\n\t\t});\n\t} \n});\n\n/**\n * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n * @memberOf Tone.Distortion#\n * @type {string}\n * @name oversample\n */\nObject.defineProperty(Tone.Distortion.prototype, \"oversample\", {\n\tget : function(){\n\t\treturn this._shaper.oversample;\n\t},\n\tset : function(oversampling){\n\t\tthis._shaper.oversample = oversampling;\n\t} \n});\n\n/**\n *  Clean up. \n *  @returns {Tone.Distortion} this\n */\nTone.Distortion.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._shaper.dispose();\n\tthis._shaper = null;\n\treturn this;\n};\n\nexport default Tone.Distortion;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\n\n/**\n * \t@class  Tone.FeedbackEffect provides a loop between an \n * \t        audio source and its own output. This is a base-class\n * \t        for feedback effects. \n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {NormalRange|Object} [feedback] The initial feedback value.\n */\nTone.FeedbackEffect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"feedback\"], Tone.FeedbackEffect);\n\tTone.Effect.call(this, options);\n\t\n\t/**\n\t *  the gain which controls the feedback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackGain = new Tone.Gain(options.feedback, Tone.Type.NormalRange);\n\n\t/**\n\t *  The amount of signal which is fed back into the effect input. \n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.feedback = this._feedbackGain.gain;\n\n\t//the feedback loop\n\tthis.effectReturn.chain(this._feedbackGain, this.effectSend);\n\tthis._readOnly([\"feedback\"]);\n};\n\nTone.extend(Tone.FeedbackEffect, Tone.Effect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.FeedbackEffect.defaults = {\n\t\"feedback\" : 0.125\n};\n\n/**\n *  Clean up. \n *  @returns {Tone.FeedbackEffect} this\n */\nTone.FeedbackEffect.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._writable([\"feedback\"]);\n\tthis._feedbackGain.dispose();\n\tthis._feedbackGain = null;\n\tthis.feedback = null;\n\treturn this;\n};\n\nexport default Tone.FeedbackEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/FeedbackEffect\";\nimport \"../signal/Signal\";\nimport \"../core/Delay\";\n\n/**\n *  @class  Tone.FeedbackDelay is a DelayNode in which part of output\n *          signal is fed back into the delay.\n *\n *  @constructor\n *  @extends {Tone.FeedbackEffect}\n *  @param {Time|Object} [delayTime] The delay applied to the incoming signal.\n *  @param {NormalRange=} feedback The amount of the effected signal which\n *                            is fed back through the delay.\n *  @example\n * var feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toMaster();\n * var tom = new Tone.MembraneSynth({\n * \t\"octaves\" : 4,\n * \t\"pitchDecay\" : 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\",\"32n\");\n */\nTone.FeedbackDelay = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"feedback\"], Tone.FeedbackDelay);\n\tTone.FeedbackEffect.call(this, options);\n\n\t/**\n\t *  the delay node\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNode = new Tone.Delay(options.delayTime, options.maxDelay);\n\n\t/**\n\t *  The delayTime of the DelayNode.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._delayNode.delayTime;\n\n\t// connect it up\n\tthis.connectEffect(this._delayNode);\n\tthis._readOnly([\"delayTime\"]);\n};\n\nTone.extend(Tone.FeedbackDelay, Tone.FeedbackEffect);\n\n/**\n *  The default values.\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.FeedbackDelay.defaults = {\n\t\"delayTime\" : 0.25,\n\t\"maxDelay\" : 1\n};\n\n/**\n *  clean up\n *  @returns {Tone.FeedbackDelay} this\n */\nTone.FeedbackDelay.prototype.dispose = function(){\n\tTone.FeedbackEffect.prototype.dispose.call(this);\n\tthis._delayNode.dispose();\n\tthis._delayNode = null;\n\tthis._writable([\"delayTime\"]);\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.FeedbackDelay;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LowpassCombFilter\";\nimport \"../effect/StereoEffect\";\nimport \"../signal/Signal\";\nimport \"../component/Split\";\nimport \"../component/Merge\";\nimport \"../signal/ScaleExp\";\n\n/**\n *  an array of comb filter delay values from Freeverb implementation\n *  @static\n *  @private\n *  @type {Array}\n */\nvar combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];\n\n/**\n *  an array of allpass filter frequency values from Freeverb implementation\n *  @private\n *  @static\n *  @type {Array}\n */\nvar allpassFilterFrequencies = [225, 556, 441, 341];\n\n/**\n *  @class Tone.Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n *         Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {NormalRange|Object} [roomSize] Correlated to the decay time.\n *  @param {Frequency} [dampening] The cutoff frequency of a lowpass filter as part\n *                                 of the reverb.\n *  @example\n * var freeverb = new Tone.Freeverb().toMaster();\n * freeverb.dampening.value = 1000;\n * //routing synth through the reverb\n * var synth = new Tone.AMSynth().connect(freeverb);\n */\nTone.Freeverb = function(){\n\n\tvar options = Tone.defaults(arguments, [\"roomSize\", \"dampening\"], Tone.Freeverb);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  The roomSize value between. A larger roomSize\n\t *  will result in a longer decay.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\n\t/**\n\t *  The amount of dampening of the reverberant signal.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.dampening = new Tone.Signal(options.dampening, Tone.Type.Frequency);\n\n\t/**\n\t *  the comb filters\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._combFilters = [];\n\n\t/**\n\t *  the allpass filters on the left\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._allpassFiltersL = [];\n\n\t/**\n\t *  the allpass filters on the right\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._allpassFiltersR = [];\n\n\t//make the allpass filters on the right\n\tfor (var l = 0; l < allpassFilterFrequencies.length; l++){\n\t\tvar allpassL = this.context.createBiquadFilter();\n\t\tallpassL.type = \"allpass\";\n\t\tallpassL.frequency.value = allpassFilterFrequencies[l];\n\t\tthis._allpassFiltersL.push(allpassL);\n\t}\n\n\t//make the allpass filters on the left\n\tfor (var r = 0; r < allpassFilterFrequencies.length; r++){\n\t\tvar allpassR = this.context.createBiquadFilter();\n\t\tallpassR.type = \"allpass\";\n\t\tallpassR.frequency.value = allpassFilterFrequencies[r];\n\t\tthis._allpassFiltersR.push(allpassR);\n\t}\n\n\t//make the comb filters\n\tfor (var c = 0; c < combFilterTunings.length; c++){\n\t\tvar lfpf = new Tone.LowpassCombFilter(combFilterTunings[c]);\n\t\tif (c < combFilterTunings.length / 2){\n\t\t\tthis.effectSendL.chain(lfpf, this._allpassFiltersL[0]);\n\t\t} else {\n\t\t\tthis.effectSendR.chain(lfpf, this._allpassFiltersR[0]);\n\t\t}\n\t\tthis.roomSize.connect(lfpf.resonance);\n\t\tthis.dampening.connect(lfpf.dampening);\n\t\tthis._combFilters.push(lfpf);\n\t}\n\n\t//chain the allpass filters togetehr\n\tTone.connectSeries.apply(Tone, this._allpassFiltersL);\n\tTone.connectSeries.apply(Tone, this._allpassFiltersR);\n\tTone.connect(this._allpassFiltersL[this._allpassFiltersL.length - 1], this.effectReturnL);\n\tTone.connect(this._allpassFiltersR[this._allpassFiltersR.length - 1], this.effectReturnR);\n\tthis._readOnly([\"roomSize\", \"dampening\"]);\n};\n\nTone.extend(Tone.Freeverb, Tone.StereoEffect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Freeverb.defaults = {\n\t\"roomSize\" : 0.7,\n\t\"dampening\" : 3000\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Freeverb} this\n */\nTone.Freeverb.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tfor (var al = 0; al < this._allpassFiltersL.length; al++){\n\t\tthis._allpassFiltersL[al].disconnect();\n\t\tthis._allpassFiltersL[al] = null;\n\t}\n\tthis._allpassFiltersL = null;\n\tfor (var ar = 0; ar < this._allpassFiltersR.length; ar++){\n\t\tthis._allpassFiltersR[ar].disconnect();\n\t\tthis._allpassFiltersR[ar] = null;\n\t}\n\tthis._allpassFiltersR = null;\n\tfor (var cf = 0; cf < this._combFilters.length; cf++){\n\t\tthis._combFilters[cf].dispose();\n\t\tthis._combFilters[cf] = null;\n\t}\n\tthis._combFilters = null;\n\tthis._writable([\"roomSize\", \"dampening\"]);\n\tthis.roomSize.dispose();\n\tthis.roomSize = null;\n\tthis.dampening.dispose();\n\tthis.dampening = null;\n\treturn this;\n};\n\nexport default Tone.Freeverb;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/FeedbackCombFilter\";\nimport \"../effect/StereoEffect\";\nimport \"../signal/Scale\";\n\n/**\n *  an array of the comb filter delay time values\n *  @private\n *  @static\n *  @type {Array}\n */\nvar combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];\n\n/**\n *  the resonances of each of the comb filters\n *  @private\n *  @static\n *  @type {Array}\n */\nvar combFilterResonances = [0.773, 0.802, 0.753, 0.733];\n\n/**\n *  the allpass filter frequencies\n *  @private\n *  @static\n *  @type {Array}\n */\nvar allpassFilterFreqs = [347, 113, 37];\n\n/**\n *  @class Tone.JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n *         tuned by John Chowning in 1970.\n *         It is made up of three allpass filters and four Tone.FeedbackCombFilter.\n *\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {NormalRange|Object} [roomSize] Coorelates to the decay time.\n *  @example\n * var reverb = new Tone.JCReverb(0.4).connect(Tone.Master);\n * var delay = new Tone.FeedbackDelay(0.5);\n * //connecting the synth to reverb through delay\n * var synth = new Tone.DuoSynth().chain(delay, reverb);\n * synth.triggerAttackRelease(\"A4\",\"8n\");\n */\nTone.JCReverb = function(){\n\n\tvar options = Tone.defaults(arguments, [\"roomSize\"], Tone.JCReverb);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  room size control values between [0,1]\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\n\t/**\n\t *  scale the room size\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._scaleRoomSize = new Tone.Scale(-0.733, 0.197);\n\n\t/**\n\t *  a series of allpass filters\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._allpassFilters = [];\n\n\t/**\n\t *  parallel feedback comb filters\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._feedbackCombFilters = [];\n\n\t//make the allpass filters\n\tfor (var af = 0; af < allpassFilterFreqs.length; af++){\n\t\tvar allpass = this.context.createBiquadFilter();\n\t\tallpass.type = \"allpass\";\n\t\tallpass.frequency.value = allpassFilterFreqs[af];\n\t\tthis._allpassFilters.push(allpass);\n\t}\n\n\t//and the comb filters\n\tfor (var cf = 0; cf < combFilterDelayTimes.length; cf++){\n\t\tvar fbcf = new Tone.FeedbackCombFilter(combFilterDelayTimes[cf], 0.1);\n\t\tthis._scaleRoomSize.connect(fbcf.resonance);\n\t\tfbcf.resonance.value = combFilterResonances[cf];\n\t\tTone.connect(this._allpassFilters[this._allpassFilters.length - 1], fbcf);\n\t\tif (cf < combFilterDelayTimes.length / 2){\n\t\t\tfbcf.connect(this.effectReturnL);\n\t\t} else {\n\t\t\tfbcf.connect(this.effectReturnR);\n\t\t}\n\t\tthis._feedbackCombFilters.push(fbcf);\n\t}\n\n\t//chain the allpass filters together\n\tthis.roomSize.connect(this._scaleRoomSize);\n\tTone.connectSeries.apply(Tone, this._allpassFilters);\n\tthis.effectSendL.connect(this._allpassFilters[0]);\n\tthis.effectSendR.connect(this._allpassFilters[0]);\n\tthis._readOnly([\"roomSize\"]);\n};\n\nTone.extend(Tone.JCReverb, Tone.StereoEffect);\n\n/**\n *  the default values\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.JCReverb.defaults = {\n\t\"roomSize\" : 0.5\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.JCReverb} this\n */\nTone.JCReverb.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tfor (var apf = 0; apf < this._allpassFilters.length; apf++){\n\t\tthis._allpassFilters[apf].disconnect();\n\t\tthis._allpassFilters[apf] = null;\n\t}\n\tthis._allpassFilters = null;\n\tfor (var fbcf = 0; fbcf < this._feedbackCombFilters.length; fbcf++){\n\t\tthis._feedbackCombFilters[fbcf].dispose();\n\t\tthis._feedbackCombFilters[fbcf] = null;\n\t}\n\tthis._feedbackCombFilters = null;\n\tthis._writable([\"roomSize\"]);\n\tthis.roomSize.dispose();\n\tthis.roomSize = null;\n\tthis._scaleRoomSize.dispose();\n\tthis._scaleRoomSize = null;\n\treturn this;\n};\n\nexport default Tone.JCReverb;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/MidSideSplit\";\nimport \"../component/MidSideMerge\";\n\n/**\n *  @class Mid/Side processing separates the the 'mid' signal\n *         (which comes out of both the left and the right channel)\n *         and the 'side' (which only comes out of the the side channels)\n *         and effects them separately before being recombined.\n *         Applies a Mid/Side seperation and recombination.\n *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n *         <br><br>\n *         This is a base-class for Mid/Side Effects.\n *\n *  @extends {Tone.Effect}\n *  @constructor\n */\nTone.MidSideEffect = function(){\n\n\tTone.Effect.apply(this, arguments);\n\n\t/**\n\t *  The mid/side split\n\t *  @type  {Tone.MidSideSplit}\n\t *  @private\n\t */\n\tthis._midSideSplit = new Tone.MidSideSplit();\n\n\t/**\n\t *  The mid/side merge\n\t *  @type  {Tone.MidSideMerge}\n\t *  @private\n\t */\n\tthis._midSideMerge = new Tone.MidSideMerge();\n\n\t/**\n\t *  The mid send. Connect to mid processing\n\t *  @type {Tone}\n\t *  @private\n\t */\n\tthis.midSend = this._midSideSplit.mid;\n\n\t/**\n\t *  The side send. Connect to side processing\n\t *  @type {Tone}\n\t *  @private\n\t */\n\tthis.sideSend = this._midSideSplit.side;\n\n\t/**\n\t *  The mid return connection\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.midReturn = this._midSideMerge.mid;\n\n\t/**\n\t *  The side return connection\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.sideReturn = this._midSideMerge.side;\n\n\t//the connections\n\tthis.effectSend.connect(this._midSideSplit);\n\tthis._midSideMerge.connect(this.effectReturn);\n};\n\nTone.extend(Tone.MidSideEffect, Tone.Effect);\n\n/**\n *  Clean up.\n *  @returns {Tone.MidSideEffect} this\n */\nTone.MidSideEffect.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._midSideSplit.dispose();\n\tthis._midSideSplit = null;\n\tthis._midSideMerge.dispose();\n\tthis._midSideMerge = null;\n\tthis.midSend = null;\n\tthis.sideSend = null;\n\tthis.midReturn = null;\n\tthis.sideReturn = null;\n\treturn this;\n};\n\nexport default Tone.MidSideEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../component/Filter\";\nimport \"../effect/StereoEffect\";\n\n/**\n *  @class Tone.Phaser is a phaser effect. Phasers work by changing the phase\n *         of different frequency components of an incoming signal. Read more on\n *         [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).\n *         Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n *\n *\t@extends {Tone.StereoEffect}\n *\t@constructor\n *\t@param {Frequency|Object} [frequency] The speed of the phasing.\n *\t@param {number} [octaves] The octaves of the effect.\n *\t@param {Frequency} [baseFrequency] The base frequency of the filters.\n *\t@example\n * var phaser = new Tone.Phaser({\n * \t\"frequency\" : 15,\n * \t\"octaves\" : 5,\n * \t\"baseFrequency\" : 1000\n * }).toMaster();\n * var synth = new Tone.FMSynth().connect(phaser);\n * synth.triggerAttackRelease(\"E3\", \"2n\");\n */\nTone.Phaser = function(){\n\n\t//set the defaults\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"octaves\", \"baseFrequency\"], Tone.Phaser);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  the lfo which controls the frequency on the left side\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoL = new Tone.LFO(options.frequency, 0, 1);\n\n\t/**\n\t *  the lfo which controls the frequency on the right side\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoR = new Tone.LFO(options.frequency, 0, 1);\n\tthis._lfoR.phase = 180;\n\n\t/**\n\t *  the base modulation frequency\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._baseFrequency = options.baseFrequency;\n\n\t/**\n\t *  the octaves of the phasing\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t/**\n\t *  The quality factor of the filters\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.Q = new Tone.Signal(options.Q, Tone.Type.Positive);\n\n\t/**\n\t *  the array of filters for the left side\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._filtersL = this._makeFilters(options.stages, this._lfoL, this.Q);\n\n\t/**\n\t *  the array of filters for the left side\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._filtersR = this._makeFilters(options.stages, this._lfoR, this.Q);\n\n\t/**\n\t * the frequency of the effect\n\t * @type {Tone.Signal}\n\t */\n\tthis.frequency = this._lfoL.frequency;\n\tthis.frequency.value = options.frequency;\n\n\t//connect them up\n\tthis.effectSendL.connect(this._filtersL[0]);\n\tthis.effectSendR.connect(this._filtersR[0]);\n\tTone.connect(this._filtersL[options.stages - 1], this.effectReturnL);\n\tTone.connect(this._filtersR[options.stages - 1], this.effectReturnR);\n\t//control the frequency with one LFO\n\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\t//set the options\n\tthis.baseFrequency = options.baseFrequency;\n\tthis.octaves = options.octaves;\n\t//start the lfo\n\tthis._lfoL.start();\n\tthis._lfoR.start();\n\tthis._readOnly([\"frequency\", \"Q\"]);\n};\n\nTone.extend(Tone.Phaser, Tone.StereoEffect);\n\n/**\n *  defaults\n *  @static\n *  @type {object}\n */\nTone.Phaser.defaults = {\n\t\"frequency\" : 0.5,\n\t\"octaves\" : 3,\n\t\"stages\" : 10,\n\t\"Q\" : 10,\n\t\"baseFrequency\" : 350,\n};\n\n/**\n *  @param {number} stages\n *  @returns {Array} the number of filters all connected together\n *  @private\n */\nTone.Phaser.prototype._makeFilters = function(stages, connectToFreq, Q){\n\tvar filters = new Array(stages);\n\t//make all the filters\n\tfor (var i = 0; i < stages; i++){\n\t\tvar filter = this.context.createBiquadFilter();\n\t\tfilter.type = \"allpass\";\n\t\tQ.connect(filter.Q);\n\t\tconnectToFreq.connect(filter.frequency);\n\t\tfilters[i] = filter;\n\t}\n\tTone.connectSeries.apply(Tone, filters);\n\treturn filters;\n};\n\n/**\n * The number of octaves the phase goes above\n * the baseFrequency\n * @memberOf Tone.Phaser#\n * @type {Positive}\n * @name octaves\n */\nObject.defineProperty(Tone.Phaser.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octaves){\n\t\tthis._octaves = octaves;\n\t\tvar max = this._baseFrequency * Math.pow(2, octaves);\n\t\tthis._lfoL.max = max;\n\t\tthis._lfoR.max = max;\n\t}\n});\n\n/**\n * The the base frequency of the filters.\n * @memberOf Tone.Phaser#\n * @type {number}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.Phaser.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._baseFrequency;\n\t},\n\tset : function(freq){\n\t\tthis._baseFrequency = freq;\n\t\tthis._lfoL.min = freq;\n\t\tthis._lfoR.min = freq;\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Phaser} this\n */\nTone.Phaser.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"Q\"]);\n\tthis.Q.dispose();\n\tthis.Q = null;\n\tthis._lfoL.dispose();\n\tthis._lfoL = null;\n\tthis._lfoR.dispose();\n\tthis._lfoR = null;\n\tfor (var i = 0; i < this._filtersL.length; i++){\n\t\tthis._filtersL[i].disconnect();\n\t\tthis._filtersL[i] = null;\n\t}\n\tthis._filtersL = null;\n\tfor (var j = 0; j < this._filtersR.length; j++){\n\t\tthis._filtersR[j].disconnect();\n\t\tthis._filtersR[j] = null;\n\t}\n\tthis._filtersR = null;\n\tthis.frequency = null;\n\treturn this;\n};\n\nexport default Tone.Phaser;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/StereoEffect\";\nimport \"../effect/FeedbackEffect\";\n\n/**\n *  @class Just like a stereo feedback effect, but the feedback is routed from left to right\n *         and right to left instead of on the same channel.\n *\n *\t@constructor\n *\t@extends {Tone.StereoEffect}\n */\nTone.StereoXFeedbackEffect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"feedback\"], Tone.FeedbackEffect);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  The amount of feedback from the output\n\t *  back into the input of the effect (routed\n\t *  across left and right channels).\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\n\t/**\n\t *  the left side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackLR = new Tone.Gain();\n\n\t/**\n\t *  the right side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackRL = new Tone.Gain();\n\n\t//connect it up\n\tthis.effectReturnL.chain(this._feedbackLR, this.effectSendR);\n\tthis.effectReturnR.chain(this._feedbackRL, this.effectSendL);\n\tthis.feedback.fan(this._feedbackLR.gain, this._feedbackRL.gain);\n\tthis._readOnly([\"feedback\"]);\n};\n\nTone.extend(Tone.StereoXFeedbackEffect, Tone.StereoEffect);\n\n/**\n *  clean up\n *  @returns {Tone.StereoXFeedbackEffect} this\n */\nTone.StereoXFeedbackEffect.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"feedback\"]);\n\tthis.feedback.dispose();\n\tthis.feedback = null;\n\tthis._feedbackLR.dispose();\n\tthis._feedbackLR = null;\n\tthis._feedbackRL.dispose();\n\tthis._feedbackRL = null;\n\treturn this;\n};\n\nexport default Tone.StereoXFeedbackEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/StereoXFeedbackEffect\";\nimport \"../signal/Signal\";\nimport \"../core/Delay\";\n\n/**\n *  @class  Tone.PingPongDelay is a feedback delay effect where the echo is heard\n *          first in one channel and next in the opposite channel. In a stereo\n *          system these are the right and left channels.\n *          PingPongDelay in more simplified terms is two Tone.FeedbackDelays\n *          with independent delay values. Each delay is routed to one channel\n *          (left or right), and the channel triggered second will always\n *          trigger at the same interval after the first.\n *\n * \t@constructor\n * \t@extends {Tone.StereoXFeedbackEffect}\n *  @param {Time|Object} [delayTime] The delayTime between consecutive echos.\n *  @param {NormalRange=} feedback The amount of the effected signal which\n *                                 is fed back through the delay.\n *  @example\n * var pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toMaster();\n * var drum = new Tone.MembraneSynth().connect(pingPong);\n * drum.triggerAttackRelease(\"C4\", \"32n\");\n */\nTone.PingPongDelay = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"feedback\"], Tone.PingPongDelay);\n\tTone.StereoXFeedbackEffect.call(this, options);\n\n\t/**\n\t *  the delay node on the left side\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._leftDelay = new Tone.Delay(0, options.maxDelayTime);\n\n\t/**\n\t *  the delay node on the right side\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._rightDelay = new Tone.Delay(0, options.maxDelayTime);\n\n\t/**\n\t *  the predelay on the right side\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._rightPreDelay = new Tone.Delay(0, options.maxDelayTime);\n\n\t/**\n\t *  the delay time signal\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = new Tone.Signal(options.delayTime, Tone.Type.Time);\n\n\t//connect it up\n\tthis.effectSendL.chain(this._leftDelay, this.effectReturnL);\n\tthis.effectSendR.chain(this._rightPreDelay, this._rightDelay, this.effectReturnR);\n\tthis.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n\t//rearranged the feedback to be after the rightPreDelay\n\tthis._feedbackLR.disconnect();\n\tthis._feedbackLR.connect(this._rightDelay);\n\tthis._readOnly([\"delayTime\"]);\n};\n\nTone.extend(Tone.PingPongDelay, Tone.StereoXFeedbackEffect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.PingPongDelay.defaults = {\n\t\"delayTime\" : 0.25,\n\t\"maxDelayTime\" : 1\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.PingPongDelay} this\n */\nTone.PingPongDelay.prototype.dispose = function(){\n\tTone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\tthis._leftDelay.dispose();\n\tthis._leftDelay = null;\n\tthis._rightDelay.dispose();\n\tthis._rightDelay = null;\n\tthis._rightPreDelay.dispose();\n\tthis._rightPreDelay = null;\n\tthis._writable([\"delayTime\"]);\n\tthis.delayTime.dispose();\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.PingPongDelay;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../component/CrossFade\";\nimport \"../signal/Signal\";\nimport \"../effect/FeedbackEffect\";\nimport \"../core/Delay\";\n\n/**\n *  @class Tone.PitchShift does near-realtime pitch shifting to the incoming signal.\n *         The effect is achieved by speeding up or slowing down the delayTime\n *         of a DelayNode using a sawtooth wave.\n *         Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n *         Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n *\n *  @extends {Tone.FeedbackEffect}\n *  @param {Interval=} pitch The interval to transpose the incoming signal by.\n */\nTone.PitchShift = function(){\n\n\tvar options = Tone.defaults(arguments, [\"pitch\"], Tone.PitchShift);\n\tTone.FeedbackEffect.call(this, options);\n\n\t/**\n\t *  The pitch signal\n\t *  @type  {Tone.Signal}\n\t *  @private\n\t */\n\tthis._frequency = new Tone.Signal(0);\n\n\t/**\n\t *  Uses two DelayNodes to cover up the jump in\n\t *  the sawtooth wave.\n\t *  @type  {DelayNode}\n\t *  @private\n\t */\n\tthis._delayA = new Tone.Delay(0, 1);\n\n\t/**\n\t *  The first LFO.\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoA = new Tone.LFO({\n\t\t\"min\" : 0,\n\t\t\"max\" : 0.1,\n\t\t\"type\" : \"sawtooth\"\n\t}).connect(this._delayA.delayTime);\n\n\t/**\n\t *  The second DelayNode\n\t *  @type  {DelayNode}\n\t *  @private\n\t */\n\tthis._delayB = new Tone.Delay(0, 1);\n\n\t/**\n\t *  The first LFO.\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoB = new Tone.LFO({\n\t\t\"min\" : 0,\n\t\t\"max\" : 0.1,\n\t\t\"type\" : \"sawtooth\",\n\t\t\"phase\" : 180\n\t}).connect(this._delayB.delayTime);\n\n\t/**\n\t *  Crossfade quickly between the two delay lines\n\t *  to cover up the jump in the sawtooth wave\n\t *  @type  {Tone.CrossFade}\n\t *  @private\n\t */\n\tthis._crossFade = new Tone.CrossFade();\n\n\t/**\n\t *  LFO which alternates between the two\n\t *  delay lines to cover up the disparity in the\n\t *  sawtooth wave.\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._crossFadeLFO = new Tone.LFO({\n\t\t\"min\" : 0,\n\t\t\"max\" : 1,\n\t\t\"type\" : \"triangle\",\n\t\t\"phase\" : 90\n\t}).connect(this._crossFade.fade);\n\n\t/**\n\t *  The delay node\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._feedbackDelay = new Tone.Delay(options.delayTime);\n\n\t/**\n\t *  The amount of delay on the input signal\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._feedbackDelay.delayTime;\n\tthis._readOnly(\"delayTime\");\n\n\t/**\n\t *  Hold the current pitch\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._pitch = options.pitch;\n\n\t/**\n\t *  Hold the current windowSize\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._windowSize = options.windowSize;\n\n\t//connect the two delay lines up\n\tthis._delayA.connect(this._crossFade.a);\n\tthis._delayB.connect(this._crossFade.b);\n\t//connect the frequency\n\tthis._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n\t//route the input\n\tthis.effectSend.fan(this._delayA, this._delayB);\n\tthis._crossFade.chain(this._feedbackDelay, this.effectReturn);\n\t//start the LFOs at the same time\n\tvar now = this.now();\n\tthis._lfoA.start(now);\n\tthis._lfoB.start(now);\n\tthis._crossFadeLFO.start(now);\n\t//set the initial value\n\tthis.windowSize = this._windowSize;\n};\n\nTone.extend(Tone.PitchShift, Tone.FeedbackEffect);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.PitchShift.defaults = {\n\t\"pitch\" : 0,\n\t\"windowSize\" : 0.1,\n\t\"delayTime\" : 0,\n\t\"feedback\" : 0\n};\n\n/**\n * Repitch the incoming signal by some interval (measured\n * in semi-tones).\n * @memberOf Tone.PitchShift#\n * @type {Interval}\n * @name pitch\n * @example\n * pitchShift.pitch = -12; //down one octave\n * pitchShift.pitch = 7; //up a fifth\n */\nObject.defineProperty(Tone.PitchShift.prototype, \"pitch\", {\n\tget : function(){\n\t\treturn this._pitch;\n\t},\n\tset : function(interval){\n\t\tthis._pitch = interval;\n\t\tvar factor = 0;\n\t\tif (interval < 0){\n\t\t\tthis._lfoA.min = 0;\n\t\t\tthis._lfoA.max = this._windowSize;\n\t\t\tthis._lfoB.min = 0;\n\t\t\tthis._lfoB.max = this._windowSize;\n\t\t\tfactor = Tone.intervalToFrequencyRatio(interval - 1) + 1;\n\t\t} else {\n\t\t\tthis._lfoA.min = this._windowSize;\n\t\t\tthis._lfoA.max = 0;\n\t\t\tthis._lfoB.min = this._windowSize;\n\t\t\tthis._lfoB.max = 0;\n\t\t\tfactor = Tone.intervalToFrequencyRatio(interval) - 1;\n\t\t}\n\t\tthis._frequency.value = factor * (1.2 / this._windowSize);\n\t}\n});\n\n/**\n * The window size corresponds roughly to the sample length in a looping sampler.\n * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n * signal, but larger values will result in smoother pitch shifting for larger intervals.\n * A nominal range of 0.03 to 0.1 is recommended.\n * @memberOf Tone.PitchShift#\n * @type {Time}\n * @name windowSize\n * @example\n * pitchShift.windowSize = 0.1;\n */\nObject.defineProperty(Tone.PitchShift.prototype, \"windowSize\", {\n\tget : function(){\n\t\treturn this._windowSize;\n\t},\n\tset : function(size){\n\t\tthis._windowSize = this.toSeconds(size);\n\t\tthis.pitch = this._pitch;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.PitchShift}  this\n */\nTone.PitchShift.prototype.dispose = function(){\n\tTone.FeedbackEffect.prototype.dispose.call(this);\n\tthis._frequency.dispose();\n\tthis._frequency = null;\n\tthis._delayA.disconnect();\n\tthis._delayA = null;\n\tthis._delayB.disconnect();\n\tthis._delayB = null;\n\tthis._lfoA.dispose();\n\tthis._lfoA = null;\n\tthis._lfoB.dispose();\n\tthis._lfoB = null;\n\tthis._crossFade.dispose();\n\tthis._crossFade = null;\n\tthis._crossFadeLFO.dispose();\n\tthis._crossFadeLFO = null;\n\tthis._writable(\"delayTime\");\n\tthis._feedbackDelay.dispose();\n\tthis._feedbackDelay = null;\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.PitchShift;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../source/Source\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Wrapper around the native BufferSourceNode.\n *  @extends {Tone.AudioNode}\n *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n *  @param  {Function}  onload  The callback to invoke when the\n *                               buffer is done playing.\n */\nTone.BufferSource = function(){\n\n\tvar options = Tone.defaults(arguments, [\"buffer\", \"onload\"], Tone.BufferSource);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The callback to invoke after the\n\t *  buffer source is done playing.\n\t *  @type  {Function}\n\t */\n\tthis.onended = options.onended;\n\n\t/**\n\t *  The time that the buffer was started.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._startTime = -1;\n\n\t/**\n\t *  An additional flag if the actual BufferSourceNode\n\t *  has been started. b/c stopping an unstarted buffer\n\t *  will throw it into an invalid state\n\t *  @type  {Boolean}\n\t *  @private\n\t */\n\tthis._sourceStarted = false;\n\n\t/**\n\t *  Flag if the source has already been stopped\n\t *  @type  {Boolean}\n\t *  @private\n\t */\n\tthis._sourceStopped = false;\n\n\t/**\n\t *  The time that the buffer is scheduled to stop.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._stopTime = -1;\n\n\t/**\n\t *  The gain node which envelopes the BufferSource\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._gainNode = this.output = new Tone.Gain(0);\n\n\t/**\n\t *  The buffer source\n\t *  @type  {AudioBufferSourceNode}\n\t *  @private\n\t */\n\tthis._source = this.context.createBufferSource();\n\tTone.connect(this._source, this._gainNode);\n\tthis._source.onended = this._onended.bind(this);\n\n\t/**\n\t * The private buffer instance\n\t * @type {Tone.Buffer}\n\t * @private\n\t */\n\tthis._buffer = new Tone.Buffer(options.buffer, options.onload);\n\n\t/**\n\t *  The playbackRate of the buffer\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.playbackRate = new Tone.Param({\n\t\tparam : this._source.playbackRate,\n\t\tunits : Tone.Type.Positive,\n\t\tvalue : options.playbackRate\n\t});\n\n\t/**\n\t *  The fadeIn time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeIn = options.fadeIn;\n\n\t/**\n\t *  The fadeOut time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeOut = options.fadeOut;\n\n\t/**\n\t * The curve applied to the fades, either \"linear\" or \"exponential\"\n\t * @type {String}\n\t */\n\tthis.curve = options.curve;\n\n\t/**\n\t * The onended timeout\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._onendedTimeout = -1;\n\n\t//set some values initially\n\tthis.loop = options.loop;\n\tthis.loopStart = options.loopStart;\n\tthis.loopEnd = options.loopEnd;\n};\n\nTone.extend(Tone.BufferSource, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.BufferSource.defaults = {\n\t\"onended\" : Tone.noOp,\n\t\"onload\" : Tone.noOp,\n\t\"loop\" : false,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : 0,\n\t\"fadeIn\" : 0,\n\t\"fadeOut\" : 0,\n\t\"curve\" : \"linear\",\n\t\"playbackRate\" : 1\n};\n\n/**\n *  Returns the playback state of the source, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.BufferSource#\n *  @name state\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"state\", {\n\tget : function(){\n\t\treturn this.getStateAtTime(this.now());\n\t}\n});\n\n/**\n *  Get the playback state at the given time\n *  @param  {Time}  time  The time to test the state at\n *  @return  {Tone.State}  The playback state. \n */\nTone.BufferSource.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._startTime !== -1 && \n\t\tthis._startTime <= time && \n\t\t(this._stopTime === -1 || time < this._stopTime) && \n\t\t!this._sourceStopped){\n\t\treturn Tone.State.Started;\n\t} else {\n\t\treturn Tone.State.Stopped;\n\t}\n};\n\n/**\n *  Start the buffer\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @param  {Gain}  [gain=1]  The gain to play the buffer back at.\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.start = function(time, offset, duration, gain){\n\tthis.log(\"start\", time, offset, duration, gain);\n\tthis.assert(this._startTime === -1, \"can only be started once\");\n\tthis.assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n\tthis.assert(!this._sourceStopped, \"source is already stopped\");\n\n\ttime = this.toSeconds(time);\n\t//if it's a loop the default offset is the loopstart point\n\tif (this.loop){\n\t\toffset = Tone.defaultArg(offset, this.loopStart);\n\t} else {\n\t\t//otherwise the default offset is 0\n\t\toffset = Tone.defaultArg(offset, 0);\n\t}\n\toffset = this.toSeconds(offset);\n\t//make sure the offset is not less than 0\n\toffset = Math.max(offset, 0);\n\n\tgain = Tone.defaultArg(gain, 1);\n\n\t//apply a fade in envelope\n\tvar fadeInTime = this.toSeconds(this.fadeIn);\n\tif (fadeInTime > 0){\n\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t\tif (this.curve === \"linear\"){\n\t\t\tthis._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n\t\t} else {\n\t\t\tthis._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n\t\t}\n\t} else {\n\t\tthis._gainNode.gain.setValueAtTime(gain, time);\n\t}\n\n\tthis._startTime = time;\n\n\t//if a duration is given, schedule a stop\n\tif (Tone.isDefined(duration)){\n\t\tvar computedDur = this.toSeconds(duration);\n\t\t//make sure it's never negative\n\t\tcomputedDur = Math.max(computedDur, 0);\n\n\t\tthis.stop(time + computedDur);\n\t}\n\n\t//start the buffer source\n\tif (this.loop){\n\t\t//modify the offset if it's greater than the loop time\n\t\tvar loopEnd = this.loopEnd || this.buffer.duration;\n\t\tvar loopStart = this.loopStart;\n\t\tvar loopDuration = loopEnd - loopStart;\n\t\t//move the offset back\n\t\tif (offset >= loopEnd){\n\t\t\toffset = ((offset - loopStart) % loopDuration) + loopStart;\n\t\t}\n\t}\n\tthis._source.buffer = this.buffer.get();\n\tthis._source.loopEnd = this.loopEnd || this.buffer.duration;\n\tif (offset < this.buffer.duration){\n\t\tthis._sourceStarted = true;\n\t\tthis._source.start(time, offset);\n\t}\n\n\treturn this;\n};\n\n/**\n *  Stop the buffer. \n *  @param  {Time=}  time         The time the buffer should stop.\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.stop = function(time){\n\tthis.log(\"stop\", time);\n\tthis.assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n\tthis.assert(!this._sourceStopped, \"source is already stopped\");\n\n\ttime = this.toSeconds(time);\n\n\t//if the event has already been scheduled, clear it\n\tif (this._stopTime !== -1){\n\t\tthis.cancelStop();\n\t}\n\n\t//the fadeOut time\n\tvar fadeOutTime = this.toSeconds(this.fadeOut);\n\n\t//cancel the previous curve\n\tthis._stopTime = time + fadeOutTime;\n\n\tif (fadeOutTime > 0){\n\t\t//start the fade out curve at the given time\n\t\tif (this.curve === \"linear\"){\n\t\t\tthis._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n\t\t} else {\n\t\t\tthis._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n\t\t}\n\t} else {\n\t\t//stop any ongoing ramps, and set the value to 0\n\t\tthis._gainNode.gain.cancelAndHoldAtTime(time);\n\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t}\n\n\tTone.context.clearTimeout(this._onendedTimeout);\n\tthis._onendedTimeout = Tone.context.setTimeout(this._onended.bind(this), this._stopTime - this.now());\n\n\treturn this;\n};\n\n/**\n *  Cancel a scheduled stop event\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.cancelStop = function(){\n\tif (this._startTime !== -1 && !this._sourceStopped){\n\t\t//cancel the stop envelope\n\t\tvar fadeInTime = this.toSeconds(this.fadeIn);\n\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime + fadeInTime + this.sampleTime);\n\t\tthis.context.clearTimeout(this._onendedTimeout);\n\t\tthis._stopTime = -1;\n\t}\n\treturn this;\n};\n\n/**\n *  Internal callback when the buffer is ended.\n *  Invokes `onended` and disposes the node.\n *  @private\n */\nTone.BufferSource.prototype._onended = function(){\n\tif (!this._sourceStopped){\n\t\tthis._sourceStopped = true;\n\t\t//allow additional time for the exponential curve to fully decay\n\t\tvar additionalTail = this.curve === \"exponential\" ? this.fadeOut * 2 : 0;\n\t\tif (this._sourceStarted && this._stopTime !== -1){\n\t\t\tthis._source.stop(this._stopTime + additionalTail);\n\t\t}\n\t\tthis.onended(this);\n\n\t\t//dispose the source after it's come to a stop\n\t\tsetTimeout(function(){\n\t\t\t//if it hasn't already been disposed\n\t\t\tif (this._source){\n\t\t\t\tthis._source.disconnect();\n\t\t\t\tthis._gainNode.disconnect();\n\t\t\t}\n\t\t}.bind(this), additionalTail * 1000 + 100);\n\t}\n};\n\n/**\n * If loop is true, the loop will start at this position.\n * @memberOf Tone.BufferSource#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn this._source.loopStart;\n\t},\n\tset : function(loopStart){\n\t\tthis._source.loopStart = this.toSeconds(loopStart);\n\t}\n});\n\n/**\n * If loop is true, the loop will end at this position.\n * @memberOf Tone.BufferSource#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn this._source.loopEnd;\n\t},\n\tset : function(loopEnd){\n\t\tthis._source.loopEnd = this.toSeconds(loopEnd);\n\t}\n});\n\n/**\n * The audio buffer belonging to the player.\n * @memberOf Tone.BufferSource#\n * @type {Tone.Buffer}\n * @name buffer\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"buffer\", {\n\tget : function(){\n\t\treturn this._buffer;\n\t},\n\tset : function(buffer){\n\t\tthis._buffer.set(buffer);\n\t}\n});\n\n/**\n * If the buffer should loop once it's over.\n * @memberOf Tone.BufferSource#\n * @type {Boolean}\n * @name loop\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._source.loop;\n\t},\n\tset : function(loop){\n\t\tthis._source.loop = loop;\n\t\tthis.cancelStop();\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.dispose = function(){\n\tif (!this._wasDisposed){\n\t\tthis._wasDisposed = true;\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis.onended = null;\n\t\tthis._source.onended = null;\n\t\tthis._source.disconnect();\n\t\tthis._source = null;\n\t\tthis._gainNode.dispose();\n\t\tthis._gainNode = null;\n\t\tthis._buffer.dispose();\n\t\tthis._buffer = null;\n\t\tthis._startTime = -1;\n\t\tthis.playbackRate = null;\n\t\tTone.context.clearTimeout(this._onendedTimeout);\n\t}\n\treturn this;\n};\n\nexport default Tone.BufferSource;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../core/Buffer\";\nimport \"../source/BufferSource\";\n\n/**\n *  @class  Tone.Noise is a noise generator. It uses looped noise buffers to save on performance.\n *          Tone.Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n *          colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {string} type the noise type (white|pink|brown)\n *  @example\n * //initialize the noise and start\n * var noise = new Tone.Noise(\"pink\").start();\n *\n * //make an autofilter to shape the noise\n * var autoFilter = new Tone.AutoFilter({\n * \t\"frequency\" : \"8m\",\n * \t\"min\" : 800,\n * \t\"max\" : 15000\n * }).connect(Tone.Master);\n *\n * //connect the noise\n * noise.connect(autoFilter);\n * //start the autofilter LFO\n * autoFilter.start()\n */\nTone.Noise = function(){\n\n\tvar options = Tone.defaults(arguments, [\"type\"], Tone.Noise);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  @private\n\t *  @type {AudioBufferSourceNode}\n\t */\n\tthis._source = null;\n\n\t/**\n\t *  the buffer\n\t *  @private\n\t *  @type {AudioBuffer}\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  The playback rate of the noise. Affects\n\t *  the \"frequency\" of the noise.\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis._playbackRate = options.playbackRate;\n};\n\nTone.extend(Tone.Noise, Tone.Source);\n\n/**\n *  the default parameters\n *\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Noise.defaults = {\n\t\"type\" : \"white\",\n\t\"playbackRate\" : 1\n};\n\n/**\n * The type of the noise. Can be \"white\", \"brown\", or \"pink\".\n * @memberOf Tone.Noise#\n * @type {string}\n * @name type\n * @example\n * noise.type = \"white\";\n */\nObject.defineProperty(Tone.Noise.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tif (this._type !== type){\n\t\t\tif (type in _noiseBuffers){\n\t\t\t\tthis._type = type;\n\t\t\t\t//if it's playing, stop and restart it\n\t\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\t\tvar now = this.now();\n\t\t\t\t\tthis._stop(now);\n\t\t\t\t\tthis._start(now);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new TypeError(\"Tone.Noise: invalid type: \"+type);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n *  The playback rate of the noise. Affects\n *  the \"frequency\" of the noise.\n *  @type {Positive}\n *  @signal\n */\nObject.defineProperty(Tone.Noise.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tif (this._source){\n\t\t\tthis._source.playbackRate.value = rate;\n\t\t}\n\t}\n});\n\n/**\n *  internal start method\n *\n *  @param {Time} time\n *  @private\n */\nTone.Noise.prototype._start = function(time){\n\tvar buffer = _noiseBuffers[this._type];\n\tthis._source = new Tone.BufferSource(buffer).connect(this.output);\n\tthis._source.loop = true;\n\tthis._source.playbackRate.value = this._playbackRate;\n\tthis._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n};\n\n/**\n *  internal stop method\n *\n *  @param {Time} time\n *  @private\n */\nTone.Noise.prototype._stop = function(time){\n\tif (this._source){\n\t\tthis._source.stop(this.toSeconds(time));\n\t\tthis._source = null;\n\t}\n};\n\n/**\n * Restarts the noise.\n * @param  {Time} time When to restart the noise.\n * @return {Tone.Noise}      this\n */\nTone.Noise.prototype.restart = function(time){\n\t//TODO could be optimized by cancelling the buffer source 'stop'\n\t//stop and restart\n\tthis._stop(time);\n\tthis._start(time);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Noise} this\n */\nTone.Noise.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tif (this._source !== null){\n\t\tthis._source.disconnect();\n\t\tthis._source = null;\n\t}\n\tthis._buffer = null;\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n// THE BUFFERS\n///////////////////////////////////////////////////////////////////////////\n\n//Noise buffer stats\nvar bufferLength = 44100 * 5;\nvar channels = 2;\n\n/**\n *\tThe noise arrays. Generated on initialization.\n *  borrowed heavily from https://github.com/zacharydenton/noise.js\n *  (c) 2013 Zach Denton (MIT)\n *  @static\n *  @private\n *  @type {Array}\n */\nvar _noiseBuffers = {};\nvar _noiseCache = {};\n\nObject.defineProperty(_noiseBuffers, \"pink\", {\n\tget : function(){\n\t\tif (!_noiseCache.pink){\n\t\t\tvar buffer = [];\n\t\t\tfor (var channelNum = 0; channelNum < channels; channelNum++){\n\t\t\t\tvar channel = new Float32Array(bufferLength);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tvar b0, b1, b2, b3, b4, b5, b6;\n\t\t\t\tb0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\t\t\t\tfor (var i = 0; i < bufferLength; i++){\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\tb0 = 0.99886 * b0 + white * 0.0555179;\n\t\t\t\t\tb1 = 0.99332 * b1 + white * 0.0750759;\n\t\t\t\t\tb2 = 0.96900 * b2 + white * 0.1538520;\n\t\t\t\t\tb3 = 0.86650 * b3 + white * 0.3104856;\n\t\t\t\t\tb4 = 0.55000 * b4 + white * 0.5329522;\n\t\t\t\t\tb5 = -0.7616 * b5 - white * 0.0168980;\n\t\t\t\t\tchannel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t\t\t\t\tchannel[i] *= 0.11; // (roughly) compensate for gain\n\t\t\t\t\tb6 = white * 0.115926;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.pink = new Tone.Buffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.pink;\n\t}\n});\n\nObject.defineProperty(_noiseBuffers, \"brown\", {\n\tget : function(){\n\t\tif (!_noiseCache.brown){\n\t\t\tvar buffer = [];\n\t\t\tfor (var channelNum = 0; channelNum < channels; channelNum++){\n\t\t\t\tvar channel = new Float32Array(bufferLength);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tvar lastOut = 0.0;\n\t\t\t\tfor (var i = 0; i < bufferLength; i++){\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\tchannel[i] = (lastOut + (0.02 * white)) / 1.02;\n\t\t\t\t\tlastOut = channel[i];\n\t\t\t\t\tchannel[i] *= 3.5; // (roughly) compensate for gain\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.brown = new Tone.Buffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.brown;\n\t}\n});\n\nObject.defineProperty(_noiseBuffers, \"white\", {\n\tget : function(){\n\t\tif (!_noiseCache.white){\n\t\t\tvar buffer = [];\n\t\t\tfor (var channelNum = 0; channelNum < channels; channelNum++){\n\t\t\t\tvar channel = new Float32Array(bufferLength);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tfor (var i = 0; i < bufferLength; i++){\n\t\t\t\t\tchannel[i] = Math.random() * 2 - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.white = new Tone.Buffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.white;\n\t}\n});\n\nexport default Tone.Noise;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Offline\";\nimport \"../component/Filter\";\nimport \"../component/Merge\";\nimport \"../source/Noise\";\nimport \"../core/Gain\";\nimport \"../effect/Convolver\";\n\n/**\n *  @class Simple convolution created with decaying noise.\n *  \t\tGenerates an Impulse Response Buffer\n * \t\t\twith Tone.Offline then feeds the IR into ConvolverNode.\n * \t\t\tNote: the Reverb will not make any sound until [generate](#generate)\n * \t\t\thas been invoked and resolved.\n *\n * \t\t\tInspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).\n * \t\t\tCopyright (c) 2014 Alan deLespinasse Apache 2.0 License.\n *\n *  @extends {Tone.Convolver}\n *  @param {Time=} decay The amount of time it will reverberate for.\n */\nTone.Reverb = function(){\n\n\tvar options = Tone.defaults(arguments, [\"decay\"], Tone.Reverb);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  Convolver node\n\t *  @type {ConvolverNode}\n\t *  @private\n\t */\n\tthis._convolver = this.context.createConvolver();\n\n\t/**\n\t * The duration of the reverb\n\t * @type {Time}\n\t */\n\tthis.decay = options.decay;\n\n\t/**\n\t * The amount of time before the reverb is fully\n\t * ramped in.\n\t * @type {Time}\n\t */\n\tthis.preDelay = options.preDelay;\n\n\tthis.connectEffect(this._convolver);\n};\n\nTone.extend(Tone.Reverb, Tone.Effect);\n\n/**\n * The defaults\n * @type {Object}\n * @static\n */\nTone.Reverb.defaults = {\n\t\"decay\" : 1.5,\n\t\"preDelay\" : 0.01,\n};\n\n/**\n * Generate the Impulse Response. Returns a promise while the IR is being\n * generated.\n * @return {Promise<Tone.Reverb>} Promise which returns this object.\n */\nTone.Reverb.prototype.generate = function(){\n\treturn Tone.Offline(function(){\n\t\t//create a noise burst which decays over the duration\n\t\tvar noiseL = new Tone.Noise();\n\t\tvar noiseR = new Tone.Noise();\n\t\tvar merge = new Tone.Merge();\n\t\tnoiseL.connect(merge.left);\n\t\tnoiseR.connect(merge.right);\n\t\tvar gainNode = new Tone.Gain().toMaster();\n\t\tmerge.connect(gainNode);\n\t\tnoiseL.start(0);\n\t\tnoiseR.start(0);\n\t\t//predelay\n\t\tgainNode.gain.setValueAtTime(0, 0);\n\t\tgainNode.gain.setValueAtTime(1, this.preDelay);\n\t\t//decay\n\t\tgainNode.gain.exponentialApproachValueAtTime(0, this.preDelay, this.decay + this.preDelay);\n\t}.bind(this), this.decay + this.preDelay).then(function(buffer){\n\t\tthis._convolver.buffer = buffer.get();\n\t\treturn this;\n\t}.bind(this));\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Reverb}  this\n */\nTone.Reverb.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._convolver.disconnect();\n\tthis._convolver = null;\n\treturn this;\n};\n\nexport default Tone.Reverb;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/StereoEffect\";\nimport \"../effect/FeedbackEffect\";\nimport \"../core/Gain\";\n\n/**\n *  @class Base class for stereo feedback effects where the effectReturn\n *         is fed back into the same channel.\n *\n *\t@constructor\n *\t@extends {Tone.StereoEffect}\n */\nTone.StereoFeedbackEffect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"feedback\"], Tone.FeedbackEffect);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  controls the amount of feedback\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\n\t/**\n\t *  the left side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackL = new Tone.Gain();\n\n\t/**\n\t *  the right side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackR = new Tone.Gain();\n\n\t//connect it up\n\tthis.effectReturnL.chain(this._feedbackL, this.effectSendL);\n\tthis.effectReturnR.chain(this._feedbackR, this.effectSendR);\n\tthis.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\tthis._readOnly([\"feedback\"]);\n};\n\nTone.extend(Tone.StereoFeedbackEffect, Tone.StereoEffect);\n\n/**\n *  clean up\n *  @returns {Tone.StereoFeedbackEffect} this\n */\nTone.StereoFeedbackEffect.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"feedback\"]);\n\tthis.feedback.dispose();\n\tthis.feedback = null;\n\tthis._feedbackL.dispose();\n\tthis._feedbackL = null;\n\tthis._feedbackR.dispose();\n\tthis._feedbackR = null;\n\treturn this;\n};\n\nexport default Tone.StereoFeedbackEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/MidSideEffect\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../signal/Subtract\";\n\n/**\n *  @class Applies a width factor to the mid/side seperation.\n *         0 is all mid and 1 is all side.\n *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n *         <br><br>\n *         <code>\n *         Mid *= 2*(1-width)<br>\n *         Side *= 2*width\n *         </code>\n *\n *  @extends {Tone.MidSideEffect}\n *  @constructor\n *  @param {NormalRange|Object} [width] The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n */\nTone.StereoWidener = function(){\n\n\tvar options = Tone.defaults(arguments, [\"width\"], Tone.StereoWidener);\n\tTone.MidSideEffect.call(this, options);\n\n\t/**\n\t *  The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\tthis._readOnly([\"width\"]);\n\n\t/**\n\t * Two times the (1-width) for the mid channel\n\t * @type {Tone.Multiply}\n\t * @private\n\t */\n\tthis._twoTimesWidthMid = new Tone.Multiply(2);\n\n\t/**\n\t * Two times the width for the side channel\n\t * @type {Tone.Multiply}\n\t * @private\n\t */\n\tthis._twoTimesWidthSide = new Tone.Multiply(2);\n\n\t/**\n\t *  Mid multiplier\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._midMult = new Tone.Multiply();\n\tthis._twoTimesWidthMid.connect(this._midMult, 0, 1);\n\tthis.midSend.chain(this._midMult, this.midReturn);\n\n\t/**\n\t * 1 - width\n\t * @type {Tone.Subtract}\n\t * @private\n\t */\n\tthis._oneMinusWidth = new Tone.Subtract();\n\tthis._oneMinusWidth.connect(this._twoTimesWidthMid);\n\tTone.connect(this.context.getConstant(1), this._oneMinusWidth, 0, 0);\n\tthis.width.connect(this._oneMinusWidth, 0, 1);\n\n\t/**\n\t *  Side multiplier\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._sideMult = new Tone.Multiply();\n\tthis.width.connect(this._twoTimesWidthSide);\n\tthis._twoTimesWidthSide.connect(this._sideMult, 0, 1);\n\tthis.sideSend.chain(this._sideMult, this.sideReturn);\n};\n\nTone.extend(Tone.StereoWidener, Tone.MidSideEffect);\n\n/**\n *  the default values\n *  @static\n *  @type {Object}\n */\nTone.StereoWidener.defaults = {\n\t\"width\" : 0.5\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.StereoWidener} this\n */\nTone.StereoWidener.prototype.dispose = function(){\n\tTone.MidSideEffect.prototype.dispose.call(this);\n\tthis._writable([\"width\"]);\n\tthis.width.dispose();\n\tthis.width = null;\n\tthis._midMult.dispose();\n\tthis._midMult = null;\n\tthis._sideMult.dispose();\n\tthis._sideMult = null;\n\tthis._twoTimesWidthMid.dispose();\n\tthis._twoTimesWidthMid = null;\n\tthis._twoTimesWidthSide.dispose();\n\tthis._twoTimesWidthSide = null;\n\tthis._oneMinusWidth.dispose();\n\tthis._oneMinusWidth = null;\n\treturn this;\n};\n\nexport default Tone.StereoWidener;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../effect/StereoEffect\";\n\n/**\n *  @class Tone.Tremolo modulates the amplitude of an incoming signal using a Tone.LFO.\n *         The type, frequency, and depth of the LFO is controllable.\n *\n *  @extends {Tone.StereoEffect}\n *  @constructor\n *  @param {Frequency} [frequency] The rate of the effect.\n *  @param {NormalRange} [depth] The depth of the effect.\n *  @example\n * //create a tremolo and start it's LFO\n * var tremolo = new Tone.Tremolo(9, 0.75).toMaster().start();\n * //route an oscillator through the tremolo and start it\n * var oscillator = new Tone.Oscillator().connect(tremolo).start();\n */\nTone.Tremolo = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"depth\"], Tone.Tremolo);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  The tremelo LFO in the left channel\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoL = new Tone.LFO({\n\t\t\"phase\" : options.spread,\n\t\t\"min\" : 1,\n\t\t\"max\" : 0,\n\t});\n\n\t/**\n\t *  The tremelo LFO in the left channel\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoR = new Tone.LFO({\n\t\t\"phase\" : options.spread,\n\t\t\"min\" : 1,\n\t\t\"max\" : 0,\n\t});\n\n\t/**\n\t *  Where the gain is multiplied\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._amplitudeL = new Tone.Gain();\n\n\t/**\n\t *  Where the gain is multiplied\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._amplitudeR = new Tone.Gain();\n\n\t/**\n\t *  The frequency of the tremolo.\n\t *  @type  {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The depth of the effect. A depth of 0, has no effect\n\t *  on the amplitude, and a depth of 1 makes the amplitude\n\t *  modulate fully between 0 and 1.\n\t *  @type  {NormalRange}\n\t *  @signal\n\t */\n\tthis.depth = new Tone.Signal(options.depth, Tone.Type.NormalRange);\n\n\tthis._readOnly([\"frequency\", \"depth\"]);\n\tthis.effectSendL.chain(this._amplitudeL, this.effectReturnL);\n\tthis.effectSendR.chain(this._amplitudeR, this.effectReturnR);\n\tthis._lfoL.connect(this._amplitudeL.gain);\n\tthis._lfoR.connect(this._amplitudeR.gain);\n\tthis.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n\tthis.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n\tthis.type = options.type;\n\tthis.spread = options.spread;\n};\n\nTone.extend(Tone.Tremolo, Tone.StereoEffect);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Tremolo.defaults = {\n\t\"frequency\" : 10,\n\t\"type\" : \"sine\",\n\t\"depth\" : 0.5,\n\t\"spread\" : 180,\n};\n\n/**\n * Start the tremolo.\n * @param {Time} [time=now] When the tremolo begins.\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.start = function(time){\n\tthis._lfoL.start(time);\n\tthis._lfoR.start(time);\n\treturn this;\n};\n\n/**\n * Stop the tremolo.\n * @param {Time} [time=now] When the tremolo stops.\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.stop = function(time){\n\tthis._lfoL.stop(time);\n\tthis._lfoR.stop(time);\n\treturn this;\n};\n\n/**\n * Sync the effect to the transport.\n * @param {Time} [delay=0] Delay time before starting the effect after the\n *                              Transport has started.\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.sync = function(delay){\n\tthis._lfoL.sync(delay);\n\tthis._lfoR.sync(delay);\n\tTone.Transport.syncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n * Unsync the filter from the transport\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.unsync = function(){\n\tthis._lfoL.unsync();\n\tthis._lfoR.unsync();\n\tTone.Transport.unsyncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n * The Tremolo's oscillator type.\n * @memberOf Tone.Tremolo#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Tremolo.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfoL.type;\n\t},\n\tset : function(type){\n\t\tthis._lfoL.type = type;\n\t\tthis._lfoR.type = type;\n\t}\n});\n\n/**\n * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n * When set to 180, LFO's will be panned hard left and right respectively.\n * @memberOf Tone.Tremolo#\n * @type {Degrees}\n * @name spread\n */\nObject.defineProperty(Tone.Tremolo.prototype, \"spread\", {\n\tget : function(){\n\t\treturn this._lfoR.phase - this._lfoL.phase; //180\n\t},\n\tset : function(spread){\n\t\tthis._lfoL.phase = 90 - (spread/2);\n\t\tthis._lfoR.phase = (spread/2) + 90;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"depth\"]);\n\tthis._lfoL.dispose();\n\tthis._lfoL = null;\n\tthis._lfoR.dispose();\n\tthis._lfoR = null;\n\tthis._amplitudeL.dispose();\n\tthis._amplitudeL = null;\n\tthis._amplitudeR.dispose();\n\tthis._amplitudeR = null;\n\tthis.frequency = null;\n\tthis.depth = null;\n\treturn this;\n};\n\nexport default Tone.Tremolo;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../core/Delay\";\nimport \"../component/LFO\";\n\n/**\n *  @class A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n *         modulates the delayTime of the delay, causing the pitch to rise\n *         and fall. \n *  @extends {Tone.Effect}\n *  @param {Frequency} frequency The frequency of the vibrato.\n *  @param {NormalRange} depth The amount the pitch is modulated.\n */\nTone.Vibrato = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"depth\"], Tone.Vibrato);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  The delay node used for the vibrato effect\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNode = new Tone.Delay(0, options.maxDelay);\n\n\t/**\n\t *  The LFO used to control the vibrato\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfo = new Tone.LFO({\n\t\t\"type\" : options.type,\n\t\t\"min\" : 0,\n\t\t\"max\" : options.maxDelay, \n\t\t\"frequency\" : options.frequency,\n\t\t\"phase\" : -90 //offse the phase so the resting position is in the center\n\t}).start().connect(this._delayNode.delayTime);\n\n\t/**\n\t *  The frequency of the vibrato\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._lfo.frequency;\n\n\t/**\n\t *  The depth of the vibrato. \n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.depth = this._lfo.amplitude;\n\n\tthis.depth.value = options.depth;\n\tthis._readOnly([\"frequency\", \"depth\"]);\n\tthis.effectSend.chain(this._delayNode, this.effectReturn);\n};\n\nTone.extend(Tone.Vibrato, Tone.Effect);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @const\n */\nTone.Vibrato.defaults = {\n\t\"maxDelay\" : 0.005,\n\t\"frequency\" : 5,\n\t\"depth\" : 0.1,\n\t\"type\" : \"sine\"\n};\n\n/**\n * Type of oscillator attached to the Vibrato.\n * @memberOf Tone.Vibrato#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Vibrato.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfo.type;\n\t},\n\tset : function(type){\n\t\tthis._lfo.type = type;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Vibrato} this\n */\nTone.Vibrato.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._delayNode.dispose();\n\tthis._delayNode = null;\n\tthis._lfo.dispose();\n\tthis._lfo = null;\n\tthis._writable([\"frequency\", \"depth\"]);\n\tthis.frequency = null;\n\tthis.depth = null;\n};\n\nexport default Tone.Vibrato;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../type/Type\";\nimport \"../core/TimelineState\";\n\n/**\n *  @class  Tone.Event abstracts away Tone.Transport.schedule and provides a schedulable\n *          callback for a single or repeatable events along the timeline.\n *\n *  @extends {Tone}\n *  @param {function} callback The callback to invoke at the time.\n *  @param {*} value The value or values which should be passed to\n *                      the callback function on invocation.\n *  @example\n * var chord = new Tone.Event(function(time, chord){\n * \t//the chord as well as the exact time of the event\n * \t//are passed in as arguments to the callback function\n * }, [\"D4\", \"E4\", \"F4\"]);\n * //start the chord at the beginning of the transport timeline\n * chord.start();\n * //loop it every measure for 8 measures\n * chord.loop = 8;\n * chord.loopEnd = \"1m\";\n */\nTone.Event = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"value\"], Tone.Event);\n\tTone.call(this);\n\n\t/**\n\t *  Loop value\n\t *  @type  {Boolean|Positive}\n\t *  @private\n\t */\n\tthis._loop = options.loop;\n\n\t/**\n\t *  The callback to invoke.\n\t *  @type  {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t/**\n\t *  The value which is passed to the\n\t *  callback function.\n\t *  @type  {*}\n\t *  @private\n\t */\n\tthis.value = options.value;\n\n\t/**\n\t *  When the note is scheduled to start.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopStart = this.toTicks(options.loopStart);\n\n\t/**\n\t *  When the note is scheduled to start.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopEnd = this.toTicks(options.loopEnd);\n\n\t/**\n\t *  Tracks the scheduled events\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\n\t/**\n\t *  The playback speed of the note. A speed of 1\n\t *  is no change.\n\t *  @private\n\t *  @type {Positive}\n\t */\n\tthis._playbackRate = 1;\n\n\t/**\n\t *  A delay time from when the event is scheduled to start\n\t *  @type {Ticks}\n\t *  @private\n\t */\n\tthis._startOffset = 0;\n\n\t/**\n\t *  private holder of probability value\n\t *  @type {NormalRange}\n\t *  @private\n\t */\n\tthis._probability = options.probability;\n\n\t/**\n\t *  the amount of variation from the\n\t *  given time.\n\t *  @type {Boolean|Time}\n\t *  @private\n\t */\n\tthis._humanize = options.humanize;\n\n\t/**\n\t *  If mute is true, the callback won't be\n\t *  invoked.\n\t *  @type {Boolean}\n\t */\n\tthis.mute = options.mute;\n\n\t//set the initial values\n\tthis.playbackRate = options.playbackRate;\n};\n\nTone.extend(Tone.Event);\n\n/**\n *  The default values\n *  @type  {Object}\n *  @const\n */\nTone.Event.defaults = {\n\t\"callback\" : Tone.noOp,\n\t\"loop\" : false,\n\t\"loopEnd\" : \"1m\",\n\t\"loopStart\" : 0,\n\t\"playbackRate\" : 1,\n\t\"value\" : null,\n\t\"probability\" : 1,\n\t\"mute\" : false,\n\t\"humanize\" : false,\n};\n\n/**\n *  Reschedule all of the events along the timeline\n *  with the updated values.\n *  @param {Time} after Only reschedules events after the given time.\n *  @return  {Tone.Event}  this\n *  @private\n */\nTone.Event.prototype._rescheduleEvents = function(after){\n\t//if no argument is given, schedules all of the events\n\tafter = Tone.defaultArg(after, -1);\n\tthis._state.forEachFrom(after, function(event){\n\t\tvar duration;\n\t\tif (event.state === Tone.State.Started){\n\t\t\tif (Tone.isDefined(event.id)){\n\t\t\t\tTone.Transport.clear(event.id);\n\t\t\t}\n\t\t\tvar startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n\t\t\tif (this._loop === true || Tone.isNumber(this._loop) && this._loop > 1){\n\t\t\t\tduration = Infinity;\n\t\t\t\tif (Tone.isNumber(this._loop)){\n\t\t\t\t\tduration = (this._loop) * this._getLoopDuration();\n\t\t\t\t}\n\t\t\t\tvar nextEvent = this._state.getAfter(startTick);\n\t\t\t\tif (nextEvent !== null){\n\t\t\t\t\tduration = Math.min(duration, nextEvent.time - startTick);\n\t\t\t\t}\n\t\t\t\tif (duration !== Infinity){\n\t\t\t\t\t//schedule a stop since it's finite duration\n\t\t\t\t\tthis._state.setStateAtTime(Tone.State.Stopped, startTick + duration + 1);\n\t\t\t\t\tduration = Tone.Ticks(duration);\n\t\t\t\t}\n\t\t\t\tvar interval = Tone.Ticks(this._getLoopDuration());\n\t\t\t\tevent.id = Tone.Transport.scheduleRepeat(this._tick.bind(this), interval, Tone.Ticks(startTick), duration);\n\t\t\t} else {\n\t\t\t\tevent.id = Tone.Transport.schedule(this._tick.bind(this), Tone.Ticks(startTick));\n\t\t\t}\n\t\t}\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Returns the playback state of the note, either \"started\" or \"stopped\".\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.Event#\n *  @name state\n */\nObject.defineProperty(Tone.Event.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._state.getValueAtTime(Tone.Transport.ticks);\n\t}\n});\n\n/**\n *  The start from the scheduled start time\n *  @type {Ticks}\n *  @memberOf Tone.Event#\n *  @name startOffset\n *  @private\n */\nObject.defineProperty(Tone.Event.prototype, \"startOffset\", {\n\tget : function(){\n\t\treturn this._startOffset;\n\t},\n\tset : function(offset){\n\t\tthis._startOffset = offset;\n\t}\n});\n\n/**\n *  The probability of the notes being triggered.\n *  @memberOf Tone.Event#\n *  @type {NormalRange}\n *  @name probability\n */\nObject.defineProperty(Tone.Event.prototype, \"probability\", {\n\tget : function(){\n\t\treturn this._probability;\n\t},\n\tset : function(prob){\n\t\tthis._probability = prob;\n\t}\n});\n\n/**\n *  If set to true, will apply small random variation\n *  to the callback time. If the value is given as a time, it will randomize\n *  by that amount.\n *  @type {Boolean|Time}\n *  @name humanize\n *  @memberof Tone.Event#\n *  @example\n * event.humanize = true;\n */\nObject.defineProperty(Tone.Event.prototype, \"humanize\", {\n\tget : function(){\n\t\treturn this._humanize;\n\t},\n\tset : function(variation){\n\t\tthis._humanize = variation;\n\t}\n});\n\n/**\n *  Start the note at the given time.\n *  @param  {TimelinePosition}  time  When the note should start.\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.start = function(time){\n\ttime = this.toTicks(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Stopped){\n\t\tthis._state.add({\n\t\t\t\"state\" : Tone.State.Started,\n\t\t\t\"time\" : time,\n\t\t\t\"id\" : undefined,\n\t\t});\n\t\tthis._rescheduleEvents(time);\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the Event at the given time.\n *  @param  {TimelinePosition}  time  When the note should stop.\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.stop = function(time){\n\tthis.cancel(time);\n\ttime = this.toTicks(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\t\tvar previousEvent = this._state.getBefore(time);\n\t\tvar reschedulTime = time;\n\t\tif (previousEvent !== null){\n\t\t\treschedulTime = previousEvent.time;\n\t\t}\n\t\tthis._rescheduleEvents(reschedulTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel all scheduled events greater than or equal to the given time\n *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.cancel = function(time){\n\ttime = Tone.defaultArg(time, -Infinity);\n\ttime = this.toTicks(time);\n\tthis._state.forEachFrom(time, function(event){\n\t\tTone.Transport.clear(event.id);\n\t});\n\tthis._state.cancel(time);\n\treturn this;\n};\n\n/**\n *  The callback function invoker. Also\n *  checks if the Event is done playing\n *  @param  {Number}  time  The time of the event in seconds\n *  @private\n */\nTone.Event.prototype._tick = function(time){\n\tvar ticks = Tone.Transport.getTicksAtTime(time);\n\tif (!this.mute && this._state.getValueAtTime(ticks) === Tone.State.Started){\n\t\tif (this.probability < 1 && Math.random() > this.probability){\n\t\t\treturn;\n\t\t}\n\t\tif (this.humanize){\n\t\t\tvar variation = 0.02;\n\t\t\tif (!Tone.isBoolean(this.humanize)){\n\t\t\t\tvariation = this.toSeconds(this.humanize);\n\t\t\t}\n\t\t\ttime += (Math.random() * 2 - 1) * variation;\n\t\t}\n\t\tthis.callback(time, this.value);\n\t}\n};\n\n/**\n *  Get the duration of the loop.\n *  @return  {Ticks}\n *  @private\n */\nTone.Event.prototype._getLoopDuration = function(){\n\treturn Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n};\n\n/**\n *  If the note should loop or not\n *  between Tone.Event.loopStart and\n *  Tone.Event.loopEnd. If set to true,\n *  the event will loop indefinitely,\n *  if set to a number greater than 1\n *  it will play a specific number of\n *  times, if set to false, 0 or 1, the\n *  part will only play once.\n *  @memberOf Tone.Event#\n *  @type {Boolean|Positive}\n *  @name loop\n */\nObject.defineProperty(Tone.Event.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._loop;\n\t},\n\tset : function(loop){\n\t\tthis._loop = loop;\n\t\tthis._rescheduleEvents();\n\t}\n});\n\n/**\n * \tThe playback rate of the note. Defaults to 1.\n *  @memberOf Tone.Event#\n *  @type {Positive}\n *  @name playbackRate\n *  @example\n * note.loop = true;\n * //repeat the note twice as fast\n * note.playbackRate = 2;\n */\nObject.defineProperty(Tone.Event.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tthis._rescheduleEvents();\n\t}\n});\n\n/**\n *  The loopEnd point is the time the event will loop\n *  if Tone.Event.loop is true.\n *  @memberOf Tone.Event#\n *  @type {Time}\n *  @name loopEnd\n */\nObject.defineProperty(Tone.Event.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopEnd).toSeconds();\n\t},\n\tset : function(loopEnd){\n\t\tthis._loopEnd = this.toTicks(loopEnd);\n\t\tif (this._loop){\n\t\t\tthis._rescheduleEvents();\n\t\t}\n\t}\n});\n\n/**\n *  The time when the loop should start.\n *  @memberOf Tone.Event#\n *  @type {Time}\n *  @name loopStart\n */\nObject.defineProperty(Tone.Event.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopStart).toSeconds();\n\t},\n\tset : function(loopStart){\n\t\tthis._loopStart = this.toTicks(loopStart);\n\t\tif (this._loop){\n\t\t\tthis._rescheduleEvents();\n\t\t}\n\t}\n});\n\n/**\n *  The current progress of the loop interval.\n *  Returns 0 if the event is not started yet or\n *  it is not set to loop.\n *  @memberOf Tone.Event#\n *  @type {NormalRange}\n *  @name progress\n *  @readOnly\n */\nObject.defineProperty(Tone.Event.prototype, \"progress\", {\n\tget : function(){\n\t\tif (this._loop){\n\t\t\tvar ticks = Tone.Transport.ticks;\n\t\t\tvar lastEvent = this._state.get(ticks);\n\t\t\tif (lastEvent !== null && lastEvent.state === Tone.State.Started){\n\t\t\t\tvar loopDuration = this._getLoopDuration();\n\t\t\t\tvar progress = (ticks - lastEvent.time) % loopDuration;\n\t\t\t\treturn progress / loopDuration;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.dispose = function(){\n\tthis.cancel();\n\tthis._state.dispose();\n\tthis._state = null;\n\tthis.callback = null;\n\tthis.value = null;\n};\n\nexport default Tone.Event;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Event\";\n\n/**\n *  @class Tone.Loop creates a looped callback at the \n *         specified interval. The callback can be \n *         started, stopped and scheduled along\n *         the Transport's timeline. \n *  @example\n * var loop = new Tone.Loop(function(time){\n * \t//triggered every eighth note. \n * \tconsole.log(time);\n * }, \"8n\").start(0);\n * Tone.Transport.start();\n *  @extends {Tone}\n *  @param {Function} callback The callback to invoke with the event.\n *  @param {Time} interval The time between successive callback calls. \n */\nTone.Loop = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"interval\"], Tone.Loop);\n\tTone.call(this);\n\n\t/**\n\t *  The event which produces the callbacks\n\t */\n\tthis._event = new Tone.Event({\n\t\t\"callback\" : this._tick.bind(this),\n\t\t\"loop\" : true,\n\t\t\"loopEnd\" : options.interval,\n\t\t\"playbackRate\" : options.playbackRate,\n\t\t\"probability\" : options.probability\n\t});\n\n\t/**\n\t *  The callback to invoke with the next event in the pattern\n\t *  @type {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t//set the iterations\n\tthis.iterations = options.iterations;\n};\n\nTone.extend(Tone.Loop);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Loop.defaults = {\n\t\"interval\" : \"4n\",\n\t\"callback\" : Tone.noOp,\n\t\"playbackRate\" : 1,\n\t\"iterations\" : Infinity,\n\t\"probability\" : true,\n\t\"mute\" : false\n};\n\n/**\n *  Start the loop at the specified time along the Transport's\n *  timeline.\n *  @param  {TimelinePosition=}  time  When to start the Loop.\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.start = function(time){\n\tthis._event.start(time);\n\treturn this;\n};\n\n/**\n *  Stop the loop at the given time.\n *  @param  {TimelinePosition=}  time  When to stop the Loop.\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.stop = function(time){\n\tthis._event.stop(time);\n\treturn this;\n};\n\n/**\n *  Cancel all scheduled events greater than or equal to the given time\n *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.cancel = function(time){\n\tthis._event.cancel(time);\n\treturn this;\n};\n\n/**\n *  Internal function called when the notes should be called\n *  @param  {Number}  time  The time the event occurs\n *  @private\n */\nTone.Loop.prototype._tick = function(time){\n\tthis.callback(time);\n};\n\n/**\n *  The state of the Loop, either started or stopped.\n *  @memberOf Tone.Loop#\n *  @type {String}\n *  @name state\n *  @readOnly\n */\nObject.defineProperty(Tone.Loop.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._event.state;\n\t}\n});\n\n/**\n *  The progress of the loop as a value between 0-1. 0, when\n *  the loop is stopped or done iterating. \n *  @memberOf Tone.Loop#\n *  @type {NormalRange}\n *  @name progress\n *  @readOnly\n */\nObject.defineProperty(Tone.Loop.prototype, \"progress\", {\n\tget : function(){\n\t\treturn this._event.progress;\n\t}\n});\n\n/**\n *  The time between successive callbacks. \n *  @example\n * loop.interval = \"8n\"; //loop every 8n\n *  @memberOf Tone.Loop#\n *  @type {Time}\n *  @name interval\n */\nObject.defineProperty(Tone.Loop.prototype, \"interval\", {\n\tget : function(){\n\t\treturn this._event.loopEnd;\n\t},\n\tset : function(interval){\n\t\tthis._event.loopEnd = interval;\n\t}\n});\n\n/**\n *  The playback rate of the loop. The normal playback rate is 1 (no change). \n *  A `playbackRate` of 2 would be twice as fast. \n *  @memberOf Tone.Loop#\n *  @type {Time}\n *  @name playbackRate\n */\nObject.defineProperty(Tone.Loop.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._event.playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._event.playbackRate = rate;\n\t}\n});\n\n/**\n *  Random variation +/-0.01s to the scheduled time. \n *  Or give it a time value which it will randomize by.\n *  @type {Boolean|Time}\n *  @memberOf Tone.Loop#\n *  @name humanize\n */\nObject.defineProperty(Tone.Loop.prototype, \"humanize\", {\n\tget : function(){\n\t\treturn this._event.humanize;\n\t},\n\tset : function(variation){\n\t\tthis._event.humanize = variation;\n\t}\n});\n\n/**\n *  The probably of the callback being invoked.\n *  @memberOf Tone.Loop#\n *  @type {NormalRange}\n *  @name probability\n */\nObject.defineProperty(Tone.Loop.prototype, \"probability\", {\n\tget : function(){\n\t\treturn this._event.probability;\n\t},\n\tset : function(prob){\n\t\tthis._event.probability = prob;\n\t}\n});\n\n/**\n *  Muting the Loop means that no callbacks are invoked.\n *  @memberOf Tone.Loop#\n *  @type {Boolean}\n *  @name mute\n */\nObject.defineProperty(Tone.Loop.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._event.mute;\n\t},\n\tset : function(mute){\n\t\tthis._event.mute = mute;\n\t}\n});\n\n/**\n *  The number of iterations of the loop. The default\n *  value is Infinity (loop forever).\n *  @memberOf Tone.Loop#\n *  @type {Positive}\n *  @name iterations\n */\nObject.defineProperty(Tone.Loop.prototype, \"iterations\", {\n\tget : function(){\n\t\tif (this._event.loop === true){\n\t\t\treturn Infinity;\n\t\t} else {\n\t\t\treturn this._event.loop;\n\t\t}\n\t},\n\tset : function(iters){\n\t\tif (iters === Infinity){\n\t\t\tthis._event.loop = true;\n\t\t} else {\n\t\t\tthis._event.loop = iters;\n\t\t}\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.dispose = function(){\n\tthis._event.dispose();\n\tthis._event = null;\n\tthis.callback = null;\n};\n\nexport default Tone.Loop;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Event\";\nimport \"../type/Type\";\nimport \"../core/Transport\";\n\n/**\n *  @class Tone.Part is a collection Tone.Events which can be\n *         started/stopped and looped as a single unit.\n *\n *  @extends {Tone.Event}\n *  @param {Function} callback The callback to invoke on each event\n *  @param {Array} events the array of events\n *  @example\n * var part = new Tone.Part(function(time, note){\n * \t//the notes given as the second element in the array\n * \t//will be passed in as the second argument\n * \tsynth.triggerAttackRelease(note, \"8n\", time);\n * }, [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n *  @example\n * //use an array of objects as long as the object has a \"time\" attribute\n * var part = new Tone.Part(function(time, value){\n * \t//the value is an object which contains both the note and the velocity\n * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n * }, [{\"time\" : 0, \"note\" : \"C3\", \"velocity\": 0.9},\n * \t   {\"time\" : \"0:2\", \"note\" : \"C4\", \"velocity\": 0.5}\n * ]).start(0);\n */\nTone.Part = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"events\"], Tone.Part);\n\tTone.Event.call(this, options);\n\n\t/**\n\t *  An array of Objects.\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._events = [];\n\n\t//add the events\n\tfor (var i = 0; i < options.events.length; i++){\n\t\tif (Array.isArray(options.events[i])){\n\t\t\tthis.add(options.events[i][0], options.events[i][1]);\n\t\t} else {\n\t\t\tthis.add(options.events[i]);\n\t\t}\n\t}\n};\n\nTone.extend(Tone.Part, Tone.Event);\n\n/**\n *  The default values\n *  @type  {Object}\n *  @const\n */\nTone.Part.defaults = {\n\t\"callback\" : Tone.noOp,\n\t\"loop\" : false,\n\t\"loopEnd\" : \"1m\",\n\t\"loopStart\" : 0,\n\t\"playbackRate\" : 1,\n\t\"probability\" : 1,\n\t\"humanize\" : false,\n\t\"mute\" : false,\n\t\"events\" : []\n};\n\n/**\n *  Start the part at the given time.\n *  @param  {TransportTime}  time    When to start the part.\n *  @param  {Time=}  offset  The offset from the start of the part\n *                           to begin playing at.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.start = function(time, offset){\n\tvar ticks = this.toTicks(time);\n\tif (this._state.getValueAtTime(ticks) !== Tone.State.Started){\n\t\tif (this._loop){\n\t\t\toffset = Tone.defaultArg(offset, this._loopStart);\n\t\t} else {\n\t\t\toffset = Tone.defaultArg(offset, 0);\n\t\t}\n\t\toffset = this.toTicks(offset);\n\t\tthis._state.add({\n\t\t\t\"state\" : Tone.State.Started,\n\t\t\t\"time\" : ticks,\n\t\t\t\"offset\" : offset\n\t\t});\n\t\tthis._forEach(function(event){\n\t\t\tthis._startNote(event, ticks, offset);\n\t\t});\n\t}\n\treturn this;\n};\n\n/**\n *  Start the event in the given event at the correct time given\n *  the ticks and offset and looping.\n *  @param  {Tone.Event}  event\n *  @param  {Ticks}  ticks\n *  @param  {Ticks}  offset\n *  @private\n */\nTone.Part.prototype._startNote = function(event, ticks, offset){\n\tticks -= offset;\n\tif (this._loop){\n\t\tif (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd){\n\t\t\tif (event.startOffset < offset){\n\t\t\t\t//start it on the next loop\n\t\t\t\tticks += this._getLoopDuration();\n\t\t\t}\n\t\t\tevent.start(Tone.Ticks(ticks));\n\t\t} else if (event.startOffset < this._loopStart && event.startOffset >= offset){\n\t\t\tevent.loop = false;\n\t\t\tevent.start(Tone.Ticks(ticks));\n\t\t}\n\t} else if (event.startOffset >= offset){\n\t\tevent.start(Tone.Ticks(ticks));\n\t}\n};\n\n/**\n *  The start from the scheduled start time\n *  @type {Ticks}\n *  @memberOf Tone.Part#\n *  @name startOffset\n *  @private\n */\nObject.defineProperty(Tone.Part.prototype, \"startOffset\", {\n\tget : function(){\n\t\treturn this._startOffset;\n\t},\n\tset : function(offset){\n\t\tthis._startOffset = offset;\n\t\tthis._forEach(function(event){\n\t\t\tevent.startOffset += this._startOffset;\n\t\t});\n\t}\n});\n\n/**\n *  Stop the part at the given time.\n *  @param  {TimelinePosition}  time  When to stop the part.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.stop = function(time){\n\tvar ticks = this.toTicks(time);\n\tthis._state.cancel(ticks);\n\tthis._state.setStateAtTime(Tone.State.Stopped, ticks);\n\tthis._forEach(function(event){\n\t\tevent.stop(time);\n\t});\n\treturn this;\n};\n\n/**\n *  Get/Set an Event's value at the given time.\n *  If a value is passed in and no event exists at\n *  the given time, one will be created with that value.\n *  If two events are at the same time, the first one will\n *  be returned.\n *  @example\n * part.at(\"1m\"); //returns the part at the first measure\n *\n * part.at(\"2m\", \"C2\"); //set the value at \"2m\" to C2.\n * //if an event didn't exist at that time, it will be created.\n *  @param {TransportTime} time The time of the event to get or set.\n *  @param {*=} value If a value is passed in, the value of the\n *                    event at the given time will be set to it.\n *  @return {Tone.Event} the event at the time\n */\nTone.Part.prototype.at = function(time, value){\n\ttime = Tone.TransportTime(time);\n\tvar tickTime = Tone.Ticks(1).toSeconds();\n\tfor (var i = 0; i < this._events.length; i++){\n\t\tvar event = this._events[i];\n\t\tif (Math.abs(time.toTicks() - event.startOffset) < tickTime){\n\t\t\tif (Tone.isDefined(value)){\n\t\t\t\tevent.value = value;\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t}\n\t//if there was no event at that time, create one\n\tif (Tone.isDefined(value)){\n\t\tthis.add(time, value);\n\t\t//return the new event\n\t\treturn this._events[this._events.length - 1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Add a an event to the part.\n *  @param {Time} time The time the note should start.\n *                            If an object is passed in, it should\n *                            have a 'time' attribute and the rest\n *                            of the object will be used as the 'value'.\n *  @param  {Tone.Event|*}  value\n *  @returns {Tone.Part} this\n *  @example\n * part.add(\"1m\", \"C#+11\");\n */\nTone.Part.prototype.add = function(time, value){\n\t//extract the parameters\n\tif (time.hasOwnProperty(\"time\")){\n\t\tvalue = time;\n\t\ttime = value.time;\n\t}\n\ttime = this.toTicks(time);\n\tvar event;\n\tif (value instanceof Tone.Event){\n\t\tevent = value;\n\t\tevent.callback = this._tick.bind(this);\n\t} else {\n\t\tevent = new Tone.Event({\n\t\t\t\"callback\" : this._tick.bind(this),\n\t\t\t\"value\" : value,\n\t\t});\n\t}\n\t//the start offset\n\tevent.startOffset = time;\n\n\t//initialize the values\n\tevent.set({\n\t\t\"loopEnd\" : this.loopEnd,\n\t\t\"loopStart\" : this.loopStart,\n\t\t\"loop\" : this.loop,\n\t\t\"humanize\" : this.humanize,\n\t\t\"playbackRate\" : this.playbackRate,\n\t\t\"probability\" : this.probability\n\t});\n\n\tthis._events.push(event);\n\n\t//start the note if it should be played right now\n\tthis._restartEvent(event);\n\treturn this;\n};\n\n/**\n *  Restart the given event\n *  @param  {Tone.Event}  event\n *  @private\n */\nTone.Part.prototype._restartEvent = function(event){\n\tthis._state.forEach(function(stateEvent){\n\t\tif (stateEvent.state === Tone.State.Started){\n\t\t\tthis._startNote(event, stateEvent.time, stateEvent.offset);\n\t\t} else {\n\t\t\t//stop the note\n\t\t\tevent.stop(Tone.Ticks(stateEvent.time));\n\t\t}\n\t}.bind(this));\n};\n\n/**\n *  Remove an event from the part. If the event at that time is a Tone.Part,\n *  it will remove the entire part.\n *  @param {Time} time The time of the event\n *  @param {*} value Optionally select only a specific event value\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.remove = function(time, value){\n\t//extract the parameters\n\tif (time.hasOwnProperty(\"time\")){\n\t\tvalue = time;\n\t\ttime = value.time;\n\t}\n\ttime = this.toTicks(time);\n\tfor (var i = this._events.length - 1; i >= 0; i--){\n\t\tvar event = this._events[i];\n\t\tif (event.startOffset === time){\n\t\t\tif (Tone.isUndef(value) || (Tone.isDefined(value) && event.value === value)){\n\t\t\t\tthis._events.splice(i, 1);\n\t\t\t\tevent.dispose();\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Remove all of the notes from the group.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.removeAll = function(){\n\tthis._forEach(function(event){\n\t\tevent.dispose();\n\t});\n\tthis._events = [];\n\treturn this;\n};\n\n/**\n *  Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n *  @param {TimelinePosition} after The time after which to cancel the scheduled events.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.cancel = function(after){\n\tthis._forEach(function(event){\n\t\tevent.cancel(after);\n\t});\n\tthis._state.cancel(this.toTicks(after));\n\treturn this;\n};\n\n/**\n *  Iterate over all of the events\n *  @param {Function} callback\n *  @param {Object} ctx The context\n *  @private\n */\nTone.Part.prototype._forEach = function(callback, ctx){\n\tif (this._events){\n\t\tctx = Tone.defaultArg(ctx, this);\n\t\tfor (var i = this._events.length - 1; i >= 0; i--){\n\t\t\tvar e = this._events[i];\n\t\t\tif (e instanceof Tone.Part){\n\t\t\t\te._forEach(callback, ctx);\n\t\t\t} else {\n\t\t\t\tcallback.call(ctx, e);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Set the attribute of all of the events\n *  @param  {String}  attr  the attribute to set\n *  @param  {*}  value      The value to set it to\n *  @private\n */\nTone.Part.prototype._setAll = function(attr, value){\n\tthis._forEach(function(event){\n\t\tevent[attr] = value;\n\t});\n};\n\n/**\n *  Internal tick method\n *  @param  {Number}  time  The time of the event in seconds\n *  @private\n */\nTone.Part.prototype._tick = function(time, value){\n\tif (!this.mute){\n\t\tthis.callback(time, value);\n\t}\n};\n\n/**\n *  Determine if the event should be currently looping\n *  given the loop boundries of this Part.\n *  @param  {Tone.Event}  event  The event to test\n *  @private\n */\nTone.Part.prototype._testLoopBoundries = function(event){\n\tif (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)){\n\t\tevent.cancel(0);\n\t} else if (event.state === Tone.State.Stopped){\n\t\t//reschedule it if it's stopped\n\t\tthis._restartEvent(event);\n\t}\n};\n\n/**\n *  The probability of the notes being triggered.\n *  @memberOf Tone.Part#\n *  @type {NormalRange}\n *  @name probability\n */\nObject.defineProperty(Tone.Part.prototype, \"probability\", {\n\tget : function(){\n\t\treturn this._probability;\n\t},\n\tset : function(prob){\n\t\tthis._probability = prob;\n\t\tthis._setAll(\"probability\", prob);\n\t}\n});\n\n/**\n *  If set to true, will apply small random variation\n *  to the callback time. If the value is given as a time, it will randomize\n *  by that amount.\n *  @example\n * event.humanize = true;\n *  @type {Boolean|Time}\n *  @name humanize\n *  @memberof Tone.Part#\n */\nObject.defineProperty(Tone.Part.prototype, \"humanize\", {\n\tget : function(){\n\t\treturn this._humanize;\n\t},\n\tset : function(variation){\n\t\tthis._humanize = variation;\n\t\tthis._setAll(\"humanize\", variation);\n\t}\n});\n\n/**\n *  If the part should loop or not\n *  between Tone.Part.loopStart and\n *  Tone.Part.loopEnd. If set to true,\n *  the part will loop indefinitely,\n *  if set to a number greater than 1\n *  it will play a specific number of\n *  times, if set to false, 0 or 1, the\n *  part will only play once.\n *  @memberOf Tone.Part#\n *  @type {Boolean|Positive}\n *  @name loop\n *  @example\n * //loop the part 8 times\n * part.loop = 8;\n */\nObject.defineProperty(Tone.Part.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._loop;\n\t},\n\tset : function(loop){\n\t\tthis._loop = loop;\n\t\tthis._forEach(function(event){\n\t\t\tevent._loopStart = this._loopStart;\n\t\t\tevent._loopEnd = this._loopEnd;\n\t\t\tevent.loop = loop;\n\t\t\tthis._testLoopBoundries(event);\n\t\t});\n\t}\n});\n\n/**\n *  The loopEnd point determines when it will\n *  loop if Tone.Part.loop is true.\n *  @memberOf Tone.Part#\n *  @type {Time}\n *  @name loopEnd\n */\nObject.defineProperty(Tone.Part.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopEnd).toSeconds();\n\t},\n\tset : function(loopEnd){\n\t\tthis._loopEnd = this.toTicks(loopEnd);\n\t\tif (this._loop){\n\t\t\tthis._forEach(function(event){\n\t\t\t\tevent.loopEnd = loopEnd;\n\t\t\t\tthis._testLoopBoundries(event);\n\t\t\t});\n\t\t}\n\t}\n});\n\n/**\n *  The loopStart point determines when it will\n *  loop if Tone.Part.loop is true.\n *  @memberOf Tone.Part#\n *  @type {Time}\n *  @name loopStart\n */\nObject.defineProperty(Tone.Part.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopStart).toSeconds();\n\t},\n\tset : function(loopStart){\n\t\tthis._loopStart = this.toTicks(loopStart);\n\t\tif (this._loop){\n\t\t\tthis._forEach(function(event){\n\t\t\t\tevent.loopStart = this.loopStart;\n\t\t\t\tthis._testLoopBoundries(event);\n\t\t\t});\n\t\t}\n\t}\n});\n\n/**\n * \tThe playback rate of the part\n *  @memberOf Tone.Part#\n *  @type {Positive}\n *  @name playbackRate\n */\nObject.defineProperty(Tone.Part.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tthis._setAll(\"playbackRate\", rate);\n\t}\n});\n\n/**\n * \tThe number of scheduled notes in the part.\n *  @memberOf Tone.Part#\n *  @type {Positive}\n *  @name length\n *  @readOnly\n */\nObject.defineProperty(Tone.Part.prototype, \"length\", {\n\tget : function(){\n\t\treturn this._events.length;\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.dispose = function(){\n\tTone.Event.prototype.dispose.call(this);\n\tthis.removeAll();\n\tthis.callback = null;\n\tthis._events = null;\n\treturn this;\n};\n\nexport default Tone.Part;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Loop\";\nimport \"../control/CtrlPattern\";\n\n/**\n *  @class Tone.Pattern arpeggiates between the given notes\n *         in a number of patterns. See Tone.CtrlPattern for\n *         a full list of patterns.\n *  @example\n * var pattern = new Tone.Pattern(function(time, note){\n *   //the order of the notes passed in depends on the pattern\n * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n *  @extends {Tone.Loop}\n *  @param {Function} callback The callback to invoke with the event.\n *  @param {Array} values The values to arpeggiate over.\n */\nTone.Pattern = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"values\", \"pattern\"], Tone.Pattern);\n\tTone.Loop.call(this, options);\n\n\t/**\n\t *  The pattern manager\n\t *  @type {Tone.CtrlPattern}\n\t *  @private\n\t */\n\tthis._pattern = new Tone.CtrlPattern({\n\t\t\"values\" : options.values, \n\t\t\"type\" : options.pattern,\n\t\t\"index\" : options.index\n\t});\n};\n\nTone.extend(Tone.Pattern, Tone.Loop);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Pattern.defaults = {\n\t\"pattern\" : Tone.CtrlPattern.Type.Up,\n\t\"callback\" : Tone.noOp,\n\t\"values\" : [],\n};\n\n/**\n *  Internal function called when the notes should be called\n *  @param  {Number}  time  The time the event occurs\n *  @private\n */\nTone.Pattern.prototype._tick = function(time){\n\tthis.callback(time, this._pattern.value);\n\tthis._pattern.next();\n};\n\n/**\n *  The current index in the values array.\n *  @memberOf Tone.Pattern#\n *  @type {Positive}\n *  @name index\n */\nObject.defineProperty(Tone.Pattern.prototype, \"index\", {\n\tget : function(){\n\t\treturn this._pattern.index;\n\t},\n\tset : function(i){\n\t\tthis._pattern.index = i;\n\t}\n});\n\n/**\n *  The array of events.\n *  @memberOf Tone.Pattern#\n *  @type {Array}\n *  @name values\n */\nObject.defineProperty(Tone.Pattern.prototype, \"values\", {\n\tget : function(){\n\t\treturn this._pattern.values;\n\t},\n\tset : function(vals){\n\t\tthis._pattern.values = vals;\n\t}\n});\n\n/**\n *  The current value of the pattern.\n *  @memberOf Tone.Pattern#\n *  @type {*}\n *  @name value\n *  @readOnly\n */\nObject.defineProperty(Tone.Pattern.prototype, \"value\", {\n\tget : function(){\n\t\treturn this._pattern.value;\n\t}\n});\n\n/**\n *  The pattern type. See Tone.CtrlPattern for the full list of patterns.\n *  @memberOf Tone.Pattern#\n *  @type {String}\n *  @name pattern\n */\nObject.defineProperty(Tone.Pattern.prototype, \"pattern\", {\n\tget : function(){\n\t\treturn this._pattern.type;\n\t},\n\tset : function(pattern){\n\t\tthis._pattern.type = pattern;\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Pattern}  this\n */\nTone.Pattern.prototype.dispose = function(){\n\tTone.Loop.prototype.dispose.call(this);\n\tthis._pattern.dispose();\n\tthis._pattern = null;\n};\n\nexport default Tone.Pattern;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Part\";\nimport \"../core/Transport\";\n\n/**\n *  @class A sequence is an alternate notation of a part. Instead\n *         of passing in an array of [time, event] pairs, pass\n *         in an array of events which will be spaced at the\n *         given subdivision. Sub-arrays will subdivide that beat\n *         by the number of items are in the array.\n *         Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n *  @param  {Function}  callback  The callback to invoke with every note\n *  @param  {Array}    events  The sequence\n *  @param  {Time} subdivision  The subdivision between which events are placed.\n *  @extends {Tone.Part}\n *  @example\n * var seq = new Tone.Sequence(function(time, note){\n * \tconsole.log(note);\n * //straight quater notes\n * }, [\"C4\", \"E4\", \"G4\", \"A4\"], \"4n\");\n *  @example\n * var seq = new Tone.Sequence(function(time, note){\n * \tconsole.log(note);\n * //subdivisions are given as subarrays\n * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]);\n */\nTone.Sequence = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"events\", \"subdivision\"], Tone.Sequence);\n\n\t//remove the events\n\tvar events = options.events;\n\tdelete options.events;\n\n\tTone.Part.call(this, options);\n\n\t/**\n\t *  The subdivison of each note\n\t *  @type  {Ticks}\n\t *  @private\n\t */\n\tthis._subdivision = this.toTicks(options.subdivision);\n\n\t//if no time was passed in, the loop end is the end of the cycle\n\tif (Tone.isUndef(options.loopEnd) && Tone.isDefined(events)){\n\t\tthis._loopEnd = (events.length * this._subdivision);\n\t}\n\t//defaults to looping\n\tthis._loop = true;\n\n\t//add all of the events\n\tif (Tone.isDefined(events)){\n\t\tfor (var i = 0; i < events.length; i++){\n\t\t\tthis.add(i, events[i]);\n\t\t}\n\t}\n};\n\nTone.extend(Tone.Sequence, Tone.Part);\n\n/**\n *  The default values.\n *  @type  {Object}\n */\nTone.Sequence.defaults = {\n\t\"subdivision\" : \"4n\",\n};\n\n/**\n *  The subdivision of the sequence. This can only be\n *  set in the constructor. The subdivision is the\n *  interval between successive steps.\n *  @type {Time}\n *  @memberOf Tone.Sequence#\n *  @name subdivision\n *  @readOnly\n */\nObject.defineProperty(Tone.Sequence.prototype, \"subdivision\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._subdivision).toSeconds();\n\t}\n});\n\n/**\n *  Get/Set an index of the sequence. If the index contains a subarray,\n *  a Tone.Sequence representing that sub-array will be returned.\n *  @example\n * var sequence = new Tone.Sequence(playNote, [\"E4\", \"C4\", \"F#4\", [\"A4\", \"Bb3\"]])\n * sequence.at(0)// => returns \"E4\"\n * //set a value\n * sequence.at(0, \"G3\");\n * //get a nested sequence\n * sequence.at(3).at(1)// => returns \"Bb3\"\n * @param {Positive} index The index to get or set\n * @param {*} value Optionally pass in the value to set at the given index.\n */\nTone.Sequence.prototype.at = function(index, value){\n\t//if the value is an array,\n\tif (Tone.isArray(value)){\n\t\t//remove the current event at that index\n\t\tthis.remove(index);\n\t}\n\t//call the parent's method\n\treturn Tone.Part.prototype.at.call(this, this._indexTime(index), value);\n};\n\n/**\n *  Add an event at an index, if there's already something\n *  at that index, overwrite it. If `value` is an array,\n *  it will be parsed as a subsequence.\n *  @param {Number} index The index to add the event to\n *  @param {*} value The value to add at that index\n *  @returns {Tone.Sequence} this\n */\nTone.Sequence.prototype.add = function(index, value){\n\tif (value === null){\n\t\treturn this;\n\t}\n\tif (Tone.isArray(value)){\n\t\t//make a subsequence and add that to the sequence\n\t\tvar subSubdivision = Math.round(this._subdivision / value.length);\n\t\tvalue = new Tone.Sequence(this._tick.bind(this), value, Tone.Ticks(subSubdivision));\n\t}\n\tTone.Part.prototype.add.call(this, this._indexTime(index), value);\n\treturn this;\n};\n\n/**\n *  Remove a value from the sequence by index\n *  @param {Number} index The index of the event to remove\n *  @returns {Tone.Sequence} this\n */\nTone.Sequence.prototype.remove = function(index, value){\n\tTone.Part.prototype.remove.call(this, this._indexTime(index), value);\n\treturn this;\n};\n\n/**\n *  Get the time of the index given the Sequence's subdivision\n *  @param  {Number}  index\n *  @return  {Time}  The time of that index\n *  @private\n */\nTone.Sequence.prototype._indexTime = function(index){\n\tif (index instanceof Tone.TransportTime){\n\t\treturn index;\n\t} else {\n\t\treturn Tone.Ticks(index * this._subdivision + this.startOffset).toSeconds();\n\t}\n};\n\n/**\n *  Clean up.\n *  @return {Tone.Sequence} this\n */\nTone.Sequence.prototype.dispose = function(){\n\tTone.Part.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.Sequence;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Signal\";\nimport \"../signal/WaveShaper\";\nimport \"../core/Gain\";\n\n/**\n *  @class Tone.PulseOscillator is a pulse oscillator with control over pulse width,\n *         also known as the duty cycle. At 50% duty cycle (width = 0.5) the wave is\n *         a square and only odd-numbered harmonics are present. At all other widths\n *         even-numbered harmonics are present. Read more\n *         [here](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {Frequency} [frequency] The frequency of the oscillator\n *  @param {NormalRange} [width] The width of the pulse\n *  @example\n * var pulse = new Tone.PulseOscillator(\"E5\", 0.4).toMaster().start();\n */\nTone.PulseOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"width\"], Tone.Oscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The width of the pulse.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\n\t/**\n\t *  gate the width amount\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._widthGate = new Tone.Gain(0);\n\n\t/**\n\t *  the sawtooth oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._sawtooth = new Tone.Oscillator({\n\t\tfrequency : options.frequency,\n\t\tdetune : options.detune,\n\t\ttype : \"sawtooth\",\n\t\tphase : options.phase\n\t});\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._sawtooth.frequency;\n\n\t/**\n\t *  The detune in cents.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._sawtooth.detune;\n\n\t/**\n\t *  Threshold the signal to turn it into a square\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._thresh = new Tone.WaveShaper(function(val){\n\t\tif (val < 0){\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t});\n\n\t//connections\n\tthis._sawtooth.chain(this._thresh, this.output);\n\tthis.width.chain(this._widthGate, this._thresh);\n\tthis._readOnly([\"width\", \"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.PulseOscillator, Tone.Source);\n\n/**\n *  The default parameters.\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.PulseOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"width\" : 0.2,\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} time\n *  @private\n */\nTone.PulseOscillator.prototype._start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._sawtooth.start(time);\n\tthis._widthGate.gain.setValueAtTime(1, time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time\n *  @private\n */\nTone.PulseOscillator.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._sawtooth.stop(time);\n\t//the width is still connected to the output.\n\t//that needs to be stopped also\n\tthis._widthGate.gain.setValueAtTime(0, time);\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.PulseOscillator.prototype.restart = function(time){\n\tthis._sawtooth.restart(time);\n\tthis._widthGate.gain.cancelScheduledValues(time);\n\tthis._widthGate.gain.setValueAtTime(1, time);\n};\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.PulseOscillator#\n * @type {Degrees}\n * @name phase\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._sawtooth.phase;\n\t},\n\tset : function(phase){\n\t\tthis._sawtooth.phase = phase;\n\t}\n});\n\n/**\n * The type of the oscillator. Always returns \"pulse\".\n * @readOnly\n * @memberOf Tone.PulseOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn \"pulse\";\n\t}\n});\n\n/**\n * The baseType of the oscillator. Always returns \"pulse\".\n * @readOnly\n * @memberOf Tone.PulseOscillator#\n * @type {string}\n * @name baseType\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn \"pulse\";\n\t}\n});\n\n/**\n * The partials of the waveform. Cannot set partials for this waveform type\n * @memberOf Tone.PulseOscillator#\n * @type {Array}\n * @name partials\n * @private\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn [];\n\t}\n});\n\n/**\n *  Clean up method.\n *  @return {Tone.PulseOscillator} this\n */\nTone.PulseOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._sawtooth.dispose();\n\tthis._sawtooth = null;\n\tthis._writable([\"width\", \"frequency\", \"detune\"]);\n\tthis.width.dispose();\n\tthis.width = null;\n\tthis._widthGate.dispose();\n\tthis._widthGate = null;\n\tthis._thresh.dispose();\n\tthis._thresh = null;\n\tthis.frequency = null;\n\tthis.detune = null;\n\treturn this;\n};\n\nexport default Tone.PulseOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/PulseOscillator\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\n\n/**\n *  @class Tone.PWMOscillator modulates the width of a Tone.PulseOscillator\n *         at the modulationFrequency. This has the effect of continuously\n *         changing the timbre of the oscillator by altering the harmonics\n *         generated.\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The starting frequency of the oscillator.\n *  @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse.\n *  @example\n *  var pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toMaster().start();\n */\nTone.PWMOscillator = function(){\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"modulationFrequency\"], Tone.PWMOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  the pulse oscillator\n\t *  @type {Tone.PulseOscillator}\n\t *  @private\n\t */\n\tthis._pulse = new Tone.PulseOscillator(options.modulationFrequency);\n\t//change the pulse oscillator type\n\tthis._pulse._sawtooth.type = \"sine\";\n\n\t/**\n\t *  the modulator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Oscillator({\n\t\t\"frequency\" : options.frequency,\n\t\t\"detune\" : options.detune,\n\t\t\"phase\" : options.phase\n\t});\n\n\t/**\n\t *  Scale the oscillator so it doesn't go silent\n\t *  at the extreme values.\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = new Tone.Multiply(2);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._modulator.frequency;\n\n\t/**\n\t *  The detune of the oscillator.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._modulator.detune;\n\n\t/**\n\t *  The modulation rate of the oscillator.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.modulationFrequency = this._pulse.frequency;\n\n\t//connections\n\tthis._modulator.chain(this._scale, this._pulse.width);\n\tthis._pulse.connect(this.output);\n\tthis._readOnly([\"modulationFrequency\", \"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.PWMOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.PWMOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"modulationFrequency\" : 0.4,\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.PWMOscillator.prototype._start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._modulator.start(time);\n\tthis._pulse.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.PWMOscillator.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._modulator.stop(time);\n\tthis._pulse.stop(time);\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.PWMOscillator.prototype.restart = function(time){\n\tthis._modulator.restart(time);\n\tthis._pulse.restart(time);\n};\n\n/**\n * The type of the oscillator. Always returns \"pwm\".\n * @readOnly\n * @memberOf Tone.PWMOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn \"pwm\";\n\t}\n});\n\n/**\n * The baseType of the oscillator. Always returns \"pwm\".\n * @readOnly\n * @memberOf Tone.PWMOscillator#\n * @type {string}\n * @name baseType\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn \"pwm\";\n\t}\n});\n\n/**\n * The partials of the waveform. Cannot set partials for this waveform type\n * @memberOf Tone.PWMOscillator#\n * @type {Array}\n * @name partials\n * @private\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn [];\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.PWMOscillator#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._modulator.phase;\n\t},\n\tset : function(phase){\n\t\tthis._modulator.phase = phase;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.PWMOscillator} this\n */\nTone.PWMOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._pulse.dispose();\n\tthis._pulse = null;\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis._writable([\"modulationFrequency\", \"frequency\", \"detune\"]);\n\tthis.frequency = null;\n\tthis.detune = null;\n\tthis.modulationFrequency = null;\n\treturn this;\n};\n\nexport default Tone.PWMOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\n\n/**\n *  @class Tone.FMOscillator\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The starting frequency of the oscillator.\n *  @param {String} type The type of the carrier oscillator.\n *  @param {String} modulationType The type of the modulator oscillator.\n *  @example\n * //a sine oscillator frequency-modulated by a square wave\n * var fmOsc = new Tone.FMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n */\nTone.FMOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"modulationType\"], Tone.FMOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The carrier oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Oscillator(options.frequency, options.type);\n\n\t/**\n\t *  The oscillator's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._carrier.detune;\n\tthis.detune.value = options.detune;\n\n\t/**\n\t *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t *  modulating signal (ma) -- as in ma/mf.\n\t *\t@type {Positive}\n\t *\t@signal\n\t */\n\tthis.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\tthis.modulationIndex.units = Tone.Type.Positive;\n\n\t/**\n\t *  The modulating oscillator\n\t *  @type  {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\n\t/**\n\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t *  A harmonicity of 1 gives both oscillators the same frequency.\n\t *  Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch the modulator an octave below carrier\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain(0);\n\n\t//connections\n\tthis.frequency.connect(this._carrier.frequency);\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\tthis._modulator.connect(this._modulationNode.gain);\n\tthis._modulationNode.connect(this._carrier.frequency);\n\tthis._carrier.connect(this.output);\n\tthis.detune.connect(this._modulator.detune);\n\n\tthis.phase = options.phase;\n\n\tthis._readOnly([\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n};\n\nTone.extend(Tone.FMOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.FMOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"type\" : \"sine\",\n\t\"modulationIndex\" : 2,\n\t\"modulationType\" : \"square\",\n\t\"harmonicity\" : 1\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.FMOscillator.prototype._start = function(time){\n\tthis._modulator.start(time);\n\tthis._carrier.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.FMOscillator.prototype._stop = function(time){\n\tthis._modulator.stop(time);\n\tthis._carrier.stop(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.FMOscillator.prototype.restart = function(time){\n\tthis._modulator.restart(time);\n\tthis._carrier.restart(time);\n};\n\n/**\n * The type of the carrier oscillator\n * @memberOf Tone.FMOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._carrier.type;\n\t},\n\tset : function(type){\n\t\tthis._carrier.type = type;\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.FMOscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._carrier.baseType;\n\t},\n\tset : function(baseType){\n\t\tthis._carrier.baseType = baseType;\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @memberOf Tone.FMOscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._carrier.partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n});\n\n/**\n * The type of the modulator oscillator\n * @memberOf Tone.FMOscillator#\n * @type {String}\n * @name modulationType\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"modulationType\", {\n\tget : function(){\n\t\treturn this._modulator.type;\n\t},\n\tset : function(type){\n\t\tthis._modulator.type = type;\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.FMOscillator#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._carrier.phase;\n\t},\n\tset : function(phase){\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n});\n\n/**\n * The partials of the carrier waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.FMOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._carrier.partials;\n\t},\n\tset : function(partials){\n\t\tthis._carrier.partials = partials;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.FMOscillator} this\n */\nTone.FMOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis.modulationIndex.dispose();\n\tthis.modulationIndex = null;\n\treturn this;\n};\n\nexport default Tone.FMOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\nimport \"../signal/AudioToGain\";\n\n/**\n *  @class Tone.AMOscillator\n *\n *  @extends {Tone.Oscillator}\n *  @constructor\n *  @param {Frequency} frequency The starting frequency of the oscillator.\n *  @param {String} type The type of the carrier oscillator.\n *  @param {String} modulationType The type of the modulator oscillator.\n *  @example\n * //a sine oscillator frequency-modulated by a square wave\n * var fmOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n */\nTone.AMOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"modulationType\"], Tone.AMOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The carrier oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Oscillator(options.frequency, options.type);\n\n\t/**\n\t *  The oscillator's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._carrier.frequency;\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._carrier.detune;\n\tthis.detune.value = options.detune;\n\n\t/**\n\t *  The modulating oscillator\n\t *  @type  {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\n\t/**\n\t *  convert the -1,1 output to 0,1\n\t *  @type {Tone.AudioToGain}\n\t *  @private\n\t */\n\tthis._modulationScale = new Tone.AudioToGain();\n\n\t/**\n\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t *  A harmonicity of 1 gives both oscillators the same frequency.\n\t *  Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch the modulator an octave below carrier\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain(0);\n\n\t//connections\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.detune.connect(this._modulator.detune);\n\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\tthis._carrier.chain(this._modulationNode, this.output);\n\n\tthis.phase = options.phase;\n\n\tthis._readOnly([\"frequency\", \"detune\", \"harmonicity\"]);\n};\n\nTone.extend(Tone.AMOscillator, Tone.Oscillator);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.AMOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"type\" : \"sine\",\n\t\"modulationType\" : \"square\",\n\t\"harmonicity\" : 1\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.AMOscillator.prototype._start = function(time){\n\tthis._modulator.start(time);\n\tthis._carrier.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.AMOscillator.prototype._stop = function(time){\n\tthis._modulator.stop(time);\n\tthis._carrier.stop(time);\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.AMOscillator.prototype.restart = function(time){\n\tthis._modulator.restart(time);\n\tthis._carrier.restart(time);\n};\n\n/**\n * The type of the carrier oscillator\n * @memberOf Tone.AMOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._carrier.type;\n\t},\n\tset : function(type){\n\t\tthis._carrier.type = type;\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.AMOscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._carrier.baseType;\n\t},\n\tset : function(baseType){\n\t\tthis._carrier.baseType = baseType;\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @memberOf Tone.AMOscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._carrier.partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n});\n\n/**\n * The type of the modulator oscillator\n * @memberOf Tone.AMOscillator#\n * @type {string}\n * @name modulationType\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"modulationType\", {\n\tget : function(){\n\t\treturn this._modulator.type;\n\t},\n\tset : function(type){\n\t\tthis._modulator.type = type;\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.AMOscillator#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._carrier.phase;\n\t},\n\tset : function(phase){\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n});\n\n/**\n * The partials of the carrier waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.AMOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._carrier.partials;\n\t},\n\tset : function(partials){\n\t\tthis._carrier.partials = partials;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.AMOscillator} this\n */\nTone.AMOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"detune\", \"harmonicity\"]);\n\tthis.frequency = null;\n\tthis.detune = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis._modulationScale.dispose();\n\tthis._modulationScale = null;\n\treturn this;\n};\n\nexport default Tone.AMOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\n\n/**\n *  @class Tone.FatOscillator is an array of oscillators with detune spread between the oscillators\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The oscillator's frequency.\n *  @param {String} type The type of the oscillator.\n *  @param {Cents} spread The detune spread between the oscillators.\n *  @example\n * var fatOsc = new Tone.FatOscillator(\"Ab3\", \"sine\", 40).toMaster().start();\n */\nTone.FatOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"spread\"], Tone.FatOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The oscillator's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  The array of oscillators\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._oscillators = [];\n\n\t/**\n\t *  The total spread of the oscillators\n\t *  @type  {Cents}\n\t *  @private\n\t */\n\tthis._spread = options.spread;\n\n\t/**\n\t *  The type of the oscillator\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  The phase of the oscillators\n\t *  @type {Degrees}\n\t *  @private\n\t */\n\tthis._phase = options.phase;\n\n\t/**\n\t *  The partials array\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._partials = options.partials;\n\n\t/**\n\t *  The number of partials to use\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._partialCount = options.partialCount;\n\n\t//set the count initially\n\tthis.count = options.count;\n\tthis._readOnly([\"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.FatOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.FatOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"spread\" : 20,\n\t\"count\" : 3,\n\t\"type\" : \"sawtooth\",\n\t\"partials\" : [],\n\t\"partialCount\" : 0\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.FatOscillator.prototype._start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._forEach(function(osc){\n\t\tosc.start(time);\n\t});\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.FatOscillator.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._forEach(function(osc){\n\t\tosc.stop(time);\n\t});\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.FatOscillator.prototype.restart = function(time){\n\ttime = this.toSeconds(time);\n\tthis._forEach(function(osc){\n\t\tosc.restart(time);\n\t});\n};\n\n/**\n *  Iterate over all of the oscillators\n *  @param  {Function}  iterator  The iterator function\n *  @private\n */\nTone.FatOscillator.prototype._forEach = function(iterator){\n\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\titerator.call(this, this._oscillators[i], i);\n\t}\n};\n\n/**\n * The type of the carrier oscillator\n * @memberOf Tone.FatOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tthis._type = type;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.type = type;\n\t\t});\n\t}\n});\n\n/**\n * The detune spread between the oscillators. If \"count\" is\n * set to 3 oscillators and the \"spread\" is set to 40,\n * the three oscillators would be detuned like this: [-20, 0, 20]\n * for a total detune spread of 40 cents.\n * @memberOf Tone.FatOscillator#\n * @type {Cents}\n * @name spread\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"spread\", {\n\tget : function(){\n\t\treturn this._spread;\n\t},\n\tset : function(spread){\n\t\tthis._spread = spread;\n\t\tif (this._oscillators.length > 1){\n\t\t\tvar start = -spread/2;\n\t\t\tvar step = spread / (this._oscillators.length - 1);\n\t\t\tthis._forEach(function(osc, i){\n\t\t\t\tosc.detune.value = start + step * i;\n\t\t\t});\n\t\t}\n\t}\n});\n\n/**\n * The number of detuned oscillators\n * @memberOf Tone.FatOscillator#\n * @type {Number}\n * @name count\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"count\", {\n\tget : function(){\n\t\treturn this._oscillators.length;\n\t},\n\tset : function(count){\n\t\tcount = Math.max(count, 1);\n\t\tif (this._oscillators.length !== count){\n\t\t\t//dispose the previous oscillators\n\t\t\tthis._forEach(function(osc){\n\t\t\t\tosc.dispose();\n\t\t\t});\n\t\t\tthis._oscillators = [];\n\t\t\tfor (var i = 0; i < count; i++){\n\t\t\t\tvar osc = new Tone.Oscillator();\n\t\t\t\tif (this.type === Tone.Oscillator.Type.Custom){\n\t\t\t\t\tosc.partials = this._partials;\n\t\t\t\t} else {\n\t\t\t\t\tosc.type = this._type;\n\t\t\t\t}\n\t\t\t\tosc.partialCount = this._partialCount;\n\t\t\t\tosc.phase = this._phase + (i / count) * 360;\n\t\t\t\tosc.volume.value = -6 - count*1.1;\n\t\t\t\tthis.frequency.connect(osc.frequency);\n\t\t\t\tthis.detune.connect(osc.detune);\n\t\t\t\tosc.connect(this.output);\n\t\t\t\tthis._oscillators[i] = osc;\n\t\t\t}\n\t\t\t//set the spread\n\t\t\tthis.spread = this._spread;\n\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\tthis._forEach(function(osc){\n\t\t\t\t\tosc.start();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.FatOscillator#\n * @type {Number}\n * @name phase\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._phase;\n\t},\n\tset : function(phase){\n\t\tthis._phase = phase;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.phase = phase;\n\t\t});\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.FatOscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._oscillators[0].baseType;\n\t},\n\tset : function(baseType){\n\t\tthis._forEach(function(osc){\n\t\t\tosc.baseType = baseType;\n\t\t});\n\t\tthis._type = this._oscillators[0].type;\n\t}\n});\n\n/**\n * The partials of the carrier waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.FatOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._oscillators[0].partials;\n\t},\n\tset : function(partials){\n\t\tthis._partials = partials;\n\t\tthis._type = Tone.Oscillator.Type.Custom;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.partials = partials;\n\t\t});\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @memberOf Tone.FatOscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._oscillators[0].partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._partialCount = partialCount;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.partialCount = partialCount;\n\t\t});\n\t\tthis._type = this._oscillators[0].type;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.FatOscillator} this\n */\nTone.FatOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"detune\"]);\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis._forEach(function(osc){\n\t\tosc.dispose();\n\t});\n\tthis._oscillators = null;\n\tthis._partials = null;\n\treturn this;\n};\n\nexport default Tone.FatOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../source/PulseOscillator\";\nimport \"../source/PWMOscillator\";\nimport \"../source/FMOscillator\";\nimport \"../source/AMOscillator\";\nimport \"../source/FatOscillator\";\n\n/**\n *  @class Tone.OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n *         Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n *         into one class. The oscillator class can be changed by setting the `type`.\n *         `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n *         any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n *         will use the FMOscillator, AMOscillator or FatOscillator respectively.\n *         For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n *         to a FatOscillator of type \"sawtooth\".\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The initial frequency of the oscillator.\n *  @param {String} type The type of the oscillator.\n *  @example\n *  var omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n */\nTone.OmniOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.OmniOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  the type of the oscillator source\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._sourceType = undefined;\n\n\t/**\n\t *  the oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._oscillator = null;\n\n\t//set the oscillator\n\tthis.type = options.type;\n\tthis._readOnly([\"frequency\", \"detune\"]);\n\t//set the options\n\tthis.set(options);\n};\n\nTone.extend(Tone.OmniOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.OmniOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"type\" : \"sine\",\n\t\"phase\" : 0\n};\n\n/**\n *  @enum {String}\n *  @private\n */\nvar OmniOscType = {\n\tPulse : \"PulseOscillator\",\n\tPWM : \"PWMOscillator\",\n\tOsc : \"Oscillator\",\n\tFM : \"FMOscillator\",\n\tAM : \"AMOscillator\",\n\tFat : \"FatOscillator\"\n};\n\n/**\n *  start the oscillator\n *  @param {Time} [time=now] the time to start the oscillator\n *  @private\n */\nTone.OmniOscillator.prototype._start = function(time){\n\tthis._oscillator.start(time);\n};\n\n/**\n *  start the oscillator\n *  @param {Time} [time=now] the time to start the oscillator\n *  @private\n */\nTone.OmniOscillator.prototype._stop = function(time){\n\tthis._oscillator.stop(time);\n};\n\nTone.OmniOscillator.prototype.restart = function(time){\n\tthis._oscillator.restart(time);\n};\n\n/**\n * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n * when it's not.\n *\n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name type\n * @example\n * omniOsc.type = \"pwm\";\n * //modulationFrequency is parameter which is available\n * //only when the type is \"pwm\".\n * omniOsc.modulationFrequency.value = 0.5;\n * @example\n * //an square wave frequency modulated by a sawtooth\n * omniOsc.type = \"fmsquare\";\n * omniOsc.modulationType = \"sawtooth\";\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"type\", {\n\tget : function(){\n\t\tvar prefix = \"\";\n\t\tif (this._sourceType === OmniOscType.FM){\n\t\t\tprefix = \"fm\";\n\t\t} else if (this._sourceType === OmniOscType.AM){\n\t\t\tprefix = \"am\";\n\t\t} else if (this._sourceType === OmniOscType.Fat){\n\t\t\tprefix = \"fat\";\n\t\t}\n\t\treturn prefix + this._oscillator.type;\n\t},\n\tset : function(type){\n\t\tif (type.substr(0, 2) === \"fm\"){\n\t\t\tthis._createNewOscillator(OmniOscType.FM);\n\t\t\tthis._oscillator.type = type.substr(2);\n\t\t} else if (type.substr(0, 2) === \"am\"){\n\t\t\tthis._createNewOscillator(OmniOscType.AM);\n\t\t\tthis._oscillator.type = type.substr(2);\n\t\t} else if (type.substr(0, 3) === \"fat\"){\n\t\t\tthis._createNewOscillator(OmniOscType.Fat);\n\t\t\tthis._oscillator.type = type.substr(3);\n\t\t} else if (type === \"pwm\"){\n\t\t\tthis._createNewOscillator(OmniOscType.PWM);\n\t\t} else if (type === \"pulse\"){\n\t\t\tthis._createNewOscillator(OmniOscType.Pulse);\n\t\t} else {\n\t\t\tthis._createNewOscillator(OmniOscType.Osc);\n\t\t\tthis._oscillator.type = type;\n\t\t}\n\t}\n});\n\n/**\n * The partials of the waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * This is not available on \"pwm\" and \"pulse\" oscillator types.\n * @memberOf Tone.OmniOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._oscillator.partials;\n\t},\n\tset : function(partials){\n\t\tthis._oscillator.partials = partials;\n\t}\n});\n\n/**\n * The partial count of the oscillator. This is not available on \"pwm\" and \"pulse\" oscillator types.\n * @memberOf Tone.OmniOscillator#\n * @type {Number}\n * @name partialCount\n * @example\n * //set the maximum number of partials\n * osc.partialCount = 0;\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._oscillator.partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._oscillator.partialCount = partialCount;\n\t}\n});\n\n/**\n *  Set a member/attribute of the oscillator.\n *  @param {Object|String} params\n *  @param {number=} value\n *  @param {Time=} rampTime\n *  @returns {Tone.OmniOscillator} this\n */\nTone.OmniOscillator.prototype.set = function(params, value){\n\t//make sure the type is set first\n\tif (params === \"type\"){\n\t\tthis.type = value;\n\t} else if (Tone.isObject(params) && params.hasOwnProperty(\"type\")){\n\t\tthis.type = params.type;\n\t}\n\t//then set the rest\n\tTone.prototype.set.apply(this, arguments);\n\treturn this;\n};\n\n/**\n *  Get the object's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. Pass in a single attribute to retrieve or an array\n *  of attributes. The attribute strings can also include a \".\"\n *  to access deeper properties.\n *  @param {Array=|string|undefined} params the parameters to get, otherwise will return\n *  \t\t\t\t\t                  all available.\n *  @returns {Object}\n */\nTone.OmniOscillator.prototype.get = function(params){\n\tvar options = this._oscillator.get(params);\n\toptions.type = this.type;\n\treturn options;\n};\n\n/**\n *  connect the oscillator to the frequency and detune signals\n *  @private\n */\nTone.OmniOscillator.prototype._createNewOscillator = function(oscType){\n\tif (oscType !== this._sourceType){\n\t\tthis._sourceType = oscType;\n\t\tvar OscillatorConstructor = Tone[oscType];\n\t\t//short delay to avoid clicks on the change\n\t\tvar now = this.now();\n\t\tif (this._oscillator !== null){\n\t\t\tvar oldOsc = this._oscillator;\n\t\t\toldOsc.stop(now);\n\t\t\t//dispose the old one\n\t\t\tthis.context.setTimeout(function(){\n\t\t\t\toldOsc.dispose();\n\t\t\t\toldOsc = null;\n\t\t\t}, this.blockTime);\n\t\t}\n\t\tthis._oscillator = new OscillatorConstructor();\n\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\tthis.detune.connect(this._oscillator.detune);\n\t\tthis._oscillator.connect(this.output);\n\t\tif (this.state === Tone.State.Started){\n\t\t\tthis._oscillator.start(now);\n\t\t}\n\t}\n};\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.OmniOscillator#\n * @type {Degrees}\n * @name phase\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._oscillator.phase;\n\t},\n\tset : function(phase){\n\t\tthis._oscillator.phase = phase;\n\t}\n});\n\n/**\n * The source type names\n * @private\n * @type {Object}\n */\nvar SourceTypeNames = {\n\tPulseOscillator : \"pulse\",\n\tPWMOscillator : \"pwm\",\n\tOscillator : \"oscillator\",\n\tFMOscillator : \"fm\",\n\tAMOscillator : \"am\",\n\tFatOscillator : \"fat\"\n};\n\n/**\n * The source type of the oscillator. \n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name sourceType\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n * omniOsc.sourceType // 'fm'\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"sourceType\", {\n\tget : function(){\n\t\treturn SourceTypeNames[this._sourceType];\n\t},\n\tset : function(sType){\n\t\t//the basetype defaults to sine\n\t\tvar baseType = \"sine\";\n\t\tif (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\"){\n\t\t\tbaseType = this._oscillator.type;\n\t\t} \n\n\t\t//set the type\n\t\tif (sType === SourceTypeNames.FMOscillator){\n\t\t\tthis.type = \"fm\" + baseType;\n\t\t} else if (sType === SourceTypeNames.AMOscillator){\n\t\t\tthis.type = \"am\" + baseType;\n\t\t} else if (sType === SourceTypeNames.FatOscillator){\n\t\t\tthis.type = \"fat\" + baseType;\n\t\t} else if (sType === SourceTypeNames.Oscillator){\n\t\t\tthis.type = baseType;\n\t\t} else if (sType === SourceTypeNames.PulseOscillator){\n\t\t\tthis.type = \"pulse\";\n\t\t} else if (sType === SourceTypeNames.PWMOscillator){\n\t\t\tthis.type = \"pwm\";\n\t\t}\n\t}\n});\n\n/**\n * The base type of the oscillator.\n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name baseType\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n * omniOsc.sourceType // 'fm'\n * omniOsc.baseType //'square'\n * omniOsc.partialCount //4\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._oscillator.baseType;\n\t},\n\tset : function(baseType){\n\t\tif (this.sourceType !== SourceTypeNames.PulseOscillator && this.sourceType !== SourceTypeNames.PWMOscillator){\n\t\t\tthis._oscillator.baseType = baseType;\n\t\t}\n\t}\n});\n\n/**\n * The width of the oscillator (only if the oscillator is set to \"pulse\")\n * @memberOf Tone.OmniOscillator#\n * @type {NormalRange}\n * @signal\n * @name width\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n * //can access the width attribute only if type === \"pulse\"\n * omniOsc.width.value = 0.2;\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"width\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.Pulse){\n\t\t\treturn this._oscillator.width;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n * The number of detuned oscillators\n * @memberOf Tone.OmniOscillator#\n * @type {Number}\n * @name count\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"count\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\treturn this._oscillator.count;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t},\n\tset : function(count){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\tthis._oscillator.count = count;\n\t\t}\n\t}\n});\n\n/**\n * The detune spread between the oscillators. If \"count\" is\n * set to 3 oscillators and the \"spread\" is set to 40,\n * the three oscillators would be detuned like this: [-20, 0, 20]\n * for a total detune spread of 40 cents. See Tone.FatOscillator\n * for more info.\n * @memberOf Tone.OmniOscillator#\n * @type {Cents}\n * @name spread\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"spread\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\treturn this._oscillator.spread;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t},\n\tset : function(spread){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\tthis._oscillator.spread = spread;\n\t\t}\n\t}\n});\n\n/**\n * The type of the modulator oscillator. Only if the oscillator\n * is set to \"am\" or \"fm\" types. see. Tone.AMOscillator or Tone.FMOscillator\n * for more info.\n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name modulationType\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationType\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\treturn this._oscillator.modulationType;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t},\n\tset : function(mType){\n\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\tthis._oscillator.modulationType = mType;\n\t\t}\n\t}\n});\n\n/**\n * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n * ratio of the frequency of the modulating signal (mf) to the amplitude of the\n * modulating signal (ma) -- as in ma/mf.\n * See Tone.FMOscillator for more info.\n * @type {Positive}\n * @signal\n * @name modulationIndex\n * @memberof Tone.OmniOscillator#\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationIndex\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.FM){\n\t\t\treturn this._oscillator.modulationIndex;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n *  A harmonicity of 1 gives both oscillators the same frequency.\n *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator\n *  for more info.\n *  @memberOf Tone.OmniOscillator#\n *  @signal\n *  @type {Positive}\n *  @name harmonicity\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"harmonicity\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\treturn this._oscillator.harmonicity;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n * The modulationFrequency Signal of the oscillator\n * (only if the oscillator type is set to pwm). See\n * Tone.PWMOscillator for more info.\n * @memberOf Tone.OmniOscillator#\n * @type {Frequency}\n * @signal\n * @name modulationFrequency\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"pwm\");\n * //can access the modulationFrequency attribute only if type === \"pwm\"\n * omniOsc.modulationFrequency.value = 0.2;\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationFrequency\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.PWM){\n\t\t\treturn this._oscillator.modulationFrequency;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.OmniOscillator} this\n */\nTone.OmniOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"detune\"]);\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis._oscillator.dispose();\n\tthis._oscillator = null;\n\tthis._sourceType = null;\n\treturn this;\n};\n\nexport default Tone.OmniOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\nimport \"../core/Master\";\n\n/**\n *  @class  Base-class for all instruments\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n */\nTone.Instrument = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.Instrument.defaults);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The output and volume triming node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * source.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\t/**\n\t * Keep track of all events scheduled to the transport\n\t * when the instrument is 'synced'\n\t * @type {Array<Number>}\n\t * @private\n\t */\n\tthis._scheduledEvents = [];\n};\n\nTone.extend(Tone.Instrument, Tone.AudioNode);\n\n/**\n *  the default attributes\n *  @type {object}\n */\nTone.Instrument.defaults = {\n\t/** the volume of the output in decibels */\n\t\"volume\" : 0\n};\n\n/**\n *  @abstract\n *  @param {string|number} note the note to trigger\n *  @param {Time} [time=now] the time to trigger the ntoe\n *  @param {number} [velocity=1] the velocity to trigger the note\n */\nTone.Instrument.prototype.triggerAttack = Tone.noOp;\n\n/**\n *  @abstract\n *  @param {Time} [time=now] when to trigger the release\n */\nTone.Instrument.prototype.triggerRelease = Tone.noOp;\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * instrument.sync()\n * //schedule 3 notes when the transport first starts\n * instrument.triggerAttackRelease('C4', '8n', 0)\n * instrument.triggerAttackRelease('E4', '8n', '8n')\n * instrument.triggerAttackRelease('G4', '8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.Instrument.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 1);\n\tthis._syncMethod(\"triggerRelease\", 0);\n\treturn this;\n};\n\n/**\n * Wrap the given method so that it can be synchronized\n * @param {String} method Which method to wrap and sync\n * @param  {Number} timePosition What position the time argument appears in\n * @private\n */\nTone.Instrument.prototype._syncMethod = function(method, timePosition){\n\tvar originalMethod = this[\"_original_\"+method] = this[method];\n\tthis[method] = function(){\n\t\tvar args = Array.prototype.slice.call(arguments);\n\t\tvar time = args[timePosition];\n\t\tvar id = Tone.Transport.schedule(function(t){\n\t\t\targs[timePosition] = t;\n\t\t\toriginalMethod.apply(this, args);\n\t\t}.bind(this), time);\n\t\tthis._scheduledEvents.push(id);\n\t}.bind(this);\n};\n\n/**\n * Unsync the instrument from the Transport\n * @returns {Tone.Instrument} this\n */\nTone.Instrument.prototype.unsync = function(){\n\tthis._scheduledEvents.forEach(function(id){\n\t\tTone.Transport.clear(id);\n\t});\n\tthis._scheduledEvents = [];\n\tif (this._original_triggerAttack){\n\t\tthis.triggerAttack = this._original_triggerAttack;\n\t\tthis.triggerRelease = this._original_triggerRelease;\n\t}\n\treturn this;\n};\n\n/**\n *  Trigger the attack and then the release after the duration.\n *  @param  {Frequency} note     The note to trigger.\n *  @param  {Time} duration How long the note should be held for before\n *                          triggering the release. This value must be greater than 0.\n *  @param {Time} [time=now]  When the note should be triggered.\n *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n *  @returns {Tone.Instrument} this\n *  @example\n * //trigger \"C4\" for the duration of an 8th note\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n */\nTone.Instrument.prototype.triggerAttackRelease = function(note, duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tduration = this.toSeconds(duration);\n\tthis.triggerAttack(note, time, velocity);\n\tthis.triggerRelease(time + duration);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.Instrument} this\n */\nTone.Instrument.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis._writable([\"volume\"]);\n\tthis.volume = null;\n\tthis.unsync();\n\tthis._scheduledEvents = null;\n\treturn this;\n};\n\nexport default Tone.Instrument;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../signal/Signal\";\n\n/**\n *  @class  This is an abstract base class for other monophonic instruments to \n *          extend. IMPORTANT: It does not make any sound on its own and\n *          shouldn't be directly instantiated.\n *\n *  @constructor\n *  @abstract\n *  @extends {Tone.Instrument}\n */\nTone.Monophonic = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.Monophonic.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The glide time between notes. \n\t *  @type {Time}\n\t */\n\tthis.portamento = options.portamento;\n};\n\nTone.extend(Tone.Monophonic, Tone.Instrument);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Monophonic.defaults = {\n\t\"portamento\" : 0\n};\n\n/**\n *  Trigger the attack of the note optionally with a given velocity. \n *  \n *  \n *  @param  {Frequency} note     The note to trigger.\n *  @param  {Time} [time=now]     When the note should start.\n *  @param  {number} [velocity=1] velocity The velocity scaler \n *                                determines how \"loud\" the note \n *                                will be triggered.\n *  @returns {Tone.Monophonic} this\n *  @example\n * synth.triggerAttack(\"C4\");\n *  @example\n * //trigger the note a half second from now at half velocity\n * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n */\nTone.Monophonic.prototype.triggerAttack = function(note, time, velocity){\n\tthis.log(\"triggerAttack\", note, time, velocity);\n\ttime = this.toSeconds(time);\n\tthis._triggerEnvelopeAttack(time, velocity);\n\tthis.setNote(note, time);\n\treturn this;\n};\n\n/**\n *  Trigger the release portion of the envelope\n *  @param  {Time} [time=now] If no time is given, the release happens immediatly\n *  @returns {Tone.Monophonic} this\n *  @example\n * synth.triggerRelease();\n */\nTone.Monophonic.prototype.triggerRelease = function(time){\n\tthis.log(\"triggerRelease\", time);\n\ttime = this.toSeconds(time);\n\tthis._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  override this method with the actual method\n *  @abstract\n *  @private\n */\t\nTone.Monophonic.prototype._triggerEnvelopeAttack = function(){};\n\n/**\n *  override this method with the actual method\n *  @abstract\n *  @private\n */\t\nTone.Monophonic.prototype._triggerEnvelopeRelease = function(){};\n\n/**\n *  Get the level of the output at the given time. Measures\n *  the envelope(s) value at the time. \n *  @param {Time} time The time to query the envelope value\n *  @return {NormalRange} The output level between 0-1\n */\nTone.Monophonic.prototype.getLevelAtTime = function(time){\n\ttime = this.toSeconds(time);\n\treturn this.envelope.getValueAtTime(time);\n};\n\n/**\n *  Set the note at the given time. If no time is given, the note\n *  will set immediately. \n *  @param {Frequency} note The note to change to.\n *  @param  {Time} [time=now] The time when the note should be set. \n *  @returns {Tone.Monophonic} this\n * @example\n * //change to F#6 in one quarter note from now.\n * synth.setNote(\"F#6\", \"+4n\");\n * @example\n * //change to Bb4 right now\n * synth.setNote(\"Bb4\");\n */\nTone.Monophonic.prototype.setNote = function(note, time){\n\ttime = this.toSeconds(time);\n\tif (this.portamento > 0 && this.getLevelAtTime(time) > 0.05){\n\t\tvar portTime = this.toSeconds(this.portamento);\n\t\tthis.frequency.exponentialRampTo(note, portTime, time);\n\t} else {\n\t\tthis.frequency.setValueAtTime(note, time);\n\t}\n\treturn this;\n};\n\nexport default Tone.Monophonic;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../source/OmniOscillator\";\nimport \"../instrument/Monophonic\";\n\n/**\n *  @class  Tone.Synth is composed simply of a Tone.OmniOscillator\n *          routed through a Tone.AmplitudeEnvelope.\n *          <img src=\"https://docs.google.com/drawings/d/1-1_0YW2Z1J2EPI36P8fNCMcZG7N1w1GZluPs4og4evo/pub?w=1163&h=231\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var synth = new Tone.Synth().toMaster();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n */\nTone.Synth = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.Synth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.OmniOscillator}\n\t */\n\tthis.oscillator = new Tone.OmniOscillator(options.oscillator);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this.oscillator.frequency;\n\n\t/**\n\t *  The detune control.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this.oscillator.detune;\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t//connect the oscillators to the output\n\tthis.oscillator.chain(this.envelope, this.output);\n\tthis._readOnly([\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n};\n\nTone.extend(Tone.Synth, Tone.Monophonic);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.Synth.defaults = {\n\t\"oscillator\" : {\n\t\t\"type\" : \"triangle\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.005,\n\t\t\"decay\" : 0.1,\n\t\t\"sustain\" : 0.3,\n\t\t\"release\" : 1\n\t}\n};\n\n/**\n *  start the attack portion of the envelope\n *  @param {Time} [time=now] the time the attack should start\n *  @param {number} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.Synth} this\n *  @private\n */\nTone.Synth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\t//the envelopes\n\tthis.envelope.triggerAttack(time, velocity);\n\tthis.oscillator.start(time);\n\t//if there is no release portion, stop the oscillator\n\tif (this.envelope.sustain === 0){\n\t\tthis.oscillator.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n\t}\n\treturn this;\n};\n\n/**\n *  start the release portion of the envelope\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.Synth} this\n *  @private\n */\nTone.Synth.prototype._triggerEnvelopeRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis.oscillator.stop(time + this.toSeconds(this.envelope.release));\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.Synth} this\n */\nTone.Synth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n\tthis.oscillator.dispose();\n\tthis.oscillator = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\tthis.frequency = null;\n\tthis.detune = null;\n\treturn this;\n};\n\nexport default Tone.Synth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Synth\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../instrument/Monophonic\";\nimport \"../signal/AudioToGain\";\nimport \"../core/Gain\";\n\n/**\n *  @class  AMSynth uses the output of one Tone.Synth to modulate the\n *          amplitude of another Tone.Synth. The harmonicity (the ratio between\n *          the two signals) affects the timbre of the output signal greatly.\n *          Read more about Amplitude Modulation Synthesis on\n *          [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).\n *          <img src=\"https://docs.google.com/drawings/d/1TQu8Ed4iFr1YTLKpB3U1_hur-UwBrh5gdBXc8BxfGKw/pub?w=1009&h=457\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                            see defaults below\n *  @example\n * var synth = new Tone.AMSynth().toMaster();\n * synth.triggerAttackRelease(\"C4\", \"4n\");\n */\nTone.AMSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.AMSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The carrier voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Synth();\n\tthis._carrier.volume.value = -10;\n\n\t/**\n\t *  The carrier's oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.oscillator = this._carrier.oscillator.set(options.oscillator);\n\n\t/**\n\t *  The carrier's envelope\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = this._carrier.envelope.set(options.envelope);\n\n\t/**\n\t *  The modulator voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Synth();\n\tthis._modulator.volume.value = -10;\n\n\t/**\n\t *  The modulator's oscillator which is applied\n\t *  to the amplitude of the oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.modulation = this._modulator.oscillator.set(options.modulation);\n\n\t/**\n\t *  The modulator's envelope\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\n\t/**\n\t *  The frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune in cents\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch voice1 an octave below voice0\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  convert the -1,1 output to 0,1\n\t *  @type {Tone.AudioToGain}\n\t *  @private\n\t */\n\tthis._modulationScale = new Tone.AudioToGain();\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain();\n\n\t//control the two voices frequency\n\tthis.frequency.connect(this._carrier.frequency);\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.detune.fan(this._carrier.detune, this._modulator.detune);\n\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\tthis._carrier.chain(this._modulationNode, this.output);\n\tthis._readOnly([\"frequency\", \"harmonicity\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n};\n\nTone.extend(Tone.AMSynth, Tone.Monophonic);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.AMSynth.defaults = {\n\t\"harmonicity\" : 3,\n\t\"detune\" : 0,\n\t\"oscillator\" : {\n\t\t\"type\" : \"sine\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.01,\n\t\t\"decay\" : 0.01,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t},\n\t\"modulation\" : {\n\t\t\"type\" : \"square\"\n\t},\n\t\"modulationEnvelope\" : {\n\t\t\"attack\" : 0.5,\n\t\t\"decay\" : 0.0,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t}\n};\n\n/**\n *  trigger the attack portion of the note\n *\n *  @param  {Time} [time=now] the time the note will occur\n *  @param {NormalRange} [velocity=1] the velocity of the note\n *  @private\n *  @returns {Tone.AMSynth} this\n */\nTone.AMSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\t//the port glide\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis._carrier._triggerEnvelopeAttack(time, velocity);\n\tthis._modulator._triggerEnvelopeAttack(time);\n\treturn this;\n};\n\n/**\n *  trigger the release portion of the note\n *\n *  @param  {Time} [time=now] the time the note will release\n *  @private\n *  @returns {Tone.AMSynth} this\n */\nTone.AMSynth.prototype._triggerEnvelopeRelease = function(time){\n\tthis._carrier._triggerEnvelopeRelease(time);\n\tthis._modulator._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.AMSynth} this\n */\nTone.AMSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"harmonicity\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._modulationScale.dispose();\n\tthis._modulationScale = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis.oscillator = null;\n\tthis.envelope = null;\n\tthis.modulationEnvelope = null;\n\tthis.modulation = null;\n\treturn this;\n};\n\nexport default Tone.AMSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../component/FrequencyEnvelope\";\nimport \"../source/OmniOscillator\";\nimport \"../signal/Signal\";\nimport \"../component/Filter\";\nimport \"../instrument/Monophonic\";\n\n/**\n *  @class  Tone.MonoSynth is composed of one oscillator, one filter, and two envelopes.\n *          The amplitude of the Tone.Oscillator and the cutoff frequency of the\n *          Tone.Filter are controlled by Tone.Envelopes.\n *          <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var synth = new Tone.MonoSynth({\n * \t\"oscillator\" : {\n * \t\t\"type\" : \"square\"\n *  },\n *  \"envelope\" : {\n *  \t\"attack\" : 0.1\n *  }\n * }).toMaster();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n */\nTone.MonoSynth = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.MonoSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.OmniOscillator}\n\t */\n\tthis.oscillator = new Tone.OmniOscillator(options.oscillator);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this.oscillator.frequency;\n\n\t/**\n\t *  The detune control.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this.oscillator.detune;\n\n\t/**\n\t *  The filter.\n\t *  @type {Tone.Filter}\n\t */\n\tthis.filter = new Tone.Filter(options.filter);\n\tthis.filter.frequency.value = 5000;\n\n\t/**\n\t *  The filter envelope.\n\t *  @type {Tone.FrequencyEnvelope}\n\t */\n\tthis.filterEnvelope = new Tone.FrequencyEnvelope(options.filterEnvelope);\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t//connect the oscillators to the output\n\tthis.oscillator.chain(this.filter, this.envelope, this.output);\n\t//connect the filter envelope\n\tthis.filterEnvelope.connect(this.filter.frequency);\n\tthis._readOnly([\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n};\n\nTone.extend(Tone.MonoSynth, Tone.Monophonic);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.MonoSynth.defaults = {\n\t\"frequency\" : \"C4\",\n\t\"detune\" : 0,\n\t\"oscillator\" : {\n\t\t\"type\" : \"square\"\n\t},\n\t\"filter\" : {\n\t\t\"Q\" : 6,\n\t\t\"type\" : \"lowpass\",\n\t\t\"rolloff\" : -24\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.005,\n\t\t\"decay\" : 0.1,\n\t\t\"sustain\" : 0.9,\n\t\t\"release\" : 1\n\t},\n\t\"filterEnvelope\" : {\n\t\t\"attack\" : 0.06,\n\t\t\"decay\" : 0.2,\n\t\t\"sustain\" : 0.5,\n\t\t\"release\" : 2,\n\t\t\"baseFrequency\" : 200,\n\t\t\"octaves\" : 7,\n\t\t\"exponent\" : 2\n\t}\n};\n\n/**\n *  start the attack portion of the envelope\n *  @param {Time} [time=now] the time the attack should start\n *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.MonoSynth} this\n *  @private\n */\nTone.MonoSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis.envelope.triggerAttack(time, velocity);\n\tthis.filterEnvelope.triggerAttack(time);\n\tthis.oscillator.start(time);\n\tif (this.envelope.sustain === 0){\n\t\tthis.oscillator.stop(time + this.envelope.attack + this.envelope.decay);\n\t}\n\treturn this;\n};\n\n/**\n *  start the release portion of the envelope\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.MonoSynth} this\n *  @private\n */\nTone.MonoSynth.prototype._triggerEnvelopeRelease = function(time){\n\tthis.envelope.triggerRelease(time);\n\tthis.filterEnvelope.triggerRelease(time);\n\tthis.oscillator.stop(time + this.envelope.release);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.MonoSynth} this\n */\nTone.MonoSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n\tthis.oscillator.dispose();\n\tthis.oscillator = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\tthis.filterEnvelope.dispose();\n\tthis.filterEnvelope = null;\n\tthis.filter.dispose();\n\tthis.filter = null;\n\tthis.frequency = null;\n\tthis.detune = null;\n\treturn this;\n};\n\nexport default Tone.MonoSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/MonoSynth\";\nimport \"../component/LFO\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../instrument/Monophonic\";\nimport \"../core/Param\";\n\n/**\n *  @class  Tone.DuoSynth is a monophonic synth composed of two\n *          MonoSynths run in parallel with control over the\n *          frequency ratio between the two voices and vibrato effect.\n *          <img src=\"https://docs.google.com/drawings/d/1bL4GXvfRMMlqS7XyBm9CjL9KJPSUKbcdBNpqOlkFLxk/pub?w=1012&h=448\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var duoSynth = new Tone.DuoSynth().toMaster();\n * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n */\nTone.DuoSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.DuoSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  the first voice\n\t *  @type {Tone.MonoSynth}\n\t */\n\tthis.voice0 = new Tone.MonoSynth(options.voice0);\n\tthis.voice0.volume.value = -10;\n\n\t/**\n\t *  the second voice\n\t *  @type {Tone.MonoSynth}\n\t */\n\tthis.voice1 = new Tone.MonoSynth(options.voice1);\n\tthis.voice1.volume.value = -10;\n\n\t/**\n\t *  The vibrato LFO.\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._vibrato = new Tone.LFO(options.vibratoRate, -50, 50);\n\tthis._vibrato.start();\n\n\t/**\n\t * the vibrato frequency\n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.vibratoRate = this._vibrato.frequency;\n\n\t/**\n\t *  the vibrato gain\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._vibratoGain = new Tone.Gain(options.vibratoAmount, Tone.Type.Positive);\n\n\t/**\n\t * The amount of vibrato\n\t * @type {Positive}\n\t * @signal\n\t */\n\tthis.vibratoAmount = this._vibratoGain.gain;\n\n\t/**\n\t *  the frequency control\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\n\t/**\n\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch voice1 an octave below voice0\n\t * duoSynth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t//control the two voices frequency\n\tthis.frequency.connect(this.voice0.frequency);\n\tthis.frequency.chain(this.harmonicity, this.voice1.frequency);\n\tthis._vibrato.connect(this._vibratoGain);\n\tthis._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n\tthis.voice0.connect(this.output);\n\tthis.voice1.connect(this.output);\n\tthis._readOnly([\"voice0\", \"voice1\", \"frequency\", \"vibratoAmount\", \"vibratoRate\"]);\n};\n\nTone.extend(Tone.DuoSynth, Tone.Monophonic);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.DuoSynth.defaults = {\n\t\"vibratoAmount\" : 0.5,\n\t\"vibratoRate\" : 5,\n\t\"harmonicity\" : 1.5,\n\t\"voice0\" : {\n\t\t\"volume\" : -10,\n\t\t\"portamento\" : 0,\n\t\t\"oscillator\" : {\n\t\t\t\"type\" : \"sine\"\n\t\t},\n\t\t\"filterEnvelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t},\n\t\t\"envelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t}\n\t},\n\t\"voice1\" : {\n\t\t\"volume\" : -10,\n\t\t\"portamento\" : 0,\n\t\t\"oscillator\" : {\n\t\t\t\"type\" : \"sine\"\n\t\t},\n\t\t\"filterEnvelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t},\n\t\t\"envelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t}\n\t}\n};\n\n/**\n *  start the attack portion of the envelopes\n *\n *  @param {Time} [time=now] the time the attack should start\n *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.DuoSynth} this\n *  @private\n */\nTone.DuoSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.voice0._triggerEnvelopeAttack(time, velocity);\n\tthis.voice1._triggerEnvelopeAttack(time, velocity);\n\treturn this;\n};\n\n/**\n *  start the release portion of the envelopes\n *\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.DuoSynth} this\n *  @private\n */\nTone.DuoSynth.prototype._triggerEnvelopeRelease = function(time){\n\tthis.voice0._triggerEnvelopeRelease(time);\n\tthis.voice1._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  Get the level of the output at the given time. Measures\n *  the envelope(s) value at the time. \n *  @param {Time} time The time to query the envelope value\n *  @return {NormalRange} The output level between 0-1\n */\nTone.DuoSynth.prototype.getLevelAtTime = function(time){\n\treturn (this.voice0.getLevelAtTime(time) + this.voice1.getLevelAtTime(time))/2;\n};\n\n/**\n *  clean up\n *  @returns {Tone.DuoSynth} this\n */\nTone.DuoSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"voice0\", \"voice1\", \"frequency\", \"vibratoAmount\", \"vibratoRate\"]);\n\tthis.voice0.dispose();\n\tthis.voice0 = null;\n\tthis.voice1.dispose();\n\tthis.voice1 = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis._vibratoGain.dispose();\n\tthis._vibratoGain = null;\n\tthis._vibrato = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis.vibratoAmount.dispose();\n\tthis.vibratoAmount = null;\n\tthis.vibratoRate = null;\n\treturn this;\n};\n\nexport default Tone.DuoSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Synth\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../instrument/Monophonic\";\n\n/**\n *  @class  FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n *          the frequency of a second Tone.Synth. A lot of spectral content\n *          can be explored using the modulationIndex parameter. Read more about\n *          frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).\n *          <img src=\"https://docs.google.com/drawings/d/1h0PUDZXPgi4Ikx6bVT6oncrYPLluFKy7lj53puxj-DM/pub?w=902&h=462\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var fmSynth = new Tone.FMSynth().toMaster();\n * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n */\nTone.FMSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.FMSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The carrier voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Synth(options.carrier);\n\tthis._carrier.volume.value = -10;\n\n\t/**\n\t *  The carrier's oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.oscillator = this._carrier.oscillator;\n\n\t/**\n\t *  The carrier's envelope\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.envelope = this._carrier.envelope.set(options.envelope);\n\n\t/**\n\t *  The modulator voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Synth(options.modulator);\n\tthis._modulator.volume.value = -10;\n\n\t/**\n\t *  The modulator's oscillator which is applied\n\t *  to the amplitude of the oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.modulation = this._modulator.oscillator.set(options.modulation);\n\n\t/**\n\t *  The modulator's envelope\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune in cents\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch voice1 an octave below voice0\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  The modulation index which essentially the depth or amount of the modulation. It is the\n\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t *  modulating signal (ma) -- as in ma/mf.\n\t *\t@type {Positive}\n\t *\t@signal\n\t */\n\tthis.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\tthis.modulationIndex.units = Tone.Type.Positive;\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain(0);\n\n\t//control the two voices frequency\n\tthis.frequency.connect(this._carrier.frequency);\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\tthis.detune.fan(this._carrier.detune, this._modulator.detune);\n\tthis._modulator.connect(this._modulationNode.gain);\n\tthis._modulationNode.connect(this._carrier.frequency);\n\tthis._carrier.connect(this.output);\n\tthis._readOnly([\"frequency\", \"harmonicity\", \"modulationIndex\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n};\n\nTone.extend(Tone.FMSynth, Tone.Monophonic);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.FMSynth.defaults = {\n\t\"harmonicity\" : 3,\n\t\"modulationIndex\" : 10,\n\t\"detune\" : 0,\n\t\"oscillator\" : {\n\t\t\"type\" : \"sine\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.01,\n\t\t\"decay\" : 0.01,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t},\n\t\"modulation\" : {\n\t\t\"type\" : \"square\"\n\t},\n\t\"modulationEnvelope\" : {\n\t\t\"attack\" : 0.5,\n\t\t\"decay\" : 0.0,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t}\n};\n\n/**\n * \ttrigger the attack portion of the note\n *\n *  @param  {Time} [time=now] the time the note will occur\n *  @param {number} [velocity=1] the velocity of the note\n *  @returns {Tone.FMSynth} this\n *  @private\n */\nTone.FMSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis._carrier._triggerEnvelopeAttack(time, velocity);\n\tthis._modulator._triggerEnvelopeAttack(time);\n\treturn this;\n};\n\n/**\n *  trigger the release portion of the note\n *\n *  @param  {Time} [time=now] the time the note will release\n *  @returns {Tone.FMSynth} this\n *  @private\n */\nTone.FMSynth.prototype._triggerEnvelopeRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis._carrier._triggerEnvelopeRelease(time);\n\tthis._modulator._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.FMSynth} this\n */\nTone.FMSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"harmonicity\", \"modulationIndex\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.modulationIndex.dispose();\n\tthis.modulationIndex = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis.oscillator = null;\n\tthis.envelope = null;\n\tthis.modulationEnvelope = null;\n\tthis.modulation = null;\n\treturn this;\n};\n\nexport default Tone.FMSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/OmniOscillator\";\nimport \"../instrument/Instrument\";\nimport \"../component/AmplitudeEnvelope\";\n\n/**\n *  @class  Tone.MembraneSynth makes kick and tom sounds using a single oscillator\n *          with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n *          is routed through a Tone.AmplitudeEnvelope to the output. The drum\n *          quality of the sound comes from the frequency envelope applied\n *          during Tone.MembraneSynth.triggerAttack(note). The frequency envelope\n *          starts at <code>note * .octaves</code> and ramps to <code>note</code>\n *          over the duration of <code>.pitchDecay</code>.\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var synth = new Tone.MembraneSynth().toMaster();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n */\nTone.MembraneSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.MembraneSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.OmniOscillator}\n\t */\n\tthis.oscillator = new Tone.OmniOscillator(options.oscillator);\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t/**\n\t *  The number of octaves the pitch envelope ramps.\n\t *  @type {Positive}\n\t */\n\tthis.octaves = options.octaves;\n\n\t/**\n\t *  The amount of time the frequency envelope takes.\n\t *  @type {Time}\n\t */\n\tthis.pitchDecay = options.pitchDecay;\n\n\tthis.oscillator.chain(this.envelope, this.output);\n\tthis._readOnly([\"oscillator\", \"envelope\"]);\n};\n\nTone.extend(Tone.MembraneSynth, Tone.Instrument);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.MembraneSynth.defaults = {\n\t\"pitchDecay\" : 0.05,\n\t\"octaves\" : 10,\n\t\"oscillator\" : {\n\t\t\"type\" : \"sine\",\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.001,\n\t\t\"decay\" : 0.4,\n\t\t\"sustain\" : 0.01,\n\t\t\"release\" : 1.4,\n\t\t\"attackCurve\" : \"exponential\"\n\t}\n};\n\n/**\n *  Trigger the note at the given time with the given velocity.\n *\n *  @param  {Frequency} note     the note\n *  @param  {Time} [time=now]     the time, if not given is now\n *  @param  {number} [velocity=1] velocity defaults to 1\n *  @returns {Tone.MembraneSynth} this\n *  @example\n *  kick.triggerAttack(60);\n */\nTone.MembraneSynth.prototype.triggerAttack = function(note, time, velocity){\n\ttime = this.toSeconds(time);\n\tnote = this.toFrequency(note);\n\tvar maxNote = note * this.octaves;\n\tthis.oscillator.frequency.setValueAtTime(maxNote, time);\n\tthis.oscillator.frequency.exponentialRampToValueAtTime(note, time + this.toSeconds(this.pitchDecay));\n\tthis.envelope.triggerAttack(time, velocity);\n\tthis.oscillator.start(time);\n\tif (this.envelope.sustain === 0){\n\t\tthis.oscillator.stop(time + this.envelope.attack + this.envelope.decay);\n\t}\n\treturn this;\n};\n\n/**\n *  Trigger the release portion of the note.\n *\n *  @param  {Time} [time=now] the time the note will release\n *  @returns {Tone.MembraneSynth} this\n */\nTone.MembraneSynth.prototype.triggerRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis.oscillator.stop(time + this.envelope.release);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.MembraneSynth} this\n */\nTone.MembraneSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._writable([\"oscillator\", \"envelope\"]);\n\tthis.oscillator.dispose();\n\tthis.oscillator = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\treturn this;\n};\n\nexport default Tone.MembraneSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../source/FMOscillator\";\nimport \"../component/Filter\";\nimport \"../component/FrequencyEnvelope\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../core/Gain\";\nimport \"../signal/Scale\";\nimport \"../signal/Multiply\";\n\n/**\n *  Inharmonic ratio of frequencies based on the Roland TR-808\n *  Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n *  @private\n *  @static\n *  @type {Array}\n */\nvar inharmRatios = [1.0, 1.483, 1.932, 2.546, 2.630, 3.897];\n\n/**\n *  @class  A highly inharmonic and spectrally complex source with a highpass filter\n *          and amplitude envelope which is good for making metalophone sounds. Based\n *          on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n *          Inspiration from [Sound on Sound](https://web.archive.org/web/20160610143924/https://www.soundonsound.com/sos/jul02/articles/synthsecrets0702.asp).\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] The options availble for the synth\n *                             see defaults below\n */\nTone.MetalSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.MetalSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The frequency of the cymbal\n\t *  @type  {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The array of FMOscillators\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._oscillators = [];\n\n\t/**\n\t *  The frequency multipliers\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._freqMultipliers = [];\n\n\t/**\n\t *  The amplitude for the body\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._amplitue = new Tone.Gain(0).connect(this.output);\n\n\t/**\n\t *  highpass the output\n\t *  @type {Tone.Filter}\n\t *  @private\n\t */\n\tthis._highpass = new Tone.Filter({\n\t\t\"type\" : \"highpass\",\n\t\t\"Q\" : -3.0102999566398125\n\t}).connect(this._amplitue);\n\n\t/**\n\t *  The number of octaves the highpass\n\t *  filter frequency ramps\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t/**\n\t *  Scale the body envelope\n\t *  for the bandpass\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._filterFreqScaler = new Tone.Scale(options.resonance, 7000);\n\n\t/**\n\t *  The envelope which is connected both to the\n\t *  amplitude and highpass filter's cutoff frequency\n\t *  @type  {Tone.Envelope}\n\t */\n\tthis.envelope = new Tone.Envelope({\n\t\t\"attack\" : options.envelope.attack,\n\t\t\"attackCurve\" : \"linear\",\n\t\t\"decay\" : options.envelope.decay,\n\t\t\"sustain\" : 0,\n\t\t\"release\" : options.envelope.release,\n\t}).chain(this._filterFreqScaler, this._highpass.frequency);\n\tthis.envelope.connect(this._amplitue.gain);\n\n\tfor (var i = 0; i < inharmRatios.length; i++){\n\t\tvar osc = new Tone.FMOscillator({\n\t\t\t\"type\" : \"square\",\n\t\t\t\"modulationType\" : \"square\",\n\t\t\t\"harmonicity\" : options.harmonicity,\n\t\t\t\"modulationIndex\" : options.modulationIndex\n\t\t});\n\t\tosc.connect(this._highpass);\n\t\tthis._oscillators[i] = osc;\n\n\t\tvar mult = new Tone.Multiply(inharmRatios[i]);\n\t\tthis._freqMultipliers[i] = mult;\n\t\tthis.frequency.chain(mult, osc.frequency);\n\t}\n\n\t//set the octaves\n\tthis.octaves = options.octaves;\n\n};\n\nTone.extend(Tone.MetalSynth, Tone.Instrument);\n\n/**\n *  default values\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.MetalSynth.defaults = {\n\t\"frequency\" : 200,\n\t\"envelope\" : {\n\t\t\"attack\" : 0.001,\n\t\t\"decay\" : 1.4,\n\t\t\"release\" : 0.2\n\t},\n\t\"harmonicity\" : 5.1,\n\t\"modulationIndex\" : 32,\n\t\"resonance\" : 4000,\n\t\"octaves\" : 1.5\n};\n\n/**\n *  Trigger the attack.\n *  @param  {Time}  time      When the attack should be triggered.\n *  @param  {NormalRange}  [velocity=1]  The velocity that the envelope should be triggered at.\n *  @return  {Tone.MetalSynth}  this\n */\nTone.MetalSynth.prototype.triggerAttack = function(time, vel){\n\ttime = this.toSeconds(time);\n\tvel = Tone.defaultArg(vel, 1);\n\tthis.envelope.triggerAttack(time, vel);\n\tthis._oscillators.forEach(function(osc){\n\t\tosc.start(time);\n\t});\n\t//if the sustain is 0, stop the oscillator as well\n\tif (this.envelope.sustain === 0){\n\t\tthis._oscillators.forEach(function(osc){\n\t\t\tosc.stop(time + this.envelope.attack + this.envelope.decay);\n\t\t}.bind(this));\n\t}\n\treturn this;\n};\n\n/**\n *  Trigger the release of the envelope.\n *  @param  {Time}  time      When the release should be triggered.\n *  @return  {Tone.MetalSynth}  this\n */\nTone.MetalSynth.prototype.triggerRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis._oscillators.forEach(function(osc){\n\t\tosc.stop(time + this.envelope.release);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.MetalSynth.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 0);\n\tthis._syncMethod(\"triggerRelease\", 0);\n\treturn this;\n};\n\n/**\n *  Trigger the attack and release of the envelope after the given\n *  duration.\n *  @param  {Time}  duration  The duration before triggering the release\n *  @param  {Time}  time      When the attack should be triggered.\n *  @param  {NormalRange}  [velocity=1]  The velocity that the envelope should be triggered at.\n *  @return  {Tone.MetalSynth}  this\n */\nTone.MetalSynth.prototype.triggerAttackRelease = function(duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tduration = this.toSeconds(duration);\n\tthis.triggerAttack(time, velocity);\n\tthis.triggerRelease(time + duration);\n\treturn this;\n};\n\n/**\n *  The modulationIndex of the oscillators which make up the source.\n *  see Tone.FMOscillator.modulationIndex\n *  @memberOf Tone.MetalSynth#\n *  @type {Positive}\n *  @name  modulationIndex\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"modulationIndex\", {\n\tget : function(){\n\t\treturn this._oscillators[0].modulationIndex.value;\n\t},\n\tset : function(val){\n\t\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\t\tthis._oscillators[i].modulationIndex.value = val;\n\t\t}\n\t}\n});\n\n/**\n *  The harmonicity of the oscillators which make up the source.\n *  see Tone.FMOscillator.harmonicity\n *  @memberOf Tone.MetalSynth#\n *  @type {Positive}\n *  @name  harmonicity\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"harmonicity\", {\n\tget : function(){\n\t\treturn this._oscillators[0].harmonicity.value;\n\t},\n\tset : function(val){\n\t\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\t\tthis._oscillators[i].harmonicity.value = val;\n\t\t}\n\t}\n});\n\n/**\n *  The frequency of the highpass filter attached to the envelope\n *  @memberOf Tone.MetalSynth#\n *  @type {Frequency}\n *  @name  resonance\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"resonance\", {\n\tget : function(){\n\t\treturn this._filterFreqScaler.min;\n\t},\n\tset : function(val){\n\t\tthis._filterFreqScaler.min = val;\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n *  The number of octaves above the \"resonance\" frequency\n *  that the filter ramps during the attack/decay envelope\n *  @memberOf Tone.MetalSynth#\n *  @type {Number}\n *  @name  octaves\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octs){\n\t\tthis._octaves = octs;\n\t\tthis._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, octs);\n\t}\n});\n\n/**\n *  Clean up\n *  @returns {Tone.MetalSynth} this\n */\nTone.MetalSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\tthis._oscillators[i].dispose();\n\t\tthis._freqMultipliers[i].dispose();\n\t}\n\tthis._oscillators = null;\n\tthis._freqMultipliers = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis._filterFreqScaler.dispose();\n\tthis._filterFreqScaler = null;\n\tthis._amplitue.dispose();\n\tthis._amplitue = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\tthis._highpass.dispose();\n\tthis._highpass = null;\n};\n\nexport default Tone.MetalSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../component/FrequencyEnvelope\";\nimport \"../source/Noise\";\nimport \"../signal/Signal\";\nimport \"../component/Filter\";\nimport \"../instrument/Instrument\";\n\n/**\n *  @class  Tone.NoiseSynth is composed of a noise generator (Tone.Noise), one filter (Tone.Filter),\n *          and two envelopes (Tone.Envelop). One envelope controls the amplitude\n *          of the noise and the other is controls the cutoff frequency of the filter.\n *          <img src=\"https://docs.google.com/drawings/d/1rqzuX9rBlhT50MRvD2TKml9bnZhcZmzXF1rf_o7vdnE/pub?w=918&h=242\">\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n * @example\n * var noiseSynth = new Tone.NoiseSynth().toMaster();\n * noiseSynth.triggerAttackRelease(\"8n\");\n */\nTone.NoiseSynth = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.NoiseSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The noise source.\n\t *  @type {Tone.Noise}\n\t *  @example\n\t * noiseSynth.set(\"noise.type\", \"brown\");\n\t */\n\tthis.noise = new Tone.Noise(options.noise);\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t//connect the noise to the output\n\tthis.noise.chain(this.envelope, this.output);\n\tthis._readOnly([\"noise\", \"envelope\"]);\n};\n\nTone.extend(Tone.NoiseSynth, Tone.Instrument);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.NoiseSynth.defaults = {\n\t\"noise\" : {\n\t\t\"type\" : \"white\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.005,\n\t\t\"decay\" : 0.1,\n\t\t\"sustain\" : 0.0,\n\t}\n};\n\n/**\n *  Start the attack portion of the envelopes. Unlike other\n *  instruments, Tone.NoiseSynth doesn't have a note.\n *  @param {Time} [time=now] the time the attack should start\n *  @param {number} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.NoiseSynth} this\n *  @example\n * noiseSynth.triggerAttack();\n */\nTone.NoiseSynth.prototype.triggerAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis.envelope.triggerAttack(time, velocity);\n\t//start the noise\n\tthis.noise.start(time);\n\tif (this.envelope.sustain === 0){\n\t\tthis.noise.stop(time + this.envelope.attack + this.envelope.decay);\n\t}\n\treturn this;\n};\n\n/**\n *  Start the release portion of the envelopes.\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.NoiseSynth} this\n */\nTone.NoiseSynth.prototype.triggerRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis.noise.stop(time + this.envelope.release);\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.NoiseSynth.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 0);\n\tthis._syncMethod(\"triggerRelease\", 0);\n\treturn this;\n};\n\n/**\n *  Trigger the attack and then the release.\n *  @param  {Time} duration the duration of the note\n *  @param  {Time} [time=now]     the time of the attack\n *  @param  {number} [velocity=1] the velocity\n *  @returns {Tone.NoiseSynth} this\n */\nTone.NoiseSynth.prototype.triggerAttackRelease = function(duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tduration = this.toSeconds(duration);\n\tthis.triggerAttack(time, velocity);\n\tthis.triggerRelease(time + duration);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.NoiseSynth} this\n */\nTone.NoiseSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._writable([\"noise\", \"envelope\"]);\n\tthis.noise.dispose();\n\tthis.noise = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\treturn this;\n};\n\nexport default Tone.NoiseSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../source/Noise\";\nimport \"../component/LowpassCombFilter\";\n\n/**\n *  @class Karplus-String string synthesis. Often out of tune.\n *         Will change when the AudioWorkerNode is available across\n *         browsers.\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] see the defaults\n *  @example\n * var plucky = new Tone.PluckSynth().toMaster();\n * plucky.triggerAttack(\"C4\");\n */\nTone.PluckSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.PluckSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  @type {Tone.Noise}\n\t *  @private\n\t */\n\tthis._noise = new Tone.Noise(\"pink\");\n\n\t/**\n\t *  The amount of noise at the attack.\n\t *  Nominal range of [0.1, 20]\n\t *  @type {number}\n\t */\n\tthis.attackNoise = options.attackNoise;\n\n\t/**\n\t *  the LFCF\n\t *  @type {Tone.LowpassCombFilter}\n\t *  @private\n\t */\n\tthis._lfcf = new Tone.LowpassCombFilter({\n\t\t\"resonance\" : options.resonance,\n\t\t\"dampening\" : options.dampening\n\t});\n\n\t/**\n\t *  The resonance control.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.resonance = this._lfcf.resonance;\n\n\t/**\n\t *  The dampening control. i.e. the lowpass filter frequency of the comb filter\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.dampening = this._lfcf.dampening;\n\n\t//connections\n\tthis._noise.connect(this._lfcf);\n\tthis._lfcf.connect(this.output);\n\tthis._readOnly([\"resonance\", \"dampening\"]);\n};\n\nTone.extend(Tone.PluckSynth, Tone.Instrument);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.PluckSynth.defaults = {\n\t\"attackNoise\" : 1,\n\t\"dampening\" : 4000,\n\t\"resonance\" : 0.7\n};\n\n/**\n *  Trigger the note.\n *  @param {Frequency} note The note to trigger.\n *  @param {Time} [time=now] When the note should be triggered.\n *  @returns {Tone.PluckSynth} this\n */\nTone.PluckSynth.prototype.triggerAttack = function(note, time){\n\tnote = this.toFrequency(note);\n\ttime = this.toSeconds(time);\n\tvar delayAmount = 1 / note;\n\tthis._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\tthis._noise.start(time);\n\tthis._noise.stop(time + delayAmount * this.attackNoise);\n\treturn this;\n};\n\n/**\n *\tMake this method which belongs to the parent class private since\n *\tPluckSynth does not have any 'release' method.\n * \t@memberOf Tone.PluckSynth#\n *  @function\n *  @private\n *  @name triggerAttackRelease\n */\n\n/**\n *  Clean up.\n *  @returns {Tone.PluckSynth} this\n */\nTone.PluckSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._noise.dispose();\n\tthis._lfcf.dispose();\n\tthis._noise = null;\n\tthis._lfcf = null;\n\tthis._writable([\"resonance\", \"dampening\"]);\n\tthis.dampening = null;\n\tthis.resonance = null;\n\treturn this;\n};\n\nexport default Tone.PluckSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Synth\";\nimport \"../source/Source\";\n\n/**\n *  @class  Tone.PolySynth handles voice creation and allocation for any\n *          instruments passed in as the second paramter. PolySynth is\n *          not a synthesizer by itself, it merely manages voices of\n *          one of the other types of synths, allowing any of the\n *          monophonic synthesizers to be polyphonic.\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {number|Object} [polyphony=4] The number of voices to create\n *  @param {function} [voice=Tone.Synth] The constructor of the voices\n *                                            uses Tone.Synth by default.\n *  @param {...*}\tvoiceArgs\tAll additional arguments will be passed into the class constructor.\n *  @example\n * //a polysynth composed of 6 Voices of Synth\n * var synth = new Tone.PolySynth(6, Tone.Synth, {\n *   oscillator : {\n * \t\ttype : \"square\"\n * \t}\n * }).toMaster();\n * //set the attributes using the set interface\n * synth.set(\"detune\", -1200);\n * //play a chord\n * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], \"4n\");\n */\nTone.PolySynth = function(){\n\n\tvar options = Tone.defaults(arguments, [\"polyphony\", \"voice\"], Tone.PolySynth);\n\tTone.Instrument.call(this, options);\n\toptions = Tone.defaultArg(options, Tone.Instrument.defaults);\n\n\t//max polyphony\n\toptions.polyphony = Math.min(Tone.PolySynth.MAX_POLYPHONY, options.polyphony);\n\n\t/**\n\t *  the array of voices\n\t *  @type {Array}\n\t */\n\tthis.voices = new Array(options.polyphony);\n\tthis.assert(options.polyphony > 0, \"polyphony must be greater than 0\");\n\n\t/**\n\t *  The detune in cents\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\tthis._readOnly(\"detune\");\n\n\t//create the voices\n\tfor (var i = 0; i < options.polyphony; i++){\n\t\tvar v = new options.voice(arguments[2], arguments[3]);\n\t\tif (!(v instanceof Tone.Monophonic)){\n\t\t\tthrow new Error(\"Synth constructor must be instance of Tone.Monophonic\");\n\t\t}\n\t\tthis.voices[i] = v;\n\t\tv.index = i;\n\t\tv.connect(this.output);\n\t\tif (v.hasOwnProperty(\"detune\")){\n\t\t\tthis.detune.connect(v.detune);\n\t\t}\n\t}\n};\n\nTone.extend(Tone.PolySynth, Tone.Instrument);\n\n/**\n *  the defaults\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.PolySynth.defaults = {\n\t\"polyphony\" : 4,\n\t\"volume\" : 0,\n\t\"detune\" : 0,\n\t\"voice\" : Tone.Synth\n};\n\n/**\n *  Get the closest available voice, that is the\n *  one that is either the closest to the note,\n *  or has the lowest envelope value.\n *  @param {Time} time return the voice that has the lowest energy at this time.\n *  @param  {Note}  note  if there is a voice with this note, that should be returned\n *  @return  {Tone.Monophonic}  A synth voice.\n *  @private\n */\nTone.PolySynth.prototype._getClosestVoice = function(time, note){\n\t//play the note which has the same frequency, if that exists\n\tvar sameNote = this.voices.find(function(voice){\n\t\t//break if it's within a small epsion of the voice's frequency\n\t\tif (Math.abs(voice.frequency.getValueAtTime(time) - Tone.Frequency(note)) < 1e-4 && \n\t\t\t//and that note is currently active\n\t\t\tvoice.getLevelAtTime(time) > 1e-5){\n\t\t\treturn voice;\n\t\t} \n\t});\n\tif (sameNote){\n\t\treturn sameNote;\n\t}\n\n\tvar sortedVoices = this.voices.slice().sort(function(a, b){\n\t\t//check that it's not scheduled in the future\n\t\tvar aLevel = a.getLevelAtTime(time + this.blockTime);\n\t\tvar bLevel = b.getLevelAtTime(time + this.blockTime);\n\n\t\tvar silenceThresh = 1e-5;\n\t\tif (aLevel < silenceThresh){\n\t\t\taLevel = 0;\n\t\t}\n\t\tif (bLevel < silenceThresh){\n\t\t\tbLevel = 0;\n\t\t}\n\t\treturn aLevel - bLevel;\n\t}.bind(this));\n\n\treturn sortedVoices[0];\n};\n\n/**\n *  Trigger the attack portion of the note\n *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n *                                  Frequency or an array of frequencies.\n *  @param  {Time} [time=now]  The start time of the note.\n *  @param {number} [velocity=1] The velocity of the note.\n *  @returns {Tone.PolySynth} this\n *  @example\n * //trigger a chord immediately with a velocity of 0.2\n * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"], undefined, 0.2);\n */\nTone.PolySynth.prototype.triggerAttack = function(notes, time, velocity){\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\ttime = this.toSeconds(time);\n\tnotes.forEach(function(note){\n\t\tvar voice = this._getClosestVoice(time, note);\n\t\tvoice.triggerAttack(note, time, velocity);\n\t\tthis.log(\"triggerAttack\", voice.index, note);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Trigger the release of the note. Unlike monophonic instruments,\n *  a note (or array of notes) needs to be passed in as the first argument.\n *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n *                                  Frequency or an array of frequencies.\n *  @param  {Time} [time=now]  When the release will be triggered.\n *  @returns {Tone.PolySynth} this\n *  @example\n * poly.triggerRelease([\"Ab3\", \"C4\", \"F5\"], \"+2n\");\n */\nTone.PolySynth.prototype.triggerRelease = function(notes, time){\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\ttime = this.toSeconds(time);\n\tnotes.forEach(function(note){\n\t\tvar voice = this._getClosestVoice(time, note);\n\t\tthis.log(\"triggerRelease\", voice.index, note);\n\t\tvoice.triggerRelease(time);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Trigger the attack and release after the specified duration\n *\n *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n *                                  Frequency or an array of frequencies.\n *  @param  {Time} duration the duration of the note\n *  @param  {Time} [time=now]     if no time is given, defaults to now\n *  @param  {number} [velocity=1] the velocity of the attack (0-1)\n *  @returns {Tone.PolySynth} this\n *  @example\n * //trigger a chord for a duration of a half note\n * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], \"2n\");\n *  @example\n * //can pass in an array of durations as well\n * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], [\"2n\", \"4n\", \"4n\"]);\n */\nTone.PolySynth.prototype.triggerAttackRelease = function(notes, duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.triggerAttack(notes, time, velocity);\n\tif (Tone.isArray(duration) && Tone.isArray(notes)){\n\t\tfor (var i = 0; i < notes.length; i++){\n\t\t\tvar d = duration[Math.min(i, duration.length - 1)];\n\t\t\tthis.triggerRelease(notes[i], time + this.toSeconds(d));\n\t\t}\n\t} else {\n\t\tthis.triggerRelease(notes, time + this.toSeconds(duration));\n\t}\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.PolySynth.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 1);\n\tthis._syncMethod(\"triggerRelease\", 1);\n\treturn this;\n};\n\n/**\n *  Set a member/attribute of the voices.\n *  @param {Object|string} params\n *  @param {number=} value\n *  @param {Time=} rampTime\n *  @returns {Tone.PolySynth} this\n *  @example\n * poly.set({\n * \t\"filter\" : {\n * \t\t\"type\" : \"highpass\"\n * \t},\n * \t\"envelope\" : {\n * \t\t\"attack\" : 0.25\n * \t}\n * });\n */\nTone.PolySynth.prototype.set = function(params, value, rampTime){\n\tfor (var i = 0; i < this.voices.length; i++){\n\t\tthis.voices[i].set(params, value, rampTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Get the synth's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. Pass in a single attribute to retrieve or an array\n *  of attributes. The attribute strings can also include a \".\"\n *  to access deeper properties.\n *  @param {Array=} params the parameters to get, otherwise will return\n *  \t\t\t\t\t   all available.\n */\nTone.PolySynth.prototype.get = function(params){\n\treturn this.voices[0].get(params);\n};\n\n/**\n *  Trigger the release portion of all the currently active voices.\n *  @param {Time} [time=now] When the notes should be released.\n *  @return {Tone.PolySynth} this\n */\nTone.PolySynth.prototype.releaseAll = function(time){\n\ttime = this.toSeconds(time);\n\tthis.voices.forEach(function(voice){\n\t\tvoice.triggerRelease(time);\n\t});\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.PolySynth} this\n */\nTone.PolySynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis.voices.forEach(function(voice){\n\t\tvoice.dispose();\n\t});\n\tthis._writable(\"detune\");\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.voices = null;\n\treturn this;\n};\n\n/**\n *  The maximum number of notes that can be allocated\n *  to a polysynth.\n *  @type  {Number}\n *  @static\n */\nTone.PolySynth.MAX_POLYPHONY = 20;\n\nexport default Tone.PolySynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../core/Buffers\";\nimport \"../source/BufferSource\";\n\n/**\n * @class Automatically interpolates between a set of pitched samples. Pass in an object which maps the note's pitch or midi value to the url, then you can trigger the attack and release of that note like other instruments. By automatically repitching the samples, it is possible to play pitches which were not explicitly included which can save loading time.\n *        For sample or buffer playback where repitching is not necessary, use [Tone.Player](https://tonejs.github.io/docs/Player).\n * @param {Object} samples An object of samples mapping either Midi\n *                         Note Numbers or Scientific Pitch Notation\n *                         to the url of that sample.\n * @param {Function=} onload The callback to invoke when all of the samples are loaded.\n * @param {String=} baseUrl The root URL of all of the samples, which is prepended to all the URLs.\n * @example\n * var sampler = new Tone.Sampler({\n * \t\"C3\" : \"path/to/C3.mp3\",\n * \t\"D#3\" : \"path/to/Dsharp3.mp3\",\n * \t\"F#3\" : \"path/to/Fsharp3.mp3\",\n * \t\"A3\" : \"path/to/A3.mp3\",\n * }, function(){\n * \t//sampler will repitch the closest sample\n * \tsampler.triggerAttack(\"D3\")\n * })\n * @extends {Tone.Instrument}\n */\nTone.Sampler = function(urls){\n\n\t// shift arguments over one. Those are the remainder of the options\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.shift();\n\tvar options = Tone.defaults(args, [\"onload\", \"baseUrl\"], Tone.Sampler);\n\tTone.Instrument.call(this, options);\n\n\tvar urlMap = {};\n\tfor (var note in urls){\n\t\tif (Tone.isNote(note)){\n\t\t\t//convert the note name to MIDI\n\t\t\tvar mid = Tone.Frequency(note).toMidi();\n\t\t\turlMap[mid] = urls[note];\n\t\t} else if (!isNaN(parseFloat(note))){\n\t\t\t//otherwise if it's numbers assume it's midi\n\t\t\turlMap[note] = urls[note];\n\t\t} else {\n\t\t\tthrow new Error(\"Tone.Sampler: url keys must be the note's pitch\");\n\t\t}\n\t}\n\n\t/**\n\t * The stored and loaded buffers\n\t * @type {Tone.Buffers}\n\t * @private\n\t */\n\tthis._buffers = new Tone.Buffers(urlMap, options.onload, options.baseUrl);\n\n\t/**\n\t * The object of all currently playing BufferSources\n\t * @type {Object}\n\t * @private\n\t */\n\tthis._activeSources = {};\n\n\t/**\n\t * The envelope applied to the beginning of the sample.\n\t * @type {Time}\n\t */\n\tthis.attack = options.attack;\n\n\t/**\n\t * The envelope applied to the end of the envelope.\n\t * @type {Time}\n\t */\n\tthis.release = options.release;\n\n\t/**\n\t *  The shape of the attack/release curve.\n\t *  Either \"linear\" or \"exponential\"\n\t *  @type {String}\n\t */\n\tthis.curve = options.curve;\n};\n\nTone.extend(Tone.Sampler, Tone.Instrument);\n\n/**\n * The defaults\n * @const\n * @type {Object}\n */\nTone.Sampler.defaults = {\n\t\"attack\" : 0,\n\t\"release\" : 0.1,\n\t\"onload\" : Tone.noOp,\n\t\"baseUrl\" : \"\",\n\t\"curve\" : \"exponential\"\n};\n\n/**\n * Returns the difference in steps between the given midi note at the closets sample.\n * @param  {Midi} midi\n * @return {Interval}\n * @private\n */\nTone.Sampler.prototype._findClosest = function(midi){\n\t//searches within 8 octaves of the given midi note\n\tvar MAX_INTERVAL = 96; \n\tvar interval = 0;\n\twhile (interval < MAX_INTERVAL){\n\t\t// check above and below\n\t\tif (this._buffers.has(midi + interval)){\n\t\t\treturn -interval;\n\t\t} else if (this._buffers.has(midi - interval)){\n\t\t\treturn interval;\n\t\t}\n\t\tinterval++;\n\t}\n\tthrow new Error(\"No available buffers for note: \"+midi);\n};\n\n/**\n * @param  {(Frequency|Frequency[])} notes\tThe note to play, or an array of notes.\n * @param  {Time=} time     When to play the note\n * @param  {NormalRange=} velocity The velocity to play the sample back.\n * @return {Tone.Sampler}          this\n */\nTone.Sampler.prototype.triggerAttack = function(notes, time, velocity){\n\tthis.log(\"triggerAttack\", notes, time, velocity);\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\tfor (var i = 0; i < notes.length; i++){ \n\t\tvar midi = Tone.Frequency(notes[i]).toMidi();\n\t\t// find the closest note pitch\n\t\tvar difference = this._findClosest(midi);\n\t\tvar closestNote = midi - difference;\n\t\tvar buffer = this._buffers.get(closestNote);\n\t\tvar playbackRate = Tone.intervalToFrequencyRatio(difference);\n\t\t// play that note\n\t\tvar source = new Tone.BufferSource({\n\t\t\t\"buffer\" : buffer,\n\t\t\t\"playbackRate\" : playbackRate,\n\t\t\t\"fadeIn\" : this.attack,\n\t\t\t\"fadeOut\" : this.release,\n\t\t\t\"curve\" : this.curve,\n\t\t}).connect(this.output);\n\t\tsource.start(time, 0, buffer.duration / playbackRate, velocity);\n\t\t// add it to the active sources\n\t\tif (!Tone.isArray(this._activeSources[midi])){\n\t\t\tthis._activeSources[midi] = [];\n\t\t}\n\t\tthis._activeSources[midi].push(source);\n\n\t\t//remove it when it's done\n\t\tsource.onended = function(){\n\t\t\tif (this._activeSources && this._activeSources[midi]){\n\t\t\t\tvar index = this._activeSources[midi].indexOf(source);\n\t\t\t\tif (index !== -1){\n\t\t\t\t\tthis._activeSources[midi].splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this);\n\t}\n\treturn this;\n};\n\n/**\n * @param  {(Frequency|Frequency[])} notes\tThe note to release, or an array of notes.\n * @param  {Time=} time     \tWhen to release the note.\n * @return {Tone.Sampler}\tthis\n */\nTone.Sampler.prototype.triggerRelease = function(notes, time){\n\tthis.log(\"triggerRelease\", notes, time);\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\tfor (var i = 0; i < notes.length; i++){  \n\t\tvar midi = Tone.Frequency(notes[i]).toMidi();\n\t\t// find the note\n\t\tif (this._activeSources[midi] && this._activeSources[midi].length){\n\t\t\ttime = this.toSeconds(time);\n\t\t\t//stop all the sources on that midi note\n\t\t\tthis._activeSources[midi].forEach(function(source){\n\t\t\t\tsource.stop(time);\n\t\t\t});\n\t\t\tthis._activeSources[midi] = [];\n\t\t}\n\t}\n\n\treturn this;\n};\n\n/**\n * Release all currently active notes.\n * @param  {Time=} time     \tWhen to release the notes.\n * @return {Tone.Sampler}\tthis\n */\nTone.Sampler.prototype.releaseAll = function(time){\n\ttime = this.toSeconds(time);\n\tfor (var note in this._activeSources){\n\t\tvar sources = this._activeSources[note];\n\t\twhile (sources.length){\n\t\t\tvar source = sources.shift();\n\t\t\tsource.stop(time);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.Sampler.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 1);\n\tthis._syncMethod(\"triggerRelease\", 1);\n\treturn this;\n};\n\n/**\n * Invoke the attack phase, then after the duration, invoke the release.\n * @param  {(Frequency|Frequency[])} notes\tThe note to play and release, or an array of notes.\n * @param  {(Time|Time[])} duration The time the note should be held\n * @param  {Time=} time     When to start the attack\n * @param  {NormalRange} [velocity=1] The velocity of the attack\n * @return {Tone.Sampler}          this\n */\nTone.Sampler.prototype.triggerAttackRelease = function(notes, duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.triggerAttack(notes, time, velocity);\n\tif (Tone.isArray(duration) && Tone.isArray(notes)){\n\t\tfor (var i = 0; i < notes.length; i++){\n\t\t\tvar d = duration[Math.min(i, duration.length - 1)];\n\t\t\tthis.triggerRelease(notes[i], time + this.toSeconds(d));\n\t\t}\n\t} else {\n\t\tthis.triggerRelease(notes, time + this.toSeconds(duration));\n\t}\n\treturn this;\n};\n\n/**\n *  Add a note to the sampler.\n *  @param  {Note|Midi}   note      The buffer's pitch.\n *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer,\n *                                                 or a buffer which will be added\n *                                                 with the given name.\n *  @param  {Function=}  callback  The callback to invoke\n *                                 when the url is loaded.\n */\nTone.Sampler.prototype.add = function(note, url, callback){\n\tif (Tone.isNote(note)){\n\t\t//convert the note name to MIDI\n\t\tvar mid = Tone.Frequency(note).toMidi();\n\t\tthis._buffers.add(mid, url, callback);\n\t} else if (!isNaN(parseFloat(note))){\n\t\t//otherwise if it's numbers assume it's midi\n\t\tthis._buffers.add(note, url, callback);\n\t} else {\n\t\tthrow new Error(\"Tone.Sampler: note must be the note's pitch. Instead got \"+note);\n\t}\n};\n\n/**\n * If the buffers are loaded or not\n * @memberOf Tone.Sampler#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Sampler.prototype, \"loaded\", {\n\t\"get\" : function(){\n\t\treturn this._buffers.loaded;\n\t}\n});\n\n/**\n * Clean up\n * @return {Tone.Sampler} this\n */\nTone.Sampler.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._buffers.dispose();\n\tthis._buffers = null;\n\tfor (var midi in this._activeSources){\n\t\tthis._activeSources[midi].forEach(function(source){\n\t\t\tsource.dispose();\n\t\t});\n\t}\n\tthis._activeSources = null;\n\treturn this;\n};\n\nexport default Tone.Sampler;\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/Signal\";\n\n/**\n *  @class Maps a NormalRange [0, 1] to an AudioRange [-1, 1]. \n *         See also Tone.AudioToGain. \n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @example\n * var g2a = new Tone.GainToAudio();\n */\nTone.GainToAudio = function(){\n\n\tTone.SignalBase.call(this);\n\t\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._norm = this.input = this.output = new Tone.WaveShaper(function(x){\n\t\treturn Math.abs(x) * 2 - 1;\n\t});\n};\n\nTone.extend(Tone.GainToAudio, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.GainToAudio} this\n */\nTone.GainToAudio.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._norm.dispose();\n\tthis._norm = null;\n\treturn this;\n};\n\nexport default Tone.GainToAudio;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Multiply\";\n\n/**\n *  @class Normalize takes an input min and max and maps it linearly to NormalRange [0,1]\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @param {number} inputMin the min input value\n *  @param {number} inputMax the max input value\n *  @example\n * var norm = new Tone.Normalize(2, 4);\n * var sig = new Tone.Signal(3).connect(norm);\n * //output of norm is 0.5. \n */\nTone.Normalize = function(inputMin, inputMax){\n\n\tTone.SignalBase.call(this);\n\t\n\t/**\n\t *  the min input value\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._inputMin = Tone.defaultArg(inputMin, 0);\n\n\t/**\n\t *  the max input value\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._inputMax = Tone.defaultArg(inputMax, 1);\n\n\t/**\n\t *  subtract the min from the input\n\t *  @type {Tone.Add}\n\t *  @private\n\t */\n\tthis._sub = this.input = new Tone.Add(0);\n\n\t/**\n\t *  divide by the difference between the input and output\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._div = this.output = new Tone.Multiply(1);\n\n\tthis._sub.connect(this._div);\n\tthis._setRange();\n};\n\nTone.extend(Tone.Normalize, Tone.SignalBase);\n\n/**\n * The minimum value the input signal will reach.\n * @memberOf Tone.Normalize#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.Normalize.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._inputMin;\n\t},\n\tset : function(min){\n\t\tthis._inputMin = min;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n * The maximum value the input signal will reach.\n * @memberOf Tone.Normalize#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.Normalize.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._inputMax;\n\t},\n\tset : function(max){\n\t\tthis._inputMax = max;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n *  set the values\n *  @private\n */\nTone.Normalize.prototype._setRange = function(){\n\tthis._sub.value = -this._inputMin;\n\tthis._div.value = 1 / (this._inputMax - this._inputMin);\n};\n\n/**\n *  clean up\n *  @returns {Tone.Normalize} this\n */\nTone.Normalize.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._sub.dispose();\n\tthis._sub = null;\n\tthis._div.dispose();\n\tthis._div = null;\n\treturn this;\n};\n\nexport default Tone.Normalize;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../signal/Signal\";\nimport \"../type/TransportTime\";\n\n/**\n * @class Tone.TransportTimelineSignal extends Tone.Signal, but adds the ability to synchronize the signal to the signal to the Tone.Transport\n * @extends {Tone.Signal}\n */\nTone.TransportTimelineSignal = function(){\n\tTone.Signal.apply(this, arguments);\n\n\t/**\n\t * The real signal output\n\t * @type {Tone.Signal}\n\t * @private\n\t */\n\tthis.output = this._outputSig = new Tone.Signal(this._initialValue);\n\n\t/**\n\t * Keep track of the last value. (small optimization)\n\t * @private\n\t * @type {Number}\n\t */\n\tthis._lastVal = this.value;\n\n\t/**\n\t * The event id of the tick update loop\n\t * @private\n\t * @type {Number}\n\t */\n\tthis._synced = Tone.Transport.scheduleRepeat(this._onTick.bind(this), \"1i\");\n\n\t/**\n\t * A bound version of the anchor value methods\n\t * @type {Function}\n\t * @private\n\t */\n\tthis._bindAnchorValue = this._anchorValue.bind(this);\n\tTone.Transport.on(\"start stop pause\", this._bindAnchorValue);\n\n\tthis._events.memory = Infinity;\n};\n\nTone.extend(Tone.TransportTimelineSignal, Tone.Signal);\n\n/**\n * Callback which is invoked every tick.\n * @private\n * @param  {Number} time\n * @return {Tone.TransportTimelineSignal}      this\n */\nTone.TransportTimelineSignal.prototype._onTick = function(time){\n\tvar val = this.getValueAtTime(Tone.Transport.seconds);\n\tif (this._lastVal !== val){\n\t\tthis._lastVal = val;\n\t\t//approximate ramp curves with linear ramps\n\t\tthis._outputSig.linearRampToValueAtTime(val, time);\n\t}\n};\n\n/**\n * Anchor the value at the start and stop of the Transport\n * @param  {Number} time The time of the event\n * @return {Tone.TransportTimelineSignal}      this\n * @private\n */\nTone.TransportTimelineSignal.prototype._anchorValue = function(time){\n\tvar val = this.getValueAtTime(Tone.Transport.seconds);\n\tthis._lastVal = val;\n\tthis._outputSig.cancelScheduledValues(time);\n\tthis._outputSig.setValueAtTime(val, time);\n\treturn this;\n};\n\n/**\n *  Get the scheduled value at the given time. This will\n *  return the unconverted (raw) value.\n *  @param  {TransportTime}  time  The time in seconds.\n *  @return  {Number}  The scheduled value at the given time.\n */\nTone.TransportTimelineSignal.prototype.getValueAtTime = function(time){\n\ttime = Tone.TransportTime(time);\n\treturn Tone.Signal.prototype.getValueAtTime.call(this, time);\n};\n\n/**\n * Set the output of the signal at the given time\n * @param  {Number} value The value to change to at the given time\n * @param  {TransportTime} time  The time to change the signal\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.setValueAtTime = function(value, time){\n\ttime = Tone.TransportTime(time);\n\tTone.Signal.prototype.setValueAtTime.call(this, value, time);\n\treturn this;\n};\n\n/**\n * Linear ramp to the given value from the previous scheduled point to the given value\n * @param  {Number} value The value to change to at the given time\n * @param  {TransportTime} time  The time to change the signal\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.linearRampToValueAtTime = function(value, time){\n\ttime = Tone.TransportTime(time);\n\tTone.Signal.prototype.linearRampToValueAtTime.call(this, value, time);\n\treturn this;\n};\n\n/**\n * Exponential ramp to the given value from the previous scheduled point to the given value\n * @param  {Number} value The value to change to at the given time\n * @param  {TransportTime} time  The time to change the signal\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.exponentialRampToValueAtTime = function(value, time){\n\ttime = Tone.TransportTime(time);\n\tTone.Signal.prototype.exponentialRampToValueAtTime.call(this, value, time);\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time with\n *  a rate having the given time constant.\n *  @param {number} value\n *  @param {TransportTime} startTime\n *  @param {number} timeConstant\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.setTargetAtTime = function(value, startTime, timeConstant){\n\tstartTime = Tone.TransportTime(startTime);\n\tTone.Signal.prototype.setTargetAtTime.call(this, value, startTime, timeConstant);\n\treturn this;\n};\n\n/**\n *  Cancels all scheduled parameter changes with times greater than or\n *  equal to startTime.\n *  @param  {TransportTime} startTime\n *  @returns {Tone.Param} this\n */\nTone.TransportTimelineSignal.prototype.cancelScheduledValues = function(startTime){\n\tstartTime = Tone.TransportTime(startTime);\n\tTone.Signal.prototype.cancelScheduledValues.call(this, startTime);\n\treturn this;\n};\n\n/**\n *  Set an array of arbitrary values starting at the given time for the given duration.\n *  @param {Float32Array} values\n *  @param {Time} startTime\n *  @param {Time} duration\n *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n *  @returns {Tone.Signal} this\n */\nTone.TransportTimelineSignal.prototype.setValueCurveAtTime = function(values, startTime, duration, scaling){\n\tstartTime = Tone.TransportTime(startTime);\n\tduration = Tone.TransportTime(duration);\n\tTone.Signal.prototype.setValueCurveAtTime.call(this, values, startTime, duration, scaling);\n\treturn this;\n};\n\n/**\n *  This is similar to [cancelScheduledValues](#cancelScheduledValues) except\n *  it holds the automated value at time until the next automated event.\n *  @param  {Time} time\n *  @returns {Tone.TransportTimelineSignal} this\n */\nTone.TransportTimelineSignal.prototype.cancelAndHoldAtTime = function(time){\n\treturn Tone.Signal.prototype.cancelAndHoldAtTime.call(this, Tone.TransportTime(time));\n};\n\n/**\n * Dispose and disconnect\n * @return {Tone.TransportTimelineSignal} this\n */\nTone.TransportTimelineSignal.prototype.dispose = function(){\n\tTone.Transport.clear(this._synced);\n\tTone.Transport.off(\"start stop pause\", this._syncedCallback);\n\tthis._events.cancel(0);\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._outputSig.dispose();\n\tthis._outputSig = null;\n};\n\nexport default Tone.TransportTimelineSignal;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../core/Buffer\";\nimport \"../source/BufferSource\";\n\n/**\n * @class Tone.GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n *        Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the\n *        amount of time each small chunk of audio is played for and the overlap is the\n *        amount of crossfading transition time between successive grains.\n * @extends {Tone.Source}\n * @param {String|Tone.Buffer} url\tThe url to load, or the Tone.Buffer to play.\n * @param {Function=} callback The callback to invoke after the url is loaded.\n */\nTone.GrainPlayer = function(){\n\n\tvar options = Tone.defaults(arguments, [\"url\", \"onload\"], Tone.GrainPlayer);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The audio buffer belonging to the player.\n\t *  @type  {Tone.Buffer}\n\t */\n\tthis.buffer = new Tone.Buffer(options.url, options.onload.bind(undefined, this));\n\n\t/**\n\t *  Create a repeating tick to schedule\n\t *  the grains.\n\t *  @type  {Tone.Clock}\n\t *  @private\n\t */\n\tthis._clock = new Tone.Clock(this._tick.bind(this), options.grainSize);\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopStart = 0;\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopEnd = 0;\n\n\t/**\n\t * All of the currently playing BufferSources\n\t * @type {Array}\n\t * @private\n\t */\n\tthis._activeSources = [];\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._playbackRate = options.playbackRate;\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._grainSize = options.grainSize;\n\n\t/**\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._overlap = options.overlap;\n\n\t/**\n\t *  Adjust the pitch independently of the playbackRate.\n\t *  @type  {Cents}\n\t */\n\tthis.detune = options.detune;\n\n\t//setup\n\tthis.overlap = options.overlap;\n\tthis.loop = options.loop;\n\tthis.playbackRate = options.playbackRate;\n\tthis.grainSize = options.grainSize;\n\tthis.loopStart = options.loopStart;\n\tthis.loopEnd = options.loopEnd;\n\tthis.reverse = options.reverse;\n\n\tthis._clock.on(\"stop\", this._onstop.bind(this));\n};\n\nTone.extend(Tone.GrainPlayer, Tone.Source);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.GrainPlayer.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"overlap\" : 0.1,\n\t\"grainSize\" : 0.2,\n\t\"playbackRate\" : 1,\n\t\"detune\" : 0,\n\t\"loop\" : false,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : 0,\n\t\"reverse\" : false\n};\n\n/**\n *  Play the buffer at the given startTime. Optionally add an offset\n *  and/or duration which will play the buffer from a position\n *  within the buffer for the given duration.\n *\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @returns {Tone.GrainPlayer} this\n *  @memberOf Tone.GrainPlayer#\n *  @method start\n *  @name start\n */\n\n/**\n *  Internal start method\n *  @param {Time} time\n *  @param {Time} offset\n *  @private\n */\nTone.GrainPlayer.prototype._start = function(time, offset, duration){\n\toffset = Tone.defaultArg(offset, 0);\n\toffset = this.toSeconds(offset);\n\ttime = this.toSeconds(time);\n\n\tthis._offset = offset;\n\tthis._clock.start(time);\n\n\tif (duration){\n\t\tthis.stop(time + this.toSeconds(duration));\n\t}\n};\n\n/**\n *  Internal start method\n *  @param {Time} time\n *  @private\n */\nTone.GrainPlayer.prototype._stop = function(time){\n\tthis._clock.stop(time);\n};\n\n/**\n * Invoked when the clock is stopped\n * @param  {Number} time\n * @private\n */\nTone.GrainPlayer.prototype._onstop = function(time){\n\t//stop the players\n\tthis._activeSources.forEach(function(source){\n\t\tsource.fadeOut = 0;\n\t\tsource.stop(time);\n\t});\n};\n\n/**\n *  Invoked on each clock tick. scheduled a new\n *  grain at this time.\n *  @param  {Time}  time\n *  @private\n */\nTone.GrainPlayer.prototype._tick = function(time){\n\n\t//check if it should stop looping\n\tif (!this.loop && this._offset > this.buffer.duration){\n\t\tthis.stop(time);\n\t\treturn;\n\t}\n\n\t//at the beginning of the file, the fade in should be 0\n\tvar fadeIn = this._offset < this._overlap ? 0 : this._overlap;\n\n\t//create a buffer source\n\tvar source = new Tone.BufferSource({\n\t\t\"buffer\" : this.buffer,\n\t\t\"fadeIn\" : fadeIn,\n\t\t\"fadeOut\" : this._overlap,\n\t\t\"loop\" : this.loop,\n\t\t\"loopStart\" : this._loopStart,\n\t\t\"loopEnd\" : this._loopEnd,\n\t\t//compute the playbackRate based on the detune\n\t\t\"playbackRate\" : Tone.intervalToFrequencyRatio(this.detune / 100)\n\t}).connect(this.output);\n\n\tsource.start(time, this._offset);\n\tthis._offset += this.grainSize;\n\tsource.stop(time + this.grainSize / this.playbackRate);\n\n\t//add it to the active sources\n\tthis._activeSources.push(source);\n\t//remove it when it's done\n\tsource.onended = function(){\n\t\tvar index = this._activeSources.indexOf(source);\n\t\tif (index !== -1){\n\t\t\tthis._activeSources.splice(index, 1);\n\t\t}\n\t}.bind(this);\n};\n\n/**\n * The playback rate of the sample\n * @memberOf Tone.GrainPlayer#\n * @type {Positive}\n * @name playbackRate\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tthis.grainSize = this._grainSize;\n\t}\n});\n\n/**\n * The loop start time.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn this._loopStart;\n\t},\n\tset : function(time){\n\t\tthis._loopStart = this.toSeconds(time);\n\t}\n});\n\n/**\n * The loop end time.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn this._loopEnd;\n\t},\n\tset : function(time){\n\t\tthis._loopEnd = this.toSeconds(time);\n\t}\n});\n\n/**\n * The direction the buffer should play in\n * @memberOf Tone.GrainPlayer#\n * @type {boolean}\n * @name reverse\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"reverse\", {\n\tget : function(){\n\t\treturn this.buffer.reverse;\n\t},\n\tset : function(rev){\n\t\tthis.buffer.reverse = rev;\n\t}\n});\n\n/**\n * The size of each chunk of audio that the\n * buffer is chopped into and played back at.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name grainSize\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"grainSize\", {\n\tget : function(){\n\t\treturn this._grainSize;\n\t},\n\tset : function(size){\n\t\tthis._grainSize = this.toSeconds(size);\n\t\tthis._clock.frequency.value = this._playbackRate / this._grainSize;\n\t}\n});\n\n/**\n * This is the duration of the cross-fade between\n * sucessive grains.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name overlap\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"overlap\", {\n\tget : function(){\n\t\treturn this._overlap;\n\t},\n\tset : function(time){\n\t\tthis._overlap = this.toSeconds(time);\n\t}\n});\n\n/**\n * If all the buffer is loaded\n * @memberOf Tone.GrainPlayer#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"loaded\", {\n\tget : function(){\n\t\treturn this.buffer.loaded;\n\t}\n});\n\n/**\n * Clean up\n * @return {Tone.GrainPlayer} this\n */\nTone.GrainPlayer.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis.buffer.dispose();\n\tthis.buffer = null;\n\tthis._clock.dispose();\n\tthis._clock = null;\n\tthis._activeSources.forEach(function(source){\n\t\tsource.dispose();\n\t});\n\tthis._activeSources = null;\n\treturn this;\n};\n\nexport default Tone.GrainPlayer;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../source/Source\";\nimport \"../source/TickSource\";\nimport \"../source/BufferSource\";\n\n/**\n *  @class  Tone.Player is an audio file player with start, loop, and stop functions.\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {string|AudioBuffer} url Either the AudioBuffer or the url from\n *                                  which to load the AudioBuffer\n *  @param {Function=} onload The function to invoke when the buffer is loaded.\n *                            Recommended to use Tone.Buffer.on('load') instead.\n *  @example\n * var player = new Tone.Player(\"./path/to/sample.mp3\").toMaster();\n * //play as soon as the buffer is loaded\n * player.autostart = true;\n */\nTone.Player = function(url){\n\n\tvar options;\n\tif (url instanceof Tone.Buffer && url.loaded){\n\t\turl = url.get();\n\t\toptions = Tone.Player.defaults;\n\t} else {\n\t\toptions = Tone.defaults(arguments, [\"url\", \"onload\"], Tone.Player);\n\t}\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  If the file should play as soon\n\t *  as the buffer is loaded.\n\t *  @type {Boolean}\n\t *  @example\n\t * //will play as soon as it's loaded\n\t * var player = new Tone.Player({\n\t * \t\"url\" : \"./path/to/sample.mp3\",\n\t * \t\"autostart\" : true,\n\t * }).toMaster();\n\t */\n\tthis.autostart = options.autostart;\n\n\t/**\n\t *  the buffer\n\t *  @private\n\t *  @type {Tone.Buffer}\n\t */\n\tthis._buffer = new Tone.Buffer({\n\t\t\"url\" : options.url,\n\t\t\"onload\" : this._onload.bind(this, options.onload),\n\t\t\"reverse\" : options.reverse\n\t});\n\tif (url instanceof AudioBuffer){\n\t\tthis._buffer.set(url);\n\t}\n\n\t/**\n\t *  if the buffer should loop once it's over\n\t *  @type {Boolean}\n\t *  @private\n\t */\n\tthis._loop = options.loop;\n\n\t/**\n\t *  if 'loop' is true, the loop will start at this position\n\t *  @type {Time}\n\t *  @private\n\t */\n\tthis._loopStart = options.loopStart;\n\n\t/**\n\t *  if 'loop' is true, the loop will end at this position\n\t *  @type {Time}\n\t *  @private\n\t */\n\tthis._loopEnd = options.loopEnd;\n\n\t/**\n\t *  the playback rate\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._playbackRate = options.playbackRate;\n\n\t/**\n\t *  All of the active buffer source nodes\n\t *  @type {Array<Tone.BufferSource>}\n\t *  @private\n\t */\n\tthis._activeSources = [];\n\n\t/**\n\t *  The fadeIn time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeIn = options.fadeIn;\n\n\t/**\n\t *  The fadeOut time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeOut = options.fadeOut;\n};\n\nTone.extend(Tone.Player, Tone.Source);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Player.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"playbackRate\" : 1,\n\t\"loop\" : false,\n\t\"autostart\" : false,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : 0,\n\t\"reverse\" : false,\n\t\"fadeIn\" : 0,\n\t\"fadeOut\" : 0\n};\n\n/**\n *  Load the audio file as an audio buffer.\n *  Decodes the audio asynchronously and invokes\n *  the callback once the audio buffer loads.\n *  Note: this does not need to be called if a url\n *  was passed in to the constructor. Only use this\n *  if you want to manually load a new url.\n * @param {string} url The url of the buffer to load.\n *                     Filetype support depends on the\n *                     browser.\n *  @param  {Function=} callback The function to invoke once\n *                               the sample is loaded.\n *  @returns {Promise}\n */\nTone.Player.prototype.load = function(url, callback){\n\treturn this._buffer.load(url, this._onload.bind(this, callback));\n};\n\n/**\n * Internal callback when the buffer is loaded.\n * @private\n */\nTone.Player.prototype._onload = function(callback){\n\tcallback = Tone.defaultArg(callback, Tone.noOp);\n\tcallback(this);\n\tif (this.autostart){\n\t\tthis.start();\n\t}\n};\n\n/**\n * Internal callback when the buffer is done playing.\n * @private\n */\nTone.Player.prototype._onSourceEnd = function(source){\n\tvar index = this._activeSources.indexOf(source);\n\tthis._activeSources.splice(index, 1);\n\tif (this._activeSources.length === 0 && !this._synced){\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, Tone.now());\n\t}\n};\n\n/**\n *  Play the buffer at the given startTime. Optionally add an offset\n *  and/or duration which will play the buffer from a position\n *  within the buffer for the given duration.\n *\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @returns {Tone.Player} this\n *  @memberOf Tone.Player#\n *  @method start\n *  @name start\n */\n\n/**\n *  Internal start method\n *  @private\n */\nTone.Player.prototype._start = function(startTime, offset, duration){\n\t//if it's a loop the default offset is the loopstart point\n\tif (this._loop){\n\t\toffset = Tone.defaultArg(offset, this._loopStart);\n\t} else {\n\t\t//otherwise the default offset is 0\n\t\toffset = Tone.defaultArg(offset, 0);\n\t}\n\n\t//compute the values in seconds\n\toffset = this.toSeconds(offset);\n\t\n\t//if it's synced, it should factor in the playback rate for computing the offset\n\tif (this._synced){\n\t\toffset *= this._playbackRate;\n\t}\n\n\t//compute the duration which is either the passed in duration of the buffer.duration - offset\n\tvar computedDuration = Tone.defaultArg(duration, Math.max(this._buffer.duration - offset, 0));\n\tcomputedDuration = this.toSeconds(computedDuration);\n\n\t//scale it by the playback rate\n\tcomputedDuration = computedDuration / this._playbackRate;\n\n\t//get the start time\n\tstartTime = this.toSeconds(startTime);\n\n\t//make the source\n\tvar source = new Tone.BufferSource({\n\t\t\"buffer\" : this._buffer,\n\t\t\"loop\" : this._loop,\n\t\t\"loopStart\" : this._loopStart,\n\t\t\"loopEnd\" : this._loopEnd,\n\t\t\"onended\" : this._onSourceEnd.bind(this),\n\t\t\"playbackRate\" : this._playbackRate,\n\t\t\"fadeIn\" : this.fadeIn,\n\t\t\"fadeOut\" : this.fadeOut,\n\t}).connect(this.output);\n\n\t//set the looping properties\n\tif (!this._loop && !this._synced){\n\t\t//if it's not looping, set the state change at the end of the sample\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, startTime + computedDuration);\n\t}\n\n\t//add it to the array of active sources\n\tthis._activeSources.push(source);\n\n\t//start it\n\tif (this._loop && Tone.isUndef(duration)){\n\t\tsource.start(startTime, offset);\n\t} else {\n\t\t//subtract the fade out time\n\t\tsource.start(startTime, offset, computedDuration - this.toSeconds(this.fadeOut));\n\t}\n\treturn this;\n};\n\n/**\n *  Stop playback.\n *  @private\n *  @param  {Time} [time=now]\n *  @returns {Tone.Player} this\n */\nTone.Player.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._activeSources.forEach(function(source){\n\t\tsource.stop(time);\n\t});\n\treturn this;\n};\n\n/**\n * Stop and then restart the player from the beginning (or offset)\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @returns {Tone.Player} this\n */\nTone.Player.prototype.restart = function(time, offset, duration){\n\tthis._stop(time);\n\tthis._start(time, offset, duration);\n\treturn this;\n};\n\n/**\n *  Seek to a specific time in the player's buffer. If the\n *  source is no longer playing at that time, it will stop.\n *  If you seek to a time that\n *  @param {Time} offset The time to seek to.\n *  @param {Time=} time The time for the seek event to occur.\n *  @return {Tone.Player} this\n *  @example\n * source.start(0.2);\n * source.stop(0.4);\n */\nTone.Player.prototype.seek = function(offset, time){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\toffset = this.toSeconds(offset);\n\t\t// if it's currently playing, stop it\n\t\tthis._stop(time);\n\t\t//restart it at the given time\n\t\tthis._start(time, offset);\n\t}\n\treturn this;\n};\n\n/**\n *  Set the loop start and end. Will only loop if loop is\n *  set to true.\n *  @param {Time} loopStart The loop end time\n *  @param {Time} loopEnd The loop end time\n *  @returns {Tone.Player} this\n *  @example\n * //loop 0.1 seconds of the file.\n * player.setLoopPoints(0.2, 0.3);\n * player.loop = true;\n */\nTone.Player.prototype.setLoopPoints = function(loopStart, loopEnd){\n\tthis.loopStart = loopStart;\n\tthis.loopEnd = loopEnd;\n\treturn this;\n};\n\n/**\n * If loop is true, the loop will start at this position.\n * @memberOf Tone.Player#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.Player.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn this._loopStart;\n\t},\n\tset : function(loopStart){\n\t\tthis._loopStart = loopStart;\n\t\t//get the current source\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.loopStart = loopStart;\n\t\t});\n\t}\n});\n\n/**\n * If loop is true, the loop will end at this position.\n * @memberOf Tone.Player#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.Player.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn this._loopEnd;\n\t},\n\tset : function(loopEnd){\n\t\tthis._loopEnd = loopEnd;\n\t\t//get the current source\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.loopEnd = loopEnd;\n\t\t});\n\t}\n});\n\n/**\n * The audio buffer belonging to the player.\n * @memberOf Tone.Player#\n * @type {Tone.Buffer}\n * @name buffer\n */\nObject.defineProperty(Tone.Player.prototype, \"buffer\", {\n\tget : function(){\n\t\treturn this._buffer;\n\t},\n\tset : function(buffer){\n\t\tthis._buffer.set(buffer);\n\t}\n});\n\n/**\n * If the buffer should loop once it's over.\n * @memberOf Tone.Player#\n * @type {Boolean}\n * @name loop\n */\nObject.defineProperty(Tone.Player.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._loop;\n\t},\n\tset : function(loop){\n\t\t//if no change, do nothing\n\t\tif (this._loop === loop){\n\t\t\treturn;\n\t\t}\n\t\tthis._loop = loop;\n\t\t//set the loop of all of the sources\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.loop = loop;\n\t\t});\n\t\tif (loop){\n\t\t\t//remove the next stopEvent\n\t\t\tvar stopEvent = this._state.getNextState(Tone.State.Stopped, this.now());\n\t\t\tif (stopEvent){\n\t\t\t\tthis._state.cancel(stopEvent.time);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n * The playback speed. 1 is normal speed. This is not a signal because\n * Safari and iOS currently don't support playbackRate as a signal.\n * @memberOf Tone.Player#\n * @type {Number}\n * @name playbackRate\n */\nObject.defineProperty(Tone.Player.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tvar now = this.now();\n\n\t\t//cancel the stop event since it's at a different time now\n\t\tvar stopEvent = this._state.getNextState(Tone.State.Stopped, now);\n\t\tif (stopEvent){\n\t\t\tthis._state.cancel(stopEvent.time);\n\t\t}\n\n\t\t//set all the sources\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.cancelStop();\n\t\t\tsource.playbackRate.setValueAtTime(rate, now);\n\t\t});\n\t}\n});\n\n/**\n * The direction the buffer should play in\n * @memberOf Tone.Player#\n * @type {Boolean}\n * @name reverse\n */\nObject.defineProperty(Tone.Player.prototype, \"reverse\", {\n\tget : function(){\n\t\treturn this._buffer.reverse;\n\t},\n\tset : function(rev){\n\t\tthis._buffer.reverse = rev;\n\t}\n});\n\n/**\n * If all the buffer is loaded\n * @memberOf Tone.Player#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Player.prototype, \"loaded\", {\n\tget : function(){\n\t\treturn this._buffer.loaded;\n\t}\n});\n\n/**\n *  Dispose and disconnect.\n *  @return {Tone.Player} this\n */\nTone.Player.prototype.dispose = function(){\n\t//disconnect all of the players\n\tthis._activeSources.forEach(function(source){\n\t\tsource.dispose();\n\t});\n\tthis._activeSources = null;\n\tTone.Source.prototype.dispose.call(this);\n\tthis._buffer.dispose();\n\tthis._buffer = null;\n\treturn this;\n};\n\nexport default Tone.Player;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Player\";\nimport \"../component/Volume\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Players combines multiple [Tone.Player](Player) objects.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Object} urls An object mapping a name to a url.\n *  @param {function=} onload The function to invoke when all buffers are loaded.\n */\nTone.Players = function(urls){\n\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.shift();\n\tvar options = Tone.defaults(args, [\"onload\"], Tone.Players);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The output volume node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * source.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\t//make the output explicitly stereo\n\tthis._volume.output.output.channelCount = 2;\n\tthis._volume.output.output.channelCountMode = \"explicit\";\n\t//mute initially\n\tthis.mute = options.mute;\n\n\t/**\n\t * The container of all of the players\n\t * @type {Object}\n\t * @private\n\t */\n\tthis._players = {};\n\n\t/**\n\t * The loading count\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._loadingCount = 0;\n\n\t/**\n\t * private holder of the fadeIn time\n\t * @type {Time}\n\t * @private\n\t */\n\tthis._fadeIn = options.fadeIn;\n\n\t/**\n\t * private holder of the fadeOut time\n\t * @type {Time}\n\t * @private\n\t */\n\tthis._fadeOut = options.fadeOut;\n\n\t//add all of the players\n\tfor (var name in urls){\n\t\tthis._loadingCount++;\n\t\tthis.add(name, urls[name], this._bufferLoaded.bind(this, options.onload));\n\t}\n};\n\nTone.extend(Tone.Players, Tone.AudioNode);\n\n/**\n * The default values\n * @type {Object}\n */\nTone.Players.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false,\n\t\"onload\" : Tone.noOp,\n\t\"fadeIn\" : 0,\n\t\"fadeOut\" : 0\n};\n\n/**\n *  A buffer was loaded. decrement the counter.\n *  @param  {Function}  callback\n *  @private\n */\nTone.Players.prototype._bufferLoaded = function(callback){\n\tthis._loadingCount--;\n\tif (this._loadingCount === 0 && callback){\n\t\tcallback(this);\n\t}\n};\n\n/**\n * Mute the output.\n * @memberOf Tone.Source#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * source.mute = true;\n */\nObject.defineProperty(Tone.Players.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n * The fadeIn time of the amplitude envelope.\n * @memberOf Tone.Source#\n * @type {Time}\n * @name fadeIn\n */\nObject.defineProperty(Tone.Players.prototype, \"fadeIn\", {\n\tget : function(){\n\t\treturn this._fadeIn;\n\t},\n\tset : function(fadeIn){\n\t\tthis._fadeIn = fadeIn;\n\t\tthis._forEach(function(player){\n\t\t\tplayer.fadeIn = fadeIn;\n\t\t});\n\t}\n});\n\n/**\n * The fadeOut time of the amplitude envelope.\n * @memberOf Tone.Source#\n * @type {Time}\n * @name fadeOut\n */\nObject.defineProperty(Tone.Players.prototype, \"fadeOut\", {\n\tget : function(){\n\t\treturn this._fadeOut;\n\t},\n\tset : function(fadeOut){\n\t\tthis._fadeOut = fadeOut;\n\t\tthis._forEach(function(player){\n\t\t\tplayer.fadeOut = fadeOut;\n\t\t});\n\t}\n});\n\n/**\n * The state of the players object. Returns \"started\" if any of the players are playing.\n * @memberOf Tone.Players#\n * @type {String}\n * @name state\n * @readOnly\n */\nObject.defineProperty(Tone.Players.prototype, \"state\", {\n\tget : function(){\n\t\tvar playing = false;\n\t\tthis._forEach(function(player){\n\t\t\tplaying = playing || player.state === Tone.State.Started;\n\t\t});\n\t\treturn playing ? Tone.State.Started : Tone.State.Stopped;\n\t}\n});\n\n/**\n *  True if the buffers object has a buffer by that name.\n *  @param  {String|Number}  name  The key or index of the\n *                                 buffer.\n *  @return  {Boolean}\n */\nTone.Players.prototype.has = function(name){\n\treturn this._players.hasOwnProperty(name);\n};\n\n/**\n *  Get a player by name.\n *  @param  {String}  name  The players name as defined in\n *                          the constructor object or `add` method.\n *  @return  {Tone.Player}\n */\nTone.Players.prototype.get = function(name){\n\tif (this.has(name)){\n\t\treturn this._players[name];\n\t} else {\n\t\tthrow new Error(\"Tone.Players: no player named \"+name);\n\t}\n};\n\n/**\n * Iterate over all of the players\n * @param  {Function} callback\n * @return {Tone.Players}            this\n * @private\n */\nTone.Players.prototype._forEach = function(callback){\n\tfor (var playerName in this._players){\n\t\tcallback(this._players[playerName], playerName);\n\t}\n\treturn this;\n};\n\n/**\n * If all the buffers are loaded or not\n * @memberOf Tone.Players#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Players.prototype, \"loaded\", {\n\tget : function(){\n\t\tvar isLoaded = true;\n\t\tthis._forEach(function(player){\n\t\t\tisLoaded = isLoaded && player.loaded;\n\t\t});\n\t\treturn isLoaded;\n\t}\n});\n\n/**\n *  Add a player by name and url to the Players\n *  @param  {String}    name      A unique name to give the player\n *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer,\n *                                                 or a buffer which will be added\n *                                                 with the given name.\n *  @param  {Function=}  callback  The callback to invoke\n *                                 when the url is loaded.\n */\nTone.Players.prototype.add = function(name, url, callback){\n\tthis._players[name] = new Tone.Player(url, callback).connect(this.output);\n\tthis._players[name].fadeIn = this._fadeIn;\n\tthis._players[name].fadeOut = this._fadeOut;\n\treturn this;\n};\n\n/**\n * Stop all of the players at the given time\n * @param {Time} time The time to stop all of the players.\n * @return {Tone.Players} this\n */\nTone.Players.prototype.stopAll = function(time){\n\tthis._forEach(function(player){\n\t\tplayer.stop(time);\n\t});\n};\n\n/**\n *  Dispose and disconnect.\n *  @return {Tone.Players} this\n */\nTone.Players.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis._writable(\"volume\");\n\tthis.volume = null;\n\tthis.output = null;\n\tthis._forEach(function(player){\n\t\tplayer.dispose();\n\t});\n\tthis._players = null;\n\treturn this;\n};\n\nexport default Tone.Players;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Volume\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.UserMedia uses MediaDevices.getUserMedia to open up\n *          and external microphone or audio input. Check\n *          [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n *          to see which browsers are supported. Access to an external input\n *          is limited to secure (HTTPS) connections.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Decibels=} volume The level of the input\n *  @example\n * //list the inputs and open the third one\n * var motu = new Tone.UserMedia();\n *\n * //opening the input asks the user to activate their mic\n * motu.open().then(function(){\n * \t//promise resolves when input is available\n * });\n */\n\nTone.UserMedia = function(){\n\n\tvar options = Tone.defaults(arguments, [\"volume\"], Tone.UserMedia);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The MediaStreamNode\n\t *  @type {MediaStreamAudioSourceNode}\n\t *  @private\n\t */\n\tthis._mediaStream = null;\n\n\t/**\n\t *  The media stream created by getUserMedia.\n\t *  @type {LocalMediaStream}\n\t *  @private\n\t */\n\tthis._stream = null;\n\n\t/**\n\t *  The open device\n\t *  @type  {MediaDeviceInfo}\n\t *  @private\n\t */\n\tthis._device = null;\n\n\t/**\n\t *  The output volume node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * input.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\tthis.mute = options.mute;\n};\n\nTone.extend(Tone.UserMedia, Tone.AudioNode);\n\n/**\n * the default parameters\n * @type {Object}\n */\nTone.UserMedia.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n *  Open the media stream. If a string is passed in, it is assumed\n *  to be the label or id of the stream, if a number is passed in,\n *  it is the input number of the stream.\n *  @param  {String|Number} [labelOrId=\"default\"] The label or id of the audio input media device.\n *                                                With no argument, the default stream is opened.\n *  @return {Promise} The promise is resolved when the stream is open.\n */\nTone.UserMedia.prototype.open = function(labelOrId){\n\t//close the previous stream\n\tif (this.state === Tone.State.Started){\n\t\tthis.close();\n\t}\n\treturn Tone.UserMedia.enumerateDevices().then(function(devices){\n\t\tvar device;\n\t\tif (Tone.isNumber(labelOrId)){\n\t\t\tdevice = devices[labelOrId];\n\t\t} else {\n\t\t\tdevice = devices.find(function(device){\n\t\t\t\treturn device.label === labelOrId || device.deviceId === labelOrId;\n\t\t\t});\n\t\t\t//didn't find a matching device\n\t\t\tif (!device && devices.length > 0){\n\t\t\t\tdevice = devices[0];\n\t\t\t} else if (!device && Tone.isDefined(labelOrId)){\n\t\t\t\tthrow new Error(\"Tone.UserMedia: no matching device: \"+labelOrId);\n\t\t\t}\n\t\t}\n\t\tthis._device = device;\n\t\t//do getUserMedia\n\t\tvar constraints = {\n\t\t\taudio : {\n\t\t\t\t\"echoCancellation\" : false,\n\t\t\t\t\"sampleRate\" : this.context.sampleRate,\n\t\t\t\t\"noiseSuppression\" : false,\n\t\t\t\t\"mozNoiseSuppression\" : false,\n\t\t\t}\n\t\t};\n\t\tif (device){\n\t\t\tconstraints.audio.deviceId = device.deviceId;\t\t\t\t\n\t\t}\n\t\treturn navigator.mediaDevices.getUserMedia(constraints).then(function(stream){\n\t\t\t//start a new source only if the previous one is closed\n\t\t\tif (!this._stream){\n\t\t\t\tthis._stream = stream;\n\t\t\t\t//Wrap a MediaStreamSourceNode around the live input stream.\n\t\t\t\tthis._mediaStream = this.context.createMediaStreamSource(stream);\n\t\t\t\t//Connect the MediaStreamSourceNode to a gate gain node\n\t\t\t\tTone.connect(this._mediaStream, this.output);\n\t\t\t}\n\t\t\treturn this;\n\t\t}.bind(this));\n\t}.bind(this));\n};\n\n/**\n *  Close the media stream\n *  @return {Tone.UserMedia} this\n */\nTone.UserMedia.prototype.close = function(){\n\tif (this._stream){\n\t\tthis._stream.getAudioTracks().forEach(function(track){\n\t\t\ttrack.stop();\n\t\t});\n\t\tthis._stream = null;\n\t\t//remove the old media stream\n\t\tthis._mediaStream.disconnect();\n\t\tthis._mediaStream = null;\n\t}\n\tthis._device = null;\n\treturn this;\n};\n\n/**\n *  Returns a promise which resolves with the list of audio input devices available.\n *  @return {Promise} The promise that is resolved with the devices\n *  @static\n *  @example\n * Tone.UserMedia.enumerateDevices().then(function(devices){\n * \tconsole.log(devices)\n * })\n */\nTone.UserMedia.enumerateDevices = function(){\n\treturn navigator.mediaDevices.enumerateDevices().then(function(devices){\n\t\treturn devices.filter(function(device){\n\t\t\treturn device.kind === \"audioinput\";\n\t\t});\n\t});\n};\n\n/**\n *  Returns the playback state of the source, \"started\" when the microphone is open\n *  and \"stopped\" when the mic is closed.\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name state\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._stream && this._stream.active ? Tone.State.Started : Tone.State.Stopped;\n\t}\n});\n\n/**\n * \tReturns an identifier for the represented device that is\n * \tpersisted across sessions. It is un-guessable by other applications and\n * \tunique to the origin of the calling application. It is reset when the\n * \tuser clears cookies (for Private Browsing, a different identifier is\n * \tused that is not persisted across sessions). Returns undefined when the\n * \tdevice is not open.\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name deviceId\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"deviceId\", {\n\tget : function(){\n\t\tif (this._device){\n\t\t\treturn this._device.deviceId;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n});\n\n/**\n * \tReturns a group identifier. Two devices have the\n * \tsame group identifier if they belong to the same physical device.\n * \tReturns undefined when the device is not open.\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name groupId\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"groupId\", {\n\tget : function(){\n\t\tif (this._device){\n\t\t\treturn this._device.groupId;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n});\n\n/**\n * \tReturns a label describing this device (for example \"Built-in Microphone\").\n * \tReturns undefined when the device is not open or label is not available\n * \tbecause of permissions.\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name groupId\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"label\", {\n\tget : function(){\n\t\tif (this._device){\n\t\t\treturn this._device.label;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n});\n\n/**\n * Mute the output.\n * @memberOf Tone.UserMedia#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * userMedia.mute = true;\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n * Clean up.\n * @return {Tone.UserMedia} this\n */\nTone.UserMedia.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.close();\n\tthis._writable(\"volume\");\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n\treturn this;\n};\n\n/**\n *  If getUserMedia is supported by the browser.\n *  @type  {Boolean}\n *  @memberOf Tone.UserMedia#\n *  @name supported\n *  @static\n *  @readOnly\n */\nObject.defineProperty(Tone.UserMedia, \"supported\", {\n\tget : function(){\n\t\treturn Tone.isDefined(navigator.mediaDevices) && Tone.isFunction(navigator.mediaDevices.getUserMedia);\n\t}\n});\n\nexport default Tone.UserMedia;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Frequency\";\n\n/**\n *  @class Tone.Midi is a primitive type for encoding Time values.\n *         Tone.Midi can be constructed with or without the `new` keyword. Tone.Midi can be passed\n *         into the parameter of any method which takes time as an argument.\n *  @constructor\n *  @extends {Tone.Frequency}\n *  @param  {String|Number}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * var t = Tone.Midi(\"4n\");//a quarter note\n */\nTone.Midi = function(val, units){\n\tif (this instanceof Tone.Midi){\n\n\t\tTone.Frequency.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Midi(val, units);\n\t}\n};\n\nTone.extend(Tone.Midi, Tone.Frequency);\n\n/**\n *  The default units if none are given.\n *  @type {String}\n *  @private\n */\nTone.Midi.prototype._defaultUnits = \"midi\";\n\n/**\n *  Returns the value of a frequency in the current units\n *  @param {Frequency} freq\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._frequencyToUnits = function(freq){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._frequencyToUnits.call(this, freq));\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._ticksToUnits = function(ticks){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._ticksToUnits.call(this, ticks));\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._beatsToUnits = function(beats){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._beatsToUnits.call(this, beats));\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._secondsToUnits = function(seconds){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._secondsToUnits.call(this, seconds));\n};\n\n/**\n *  Return the value of the frequency as a MIDI note\n *  @return  {MIDI}\n *  @example\n * Tone.Midi(60).toMidi(); //60\n */\nTone.Midi.prototype.toMidi = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the value of the frequency as a MIDI note\n *  @return  {MIDI}\n *  @example\n * Tone.Midi(60).toFrequency(); //261.6255653005986\n */\nTone.Midi.prototype.toFrequency = function(){\n\treturn Tone.Frequency.mtof(this.toMidi());\n};\n\n/**\n *  Transposes the frequency by the given number of semitones.\n *  @param  {Interval}  interval\n *  @return  {Tone.Frequency} A new transposed frequency\n *  @example\n * Tone.Midi(\"A4\").transpose(3); //\"C5\"\n */\nTone.Midi.prototype.transpose = function(interval){\n\treturn new this.constructor(this.toMidi() + interval);\n};\n\nexport default Tone.Midi;\n\n","require(\"./component/AmplitudeEnvelope\");\nrequire(\"./component/Analyser\");\nrequire(\"./component/Channel\");\nrequire(\"./component/Compressor\");\nrequire(\"./component/CrossFade\");\nrequire(\"./component/Envelope\");\nrequire(\"./component/EQ3\");\nrequire(\"./component/FeedbackCombFilter\");\nrequire(\"./component/FFT\");\nrequire(\"./component/Filter\");\nrequire(\"./component/Follower\");\nrequire(\"./component/FrequencyEnvelope\");\nrequire(\"./component/Gate\");\nrequire(\"./component/LFO\");\nrequire(\"./component/Limiter\");\nrequire(\"./component/LowpassCombFilter\");\nrequire(\"./component/Merge\");\nrequire(\"./component/Meter\");\nrequire(\"./component/MidSideCompressor\");\nrequire(\"./component/MidSideMerge\");\nrequire(\"./component/MidSideSplit\");\nrequire(\"./component/Mono\");\nrequire(\"./component/MultibandCompressor\");\nrequire(\"./component/MultibandSplit\");\nrequire(\"./component/Panner\");\nrequire(\"./component/Panner3D\");\nrequire(\"./component/PanVol\");\nrequire(\"./component/ScaledEnvelope\");\nrequire(\"./component/Solo\");\nrequire(\"./component/Split\");\nrequire(\"./component/Volume\");\nrequire(\"./component/Waveform\");\nrequire(\"./control/CtrlInterpolate\");\nrequire(\"./control/CtrlMarkov\");\nrequire(\"./control/CtrlPattern\");\nrequire(\"./control/CtrlRandom\");\nrequire(\"./core/AudioNode\");\nrequire(\"./core/Buffer\");\nrequire(\"./core/Buffers\");\nrequire(\"./core/Bus\");\nrequire(\"./core/Clock\");\nrequire(\"./core/Context\");\nrequire(\"./core/Delay\");\nrequire(\"./core/Draw\");\nrequire(\"./core/Emitter\");\nrequire(\"./core/Gain\");\nrequire(\"./core/IntervalTimeline\");\nrequire(\"./core/Listener\");\nrequire(\"./core/Master\");\nrequire(\"./core/Offline\");\nrequire(\"./core/OfflineContext\");\nrequire(\"./core/Param\");\nrequire(\"./core/Timeline\");\nrequire(\"./core/TimelineState\");\nrequire(\"./core/Transport\");\nrequire(\"./core/TransportEvent\");\nrequire(\"./core/TransportRepeatEvent\");\nrequire(\"./effect/AutoFilter\");\nrequire(\"./effect/AutoPanner\");\nrequire(\"./effect/AutoWah\");\nrequire(\"./effect/BitCrusher\");\nrequire(\"./effect/Chebyshev\");\nrequire(\"./effect/Chorus\");\nrequire(\"./effect/Convolver\");\nrequire(\"./effect/Distortion\");\nrequire(\"./effect/Effect\");\nrequire(\"./effect/FeedbackDelay\");\nrequire(\"./effect/FeedbackEffect\");\nrequire(\"./effect/Freeverb\");\nrequire(\"./effect/JCReverb\");\nrequire(\"./effect/MidSideEffect\");\nrequire(\"./effect/Phaser\");\nrequire(\"./effect/PingPongDelay\");\nrequire(\"./effect/PitchShift\");\nrequire(\"./effect/Reverb\");\nrequire(\"./effect/StereoEffect\");\nrequire(\"./effect/StereoFeedbackEffect\");\nrequire(\"./effect/StereoWidener\");\nrequire(\"./effect/StereoXFeedbackEffect\");\nrequire(\"./effect/Tremolo\");\nrequire(\"./effect/Vibrato\");\nrequire(\"./event/Event\");\nrequire(\"./event/Loop\");\nrequire(\"./event/Part\");\nrequire(\"./event/Pattern\");\nrequire(\"./event/Sequence\");\nrequire(\"./instrument/AMSynth\");\nrequire(\"./instrument/DuoSynth\");\nrequire(\"./instrument/FMSynth\");\nrequire(\"./instrument/Instrument\");\nrequire(\"./instrument/MembraneSynth\");\nrequire(\"./instrument/MetalSynth\");\nrequire(\"./instrument/Monophonic\");\nrequire(\"./instrument/MonoSynth\");\nrequire(\"./instrument/NoiseSynth\");\nrequire(\"./instrument/PluckSynth\");\nrequire(\"./instrument/PolySynth\");\nrequire(\"./instrument/Sampler\");\nrequire(\"./instrument/Synth\");\nrequire(\"./signal/Abs\");\nrequire(\"./signal/Add\");\nrequire(\"./signal/AudioToGain\");\nrequire(\"./signal/EqualPowerGain\");\nrequire(\"./signal/GainToAudio\");\nrequire(\"./signal/GreaterThan\");\nrequire(\"./signal/GreaterThanZero\");\nrequire(\"./signal/Modulo\");\nrequire(\"./signal/Multiply\");\nrequire(\"./signal/Negate\");\nrequire(\"./signal/Normalize\");\nrequire(\"./signal/Pow\");\nrequire(\"./signal/Scale\");\nrequire(\"./signal/ScaleExp\");\nrequire(\"./signal/Signal\");\nrequire(\"./signal/SignalBase\");\nrequire(\"./signal/Subtract\");\nrequire(\"./signal/TickSignal\");\nrequire(\"./signal/TransportTimelineSignal\");\nrequire(\"./signal/WaveShaper\");\nrequire(\"./signal/Zero\");\nrequire(\"./source/AMOscillator\");\nrequire(\"./source/BufferSource\");\nrequire(\"./source/FatOscillator\");\nrequire(\"./source/FMOscillator\");\nrequire(\"./source/GrainPlayer\");\nrequire(\"./source/Noise\");\nrequire(\"./source/OmniOscillator\");\nrequire(\"./source/Oscillator\");\nrequire(\"./source/OscillatorNode\");\nrequire(\"./source/Player\");\nrequire(\"./source/Players\");\nrequire(\"./source/PulseOscillator\");\nrequire(\"./source/PWMOscillator\");\nrequire(\"./source/Source\");\nrequire(\"./source/TickSource\");\nrequire(\"./source/UserMedia\");\nrequire(\"./type/Frequency\");\nrequire(\"./type/Midi\");\nrequire(\"./type/Ticks\");\nrequire(\"./type/Time\");\nrequire(\"./type/TimeBase\");\nrequire(\"./type/TransportTime\");\nrequire(\"./type/Type\");\nmodule.exports = require(\"./core/Tone\").default;\n","import {Buffer, Sampler} from \"tone/tone\";\nimport \"../audio/*.mp3\";\n\nclass PianoSampler {\n    _lowest: number;\n    _highest: number;\n    _baseUrl: string;\n    _sampler: Sampler | null;\n    _loaded: boolean;\n    _urls: {};\n\n    constructor(baseUrl = \"\", lowest = 0, highest = 12 * 8) {\n        this._lowest = lowest;\n        this._highest = highest;\n        this._baseUrl = baseUrl;\n\n        this._sampler = null;\n\n        this._loaded = false;   // If audio files are loaded\n        // Call the load function to load audio\n        // @ts-ignore\n        Buffer.on(\"load\", () => {  // Callback when all buffers are loaded\n            console.log(\"All buffers are loaded\");\n            this._loaded = true   // The audio is loaded\n        });\n\n        // Urls of the audio files\n        this._urls = {\n            \"A0\": \"A0.[mp3|ogg]\",\n            \"C1\": \"C1.[mp3|ogg]\",\n            \"D#1\": \"Ds1.[mp3|ogg]\",\n            \"F#1\": \"Fs1.[mp3|ogg]\",\n            \"A1\": \"A1.[mp3|ogg]\",\n            \"C2\": \"C2.[mp3|ogg]\",\n            \"D#2\": \"Ds2.[mp3|ogg]\",\n            \"F#2\": \"Fs2.[mp3|ogg]\",\n            \"A2\": \"A2.[mp3|ogg]\",\n            \"C3\": \"C3.[mp3|ogg]\",\n            \"D#3\": \"Ds3.[mp3|ogg]\",\n            \"F#3\": \"Fs3.[mp3|ogg]\",\n            \"A3\": \"A3.[mp3|ogg]\",\n            \"C4\": \"C4.[mp3|ogg]\",\n            \"D#4\": \"Ds4.[mp3|ogg]\",\n            \"F#4\": \"Fs4.[mp3|ogg]\",\n            \"A4\": \"A4.[mp3|ogg]\",\n            \"C5\": \"C5.[mp3|ogg]\",\n            \"D#5\": \"Ds5.[mp3|ogg]\",\n            \"F#5\": \"Fs5.[mp3|ogg]\",\n            \"A5\": \"A5.[mp3|ogg]\",\n            \"C6\": \"C6.[mp3|ogg]\",\n            \"D#6\": \"Ds6.[mp3|ogg]\",\n            \"F#6\": \"Fs6.[mp3|ogg]\",\n            \"A6\": \"A6.[mp3|ogg]\",\n            \"C7\": \"C7.[mp3|ogg]\",\n            \"D#7\": \"Ds7.[mp3|ogg]\",\n            \"F#7\": \"Fs7.[mp3|ogg]\",\n            \"A7\": \"A7.[mp3|ogg]\",\n            \"C8\": \"C8.[mp3|ogg]\"\n        };\n    }\n\n    /**\n     * Load the audio files\n     * @return {Promise<>}\n     */\n    load(): Promise<any> {\n        return new Promise(done => {\n            // Initialize the sampler with piano audio files\n            console.log(\"Loading the audio\");\n            this._sampler = new Sampler(this._urls, done, this._baseUrl,).toMaster() as Sampler;\n        })\n    }\n\n    /**\n     * Trigger a chord\n     * @param notes notes in the chord\n     */\n    keyDown(notes: Array<string>) {\n        if (this._loaded) {\n            //@ts-ignore\n            (this._sampler as Sampler).triggerAttack(notes);\n        }\n    }\n\n    /**\n     * Release the chord\n     * @param time\n     */\n    keyUp(notes: Array<string>, time: string | number) {\n        if (this._loaded) {\n            //@ts-ignore\n            (this._sampler as Sampler).triggerRelease(notes, time);\n        }\n    }\n\n    /**\n     * Play and release a chord\n     * @param notes An array of notes in the chord\n     * @param duration The time the note should be held\n     * @param time When to start the attack\n     */\n    keyDownUp(notes: Array<string>, duration: string | number, time: number | string) {\n        if (this._loaded) {\n            //@ts-ignore\n            (this._sampler as Sampler).triggerAttackRelease(notes, duration, time);\n        }\n    }\n}\n\nexport {PianoSampler}\n\n","import {PianoSampler} from \"./PianoSampler\";\nimport * as Tone from \"tone/tone\";\n\nexport class PianoSound {\n    _lowest: number;\n    _highest: number;\n    _piano: PianoSampler;\n\n    /**\n     * A class to play the sound of the piano\n     * @param lowest: the lowest keyNum\n     * @param highest: the highest keyNum\n     */\n    constructor(lowest: number, highest: number) {\n        this._lowest = lowest;\n        this._highest = highest;\n        // make the samples loaded a range of audios\n        this._piano = new PianoSampler(\"./audio/\", this._lowest, this._highest);\n    }\n\n    /**\n     * Load the piano audio\n     * @return {Promise<[]>}\n     */\n    load() {\n        // return promise after resolving loading the sampler\n        return Promise.all([this._piano.load()]);\n    }\n\n    /**\n     * Play a chord\n     * @param notes Notes in the chord\n     */\n    keyDown(notes: Array<string>) {\n        this._piano.keyDown(notes);\n    }\n\n    /**\n     * Stop plyaing a chord\n     * @param notes Notes in the chord\n     * @param time The lag between releasing the key and stopping playing the chord\n     */\n    keyUp(notes: Array<string>, time = Tone.now()) {\n        time += .5;\n        this._piano.keyUp(notes, time);\n    }\n\n    /**\n     * Play a chord and stop\n     * @param notes\n     * @param duration\n     * @param time\n     */\n    keyDownUp(notes: Array<string>, duration: string | number = \"2n\", time = Tone.now()) {\n        this._piano.keyDownUp(notes, duration, time);\n    }\n}\n","import {Buffer} from \"tone/tone\";\n\nclass Loader {\n    loaded: boolean;\n\n    constructor() {\n\n        const mask = document.querySelector(\"#mask\") as HTMLElement;   // Mask to hide all other elements\n\n        const progBar = document.querySelector(\"#progressBar\") as HTMLElement;  // Progression bar\n        const prog = document.querySelector(\"#progress\") as HTMLElement;    // Progression container\n\n        this.loaded = false;\n\n        /**\n         * Remove the progress bar, mask and enable scroll after loaded\n         */\n        //@ts-ignore\n        Buffer.on(\"load\", () => {\n            this.loaded = true;\n            mask.remove();\n            prog.remove();\n            document.body.classList.remove(\"no-scroll\");\n        });\n\n        /**\n         * Update the progress bar\n         */\n        //@ts-ignore\n        Buffer.on(\"progress\", (prog) => {\n            progBar.style.width = `${(prog * 100).toFixed(2)}%`;\n        })\n    }\n}\n\nexport {Loader}\n","import {Chord} from \"../music-theory/Chord\";\nimport $ from \"jquery\";\n\n/**\n * Control the current chord's type\n */\nexport class ChordTypeBtn {\n    onSetChordType: Function;\n    btn: HTMLElement;\n\n    constructor() {\n        const menuContainer = document.getElementById(\"chordTypeDropdownMenu\")!;\n        this._renderDropdownMenu(menuContainer);    // Append menu in the container\n        // @ts-ignore\n        $('[data-submenu]').submenupicker();    // Enable toggle the submenu on click\n        this.onSetChordType = function () {\n        };\n        this.btn = document.getElementById(\"chordTypeBtn\")!;\n    }\n\n    /**\n     * Render the btn-group view in the container\n     * @param container\n     * @private\n     */\n    private _renderDropdownMenu(container: HTMLElement) {\n        // nest dropdown in the button group\n        // ref: https://getbootstrap.com/docs/4.3/components/button-group/\n        for (let family in Chord.chordFamilies) {\n            const submenu = document.createElement(\"div\");\n            submenu.classList.add(\"dropdown\", \"dropright\", \"dropdown-submenu\");\n\n            const familyBtn = document.createElement(\"button\");\n            familyBtn.classList.add(\"dropdown-item\", \"dropdown-toggle\");\n            familyBtn.setAttribute(\"type\", \"button\");\n            familyBtn.setAttribute(\"data-toggle\", \"dropdown\");\n            familyBtn.dataset.family = family;\n            familyBtn.innerText = family;\n            submenu.appendChild(familyBtn);\n\n            const typesMenu = document.createElement(\"div\");\n            typesMenu.classList.add(\"dropdown-menu\");\n            for (let type in Chord.chordFamilies[family]) {\n                const typeBtn = document.createElement(\"button\");\n                typeBtn.classList.add(\"dropdown-item\");\n                typeBtn.setAttribute(\"type\", \"button\");\n                typeBtn.innerText = type;\n                typeBtn.dataset.family = family;\n                typeBtn.dataset.type = type;\n                typeBtn.addEventListener(\"pointerup\", e => {\n                    const btn = e.target as HTMLElement;\n                    const type: string = btn.dataset.type!;\n                    const family: string = btn.dataset.family!;\n                    this.setChordType(type, family);\n                });\n                typesMenu.appendChild(typeBtn);\n            }\n            submenu.appendChild(typesMenu);\n\n            container.appendChild(submenu);\n        }\n    }\n\n    /**\n     * Set the type and the family of the chord\n     * @param type\n     * @param family\n     */\n    public setChordType(type: string, family: string) {\n        // Change the text of the chord type\n        this.setTypeText(type);\n        this.onSetChordType(type, family);\n    }\n\n    /**\n     * Change the text in the button\n     * @param type\n     */\n    public setTypeText(type: string) {\n        this.btn.innerText = type;\n    }\n\n    /**\n     * Disable clicking the button\n     */\n    public disable(){\n        this.btn.classList.add(\"disabled\");\n    }\n\n    /**\n     * Enable clicking the button\n     */\n    public enable(){\n        this.btn.classList.remove(\"disabled\");\n    }\n}\n","import {Chord} from \"../music-theory/Chord\";\n\nexport class InversionBtn {\n    static readonly inversionTypes: any = { // Assigns inversionIDs to strings.\n        0: \"None\",\n        1: \"First\",\n        2: \"Second\",\n        3: \"Third\",\n        4: \"Fourth\",\n        5: \"Fifth\",\n        6: \"Sixth\"\n    };\n\n    onSetInversion: Function;\n    btn: HTMLElement;\n\n    constructor() {\n        this._setInversionMenu(2); // renders the inversion dropdown\n\n        this.btn = document.getElementById(\"chordInversionBtn\")!;\n\n        this.onSetInversion = function () {};\n    }\n\n    /**\n     * Reset inversion btn to None, and menu items based on the chord length\n     */\n    public reset(chordLen: number) {\n        this._setInversionButton(\"None\");\n        this._setInversionMenu(chordLen - 1);\n    }\n\n    /**\n     * Populate the items in the inversion menu from none to maxInversion\n     * @param maxInversion\n     */\n    private _setInversionMenu(maxInversion: number) {\n        const menu = document.getElementById(\"chordInversionDropdownMenu\")!;\n        menu.innerHTML = \"\"; // Remove all items\n        if (maxInversion >= 3) { // Limits inversion to third (7th as root)\n            maxInversion = 3;\n        }\n        for (let i = 0; i <= maxInversion; i++) {\n            const item = document.createElement(\"a\");\n            item.classList.add(\"dropdown-item\");\n            item.dataset.inversion = i.toString();\n            item.innerText = InversionBtn.inversionTypes[i];\n            item.addEventListener(\"pointerup\", e => {\n                const btn = e.target as HTMLElement;\n                const inversionName = btn.innerText;\n                const inversionNum = parseInt(btn.dataset.inversion!);\n                this._setInversion(inversionName, inversionNum);\n            });\n\n            menu.appendChild(item);\n        }\n    }\n\n    /**\n     * Set the inversion, and call the callback event\n     * @param inversionName\n     * @param inversionNum\n     * @private\n     */\n    private _setInversion(inversionName: string, inversionNum: number) {\n        this._setInversionButton(inversionName);\n        this.onSetInversion(inversionNum);\n    }\n\n    /**\n     * Set the text on the inversion button and change the menu items\n     * @param chord\n     */\n    public setInversionText(chord: Chord) {\n        const inversionName = InversionBtn.inversionTypes[chord.inversionNum];\n        this._setInversionButton(inversionName);    // Change the text in the button\n        const chordLen = Chord.getLen(chord.family, chord.type);    // Change the menu\n        this._setInversionMenu(chordLen - 1);\n    }\n\n    /**\n     * Set the text in the inversion button\n     * @param inversionName\n     */\n    private _setInversionButton(inversionName: string) {\n        this.btn.innerText = inversionName;\n    }\n\n    /**\n     * Disable clicking the button\n     */\n    public disable(){\n        this.btn.classList.add(\"disabled\");\n    }\n\n    /**\n     * Enable clicking the button\n     */\n    public enable(){\n        this.btn.classList.remove(\"disabled\");\n    }\n}\n\n","import {Chord} from \"../music-theory/Chord\";\nimport {Transport} from \"tone\";\nimport $ from \"jquery\";\n\n/**\n * Holds information for sequence of chords in the progression\n */\nexport class ChordProgression {\n    chordsList: Array<Chord>;\n    curIndex: number;\n    curChord: null | Chord;\n    curChordNameBtn: null | HTMLElement;\n    chordNameBtns: Array<HTMLElement>;\n    onActivate: Function;\n    onPlay: Function;\n    _playButton: HTMLElement;\n    onSwitch: Function;\n    onStop: Function;\n\n    constructor() {\n        this.chordsList = [];   // An array to store each chord in the progression as an array of notes\n        this.curIndex = -1; // The current index of the chord in the list\n        this.curChord = null; // The current chord\n        this.curChordNameBtn = null; // The current chord name button\n        this.chordNameBtns = [];    // An array of chord name buttons\n\n        this._playButton = document.getElementById(\"playBtn\")!; // The button to play the chord progression\n\n        // Callback events\n        this.onActivate = function () {};\n        this.onPlay = function () {};\n        this.onSwitch = function () {};\n        this.onStop = function() {};\n\n        // Initialize the progression with an add button and a C chord\n        this._appendChord(new Chord(48), null);\n        this._appendAddBtn();\n        this._addEventListeners();\n\n        // @ts-ignore\n        $('#resetBtn').tooltip();   // Trigger the tooltip of the reset button\n        // @ts-ignore\n        $('#playBtn').tooltip();   // Trigger the tooltip of the play button\n    }\n\n    /**\n     * Add event listeners to the elements\n     * @private\n     */\n    private _addEventListeners() {\n        const resetBtn = document.getElementById(\"resetBtn\")!;\n        resetBtn.addEventListener(\"pointerup\", () => {  // Reset button\n            if (!resetBtn.classList.contains(\"disabled\")){\n                this._reset();\n            }\n\n        });\n\n        this._playButton.addEventListener(\"pointerup\", () => {  // Play button\n            this._toggleProgression();\n        });\n    }\n\n    /**\n     * Remove the add btn from the container\n     * @private\n     */\n    private _removeAddBtn() {\n        const addButton = document.getElementById(\"addBtn\");\n        if (addButton == null){\n            throw new Error(\"addBtn does not exist. Cannot delete\")\n        }\n        addButton.remove();\n    }\n\n    /**\n     * Append an add button to the progression container\n     * @private\n     */\n    private _appendAddBtn() {\n        const btnContainer = document.createElement(\"div\");\n        btnContainer.classList.add(\"btn-chord\");\n        btnContainer.id = \"addBtn\";\n\n        const btn = document.createElement(\"div\");\n        btn.classList.add(\"button-chord-name\", \"add\", \"shadow\");\n\n        const icon = document.createElement(\"i\");\n        icon.classList.add(\"material-icons\");\n        icon.innerText = \"add\";\n        btn.appendChild(icon);\n\n        btn.addEventListener(\"pointerup\", () => {\n            const chord = new Chord(48);\n            this._appendChord(chord, btnContainer);\n        });\n\n        btn.addEventListener(\"pointerover\", () => {\n            // @ts-ignore\n            $(btn).tooltip('hide')\n                .attr(\"data-placement\", \"bottom\")\n                .attr('data-original-title', \"Add a Chord\")\n                .tooltip('show');\n        })\n\n        btnContainer.appendChild(btn);\n\n        const progressionContainer = document.getElementById(\"progressionChordsContainer\")!;\n        progressionContainer.appendChild(btnContainer);\n    }\n\n    /**\n     * Insert a C chord in front of the add button\n     * @param chord\n     * @param addBtn\n     * @private\n     */\n    private _appendChord(chord: Chord, addBtn: HTMLElement | null) {\n        if (this.curChordNameBtn !== null) {\n            this.curChordNameBtn.parentElement!.classList.remove(\"active\"); // Deactivate the current button\n        }\n\n        this.chordsList.push(chord);\n        this.curChord = chord;\n        this.curIndex = this.chordsList.length - 1;\n\n        const btnContainer = document.createElement(\"div\");\n        btnContainer.classList.add(\"btn-chord\", \"active\");\n\n        this._appendChordNameBtn(btnContainer);\n        this._appendDeleteBtn(btnContainer);\n        this._appendCopyBtn(btnContainer);\n\n        const progressionContainer = document.getElementById(\"progressionChordsContainer\")!;\n        progressionContainer.insertBefore(btnContainer, addBtn);    // Insert the new chord btn before add btn\n\n        console.log(`Append a new chord ${this.curChord} at ${this.curIndex}`);\n\n        this._toggleFirstChordDelete();\n    }\n\n    /**\n     * Insert a chord at index in the progression\n     * @param chord\n     * @param index\n     */\n    private _insertChord(chord: Chord, index: number) {\n        if (this.curChordNameBtn !== null) {\n            this.curChordNameBtn.parentElement!.classList.remove(\"active\"); // Deactivate the current button\n        }\n\n        this.chordsList.splice(index, 0, chord);\n        this.curChord = chord;\n        this.curIndex = index;\n\n        const btnContainer = document.createElement(\"div\");\n        btnContainer.classList.add(\"btn-chord\", \"active\");\n\n        this._insertChordNameBtn(btnContainer, index, chord);\n        this._appendDeleteBtn(btnContainer);\n        this._appendCopyBtn(btnContainer);\n\n        const prevButton = this.chordNameBtns[index-1];\n\n\n        const progressionContainer = document.getElementById(\"progressionChordsContainer\")!;\n        progressionContainer.insertBefore(btnContainer, prevButton.parentElement!.nextSibling);    // Insert the new chord btn before next btn\n\n        console.log(`Insert a new chord ${this.curChord} at ${this.curIndex}`);\n\n        this._toggleFirstChordDelete();\n    }\n\n    /**\n     * Append a delete button in the container\n     * @param container HTMLElement\n     * @private\n     */\n    private _appendDeleteBtn(container: HTMLElement) {\n        const deleteBtn = document.createElement(\"div\");\n        deleteBtn.classList.add(\"btn-chord-delete\", \"shadow-sm\");\n\n        const icon = document.createElement(\"i\");   // Add the icon\n        icon.classList.add(\"material-icons-outlined\");\n        icon.innerText = \"clear\";\n        deleteBtn.appendChild(icon);\n        deleteBtn.addEventListener(\"pointerup\", () => {\n            this._delete(deleteBtn);\n        });\n        container.appendChild(deleteBtn);\n    }\n\n    /**\n     * Append a copy button in the container\n     * @param container HTMLElement\n     * @private\n     */\n    private _appendCopyBtn(container: HTMLElement){\n        const copyBtn = document.createElement(\"div\");\n\n        // Set the tooltip to \"Copy to End\"\n        //@ts-ignore\n        $(copyBtn).tooltip('hide')\n            .attr(\"data-placement\", \"bottom\")\n            .attr('data-original-title', \"Copy at End\")\n            .tooltip('show');\n\n        copyBtn.classList.add(\"btn-chord-copy\", \"shadow-sm\");\n\n        const icon = document.createElement(\"i\");   // Add the icon\n        icon.classList.add(\"material-icons-outlined\");\n        icon.innerText = \"file_copy\";\n        copyBtn.appendChild(icon);\n        copyBtn.addEventListener(\"pointerup\", () => {\n            if (!copyBtn.classList.contains(\"disabled\")){\n                // $('').tooltip();\n                const chordNameBtn = copyBtn.parentElement?.querySelector(\".button-chord-name\");\n                if (chordNameBtn ==  null){\n                    throw new Error(\"Cannot find the chord name button\");\n                }\n                const index = this.chordNameBtns.indexOf(chordNameBtn as HTMLElement);\n                const chord = $.extend(true, {}, this.chordsList[index]);\n                // Get the chord by index\n                // Deep copy the chord to avoid manupilating the same object\n                this._insertChord(chord, this.chordsList.length);  // Copy the current chord, and insert it at the end of the chord list.\n            }\n        });\n        container.appendChild(copyBtn);\n    }\n\n    /**\n     * Append a C chord name button to the container\n     * @param container\n     * @private\n     */\n    private _appendChordNameBtn(container: HTMLElement) {\n        const btn = document.createElement(\"div\");\n        btn.classList.add(\"button-chord-name\", \"shadow\");\n\n        const text = document.createElement(\"div\");\n        this.curChord = new Chord();    // Initialize the current chord to a C4 major chord\n        text.innerHTML = this.curChord.getChordName();  // Set the text to the name of the current chord\n        btn.appendChild(text);\n\n        btn.addEventListener(\"pointerup\", () => {\n            this.activate(btn);\n        });\n        container.appendChild(btn);\n        this.chordNameBtns.push(btn);\n        this.curChordNameBtn = btn;\n\n        this.activate(btn);\n    }\n\n    /**\n     * Append a chord name button to the container\n     * @param container\n     * @param index The index of the chord in the progression\n     * @param chord Add a C major chord by default\n     * @private\n     */\n    private _insertChordNameBtn(container: HTMLElement, index: number, chord: Chord = new Chord(48)) {\n        const btn = document.createElement(\"div\");\n        btn.classList.add(\"button-chord-name\", \"shadow\");\n\n        const text = document.createElement(\"div\");\n        this.curChord = chord;    // Initialize the current chord to a C4 major chord\n        text.innerHTML = this.curChord.getChordName();  // Set the text to the name of the current chord\n        btn.appendChild(text);\n\n        btn.addEventListener(\"pointerup\", () => {\n            this.activate(btn);\n        });\n        container.appendChild(btn);\n        this.chordNameBtns.splice(index, 0, btn);\n        this.curChordNameBtn = btn;\n\n        this.activate(btn);\n    }\n\n    /**\n     * Switch to and activate the next chord after the current one\n     */\n    public switch(){\n        let btnIndex = 0;\n        if (this.curIndex >= this.chordsList.length - 1){   // At the end of the list\n            btnIndex = 0;\n        } else {\n            btnIndex = this.curIndex + 1;   // Go to next index\n        }\n        const newBtn = this.chordNameBtns[btnIndex];\n        this.activate(newBtn);\n        this.onSwitch();\n    }\n\n    /**\n     * Activate the chord name button. and setChord the current index, btn, and chord\n     * @param chordNameBtn\n     * @public\n     */\n    public activate(chordNameBtn: HTMLElement) {\n\n        for (let chordButton of this.chordNameBtns) {\n            chordButton.classList.remove('animated');\n        }\n\n        if (this.curChordNameBtn !== null) {    // Current Chord name button exists\n            this.curChordNameBtn.parentElement!.classList.remove(\"active\"); // Deactivate the current button\n        }\n        this.curIndex = this.chordNameBtns.indexOf(chordNameBtn);\n        this.curChord = this.chordsList[this.curIndex];\n        chordNameBtn.parentElement!.classList.add(\"active\");    // Active the button\n        this.curChordNameBtn = chordNameBtn;\n        console.log(`Activate chord ${this.curChord} at ${this.curIndex}`);\n\n        chordNameBtn.classList.add('animated');\n\n        this.onActivate(this.curChord);\n    }\n\n    /**\n     * Disable deleting the chord at index by deleting the delete button in the chord button\n     * @param index\n     * @private\n     * @return true if it deletes, else false\n     */\n    private _disableEdit(index: number): boolean{\n        const button = this.chordNameBtns[index];\n        if (button == null){\n            throw new Error(\"Button does not exist. Cannot disable deleting\");\n        }\n\n        const container = button.parentElement!;\n\n        // Remove delete buttons\n        const deleteBtns = container.querySelectorAll(\".btn-chord-delete\");\n\n        deleteBtns.forEach( e => {\n            e.remove();\n        })\n\n        // Remove copy buttons\n        const copyBtns = container.querySelectorAll(\".btn-chord-copy\");\n\n        copyBtns.forEach( e => {\n            e.remove();\n        })\n        return true;\n    }\n\n    /**\n     * Disable deleting on all chords\n     * @private\n     */\n    private _disableEditAll(){\n        for (let i = 0; i < this.chordNameBtns.length; i++){\n            this._disableEdit(i);\n        }\n    }\n\n    /**\n     * Enable deleting on all chords\n     * @private\n     */\n    private _enableEditAll(){\n        for (let chordNameBtn of this.chordNameBtns){\n            const container = chordNameBtn.parentElement;\n            if (container == null){\n                throw new Error(\"The chord name button does not have a container. Cannot enable deleting\");\n            }\n            this._appendDeleteBtn(container);\n            this._appendCopyBtn(container);\n            this._toggleFirstChordDelete();\n        }\n    }\n\n    /**\n     * Disable deleting the first chord if the chord's length <= 1\n     * @private\n     */\n    private _toggleFirstChordDelete(){\n        if (this.chordsList.length <= 1){\n            const button = this.chordNameBtns[0];\n            const container = button.parentElement!;\n            const deleteBtn = container.querySelector(\".btn-chord-delete\");\n            if (deleteBtn == null) {\n                throw new Error(\"Delete button does not exist\");\n            }\n            deleteBtn.remove();\n            console.log(\"The first delete button is deleted\")\n        } else {\n            const button = this.chordNameBtns[0];\n            if (button.parentElement?.querySelector(\".btn-chord-delete\")){    // The button has a delete button\n                return; // Not add a new delete button\n            }\n            // Add a delete button\n            const container = button.parentElement!;\n            this._appendDeleteBtn(container);\n            console.log(\"The first delete button is added\")\n        }\n    };\n\n    /**\n     * Delete the chord button that the delete button is in, and _activate the adjacent chord if the current chord is activated\n     * @param deleteBtn\n     * @private\n     */\n    private _delete(deleteBtn: HTMLElement) {\n        const chordNameBtn = deleteBtn.parentElement?.querySelector(\".button-chord-name\") as HTMLElement;\n        const index = this.chordNameBtns.indexOf(chordNameBtn);\n\n        this.chordsList.splice(index, 1); // Remove the chord at index\n        this.chordNameBtns.splice(index, 1);\n\n        if (this.curIndex > index) { // Delete a button before current button\n            this.curIndex -= 1; // Since an chord before has been removed, the current index decreased by 1\n        } else if (this.curIndex == 0 && this.chordsList.length >= 1) {  // Delete an active button at index 0\n            this.curIndex = 0;\n            this.curChord = this.chordsList[0];\n            const newChordNameBtn = this.chordNameBtns[0];\n            this.activate(newChordNameBtn);    // Activate the new button at index 0\n        } else if (this.curIndex == index) { // Delete the last button\n            this.curIndex -= 1; // Shift to previous item\n            this.curChord = this.chordsList[this.curIndex]; // Update current chord\n            if (this.curIndex >= 0) {    // Activate the previous node if it exists\n                const newChordNameBtn = this.chordNameBtns[this.curIndex];\n                this.activate(newChordNameBtn);\n            }\n        }\n        console.log(`Delete chord at index ${index}. Change the chord to ${this.curChord} at ${this.curIndex}`);\n        deleteBtn.parentElement!.remove(); // Remove the chord button that the delete btn is in\n\n        this._toggleFirstChordDelete();\n    }\n\n    /**\n     * Update the current chord, the chord list and the text of the current button\n     * @param chord\n     */\n    public setChord(chord: Chord) {\n        this.curChord = chord;\n        this.chordsList[this.curIndex] = chord;\n\n        this._setChordName()\n    }\n\n    /**\n     * Set the name of the current chord\n     * @private\n     */\n    private _setChordName() {\n        this.curChordNameBtn!.innerHTML = \"\";    // Reset text\n        const text = document.createElement(\"div\");\n        if (this.curChord == null) {\n            throw new Error(\"curChord is null\");\n        }\n        text.innerHTML = this.curChord.getChordName();  // Set the text to the name of the current chord\n        this.curChordNameBtn!.appendChild(text);\n    }\n\n    /**\n     * Set the type and family of the current chord\n     * @param family\n     * @param type\n     */\n    public setChordType(family: string, type: string) {\n        if (this.curChord == null) {\n            throw new Error(\"curChord is null\");\n        }\n        this.curChord.type = type;\n        this.curChord.family = family;\n        this.chordsList[this.curIndex] = this.curChord;\n\n        this._setChordName();\n    }\n\n    /**\n     * Set the inversion of the current chord\n     * @param inversion\n     */\n    public setInversion(inversion: number) {\n        if (inversion < 0) {\n            throw new Error(\"Invalid inversion, inversion < 0\");\n        }\n        if (this.curChord == null) {\n            throw new Error(\"curChord is null\");\n        }\n        this.curChord.inversionNum = inversion;\n        this.chordsList[this.curIndex] = this.curChord;\n\n        this._setChordName();\n    }\n\n    /**\n     * Reset the chord progression, and initialize with a C chord\n     * @private\n     */\n    private _reset() {\n        var ans = confirm(\"Are you sure to reset the chord progression?\\nAfter reset, all progress will be lost.\")\n\n        if (ans == false){\n            return false\n        }\n\n        // Clear data\n        this.chordsList = [];\n        this.curChord = null;\n        this.curIndex = -1;\n        this.curChordNameBtn = null;\n        this.chordNameBtns = [];\n\n        // Clear html\n        const container = document.getElementById(\"progressionChordsContainer\")!;\n        container.innerHTML = \"\"; // Clear the progression\n        this._appendChord(new Chord(48), null);\n        this._appendAddBtn();\n\n        return true;\n    }\n\n    /**\n     * Return an array of an array of notes in the chord\n     * @private\n     */\n    private _getNotesList() {\n        const notesList = [];\n        for (let chord of this.chordsList) {\n            const notes = chord.getNotes();\n            notesList.push(notes);\n        }\n        return notesList;\n    }\n\n    /**\n     * Play the progression if it is not played, otherwise stop it\n     * @private\n     */\n    private _toggleProgression() {\n        if (Transport.state === 'started') {\n            this._playButton.innerHTML = \"<i class=\\\"fas fa-play\\\"></i>\";   // Change icon\n            this._playButton.classList.remove(\"active\");    // Change style\n            this._enableBtnsAnimation();\n\n            // Change the tooltip to Play\n            //@ts-ignore\n            $(\"#playBtn\").tooltip('hide')\n          .attr('data-original-title', \"Play\")\n          .tooltip('show');\n\n            Transport.stop();\n            this._appendAddBtn();\n            this._enableEditAll();\n            this._enableReset();\n            this.onStop();\n        } else {\n            this._playButton.innerHTML = \"<i class=\\\"fas fa-pause\\\"></i>\";\n            this._playButton.classList.add(\"active\");\n            this._disableBtnsAnimation();\n\n            this.activate(this.curChordNameBtn!);   // Play the current chord\n\n            // Change the tooltip to Stop\n            // @ts-ignore\n            $(\"#playBtn\").tooltip('hide')\n          .attr('data-original-title', \"Stop\")\n          .tooltip('show'); // Set text tooltip to \"Play\"\n\n\n            Transport.start('+1.1');    // Wait until the first chord played\n\n            const notesList = this._getNotesList();\n            this._removeAddBtn();\n            this._disableEditAll();\n            this._disableReset();\n            this.onPlay(notesList);\n        }\n    }\n\n    /**\n     * Disable button's jumping animation\n     */\n    private _disableBtnsAnimation(){\n        for (let btn of this.chordNameBtns){\n            btn.classList.add(\"disable\")\n        }\n    }\n\n    /**\n     * Enable button's jumping animation\n     */\n    private _enableBtnsAnimation(){\n        for (let btn of this.chordNameBtns){\n            btn.classList.remove(\"disable\")\n        }\n    }\n\n    /**\n     * Disable the reset button\n     * @private\n     */\n    private _disableReset(){\n        const resetBtn = document.getElementById(\"resetBtn\")!;\n        resetBtn.classList.add(\"disabled\");\n    }\n\n    /**\n     * Enable the reset button\n     * @private\n     */\n    private _enableReset(){\n        const resetBtn = document.getElementById(\"resetBtn\")!;\n        resetBtn.classList.remove(\"disabled\");\n    }\n}\n","'use strict'\n\n// util\nfunction fillStr (s, num) { return Array(num + 1).join(s) }\nfunction isNum (x) { return typeof x === 'number' }\nfunction isStr (x) { return typeof x === 'string' }\nfunction isDef (x) { return typeof x !== 'undefined' }\nfunction midiToFreq (midi, tuning) {\n  return Math.pow(2, (midi - 69) / 12) * (tuning || 440)\n}\n\nvar REGEX = /^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)\\s*$/\n/**\n * A regex for matching note strings in scientific notation.\n *\n * @name regex\n * @function\n * @return {RegExp} the regexp used to parse the note name\n *\n * The note string should have the form `letter[accidentals][octave][element]`\n * where:\n *\n * - letter: (Required) is a letter from A to G either upper or lower case\n * - accidentals: (Optional) can be one or more `b` (flats), `#` (sharps) or `x` (double sharps).\n * They can NOT be mixed.\n * - octave: (Optional) a positive or negative integer\n * - element: (Optional) additionally anything after the duration is considered to\n * be the element name (for example: 'C2 dorian')\n *\n * The executed regex contains (by array index):\n *\n * - 0: the complete string\n * - 1: the note letter\n * - 2: the optional accidentals\n * - 3: the optional octave\n * - 4: the rest of the string (trimmed)\n *\n * @example\n * var parser = require('note-parser')\n * parser.regex.exec('c#4')\n * // => ['c#4', 'c', '#', '4', '']\n * parser.regex.exec('c#4 major')\n * // => ['c#4major', 'c', '#', '4', 'major']\n * parser.regex().exec('CMaj7')\n * // => ['CMaj7', 'C', '', '', 'Maj7']\n */\nexport function regex () { return REGEX }\n\nvar SEMITONES = [0, 2, 4, 5, 7, 9, 11]\n/**\n * Parse a note name in scientific notation an return it's components,\n * and some numeric properties including midi number and frequency.\n *\n * @name parse\n * @function\n * @param {String} note - the note string to be parsed\n * @param {Boolean} isTonic - true the strings it's supposed to contain a note number\n * and some category (for example an scale: 'C# major'). It's false by default,\n * but when true, en extra tonicOf property is returned with the category ('major')\n * @param {Float} tunning - The frequency of A4 note to calculate frequencies.\n * By default it 440.\n * @return {Object} the parsed note name or null if not a valid note\n *\n * The parsed note name object will ALWAYS contains:\n * - letter: the uppercase letter of the note\n * - acc: the accidentals of the note (only sharps or flats)\n * - pc: the pitch class (letter + acc)\n * - step: s a numeric representation of the letter. It's an integer from 0 to 6\n * where 0 = C, 1 = D ... 6 = B\n * - alt: a numeric representation of the accidentals. 0 means no alteration,\n * positive numbers are for sharps and negative for flats\n * - chroma: a numeric representation of the pitch class. It's like midi for\n * pitch classes. 0 = C, 1 = C#, 2 = D ... 11 = B. Can be used to find enharmonics\n * since, for example, chroma of 'Cb' and 'B' are both 11\n *\n * If the note has octave, the parser object will contain:\n * - oct: the octave number (as integer)\n * - midi: the midi number\n * - freq: the frequency (using tuning parameter as base)\n *\n * If the parameter `isTonic` is set to true, the parsed object will contain:\n * - tonicOf: the rest of the string that follows note name (left and right trimmed)\n *\n * @example\n * var parse = require('note-parser').parse\n * parse('Cb4')\n * // => { letter: 'C', acc: 'b', pc: 'Cb', step: 0, alt: -1, chroma: -1,\n *         oct: 4, midi: 59, freq: 246.94165062806206 }\n * // if no octave, no midi, no freq\n * parse('fx')\n * // => { letter: 'F', acc: '##', pc: 'F##', step: 3, alt: 2, chroma: 7 })\n */\nexport function parse (str, isTonic, tuning) {\n  if (typeof str !== 'string') return null\n  var m = REGEX.exec(str)\n  if (!m || (!isTonic && m[4])) return null\n\n  var p = { letter: m[1].toUpperCase(), acc: m[2].replace(/x/g, '##') }\n  p.pc = p.letter + p.acc\n  p.step = (p.letter.charCodeAt(0) + 3) % 7\n  p.alt = p.acc[0] === 'b' ? -p.acc.length : p.acc.length\n  var pos = SEMITONES[p.step] + p.alt\n  p.chroma = pos < 0 ? 12 + pos : pos % 12\n  if (m[3]) { // has octave\n    p.oct = +m[3]\n    p.midi = pos + 12 * (p.oct + 1)\n    p.freq = midiToFreq(p.midi, tuning)\n  }\n  if (isTonic) p.tonicOf = m[4]\n  return p\n}\n\nvar LETTERS = 'CDEFGAB'\nfunction accStr (n) { return !isNum(n) ? '' : n < 0 ? fillStr('b', -n) : fillStr('#', n) }\nfunction octStr (n) { return !isNum(n) ? '' : '' + n }\n\n/**\n * Create a string from a parsed object or `step, alteration, octave` parameters\n * @param {Object} obj - the parsed data object\n * @return {String} a note string or null if not valid parameters\n * @since 1.2\n * @example\n * parser.build(parser.parse('cb2')) // => 'Cb2'\n *\n * @example\n * // it accepts (step, alteration, octave) parameters:\n * parser.build(3) // => 'F'\n * parser.build(3, -1) // => 'Fb'\n * parser.build(3, -1, 4) // => 'Fb4'\n */\nexport function build (s, a, o) {\n  if (s === null || typeof s === 'undefined') return null\n  if (s.step) return build(s.step, s.alt, s.oct)\n  if (s < 0 || s > 6) return null\n  return LETTERS.charAt(s) + accStr(a) + octStr(o)\n}\n\n/**\n * Get midi of a note\n *\n * @name midi\n * @function\n * @param {String|Integer} note - the note name or midi number\n * @return {Integer} the midi number of the note or null if not a valid note\n * or the note does NOT contains octave\n * @example\n * var parser = require('note-parser')\n * parser.midi('A4') // => 69\n * parser.midi('A') // => null\n * @example\n * // midi numbers are bypassed (even as strings)\n * parser.midi(60) // => 60\n * parser.midi('60') // => 60\n */\nexport function midi (note) {\n  if ((isNum(note) || isStr(note)) && note >= 0 && note < 128) return +note\n  var p = parse(note)\n  return p && isDef(p.midi) ? p.midi : null\n}\n\n/**\n * Get freq of a note in hertzs (in a well tempered 440Hz A4)\n *\n * @name freq\n * @function\n * @param {String} note - the note name or note midi number\n * @param {String} tuning - (Optional) the A4 frequency (440 by default)\n * @return {Float} the freq of the number if hertzs or null if not valid note\n * @example\n * var parser = require('note-parser')\n * parser.freq('A4') // => 440\n * parser.freq('A') // => null\n * @example\n * // can change tuning (440 by default)\n * parser.freq('A4', 444) // => 444\n * parser.freq('A3', 444) // => 222\n * @example\n * // it accepts midi numbers (as numbers and as strings)\n * parser.freq(69) // => 440\n * parser.freq('69', 442) // => 442\n */\nexport function freq (note, tuning) {\n  var m = midi(note)\n  return m === null ? null : midiToFreq(m, tuning)\n}\n\nexport function letter (src) { return (parse(src) || {}).letter }\nexport function acc (src) { return (parse(src) || {}).acc }\nexport function pc (src) { return (parse(src) || {}).pc }\nexport function step (src) { return (parse(src) || {}).step }\nexport function alt (src) { return (parse(src) || {}).alt }\nexport function chroma (src) { return (parse(src) || {}).chroma }\nexport function oct (src) { return (parse(src) || {}).oct }\n","/**\n * A midi note number is a number representation of a note pitch. It can be\n * integers so it's equal tempered tuned, or float to indicate it's not\n * tuned into equal temepered scale.\n *\n * This module contains functions to convert to and from midi notes.\n *\n * @example\n * var midi = require('tonal-midi')\n * midi.toMidi('A4') // => 69\n * midi.note(69) // => 'A4'\n * midi.note(61) // => 'Db4'\n * midi.note(61, true) // => 'C#4'\n *\n * @module midi\n */\n\nimport { midi } from 'note-parser'\n\n/**\n * Convert the given note to a midi note number. If you pass a midi number it\n * will returned as is.\n *\n * @param {Array|String|Number} note - the note to get the midi number from\n * @return {Integer} the midi number or null if not valid pitch\n * @example\n * midi.toMidi('C4') // => 60\n * midi.toMidi(60) // => 60\n * midi.toMidi('60') // => 60\n */\nexport function toMidi (val) {\n  if (Array.isArray(val) && val.length === 2) return val[0] * 7 + val[1] * 12 + 12\n  return midi(val)\n}\n\nvar FLATS = 'C Db D Eb E F Gb G Ab A Bb B'.split(' ')\nvar SHARPS = 'C C# D D# E F F# G G# A A# B'.split(' ')\n\n/**\n * Given a midi number, returns a note name. The altered notes will have\n * flats unless explicitly set with the optional `useSharps` parameter.\n *\n * @function\n * @param {Integer} midi - the midi note number\n * @param {Boolean} useSharps - (Optional) set to true to use sharps instead of flats\n * @return {String} the note name\n * @example\n * var midi = require('tonal-midi')\n * midi.note(61) // => 'Db4'\n * midi.note(61, true) // => 'C#4'\n * // it rounds to nearest note\n * midi.note(61.7) // => 'D4'\n */\nexport function note (num, sharps) {\n  if (num === true || num === false) return function (m) { return note(m, num) }\n  num = Math.round(num)\n  var pcs = sharps === true ? SHARPS : FLATS\n  var pc = pcs[num % 12]\n  var o = Math.floor(num / 12) - 1\n  return pc + o\n}\n","module.exports={name:\"midi-writer-js\",version:\"1.7.2\",description:\"A library providing an API for generating MIDI files.\",main:\"build/index.js\",dependencies:{\"tonal-midi\":\"^0.69.7\"},devDependencies:{\"@babel/core\":\"^7.2.2\",\"@babel/plugin-transform-destructuring\":\"^7.2.0\",\"@babel/preset-env\":\"^7.2.3\",eslint:\"^5.16.0\",\"eslint-config-standard\":\"^12.0.0\",\"eslint-plugin-import\":\"^2.17.3\",\"eslint-plugin-node\":\"^9.1.0\",\"eslint-plugin-promise\":\"^4.1.1\",\"eslint-plugin-standard\":\"^4.0.0\",jsdoc:\"^3.5.5\",minami:\"^1.1.1\",mocha:\"^6.2.0\",nyc:\"^14.1.1\",rollup:\"^1.0.1\",\"rollup-plugin-babel\":\"^4.2.0\",\"uglify-js\":\"^2.7.3\",watch:\"^1.0.2\"},directories:{lib:\"src\",example:\"examples\",test:\"test\"},scripts:{build:\"mkdir -p build && rollup -c && npm run docs\",docs:\"./node_modules/.bin/jsdoc -r src README.md -d ./docs -t ./node_modules/minami\",\"lint:js\":\"eslint 'src/**/**.js'\",prepublishOnly:\"npm test\",pretest:\"npm run build\",test:\"nyc --reporter=text mocha --no-config --no-package\",watch:\"watch 'npm run build' src\"},repository:{type:\"git\",url:\"git+https://github.com/grimmdude/MidiWriterJS.git\"},keywords:[\"midi\",\"generator\",\"music\"],author:\"Garrett Grimm\",license:\"MIT\",bugs:{url:\"https://github.com/grimmdude/MidiWriterJS/issues\"},homepage:\"https://github.com/grimmdude/MidiWriterJS#readme\"};","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict';\n\nvar tonalMidi = require('tonal-midi');\n\n/**\n * MIDI file format constants.\n * @return {Constants}\n */\nvar Constants = {\n  VERSION: require('../package.json').version,\n  HEADER_CHUNK_TYPE: [0x4d, 0x54, 0x68, 0x64],\n  // Mthd\n  HEADER_CHUNK_LENGTH: [0x00, 0x00, 0x00, 0x06],\n  // Header size for SMF\n  HEADER_CHUNK_FORMAT0: [0x00, 0x00],\n  // Midi Type 0 id\n  HEADER_CHUNK_FORMAT1: [0x00, 0x01],\n  // Midi Type 1 id\n  HEADER_CHUNK_DIVISION: [0x00, 0x80],\n  // Defaults to 128 ticks per beat\n  TRACK_CHUNK_TYPE: [0x4d, 0x54, 0x72, 0x6b],\n  // MTrk,\n  META_EVENT_ID: 0xFF,\n  META_TEXT_ID: 0x01,\n  META_COPYRIGHT_ID: 0x02,\n  META_TRACK_NAME_ID: 0x03,\n  META_INSTRUMENT_NAME_ID: 0x04,\n  META_LYRIC_ID: 0x05,\n  META_MARKER_ID: 0x06,\n  META_CUE_POINT: 0x07,\n  META_TEMPO_ID: 0x51,\n  META_SMTPE_OFFSET: 0x54,\n  META_TIME_SIGNATURE_ID: 0x58,\n  META_KEY_SIGNATURE_ID: 0x59,\n  META_END_OF_TRACK_ID: [0x2F, 0x00],\n  CONTROLLER_CHANGE_STATUS: 0xB0,\n  // includes channel number (0)\n  PROGRAM_CHANGE_STATUS: 0xC0,\n  // includes channel number (0)\n  PITCH_BEND_STATUS: 0xE0 // includes channel number (0)\n\n};\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * Static utility functions used throughout the library.\n */\n\nvar Utils =\n/*#__PURE__*/\nfunction () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: \"version\",\n\n    /**\n     * Gets MidiWriterJS version number.\n     * @return {string}\n     */\n    value: function version() {\n      return Constants.VERSION;\n    }\n    /**\n     * Convert a string to an array of bytes\n     * @param {string} string\n     * @return {array}\n     */\n\n  }, {\n    key: \"stringToBytes\",\n    value: function stringToBytes(string) {\n      return string.split('').map(function (char) {\n        return char.charCodeAt();\n      });\n    }\n    /**\n     * Checks if argument is a valid number.\n     * @param {*} n - Value to check\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"isNumeric\",\n    value: function isNumeric(n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n    /**\n     * Returns the correct MIDI number for the specified pitch.\n     * Uses Tonal Midi - https://github.com/danigb/tonal/tree/master/packages/midi\n     * @param {(string|number)} pitch - 'C#4' or midi note code\n     * @return {number}\n     */\n\n  }, {\n    key: \"getPitch\",\n    value: function getPitch(pitch) {\n      return tonalMidi.toMidi(pitch);\n    }\n    /**\n     * Translates number of ticks to MIDI timestamp format, returning an array of\n     * hex strings with the time values. Midi has a very particular time to express time,\n     * take a good look at the spec before ever touching this function.\n     * Thanks to https://github.com/sergi/jsmidi\n     *\n     * @param {number} ticks - Number of ticks to be translated\n     * @return {array} - Bytes that form the MIDI time value\n     */\n\n  }, {\n    key: \"numberToVariableLength\",\n    value: function numberToVariableLength(ticks) {\n      var buffer = ticks & 0x7F;\n\n      while (ticks = ticks >> 7) {\n        buffer <<= 8;\n        buffer |= ticks & 0x7F | 0x80;\n      }\n\n      var bList = [];\n\n      while (true) {\n        bList.push(buffer & 0xff);\n        if (buffer & 0x80) buffer >>= 8;else {\n          break;\n        }\n      }\n\n      return bList;\n    }\n    /**\n     * Counts number of bytes in string\n     * @param {string} s\n     * @return {array}\n     */\n\n  }, {\n    key: \"stringByteCount\",\n    value: function stringByteCount(s) {\n      return encodeURI(s).split(/%..|./).length - 1;\n    }\n    /**\n     * Get an int from an array of bytes.\n     * @param {array} bytes\n     * @return {number}\n     */\n\n  }, {\n    key: \"numberFromBytes\",\n    value: function numberFromBytes(bytes) {\n      var hex = '';\n      var stringResult;\n      bytes.forEach(function (byte) {\n        stringResult = byte.toString(16); // ensure string is 2 chars\n\n        if (stringResult.length == 1) stringResult = \"0\" + stringResult;\n        hex += stringResult;\n      });\n      return parseInt(hex, 16);\n    }\n    /**\n     * Takes a number and splits it up into an array of bytes.  Can be padded by passing a number to bytesNeeded\n     * @param {number} number\n     * @param {number} bytesNeeded\n     * @return {array} - Array of bytes\n     */\n\n  }, {\n    key: \"numberToBytes\",\n    value: function numberToBytes(number, bytesNeeded) {\n      bytesNeeded = bytesNeeded || 1;\n      var hexString = number.toString(16);\n\n      if (hexString.length & 1) {\n        // Make sure hex string is even number of chars\n        hexString = '0' + hexString;\n      } // Split hex string into an array of two char elements\n\n\n      var hexArray = hexString.match(/.{2}/g); // Now parse them out as integers\n\n      hexArray = hexArray.map(function (item) {\n        return parseInt(item, 16);\n      }); // Prepend empty bytes if we don't have enough\n\n      if (hexArray.length < bytesNeeded) {\n        while (bytesNeeded - hexArray.length > 0) {\n          hexArray.unshift(0);\n        }\n      }\n\n      return hexArray;\n    }\n    /**\n     * Converts value to array if needed.\n     * @param {string} value\n     * @return {array}\n     */\n\n  }, {\n    key: \"toArray\",\n    value: function toArray(value) {\n      if (Array.isArray(value)) return value;\n      return [value];\n    }\n    /**\n     * Converts velocity to value 0-127\n     * @param {number} velocity - Velocity value 1-100\n     * @return {number}\n     */\n\n  }, {\n    key: \"convertVelocity\",\n    value: function convertVelocity(velocity) {\n      // Max passed value limited to 100\n      velocity = velocity > 100 ? 100 : velocity;\n      return Math.round(velocity / 100 * 127);\n    }\n    /**\n     * Gets the total number of ticks of a specified duration.\n     * Note: type=='note' defaults to quarter note, type==='rest' defaults to 0\n     * @param {(string|array)} duration\n     * @return {number}\n     */\n\n  }, {\n    key: \"getTickDuration\",\n    value: function getTickDuration(duration) {\n      if (Array.isArray(duration)) {\n        // Recursively execute this method for each item in the array and return the sum of tick durations.\n        return duration.map(function (value) {\n          return Utils.getTickDuration(value);\n        }).reduce(function (a, b) {\n          return a + b;\n        }, 0);\n      }\n\n      duration = duration.toString();\n\n      if (duration.toLowerCase().charAt(0) === 't') {\n        // If duration starts with 't' then the number that follows is an explicit tick count\n        return parseInt(duration.substring(1));\n      } // Need to apply duration here.  Quarter note == Constants.HEADER_CHUNK_DIVISION\n      // Rounding only applies to triplets, which the remainder is handled below\n\n\n      var quarterTicks = Utils.numberFromBytes(Constants.HEADER_CHUNK_DIVISION);\n      return Math.round(quarterTicks * Utils.getDurationMultiplier(duration));\n    }\n    /**\n     * Gets what to multiple ticks/quarter note by to get the specified duration.\n     * Note: type=='note' defaults to quarter note, type==='rest' defaults to 0\n     * @param {string} duration\n     * @return {number}\n     */\n\n  }, {\n    key: \"getDurationMultiplier\",\n    value: function getDurationMultiplier(duration) {\n      // Need to apply duration here.  Quarter note == Constants.HEADER_CHUNK_DIVISION\n      switch (duration) {\n        case '0':\n          return 0;\n\n        case '1':\n          return 4;\n\n        case '2':\n          return 2;\n\n        case 'd2':\n          // Dotted half\n          return 3;\n\n        case 'dd2':\n          // Double dotted half\n          return 3.5;\n\n        case '4':\n          return 1;\n\n        case '4t':\n          return 0.666;\n\n        case 'd4':\n          // Dotted quarter\n          return 1.5;\n\n        case 'dd4':\n          // Double dotted quarter\n          return 1.75;\n\n        case '8':\n          return 0.5;\n\n        case '8t':\n          // For 8th triplets, let's divide a quarter by 3, round to the nearest int, and substract the remainder to the last one.\n          return 0.33;\n\n        case 'd8':\n          // Dotted eighth\n          return 0.75;\n\n        case 'dd8':\n          // Double dotted eighth\n          return 0.875;\n\n        case '16':\n          return 0.25;\n\n        case '16t':\n          return 0.166;\n\n        case '32':\n          return 0.125;\n\n        case '64':\n          return 0.0625;\n\n        default: // Notes default to a quarter, rests default to 0\n        //return type === 'note' ? 1 : 0;\n\n      }\n\n      throw duration + ' is not a valid duration.';\n    }\n  }]);\n\n  return Utils;\n}();\n\n/**\n * Holds all data for a \"note on\" MIDI event\n * @param {object} fields {data: []}\n * @return {NoteOnEvent}\n */\n\nvar NoteOnEvent =\n/*#__PURE__*/\nfunction () {\n  function NoteOnEvent(fields) {\n    _classCallCheck(this, NoteOnEvent);\n\n    // Set default fields\n    fields = Object.assign({\n      channel: 1,\n      startTick: null,\n      velocity: 50,\n      wait: 0\n    }, fields);\n    this.type = 'note-on';\n    this.channel = fields.channel;\n    this.pitch = fields.pitch;\n    this.wait = fields.wait;\n    this.velocity = fields.velocity;\n    this.startTick = fields.startTick;\n    this.midiNumber = Utils.getPitch(this.pitch);\n    this.tick = null;\n    this.delta = null;\n    this.data = fields.data;\n  }\n  /**\n   * Builds int array for this event.\n   * @param {Track} track - parent track\n   * @return {NoteOnEvent}\n   */\n\n\n  _createClass(NoteOnEvent, [{\n    key: \"buildData\",\n    value: function buildData(track) {\n      this.data = []; // Explicitly defined startTick event\n\n      if (this.startTick) {\n        this.tick = this.startTick; // If this is the first event in the track then use event's starting tick as delta.\n\n        if (track.tickPointer == 0) {\n          this.delta = this.tick;\n        }\n      } else {\n        this.delta = Utils.getTickDuration(this.wait);\n        this.tick = track.tickPointer + this.delta;\n      }\n\n      this.data = Utils.numberToVariableLength(this.delta).concat(this.getStatusByte(), this.midiNumber, Utils.convertVelocity(this.velocity));\n      return this;\n    }\n    /**\n     * Gets the note on status code based on the selected channel. 0x9{0-F}\n     * Note on at channel 0 is 0x90 (144)\n     * 0 = Ch 1\n     * @return {number}\n     */\n\n  }, {\n    key: \"getStatusByte\",\n    value: function getStatusByte() {\n      return 144 + this.channel - 1;\n    }\n  }]);\n\n  return NoteOnEvent;\n}();\n\n/**\n * Holds all data for a \"note off\" MIDI event\n * @param {object} fields {data: []}\n * @return {NoteOffEvent}\n */\n\nvar NoteOffEvent =\n/*#__PURE__*/\nfunction () {\n  function NoteOffEvent(fields) {\n    _classCallCheck(this, NoteOffEvent);\n\n    // Set default fields\n    fields = Object.assign({\n      channel: 1,\n      noteOnTick: null,\n      velocity: 50\n    }, fields);\n    this.type = 'note-off';\n    this.channel = fields.channel;\n    this.pitch = fields.pitch;\n    this.duration = fields.duration;\n    this.velocity = fields.velocity;\n    this.noteOnTick = fields.noteOnTick;\n    this.midiNumber = Utils.getPitch(this.pitch);\n    this.tick = null;\n    this.delta = Utils.getTickDuration(this.duration);\n    this.data = fields.data;\n  }\n  /**\n   * Builds int array for this event.\n   * @param {Track} track - parent track\n   * @return {NoteOffEvent}\n   */\n\n\n  _createClass(NoteOffEvent, [{\n    key: \"buildData\",\n    value: function buildData(track) {\n      if (this.noteOnTick) {\n        this.tick = this.noteOnTick + Utils.getTickDuration(this.duration);\n      } else {\n        this.tick = this.delta + track.tickPointer;\n      }\n\n      this.data = Utils.numberToVariableLength(this.delta).concat(this.getStatusByte(), this.midiNumber, Utils.convertVelocity(this.velocity));\n      return this;\n    }\n    /**\n     * Gets the note off status code based on the selected channel. 0x8{0-F}\n     * Note off at channel 0 is 0x80 (128)\n     * 0 = Ch 1\n     * @return {number}\n     */\n\n  }, {\n    key: \"getStatusByte\",\n    value: function getStatusByte() {\n      return 128 + this.channel - 1;\n    }\n  }]);\n\n  return NoteOffEvent;\n}();\n\n/**\n * Wrapper for noteOnEvent/noteOffEvent objects that builds both events.\n * @param {object} fields - {pitch: '[C4]', duration: '4', wait: '4', velocity: 1-100}\n * @return {NoteEvent}\n */\n\nvar NoteEvent =\n/*#__PURE__*/\nfunction () {\n  function NoteEvent(fields) {\n    _classCallCheck(this, NoteEvent);\n\n    // Set default fields\n    fields = Object.assign({\n      channel: 1,\n      repeat: 1,\n      sequential: false,\n      startTick: null,\n      velocity: 50,\n      wait: 0\n    }, fields);\n    this.data = [];\n    this.type = 'note';\n    this.pitch = Utils.toArray(fields.pitch);\n    this.channel = fields.channel;\n    this.duration = fields.duration;\n    this.grace = fields.grace;\n    this.repeat = fields.repeat;\n    this.sequential = fields.sequential;\n    this.startTick = fields.startTick;\n    this.velocity = fields.velocity;\n    this.wait = fields.wait;\n    this.tickDuration = Utils.getTickDuration(this.duration);\n    this.restDuration = Utils.getTickDuration(this.wait);\n    this.events = []; // Hold actual NoteOn/NoteOff events\n  }\n  /**\n   * Builds int array for this event.\n   * @return {NoteEvent}\n   */\n\n\n  _createClass(NoteEvent, [{\n    key: \"buildData\",\n    value: function buildData() {\n      var _this = this;\n\n      // Reset data array\n      this.data = [];\n      var tickDuration = this.tickDuration;\n      var restDuration = this.restDuration; // Apply grace note(s) and subtract ticks (currently 1 tick per grace note) from tickDuration so net value is the same\n\n      if (this.grace) {\n        var graceDuration = 1;\n        this.grace = Utils.toArray(this.grace);\n        this.grace.forEach(function (pitch) {\n          var noteEvent = new NoteEvent({\n            pitch: _this.grace,\n            duration: 'T' + graceDuration\n          });\n          _this.data = _this.data.concat(noteEvent.data);\n          tickDuration -= graceDuration;\n        });\n      } // fields.pitch could be an array of pitches.\n      // If this.sequential === true then it's a sequential string of notes that requires separate NoteOnEvents.\n\n      if (!this.sequential) {\n        // Handle repeat\n        for (var j = 0; j < this.repeat; j++) {\n          // Note on\n          this.pitch.forEach(function (p, i) {\n            if (i == 0) {\n              var noteOnNew = new NoteOnEvent({\n                channel: _this.channel,\n                wait: _this.wait,\n                velocity: _this.velocity,\n                pitch: p,\n                startTick: _this.startTick\n              });\n            } else {\n              // Running status (can ommit the note on status)\n              //noteOn = new NoteOnEvent({data: [0, Utils.getPitch(p), Utils.convertVelocity(this.velocity)]});\n              var noteOnNew = new NoteOnEvent({\n                channel: _this.channel,\n                wait: 0,\n                velocity: _this.velocity,\n                pitch: p,\n                startTick: _this.startTick\n              });\n            }\n\n            _this.events.push(noteOnNew);\n          }); // Note off\n\n          this.pitch.forEach(function (p, i) {\n            if (i == 0) {\n              //noteOff = new NoteOffEvent({data: Utils.numberToVariableLength(tickDuration).concat(this.getNoteOffStatus(), Utils.getPitch(p), Utils.convertVelocity(this.velocity))});\n              var noteOffNew = new NoteOffEvent({\n                channel: _this.channel,\n                duration: _this.duration,\n                velocity: _this.velocity,\n                pitch: p,\n                noteOnTick: _this.startTick\n              });\n            } else {\n              // Running status (can ommit the note off status)\n              //noteOff = new NoteOffEvent({data: [0, Utils.getPitch(p), Utils.convertVelocity(this.velocity)]});\n              var noteOffNew = new NoteOffEvent({\n                channel: _this.channel,\n                duration: 0,\n                velocity: _this.velocity,\n                pitch: p,\n                noteOnTick: _this.startTick\n              });\n            }\n\n            _this.events.push(noteOffNew);\n          });\n        }\n      } else {\n        // Handle repeat\n        for (var j = 0; j < this.repeat; j++) {\n          this.pitch.forEach(function (p, i) {\n            // restDuration only applies to first note\n            if (i > 0) {\n              restDuration = 0;\n            } // If duration is 8th triplets we need to make sure that the total ticks == quarter note.\n            // So, the last one will need to be the remainder\n\n\n            if (_this.duration === '8t' && i == _this.pitch.length - 1) {\n              var quarterTicks = Utils.numberFromBytes(Constants.HEADER_CHUNK_DIVISION);\n              tickDuration = quarterTicks - tickDuration * 2;\n            }\n\n            var noteOnNew = new NoteOnEvent({\n              channel: _this.channel,\n              wait: i > 0 ? 0 : _this.wait,\n              // wait only applies to first note in repetition\n              velocity: _this.velocity,\n              pitch: p,\n              startTick: _this.startTick\n            });\n            var noteOffNew = new NoteOffEvent({\n              channel: _this.channel,\n              duration: _this.duration,\n              velocity: _this.velocity,\n              pitch: p,\n              noteOnTick: _this.startTick\n            });\n\n            _this.events.push(noteOnNew, noteOffNew);\n          });\n        }\n      }\n\n      return this;\n    }\n  }]);\n\n  return NoteEvent;\n}();\n\n/**\n * Holds all data for a \"Pitch Bend\" MIDI event\n * [ -1.0, 0, 1.0 ] ->  [ 0, 8192, 16383]\n * @param {object} fields { bend : float, channel : int }\n * @return {PitchBendEvent}\n */\n\nvar scale14bits = function scale14bits(zeroOne) {\n  if (zeroOne <= 0) {\n    return Math.floor(16384 * (zeroOne + 1) / 2);\n  }\n\n  return Math.floor(16383 * (zeroOne + 1) / 2);\n};\n\nvar PitchBendEvent = function PitchBendEvent(fields) {\n  _classCallCheck(this, PitchBendEvent);\n\n  this.type = 'pitch-bend';\n  var bend14 = scale14bits(fields.bend);\n  var channel = fields.channel || 0;\n  var lsbValue = bend14 & 0x7f;\n  var msbValue = bend14 >> 7 & 0x7f;\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.PITCH_BEND_STATUS | channel, lsbValue, msbValue);\n};\n\n/**\n * Holds all data for a \"program change\" MIDI event\n * @param {object} fields {instrument: integer}\n * @return {ProgramChangeEvent}\n */\n\nvar ProgramChangeEvent = function ProgramChangeEvent(fields) {\n  _classCallCheck(this, ProgramChangeEvent);\n\n  this.type = 'program'; // delta time defaults to 0.\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.PROGRAM_CHANGE_STATUS, fields.instrument);\n};\n\n/**\n * Holds all data for a \"controller change\" MIDI event\n * @param {object} fields {controllerNumber: integer, controllerValue: integer}\n * @return {ControllerChangeEvent}\n */\n\nvar ControllerChangeEvent = function ControllerChangeEvent(fields) {\n  _classCallCheck(this, ControllerChangeEvent);\n\n  this.type = 'controller'; // delta time defaults to 0.\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.CONTROLLER_CHANGE_STATUS, fields.controllerNumber, fields.controllerValue);\n};\n\n/**\n * Object representation of a tempo meta event.\n * @param {string} text - Copyright text\n * @return {CopyrightEvent}\n */\n\nvar CopyrightEvent = function CopyrightEvent(text) {\n  _classCallCheck(this, CopyrightEvent);\n\n  this.type = 'copyright';\n  var textBytes = Utils.stringToBytes(text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_COPYRIGHT_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n};\n\n/**\n * Object representation of a cue point meta event.\n * @param {string} text - Cue point text\n * @return {CuePointEvent}\n */\n\nvar CuePointEvent = function CuePointEvent(text) {\n  _classCallCheck(this, CuePointEvent);\n\n  this.type = 'marker';\n  var textBytes = Utils.stringToBytes(text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_CUE_POINT, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n};\n\n/**\n * Object representation of a end track meta event.\n * @return {EndTrackEvent}\n */\n\nvar EndTrackEvent = function EndTrackEvent() {\n  _classCallCheck(this, EndTrackEvent);\n\n  this.type = 'end-track'; // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_END_OF_TRACK_ID);\n};\n\n/**\n * Object representation of an instrument name meta event.\n * @param {number} bpm - Beats per minute\n * @return {InstrumentNameEvent}\n */\n\nvar InstrumentNameEvent = function InstrumentNameEvent(text) {\n  _classCallCheck(this, InstrumentNameEvent);\n\n  this.type = 'instrument-name';\n  var textBytes = Utils.stringToBytes(text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_INSTRUMENT_NAME_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Instrument name\n  );\n};\n\n/**\n * Object representation of a key signature meta event.\n * @return {KeySignatureEvent}\n */\n\nvar KeySignatureEvent = function KeySignatureEvent(sf, mi) {\n  _classCallCheck(this, KeySignatureEvent);\n\n  this.type = 'key-signature';\n  var mode = mi || 0;\n  sf = sf || 0; //\tFunction called with string notation\n\n  if (typeof mi === 'undefined') {\n    var fifths = [['Cb', 'Gb', 'Db', 'Ab', 'Eb', 'Bb', 'F', 'C', 'G', 'D', 'A', 'E', 'B', 'F#', 'C#'], ['ab', 'eb', 'bb', 'f', 'c', 'g', 'd', 'a', 'e', 'b', 'f#', 'c#', 'g#', 'd#', 'a#']];\n    var _sflen = sf.length;\n    var note = sf || 'C';\n    if (sf[0] === sf[0].toLowerCase()) mode = 1;\n\n    if (_sflen > 1) {\n      switch (sf.charAt(_sflen - 1)) {\n        case 'm':\n          mode = 1;\n          note = sf.charAt(0).toLowerCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n\n        case '-':\n          mode = 1;\n          note = sf.charAt(0).toLowerCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n\n        case 'M':\n          mode = 0;\n          note = sf.charAt(0).toUpperCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n\n        case '+':\n          mode = 0;\n          note = sf.charAt(0).toUpperCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n      }\n    }\n\n    var fifthindex = fifths[mode].indexOf(note);\n    sf = fifthindex === -1 ? 0 : fifthindex - 7;\n  } // Start with zero time delta\n\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_KEY_SIGNATURE_ID, [0x02], // Size\n  Utils.numberToBytes(sf, 1), // Number of sharp or flats ( < 0 flat; > 0 sharp)\n  Utils.numberToBytes(mode, 1) // Mode: 0 major, 1 minor\n  );\n};\n\n/**\n * Object representation of a lyric meta event.\n * @param {string} text - Lyric text\n * @return {LyricEvent}\n */\n\nvar LyricEvent = function LyricEvent(text) {\n  _classCallCheck(this, LyricEvent);\n\n  this.type = 'marker';\n  var textBytes = Utils.stringToBytes(text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_LYRIC_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n};\n\n/**\n * Object representation of a marker meta event.\n * @param {string} text - Marker text\n * @return {MarkerEvent}\n */\n\nvar MarkerEvent = function MarkerEvent(text) {\n  _classCallCheck(this, MarkerEvent);\n\n  this.type = 'marker';\n  var textBytes = Utils.stringToBytes(text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_MARKER_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n};\n\n/**\n * Object representation of a tempo meta event.\n * @param {number} bpm - Beats per minute\n * @return {TempoEvent}\n */\n\nvar TempoEvent = function TempoEvent(bpm) {\n  _classCallCheck(this, TempoEvent);\n\n  this.type = 'tempo';\n  var tempo = Math.round(60000000 / bpm); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_TEMPO_ID, [0x03], // Size\n  Utils.numberToBytes(tempo, 3) // Tempo, 3 bytes\n  );\n};\n\n/**\n * Object representation of a tempo meta event.\n * @param {number} bpm - Beats per minute\n * @return {TextEvent}\n */\n\nvar TextEvent = function TextEvent(text) {\n  _classCallCheck(this, TextEvent);\n\n  this.type = 'text';\n  var textBytes = Utils.stringToBytes(text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_TEXT_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n};\n\n/**\n * Object representation of a time signature meta event.\n * @return {TimeSignatureEvent}\n */\n\nvar TimeSignatureEvent = function TimeSignatureEvent(numerator, denominator, midiclockspertick, notespermidiclock) {\n  _classCallCheck(this, TimeSignatureEvent);\n\n  this.type = 'time-signature'; // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_TIME_SIGNATURE_ID, [0x04], // Size\n  Utils.numberToBytes(numerator, 1), // Numerator, 1 bytes\n  Utils.numberToBytes(Math.log2(denominator), 1), // Denominator is expressed as pow of 2, 1 bytes\n  Utils.numberToBytes(midiclockspertick || 24, 1), // MIDI Clocks per tick, 1 bytes\n  Utils.numberToBytes(notespermidiclock || 8, 1) // Number of 1/32 notes per MIDI clocks, 1 bytes\n  );\n};\n\n/**\n * Object representation of a tempo meta event.\n * @param {number} bpm - Beats per minute\n * @return {TrackNameEvent}\n */\n\nvar TrackNameEvent = function TrackNameEvent(text) {\n  _classCallCheck(this, TrackNameEvent);\n\n  this.type = 'track-name';\n  var textBytes = Utils.stringToBytes(text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_TRACK_NAME_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n};\n\n/**\n * Holds all data for a track.\n * @param {object} fields {type: number, data: array, size: array, events: array}\n * @return {Track}\n */\n\nvar Track =\n/*#__PURE__*/\nfunction () {\n  function Track() {\n    _classCallCheck(this, Track);\n\n    this.type = Constants.TRACK_CHUNK_TYPE;\n    this.data = [];\n    this.size = [];\n    this.events = [];\n    this.explicitTickEvents = []; // If there are any events with an explicit tick defined then we will create a \"sub\" track for those\n    // and merge them in and the end.\n\n    this.tickPointer = 0; // Each time an event is added this will increase\n  }\n  /**\n   * Adds any event type to the track.\n   * Events without a specific startTick property are assumed to be added in order of how they should output.\n   * Events with a specific startTick property are set aside for now will be merged in during build process.\n   * @param {(NoteEvent|ProgramChangeEvent)} events - Event object or array of Event objects.\n   * @param {function} mapFunction - Callback which can be used to apply specific properties to all events.\n   * @return {Track}\n   */\n\n\n  _createClass(Track, [{\n    key: \"addEvent\",\n    value: function addEvent(events, mapFunction) {\n      var _this = this;\n\n      Utils.toArray(events).forEach(function (event, i) {\n        if (event.type === 'note') {\n          // Handle map function if provided\n          if (typeof mapFunction === 'function') {\n            var properties = mapFunction(i, event);\n\n            if (_typeof(properties) === 'object') {\n              for (var j in properties) {\n                switch (j) {\n                  case 'channel':\n                    event.channel = properties[j];\n                    break;\n\n                  case 'duration':\n                    event.duration = properties[j];\n                    break;\n\n                  case 'sequential':\n                    event.sequential = properties[j];\n                    break;\n\n                  case 'velocity':\n                    event.velocity = Utils.convertVelocity(properties[j]);\n                    break;\n                }\n              }\n            }\n          } // If this note event has an explicit startTick then we need to set aside for now\n\n\n          if (event.startTick !== null) {\n            _this.explicitTickEvents.push(event);\n          } else {\n            // Push each on/off event to track's event stack\n            event.buildData().events.forEach(function (e) {\n              return _this.events.push(e);\n            });\n          }\n        } else {\n          _this.events.push(event);\n        }\n      });\n      return this;\n    }\n    /**\n     * Builds int array of all events.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"buildData\",\n    value: function buildData() {\n      var _this2 = this;\n\n      // Remove existing end track event and add one.\n      // This makes sure it's at the very end of the event list.\n      this.removeEventsByType('end-track').addEvent(new EndTrackEvent()); // Reset\n\n      this.data = [];\n      this.size = [];\n      this.tickPointer = 0;\n      this.events.forEach(function (event, eventIndex) {\n        // Build event & add to total tick duration\n        if (event.type === 'note-on' || event.type === 'note-off') {\n          _this2.data = _this2.data.concat(event.buildData(_this2).data);\n          _this2.tickPointer = event.tick;\n        } else {\n          _this2.data = _this2.data.concat(event.data);\n        }\n      });\n      this.mergeExplicitTickEvents();\n      this.size = Utils.numberToBytes(this.data.length, 4); // 4 bytes long\n\n      return this;\n    }\n  }, {\n    key: \"mergeExplicitTickEvents\",\n    value: function mergeExplicitTickEvents() {\n      var _this3 = this;\n\n      if (!this.explicitTickEvents.length) return; // First sort asc list of events by startTick\n\n      this.explicitTickEvents.sort(function (a, b) {\n        return a.startTick - b.startTick;\n      }); // Now this.explicitTickEvents is in correct order, and so is this.events naturally.\n      // For each explicit tick event, splice it into the main list of events and\n      // adjust the delta on the following events so they still play normally.\n\n      this.explicitTickEvents.forEach(function (noteEvent) {\n        // Convert NoteEvent to it's respective NoteOn/NoteOff events\n        // Note that as we splice in events the delta for the NoteOff ones will\n        // Need to change based on what comes before them after the splice.\n        noteEvent.buildData().events.forEach(function (e) {\n          return e.buildData(_this3);\n        }); // Merge each event indivually into this track's event list.\n\n        noteEvent.events.forEach(function (event) {\n          return _this3.mergeSingleEvent(event);\n        });\n      }); // Hacky way to rebuild track with newly spliced events.  Need better solution.\n\n      this.explicitTickEvents = [];\n      this.buildData();\n    }\n    /**\n     * Merges another track's events with this track.\n     * @param {Track} track\n     * @return {Track}\n     */\n\n  }, {\n    key: \"mergeTrack\",\n    value: function mergeTrack(track) {\n      var _this4 = this;\n\n      // First build this track to populate each event's tick property\n      this.buildData(); // Then build track to be merged so that tick property is populated on all events & merge each event.\n\n      track.buildData().events.forEach(function (event) {\n        return _this4.mergeSingleEvent(event);\n      });\n    }\n    /**\n     * Merges a single event into this track's list of events based on event.tick property.\n     * @param {NoteOnEvent|NoteOffEvent} - event\n     * @return {Track}\n     */\n\n  }, {\n    key: \"mergeSingleEvent\",\n    value: function mergeSingleEvent(event) {\n      // Find index of existing event we need to follow with\n      var lastEventIndex = 0;\n\n      for (var i = 0; i < this.events.length; i++) {\n        if (this.events[i].tick > event.tick) break;\n        lastEventIndex = i;\n      }\n\n      var splicedEventIndex = lastEventIndex + 1; // Need to adjust the delta of this event to ensure it falls on the correct tick.\n\n      event.delta = event.tick - this.events[lastEventIndex].tick; // Splice this event at lastEventIndex + 1\n\n      this.events.splice(splicedEventIndex, 0, event); // Now adjust delta of all following events\n\n      for (var i = splicedEventIndex + 1; i < this.events.length; i++) {\n        // Since each existing event should have a tick value at this point we just need to\n        // adjust delta to that the event still falls on the correct tick.\n        this.events[i].delta = this.events[i].tick - this.events[i - 1].tick;\n      }\n    }\n    /**\n     * Removes all events matching specified type.\n     * @param {string} eventType - Event type\n     * @return {Track}\n     */\n\n  }, {\n    key: \"removeEventsByType\",\n    value: function removeEventsByType(eventType) {\n      var _this5 = this;\n\n      this.events.forEach(function (event, index) {\n        if (event.type === eventType) {\n          _this5.events.splice(index, 1);\n        }\n      });\n      return this;\n    }\n    /**\n     * Sets tempo of the MIDI file.\n     * @param {number} bpm - Tempo in beats per minute.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setTempo\",\n    value: function setTempo(bpm) {\n      return this.addEvent(new TempoEvent(bpm));\n    }\n    /**\n     * Sets time signature.\n     * @param {number} numerator - Top number of the time signature.\n     * @param {number} denominator - Bottom number of the time signature.\n     * @param {number} midiclockspertick - Defaults to 24.\n     * @param {number} notespermidiclock - Defaults to 8.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setTimeSignature\",\n    value: function setTimeSignature(numerator, denominator, midiclockspertick, notespermidiclock) {\n      return this.addEvent(new TimeSignatureEvent(numerator, denominator, midiclockspertick, notespermidiclock));\n    }\n    /**\n     * Sets key signature.\n     * @param {*} sf -\n     * @param {*} mi -\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setKeySignature\",\n    value: function setKeySignature(sf, mi) {\n      return this.addEvent(new KeySignatureEvent(sf, mi));\n    }\n    /**\n     * Adds text to MIDI file.\n     * @param {string} text - Text to add.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addText\",\n    value: function addText(text) {\n      return this.addEvent(new TextEvent(text));\n    }\n    /**\n     * Adds copyright to MIDI file.\n     * @param {string} text - Text of copyright line.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addCopyright\",\n    value: function addCopyright(text) {\n      return this.addEvent(new CopyrightEvent(text));\n    }\n    /**\n     * Adds Sequence/Track Name.\n     * @param {string} text - Text of track name.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addTrackName\",\n    value: function addTrackName(text) {\n      return this.addEvent(new TrackNameEvent(text));\n    }\n    /**\n     * Sets instrument name of track.\n     * @param {string} text - Name of instrument.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addInstrumentName\",\n    value: function addInstrumentName(text) {\n      return this.addEvent(new InstrumentNameEvent(text));\n    }\n    /**\n     * Adds marker to MIDI file.\n     * @param {string} text - Marker text.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addMarker\",\n    value: function addMarker(text) {\n      return this.addEvent(new MarkerEvent(text));\n    }\n    /**\n     * Adds cue point to MIDI file.\n     * @param {string} text - Text of cue point.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addCuePoint\",\n    value: function addCuePoint(text) {\n      return this.addEvent(new CuePointEvent(text));\n    }\n    /**\n     * Adds lyric to MIDI file.\n     * @param {string} text - Lyric text to add.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addLyric\",\n    value: function addLyric(text) {\n      return this.addEvent(new LyricEvent(text));\n    }\n    /**\n     * Channel mode messages\n     * @return {Track}\n     */\n\n  }, {\n    key: \"polyModeOn\",\n    value: function polyModeOn() {\n      var event = new NoteOnEvent({\n        data: [0x00, 0xB0, 0x7E, 0x00]\n      });\n      return this.addEvent(event);\n    }\n    /**\n     * Sets a pitch bend.\n     * @param {float} bend - Bend value ranging [-1,1], zero meaning no bend.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setPitchBend\",\n    value: function setPitchBend(bend) {\n      return this.addEvent(new PitchBendEvent({\n        bend: bend\n      }));\n    }\n    /**\n     * Adds a controller change event\n     * @param {number} number - Control number.\n     * @param {number} value - Control value.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"controllerChange\",\n    value: function controllerChange(number, value) {\n      return this.addEvent(new ControllerChangeEvent({\n        controllerNumber: number,\n        controllerValue: value\n      }));\n    }\n  }]);\n\n  return Track;\n}();\n\nvar VexFlow =\n/*#__PURE__*/\nfunction () {\n  function VexFlow() {\n    _classCallCheck(this, VexFlow);\n  } // code...\n\n  /**\n   * Support for converting VexFlow voice into MidiWriterJS track\n   * @return MidiWritier.Track object\n   */\n\n\n  _createClass(VexFlow, [{\n    key: \"trackFromVoice\",\n    value: function trackFromVoice(voice) {\n      var _this = this;\n\n      var track = new Track();\n      var wait;\n      var pitches = [];\n      voice.tickables.forEach(function (tickable) {\n        pitches = [];\n\n        if (tickable.noteType === 'n') {\n          tickable.keys.forEach(function (key) {\n            // build array of pitches\n            pitches.push(_this.convertPitch(key));\n          });\n        } else if (tickable.noteType === 'r') {\n          // move on to the next tickable and use this rest as a `wait` property for the next event\n          wait = _this.convertDuration(tickable);\n          return;\n        }\n\n        track.addEvent(new NoteEvent({\n          pitch: pitches,\n          duration: _this.convertDuration(tickable),\n          wait: wait\n        })); // reset wait\n\n        wait = 0;\n      });\n      return track;\n    }\n    /**\n     * Converts VexFlow pitch syntax to MidiWriterJS syntax\n     * @param pitch string\n     */\n\n  }, {\n    key: \"convertPitch\",\n    value: function convertPitch(pitch) {\n      return pitch.replace('/', '');\n    }\n    /**\n     * Converts VexFlow duration syntax to MidiWriterJS syntax\n     * @param note struct from VexFlow\n     */\n\n  }, {\n    key: \"convertDuration\",\n    value: function convertDuration(note) {\n      switch (note.duration) {\n        case 'w':\n          return '1';\n\n        case 'h':\n          return note.isDotted() ? 'd2' : '2';\n\n        case 'q':\n          return note.isDotted() ? 'd4' : '4';\n\n        case '8':\n          return note.isDotted() ? 'd8' : '8';\n      }\n\n      return note.duration;\n    }\n  }]);\n\n  return VexFlow;\n}();\n\n/**\n * Object representation of a header chunk section of a MIDI file.\n * @param {number} numberOfTracks - Number of tracks\n * @return {HeaderChunk}\n */\n\nvar HeaderChunk = function HeaderChunk(numberOfTracks) {\n  _classCallCheck(this, HeaderChunk);\n\n  this.type = Constants.HEADER_CHUNK_TYPE;\n  var trackType = numberOfTracks > 1 ? Constants.HEADER_CHUNK_FORMAT1 : Constants.HEADER_CHUNK_FORMAT0;\n  this.data = trackType.concat(Utils.numberToBytes(numberOfTracks, 2), // two bytes long,\n  Constants.HEADER_CHUNK_DIVISION);\n  this.size = [0, 0, 0, this.data.length];\n};\n\n/**\n * Object that puts together tracks and provides methods for file output.\n * @param {array|Track} tracks - A single {Track} object or an array of {Track} objects.\n * @return {Writer}\n */\n\nvar Writer =\n/*#__PURE__*/\nfunction () {\n  function Writer(tracks) {\n    var _this = this;\n\n    _classCallCheck(this, Writer);\n\n    // Ensure track is an array\n    tracks = Utils.toArray(tracks);\n    this.data = [];\n    this.data.push(new HeaderChunk(tracks.length)); // For each track add final end of track event and build data\n\n    tracks.forEach(function (track, i) {\n      _this.data.push(track.buildData());\n    });\n  }\n  /**\n   * Builds the file into a Uint8Array\n   * @return {Uint8Array}\n   */\n\n\n  _createClass(Writer, [{\n    key: \"buildFile\",\n    value: function buildFile() {\n      var build = []; // Data consists of chunks which consists of data\n\n      this.data.forEach(function (d) {\n        return build = build.concat(d.type, d.size, d.data);\n      });\n      return new Uint8Array(build);\n    }\n    /**\n     * Convert file buffer to a base64 string.  Different methods depending on if browser or node.\n     * @return {string}\n     */\n\n  }, {\n    key: \"base64\",\n    value: function base64() {\n      if (typeof btoa === 'function') return btoa(String.fromCharCode.apply(null, this.buildFile()));\n      return Buffer.from(this.buildFile()).toString('base64');\n    }\n    /**\n     * Get the data URI.\n     * @return {string}\n     */\n\n  }, {\n    key: \"dataUri\",\n    value: function dataUri() {\n      return 'data:audio/midi;base64,' + this.base64();\n    }\n    /**\n     * Output to stdout\n     * @return {string}\n     */\n\n  }, {\n    key: \"stdout\",\n    value: function stdout() {\n      return process.stdout.write(new Buffer(this.buildFile()));\n    }\n    /**\n     * Save to MIDI file\n     * @param {string} filename\n     */\n\n  }, {\n    key: \"saveMIDI\",\n    value: function saveMIDI(filename) {\n      var fs = require('fs');\n\n      var buffer = new Buffer.from(this.buildFile());\n      fs.writeFile(filename + '.mid', buffer, function (err) {\n        if (err) throw err;\n      });\n    }\n  }]);\n\n  return Writer;\n}();\n\nvar main = {\n  Constants: Constants,\n  NoteEvent: NoteEvent,\n  PitchBendEvent: PitchBendEvent,\n  ProgramChangeEvent: ProgramChangeEvent,\n  Track: Track,\n  Utils: Utils,\n  VexFlow: VexFlow,\n  Writer: Writer\n};\n\nmodule.exports = main;\n","import $ from \"jquery\";\n\nexport class MidiSaver {\n    downloadBtn: HTMLElement;\n    onGetChords: Function;\n    constructor () {\n        this.onGetChords = function(){};  // Callback event\n        this.downloadBtn = document.getElementById(\"downloadBtn\")!;\n        this.downloadBtn.addEventListener(\"pointerup\", ()=> {\n            this._write()\n        })\n        // @ts-ignore\n        $(\"#downloadBtn\").tooltip();   // Trigger the tooltip of the play button\n    }\n\n    private _getChords(){\n        return this.onGetChords();\n    }\n\n    private _write(){\n        const chords = this._getChords();\n        const MidiWriter = require('midi-writer-js');\n\n        // Start with a new track\n        const track = new MidiWriter.Track();\n\n        // Define an instrument (optional):\n        track.addEvent(new MidiWriter.ProgramChangeEvent({instrument: 1}));\n        for (let chord of chords){\n            const pitch = chord.getNotes(); //TODO: Not sure if it has been inversed\n            var note = new MidiWriter.NoteEvent({pitch: pitch, duration: '2'}); // Set the duration to half\n            // Add some notes:\n            track.addEvent(note);\n        }\n\n        // Generate a data URI\n        var write = new MidiWriter.Writer(track);\n\n        // Download the midi file\n        // @ts-ignore\n        document.getElementById('my_iframe')!.src = write.dataUri();\n    }\n}\n\n\n\n\n\n\n\n\n","// Third-party modules\nimport \"bootstrap\"\nimport 'bootstrap/dist/css/bootstrap.css' // Import precompiled Bootstrap css\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport \"material-design-icons\"\nimport \"bootstrap-submenu/dist/css/bootstrap-submenu.css\"\nimport \"bootstrap-submenu/dist/js/bootstrap-submenu\"\nimport \"jquery\"\nimport {Part} from \"tone\";\nimport $ from \"jquery\";\n\nimport {Piano} from \"./keyboard/Piano\";\nimport {PianoSound} from \"./sound/PianoSound\";\nimport {Loader} from \"./interface/Loader\";\nimport {ChordTypeBtn} from \"./setting-toolbar/ChordTypeBtn\";\nimport {InversionBtn} from \"./setting-toolbar/InversionBtn\";\nimport {Chord} from \"./music-theory/Chord\";\nimport {ChordProgression} from \"./progression/ChordProgression\";\n\nimport {MidiSaver} from \"./progression/MidiSaver\"\n\n\nnew Loader();   // Loader to create the loading page\n\nconst chordTypeBtn = new ChordTypeBtn();\nconst inversionBtn = new InversionBtn();\n\nconst pianoContainer = document.getElementById(\"pianoContainer\")!;\nconst piano = new Piano(pianoContainer);\n\nconst sound = new PianoSound(0, 100);\nsound.load();\n\nconst progression = new ChordProgression();\n\nconst midiSaver = new MidiSaver();\n\n/**\n * Handles the key presses for the piano class.\n * @param chord\n */\npiano.onKeyDown = function (chord: Chord) {\n    progression.setChord(chord);\n\n    const notes = chord.getNotes();\n    sound.keyDown(notes);\n};\n\n/**\n * Stops the chord sound when the mouse is releases\n * @param chord\n */\npiano.onKeyUp = function (chord: Array<string>) {\n    sound.keyUp(chord);\n};\n\n/**\n * Sets the chord when a chord progression chord is clicked.\n * @param chord\n */\npiano.onSetChord = function (chord: Chord) {\n    const notes = chord.getNotes();\n    sound.keyDownUp(notes, 1);\n};\n\n/**\n * Changes the chord type when you click from the menu.\n * @param type\n * @param family\n */\nchordTypeBtn.onSetChordType = function (type: string, family: string) {\n    console.log(`Set the type to ${type}`);\n    const chordLen = Chord.getLen(family, type);\n    inversionBtn.reset(chordLen);   // Reset the chord inversion to none\n    piano.setChordType(family, type);\n    progression.setChordType(family, type);\n};\n\n/**\n * Changes the inversion when you click from the menu\n * @param inversionNum\n */\ninversionBtn.onSetInversion = function (inversionNum: number) {\n    piano.setInversion(inversionNum);\n    progression.setInversion(inversionNum);\n    console.log(`Set the inversion to ${inversionNum}`)\n};\n\n/**\n * Sets chord on piano, changes text on chord type button and inversion button.\n * @param chord\n */\nprogression.onActivate = function (chord: Chord) {\n    piano.setChord(chord);\n    chordTypeBtn.setTypeText(chord.type);\n    inversionBtn.setInversionText(chord);\n    console.log(`Set the chord to ${chord}`);\n};\n\n\nlet part = new Part(() => {}, []); // Declaring a blank part to be used in progression.onPlay()\n/**\n * Plays through the chord progression when play button is clicked.\n * @param chords\n */\nprogression.onPlay = function (chords: Array<Array<string>>) {\n    // @ts-ignore\n    part.removeAll();\n\n    let events = [];\n    for (let i = 0; i < chords.length; i++) {\n        const event = {\"time\": i, \"chord\": chords[i]};\n        events.push(event);\n    }\n\n    // @ts-ignore\n    part = new Part(function (time, value) {\n        //the value is an object which contains both the note and the velocity\n        progression.switch();\n\n        // @ts-ignore\n        console.log(`Play the chord ${value.chord}`);\n        //@ts-ignore\n    }, events).start(0);\n    part.loop = true;\n    part.loopStart = 0;\n    part.loopEnd = chords.length;\n};\n\n/**\n * Callback after switching to the next chord\n * Disable the chord, and inversion buttons and the piano interface\n */\nprogression.onSwitch = function () {\n    chordTypeBtn.disable();\n    inversionBtn.disable();\n    piano.disable();\n};\n\n/**\n * Callback after stopping playing the progression\n * Enable the chord type, and inversion button and piano\n */\nprogression.onStop = function () {\n    chordTypeBtn.enable();\n    inversionBtn.enable();\n    piano.enable();\n};\n\n/**\n * Get the chord progression from the progression for writing to the midi file\n */\nmidiSaver.onGetChords = function(){\n    return progression.chordsList\n};\n\n\n// @ts-ignore\n$('#helpBtn').tooltip();   // Trigger the tooltip of the play button\n\n\nwindow.onbeforeunload = function() {\n    return \"Data will be lost if you leave the page, are you sure?\";\n  };\n"]}